char _STRAB74_0RSD[] = "Licensee";
char _STR342F_1RSD[] = "Covered Code";
char _STR2CEF_2RSD[] = "Original Intel Code";
char _STRED19_3RSD[] = "AS IS,";
char _STR663A_4RSD[] = "NO WARRANTY";
char _STRB1CE_5RSD[] = "Disclaimer";
char _STR4840_6RSD[] = "AS IS";
char _STR75C7_7RSD[] = "GPL";
char _STR1FA8_8RSD[] = "IRQ";
char _STRDAC_9RSD[] = "Descriptor Length";
char _STR34C1_ARSD[] = "Triggering";
char _STR63E_BRSD[] = "Polarity";
char _STRA3B3_CRSD[] = "Sharing";
char _STRBD38_DRSD[] = "Interrupt Count";
char _STR906B_ERSD[] = "Interrupt List";
char _STRBACA_FRSD[] = "DMA";
char _STRD974_10RSD[] = "Speed";
char _STR54A5_11RSD[] = "Mastering";
char _STR63D7_12RSD[] = "Transfer Type";
char _STR2BC2_13RSD[] = "Channel Count";
char _STR6F06_14RSD[] = "Channel List";
char _STRD890_15RSD[] = "Start-Dependent-Functions";
char _STR5FBD_16RSD[] = "Descriptor Length";
char _STRB4C7_17RSD[] = "Compatibility Priority";
char _STR3759_18RSD[] = "Performance/Robustness";
char _STR967C_19RSD[] = "End-Dependent-Functions";
char _STR585_1ARSD[] = "I/O";
char _STR4B53_1BRSD[] = "Address Decoding";
char _STR168F_1CRSD[] = "Address Minimum";
char _STRF6_1DRSD[] = "Address Maximum";
char _STR61FF_1ERSD[] = "Alignment";
char _STRA63C_1FRSD[] = "Address Length";
char _STR5E_20RSD[] = "Fixed I/O";
char _STRF3C8_21RSD[] = "Address";
char _STRA36F_22RSD[] = "Address Length";
char _STRC5A8_23RSD[] = "Vendor Specific";
char _STRB9C5_24RSD[] = "Length";
char _STRE01D_25RSD[] = "Vendor Data";
char _STR10E0_26RSD[] = "EndTag";
char _STRD912_27RSD[] = "24-Bit Memory Range";
char _STRC8E4_28RSD[] = "Write Protect";
char _STR220B_29RSD[] = "Address Minimum";
char _STR959E_2ARSD[] = "Address Maximum";
char _STR34A7_2BRSD[] = "Alignment";
char _STR9F8E_2CRSD[] = "Address Length";
char _STR9557_2DRSD[] = "32-Bit Memory Range";
char _STR3277_2ERSD[] = "Write Protect";
char _STRDC74_2FRSD[] = "Address Minimum";
char _STR2F4_30RSD[] = "Address Maximum";
char _STRCAC7_31RSD[] = "Alignment";
char _STRF3E2_32RSD[] = "Address Length";
char _STRD424_33RSD[] = "32-Bit Fixed Memory Range";
char _STRA1EB_34RSD[] = "Write Protect";
char _STR8C95_35RSD[] = "Address";
char _STRF602_36RSD[] = "Address Length";
char _STRECD3_37RSD[] = "16-Bit WORD Address Space";
char _STRA6DC_38RSD[] = "Granularity";
char _STR8C97_39RSD[] = "Address Minimum";
char _STR6A9D_3ARSD[] = "Address Maximum";
char _STRAFA0_3BRSD[] = "Translation Offset";
char _STRCBBA_3CRSD[] = "Address Length";
char _STR62DD_3DRSD[] = "32-Bit DWORD Address Space";
char _STR4A2F_3ERSD[] = "Granularity";
char _STR982F_3FRSD[] = "Address Minimum";
char _STR69E6_40RSD[] = "Address Maximum";
char _STR3C4D_41RSD[] = "Translation Offset";
char _STR1A06_42RSD[] = "Address Length";
char _STRE8C3_43RSD[] = "64-Bit QWORD Address Space";
char _STRA0E2_44RSD[] = "Granularity";
char _STR7878_45RSD[] = "Address Minimum";
char _STREBDF_46RSD[] = "Address Maximum";
char _STRAEDF_47RSD[] = "Translation Offset";
char _STR3F92_48RSD[] = "Address Length";
char _STRA605_49RSD[] = "64-Bit Extended Address Space";
char _STR115E_4ARSD[] = "Granularity";
char _STR6474_4BRSD[] = "Address Minimum";
char _STRDE54_4CRSD[] = "Address Maximum";
char _STR35C6_4DRSD[] = "Translation Offset";
char _STR8849_4ERSD[] = "Address Length";
char _STR2826_4FRSD[] = "Type-Specific Attribute";
char _STR3B93_50RSD[] = "Extended IRQ";
char _STRCE60_51RSD[] = "Type";
char _STR75EA_52RSD[] = "Triggering";
char _STRF1D4_53RSD[] = "Polarity";
char _STRF246_54RSD[] = "Sharing";
char _STRD5D2_55RSD[] = "Interrupt Count";
char _STRDAF6_56RSD[] = "Interrupt List";
char _STR3C46_57RSD[] = "Generic Register";
char _STRA0C3_58RSD[] = "Space ID";
char _STR6776_59RSD[] = "Bit Width";
char _STR1B3F_5ARSD[] = "Bit Offset";
char _STR8600_5BRSD[] = "Access Size";
char _STRB349_5CRSD[] = "Address";
char _STRFD1F_5DRSD[] = "GPIO";
char _STR82B3_5ERSD[] = "RevisionId";
char _STR7E63_5FRSD[] = "ConnectionType";
char _STR91E9_60RSD[] = "ProducerConsumer";
char _STR1487_61RSD[] = "PinConfig";
char _STR86AA_62RSD[] = "Sharing";
char _STRB93A_63RSD[] = "IoRestriction";
char _STR41E6_64RSD[] = "Triggering";
char _STR17DA_65RSD[] = "Polarity";
char _STRBDF7_66RSD[] = "DriveStrength";
char _STRF3A5_67RSD[] = "DebounceTimeout";
char _STRE3A4_68RSD[] = "ResourceSource";
char _STR3651_69RSD[] = "PinTableLength";
char _STR78C7_6ARSD[] = "PinTable";
char _STRA6E4_6BRSD[] = "VendorLength";
char _STR8336_6CRSD[] = "VendorData";
char _STRDA9D_6DRSD[] = "PinFunction";
char _STR5191_6ERSD[] = "RevisionId";
char _STR65BC_6FRSD[] = "PinConfig";
char _STR6C6_70RSD[] = "Sharing";
char _STR8BFF_71RSD[] = "FunctionNumber";
char _STRCED9_72RSD[] = "ResourceSource";
char _STR3D9B_73RSD[] = "PinTableLength";
char _STRD0F_74RSD[] = "PinTable";
char _STR8876_75RSD[] = "VendorLength";
char _STR6A42_76RSD[] = "VendorData";
char _STR11B1_77RSD[] = "PinConfig";
char _STRDFB4_78RSD[] = "RevisionId";
char _STRA7CC_79RSD[] = "ProducerConsumer";
char _STR2306_7ARSD[] = "Sharing";
char _STRCA7E_7BRSD[] = "PinConfigType";
char _STR1050_7CRSD[] = "PinConfigValue";
char _STR67D2_7DRSD[] = "ResourceSource";
char _STRFB5_7ERSD[] = "PinTableLength";
char _STRA876_7FRSD[] = "PinTable";
char _STRFB7C_80RSD[] = "VendorLength";
char _STR55BE_81RSD[] = "VendorData";
char _STRC9E2_82RSD[] = "PinGroup";
char _STR4F46_83RSD[] = "RevisionId";
char _STR3698_84RSD[] = "ProducerConsumer";
char _STR545D_85RSD[] = "PinTableLength";
char _STRCF30_86RSD[] = "PinTable";
char _STRF315_87RSD[] = "ResourceLabel";
char _STR9EC9_88RSD[] = "VendorLength";
char _STRE331_89RSD[] = "VendorData";
char _STRE24A_8ARSD[] = "PinGroupFunction";
char _STR149F_8BRSD[] = "RevisionId";
char _STR21A6_8CRSD[] = "ProducerConsumer";
char _STR2F67_8DRSD[] = "Sharing";
char _STR1C04_8ERSD[] = "FunctionNumber";
char _STR61FD_8FRSD[] = "ResourceSourceLabel";
char _STR15E2_90RSD[] = "ResourceSource";
char _STRBF85_91RSD[] = "VendorLength";
char _STRA373_92RSD[] = "VendorData";
char _STRC90B_93RSD[] = "PinGroupConfig";
char _STR2AD1_94RSD[] = "RevisionId";
char _STRECFE_95RSD[] = "ProducerConsumer";
char _STR2CED_96RSD[] = "Sharing";
char _STR1E5A_97RSD[] = "PinConfigType";
char _STRD1B1_98RSD[] = "PinConfigValue";
char _STRCC33_99RSD[] = "ResourceSourceLabel";
char _STRD9E2_9ARSD[] = "ResourceSource";
char _STR7BF0_9BRSD[] = "VendorLength";
char _STR878E_9CRSD[] = "VendorData";
char _STRFDB6_9DRSD[] = "FixedDma";
char _STRD276_9ERSD[] = "RequestLines";
char _STRBE7E_9FRSD[] = "Channels";
char _STRA32D_A0RSD[] = "TransferWidth";
char _STRB634_A1RSD[] = "RevisionId";
char _STR1E4D_A2RSD[] = "Type";
char _STRDBA0_A3RSD[] = "ProducerConsumer";
char _STR9140_A4RSD[] = "SlaveMode";
char _STR8B96_A5RSD[] = "ConnectionSharing";
char _STRB997_A6RSD[] = "TypeRevisionId";
char _STRCB21_A7RSD[] = "TypeDataLength";
char _STR54FD_A8RSD[] = "ResourceSource";
char _STR52E0_A9RSD[] = "VendorLength";
char _STR17CA_AARSD[] = "VendorData";
char _STR91F6_ABRSD[] = "Common Serial Bus";
char _STR7633_ACRSD[] = "I2C Serial Bus";
char _STRD315_ADRSD[] = "AccessMode";
char _STRB962_AERSD[] = "ConnectionSpeed";
char _STR6D58_AFRSD[] = "SlaveAddress";
char _STR706F_B0RSD[] = "Spi Serial Bus";
char _STR44DD_B1RSD[] = "WireMode";
char _STREC36_B2RSD[] = "DevicePolarity";
char _STRB839_B3RSD[] = "DataBitLength";
char _STRED7F_B4RSD[] = "ClockPhase";
char _STR2F98_B5RSD[] = "ClockPolarity";
char _STR5F75_B6RSD[] = "DeviceSelection";
char _STR2853_B7RSD[] = "ConnectionSpeed";
char _STR5109_B8RSD[] = "Uart Serial Bus";
char _STR6096_B9RSD[] = "FlowControl";
char _STR64C7_BARSD[] = "StopBits";
char _STRD31A_BBRSD[] = "DataBits";
char _STR25B5_BCRSD[] = "Endian";
char _STR4109_BDRSD[] = "Parity";
char _STR5B7D_BERSD[] = "LinesEnabled";
char _STR7250_BFRSD[] = "RxFifoSize";
char _STR1011_C0RSD[] = "TxFifoSize";
char _STRC4DF_C1RSD[] = "ConnectionSpeed";
char _STR9C0E_C2RSD[] = "Consumer/Producer";
char _STR24AE_C3RSD[] = "Address Decode";
char _STRECDF_C4RSD[] = "Min Relocatability";
char _STRCA17_C5RSD[] = "Max Relocatability";
char _STR4977_C6RSD[] = "Resource Type";
char _STRA822_C7RSD[] = "Memory Range";
char _STRE127_C8RSD[] = "Write Protect";
char _STR3A13_C9RSD[] = "Caching";
char _STR429E_CARSD[] = "Range Type";
char _STRC1A1_CBRSD[] = "Translation";
char _STR9B26_CCRSD[] = "Resource Type";
char _STRDF17_CDRSD[] = "I/O Range";
char _STR7EB8_CERSD[] = "Range Type";
char _STR1522_CFRSD[] = "Translation";
char _STR218F_D0RSD[] = "Translation Type";
char _STRF687_D1RSD[] = "Address";
char _STRE039_D2RSD[] = "Pin";
char _STR290C_D3RSD[] = "Source";
char _STR445E_D4RSD[] = "Source Index";

/*******************************************************************************
 *
 * Module Name: rsdumpinfo - Tables used to display resource descriptors.
 *
 ******************************************************************************/

/******************************************************************************
 *
 * 1. Copyright Notice
 *
 * Some or all of this work - Copyright (c) 1999 - 2019, Intel Corp.
 * All rights reserved.
 *
 * 2. License
 *
 * 2.1. This is your license from Intel Corp. under its intellectual property
 * rights. You may have additional license terms from the party that provided
 * you this software, covering your right to use that party's intellectual
 * property rights.
 *
 * 2.2. Intel grants, free of charge, to any person (_STRAB74_0RSD) obtaining a
 * copy of the source code appearing in this file (_STR342F_1RSD) an
 * irrevocable, perpetual, worldwide license under Intel's copyrights in the
 * base code distributed originally by Intel (_STR2CEF_2RSD) to copy,
 * make derivatives, distribute, use and display any portion of the Covered
 * Code in any form, with the right to sublicense such rights; and
 *
 * 2.3. Intel grants Licensee a non-exclusive and non-transferable patent
 * license (with the right to sublicense), under only those claims of Intel
 * patents that are infringed by the Original Intel Code, to make, use, sell,
 * offer to sell, and import the Covered Code and derivative works thereof
 * solely to the minimum extent necessary to exercise the above copyright
 * license, and in no event shall the patent license extend to any additions
 * to or modifications of the Original Intel Code. No other license or right
 * is granted directly or by implication, estoppel or otherwise;
 *
 * The above copyright and patent license is granted only if the following
 * conditions are met:
 *
 * 3. Conditions
 *
 * 3.1. Redistribution of Source with Rights to Further Distribute Source.
 * Redistribution of source code of any substantial portion of the Covered
 * Code or modification with rights to further distribute source must include
 * the above Copyright Notice, the above License, this list of Conditions,
 * and the following Disclaimer and Export Compliance provision. In addition,
 * Licensee must cause all Covered Code to which Licensee contributes to
 * contain a file documenting the changes Licensee made to create that Covered
 * Code and the date of any change. Licensee must include in that file the
 * documentation of any changes made by any predecessor Licensee. Licensee
 * must include a prominent statement that the modification is derived,
 * directly or indirectly, from Original Intel Code.
 *
 * 3.2. Redistribution of Source with no Rights to Further Distribute Source.
 * Redistribution of source code of any substantial portion of the Covered
 * Code or modification without rights to further distribute source must
 * include the following Disclaimer and Export Compliance provision in the
 * documentation and/or other materials provided with distribution. In
 * addition, Licensee may not authorize further sublicense of source of any
 * portion of the Covered Code, and must include terms to the effect that the
 * license from Licensee to its licensee is limited to the intellectual
 * property embodied in the software Licensee provides to its licensee, and
 * not to intellectual property embodied in modifications its licensee may
 * make.
 *
 * 3.3. Redistribution of Executable. Redistribution in executable form of any
 * substantial portion of the Covered Code or modification must reproduce the
 * above Copyright Notice, and the following Disclaimer and Export Compliance
 * provision in the documentation and/or other materials provided with the
 * distribution.
 *
 * 3.4. Intel retains all right, title, and interest in and to the Original
 * Intel Code.
 *
 * 3.5. Neither the name Intel nor any other trademark owned or controlled by
 * Intel shall be used in advertising or otherwise to promote the sale, use or
 * other dealings in products derived from or relating to the Covered Code
 * without prior written authorization from Intel.
 *
 * 4. Disclaimer and Export Compliance
 *
 * 4.1. INTEL MAKES NO WARRANTY OF ANY KIND REGARDING ANY SOFTWARE PROVIDED
 * HERE. ANY SOFTWARE ORIGINATING FROM INTEL OR DERIVED FROM INTEL SOFTWARE
 * IS PROVIDED _STRED19_3RSD AND INTEL WILL NOT PROVIDE ANY SUPPORT, ASSISTANCE,
 * INSTALLATION, TRAINING OR OTHER SERVICES. INTEL WILL NOT PROVIDE ANY
 * UPDATES, ENHANCEMENTS OR EXTENSIONS. INTEL SPECIFICALLY DISCLAIMS ANY
 * IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGEMENT AND FITNESS FOR A
 * PARTICULAR PURPOSE.
 *
 * 4.2. IN NO EVENT SHALL INTEL HAVE ANY LIABILITY TO LICENSEE, ITS LICENSEES
 * OR ANY OTHER THIRD PARTY, FOR ANY LOST PROFITS, LOST DATA, LOSS OF USE OR
 * COSTS OF PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, OR FOR ANY INDIRECT,
 * SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THIS AGREEMENT, UNDER ANY
 * CAUSE OF ACTION OR THEORY OF LIABILITY, AND IRRESPECTIVE OF WHETHER INTEL
 * HAS ADVANCE NOTICE OF THE POSSIBILITY OF SUCH DAMAGES. THESE LIMITATIONS
 * SHALL APPLY NOTWITHSTANDING THE FAILURE OF THE ESSENTIAL PURPOSE OF ANY
 * LIMITED REMEDY.
 *
 * 4.3. Licensee shall not export, either directly or indirectly, any of this
 * software or system incorporating such software without first obtaining any
 * required license or other approval from the U. S. Department of Commerce or
 * any other agency or department of the United States Government. In the
 * event Licensee exports any such software from the United States or
 * re-exports any such software from a foreign destination, Licensee shall
 * ensure that the distribution and export/re-export of the software is in
 * compliance with all laws, regulations, orders, or other restrictions of the
 * U.S. Export Administration Regulations. Licensee agrees that neither it nor
 * any of its subsidiaries will export/re-export any technical data, process,
 * software, or service, directly or indirectly, to any country for which the
 * United States government or any agency thereof requires an export license,
 * other governmental approval, or letter of assurance, without first obtaining
 * such license, approval or letter.
 *
 *****************************************************************************
 *
 * Alternatively, you may choose to be licensed under the terms of the
 * following license:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions, and the following disclaimer,
 *    without modification.
 * 2. Redistributions in binary form must reproduce at minimum a disclaimer
 *    substantially similar to the _STR663A_4RSD disclaimer below
 *    (_STRB1CE_5RSD) and any redistribution must be conditioned upon
 *    including a substantially similar Disclaimer requirement for further
 *    binary redistribution.
 * 3. Neither the names of the above-listed copyright holders nor the names
 *    of any contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * _STR4840_6RSD AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Alternatively, you may choose to be licensed under the terms of the
 * GNU General Public License (_STR75C7_7RSD) version 2 as published by the Free
 * Software Foundation.
 *
 *****************************************************************************/

#include "acpi.h"
#include "accommon.h"
#include "acresrc.h"

#define _COMPONENT          ACPI_RESOURCES
        ACPI_MODULE_NAME    ("rsdumpinfo")


#if defined(ACPI_DEBUG_OUTPUT) || defined(ACPI_DISASSEMBLER) || defined(ACPI_DEBUGGER)


#define ACPI_RSD_OFFSET(f)          (UINT8) ACPI_OFFSET (ACPI_RESOURCE_DATA,f)
#define ACPI_PRT_OFFSET(f)          (UINT8) ACPI_OFFSET (ACPI_PCI_ROUTING_TABLE,f)
#define ACPI_RSD_TABLE_SIZE(name)   (sizeof(name) / sizeof (ACPI_RSDUMP_INFO))


/*******************************************************************************
 *
 * Resource Descriptor info tables
 *
 * Note: The first table entry must be a Title or Literal and must contain
 * the table length (number of table entries)
 *
 ******************************************************************************/

ACPI_RSDUMP_INFO        AcpiRsDumpIrq[7] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpIrq),                _STR1FA8_8RSD,                      NULL},
    {ACPI_RSD_UINT8 ,   ACPI_RSD_OFFSET (Irq.DescriptorLength),             _STRDAC_9RSD,        NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Irq.Triggering),                   _STR34C1_ARSD,               AcpiGbl_HeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Irq.Polarity),                     _STR63E_BRSD,                 AcpiGbl_LlDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Irq.Shareable),                    _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_UINT8 ,   ACPI_RSD_OFFSET (Irq.InterruptCount),               _STRBD38_DRSD,          NULL},
    {ACPI_RSD_SHORTLIST,ACPI_RSD_OFFSET (Irq.Interrupts[0]),                _STR906B_ERSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpDma[6] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpDma),                _STRBACA_FRSD,                      NULL},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Dma.Type),                         _STRD974_10RSD,                    AcpiGbl_TypDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Dma.BusMaster),                    _STR54A5_11RSD,                AcpiGbl_BmDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Dma.Transfer),                     _STR63D7_12RSD,            AcpiGbl_SizDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Dma.ChannelCount),                 _STR2BC2_13RSD,            NULL},
    {ACPI_RSD_SHORTLIST,ACPI_RSD_OFFSET (Dma.Channels[0]),                  _STR6F06_14RSD,             NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpStartDpf[4] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpStartDpf),           _STRD890_15RSD,NULL},
    {ACPI_RSD_UINT8 ,   ACPI_RSD_OFFSET (StartDpf.DescriptorLength),        _STRDAC_9RSD,        NULL},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (StartDpf.CompatibilityPriority),   _STRB4C7_17RSD,   AcpiGbl_ConfigDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (StartDpf.PerformanceRobustness),   _STR3759_18RSD,   AcpiGbl_ConfigDecode}
};

ACPI_RSDUMP_INFO        AcpiRsDumpEndDpf[1] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpEndDpf),             _STR967C_19RSD,  NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpIo[6] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpIo),                 _STR585_1ARSD,                      NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Io.IoDecode),                      _STR4B53_1BRSD,         AcpiGbl_IoDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Io.Minimum),                       _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Io.Maximum),                       _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Io.Alignment),                     _STR61FF_1ERSD,                NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Io.AddressLength),                 _STRA63C_1FRSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpFixedIo[3] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpFixedIo),            _STR5E_20RSD,                NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (FixedIo.Address),                  _STRF3C8_21RSD,                  NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (FixedIo.AddressLength),            _STRA63C_1FRSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpVendor[3] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpVendor),             _STRC5A8_23RSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Vendor.ByteLength),                _STRB9C5_24RSD,                   NULL},
    {ACPI_RSD_LONGLIST, ACPI_RSD_OFFSET (Vendor.ByteData[0]),               _STRE01D_25RSD,              NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpEndTag[1] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpEndTag),             _STR10E0_26RSD,                   NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpMemory24[6] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpMemory24),           _STRD912_27RSD,      NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Memory24.WriteProtect),            _STRC8E4_28RSD,            AcpiGbl_RwDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Memory24.Minimum),                 _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Memory24.Maximum),                 _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Memory24.Alignment),               _STR61FF_1ERSD,                NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Memory24.AddressLength),           _STRA63C_1FRSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpMemory32[6] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpMemory32),           _STR9557_2DRSD,      NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Memory32.WriteProtect),            _STRC8E4_28RSD,            AcpiGbl_RwDecode},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Memory32.Minimum),                 _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Memory32.Maximum),                 _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Memory32.Alignment),               _STR61FF_1ERSD,                NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Memory32.AddressLength),           _STRA63C_1FRSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpFixedMemory32[4] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpFixedMemory32),      _STRD424_33RSD,NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (FixedMemory32.WriteProtect),       _STRC8E4_28RSD,            AcpiGbl_RwDecode},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (FixedMemory32.Address),            _STRF3C8_21RSD,                  NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (FixedMemory32.AddressLength),      _STRA63C_1FRSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpAddress16[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpAddress16),          _STRECD3_37RSD,NULL},
    {ACPI_RSD_ADDRESS,  0,                                                  NULL,                       NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Address16.Address.Granularity),    _STRA6DC_38RSD,              NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Address16.Address.Minimum),        _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Address16.Address.Maximum),        _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Address16.Address.TranslationOffset),
                                                                            _STRAFA0_3BRSD,       NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Address16.Address.AddressLength),  _STRA63C_1FRSD,           NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (Address16.ResourceSource),         NULL,                       NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpAddress32[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpAddress32),         _STR62DD_3DRSD, NULL},
    {ACPI_RSD_ADDRESS,  0,                                                  NULL,                       NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Address32.Address.Granularity),    _STRA6DC_38RSD,              NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Address32.Address.Minimum),        _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Address32.Address.Maximum),        _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Address32.Address.TranslationOffset),
                                                                            _STRAFA0_3BRSD,       NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (Address32.Address.AddressLength),  _STRA63C_1FRSD,           NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (Address32.ResourceSource),         NULL,                       NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpAddress64[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpAddress64),          _STRE8C3_43RSD, NULL},
    {ACPI_RSD_ADDRESS,  0,                                                  NULL,                       NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (Address64.Address.Granularity),    _STRA6DC_38RSD,              NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (Address64.Address.Minimum),        _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (Address64.Address.Maximum),        _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (Address64.Address.TranslationOffset),
                                                                            _STRAFA0_3BRSD,       NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (Address64.Address.AddressLength),  _STRA63C_1FRSD,           NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (Address64.ResourceSource),         NULL,                       NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpExtAddress64[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpExtAddress64),       _STRA605_49RSD, NULL},
    {ACPI_RSD_ADDRESS,  0,                                                  NULL,                       NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.Address.Granularity), _STRA6DC_38RSD,              NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.Address.Minimum),     _STR168F_1CRSD,          NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.Address.Maximum),     _STRF6_1DRSD,          NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.Address.TranslationOffset),
                                                                            _STRAFA0_3BRSD,       NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.Address.AddressLength),
                                                                            _STRA63C_1FRSD,           NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (ExtAddress64.TypeSpecific),        _STR2826_4FRSD,  NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpExtIrq[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpExtIrq),             _STR3B93_50RSD,             NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (ExtendedIrq.ProducerConsumer),     _STRCE60_51RSD,                     AcpiGbl_ConsumeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (ExtendedIrq.Triggering),           _STR34C1_ARSD,               AcpiGbl_HeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (ExtendedIrq.Polarity),             _STR63E_BRSD,                 AcpiGbl_LlDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (ExtendedIrq.Shareable),            _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (ExtendedIrq.ResourceSource),       NULL,                       NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (ExtendedIrq.InterruptCount),       _STRBD38_DRSD,          NULL},
    {ACPI_RSD_DWORDLIST,ACPI_RSD_OFFSET (ExtendedIrq.Interrupts[0]),        _STR906B_ERSD,           NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpGenericReg[6] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpGenericReg),         _STR3C46_57RSD,         NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (GenericReg.SpaceId),               _STRA0C3_58RSD,                 NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (GenericReg.BitWidth),              _STR6776_59RSD,                NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (GenericReg.BitOffset),             _STR1B3F_5ARSD,               NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (GenericReg.AccessSize),            _STR8600_5BRSD,              NULL},
    {ACPI_RSD_UINT64,   ACPI_RSD_OFFSET (GenericReg.Address),               _STRF3C8_21RSD,                  NULL}
};

ACPI_RSDUMP_INFO        AcpiRsDumpGpio[16] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpGpio),               _STRFD1F_5DRSD,                     NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Gpio.RevisionId),                  _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Gpio.ConnectionType),              _STR7E63_5FRSD,           AcpiGbl_CtDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Gpio.ProducerConsumer),            _STR91E9_60RSD,         AcpiGbl_ConsumeDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (Gpio.PinConfig),                   _STR1487_61RSD,                AcpiGbl_PpcDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Gpio.Shareable),                   _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Gpio.IoRestriction),               _STRB93A_63RSD,            AcpiGbl_IorDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Gpio.Triggering),                  _STR34C1_ARSD,               AcpiGbl_HeDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Gpio.Polarity),                    _STR63E_BRSD,                 AcpiGbl_LlDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Gpio.DriveStrength),               _STRBDF7_66RSD,            NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Gpio.DebounceTimeout),             _STRF3A5_67RSD,          NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (Gpio.ResourceSource),              _STRE3A4_68RSD,           NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Gpio.PinTableLength),              _STR3651_69RSD,           NULL},
    {ACPI_RSD_WORDLIST, ACPI_RSD_OFFSET (Gpio.PinTable),                    _STR78C7_6ARSD,                 NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (Gpio.VendorLength),                _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (Gpio.VendorData),                 _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpPinFunction[10] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPinFunction),        _STRDA9D_6DRSD,              NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinFunction.RevisionId),           _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinFunction.PinConfig),            _STR1487_61RSD,                AcpiGbl_PpcDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinFunction.Shareable),            _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinFunction.FunctionNumber),       _STR8BFF_71RSD,           NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (PinFunction.ResourceSource),       _STRE3A4_68RSD,           NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinFunction.PinTableLength),       _STR3651_69RSD,           NULL},
    {ACPI_RSD_WORDLIST, ACPI_RSD_OFFSET (PinFunction.PinTable),             _STR78C7_6ARSD,                 NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinFunction.VendorLength),         _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (PinFunction.VendorData),          _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpPinConfig[11] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPinConfig),          _STR1487_61RSD,                NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinConfig.RevisionId),             _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinConfig.ProducerConsumer),       _STR91E9_60RSD,         AcpiGbl_ConsumeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinConfig.Shareable),              _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinConfig.PinConfigType),          _STRCA7E_7BRSD,            NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (PinConfig.PinConfigValue),         _STR1050_7CRSD,           NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (PinConfig.ResourceSource),         _STRE3A4_68RSD,           NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinConfig.PinTableLength),         _STR3651_69RSD,           NULL},
    {ACPI_RSD_WORDLIST, ACPI_RSD_OFFSET (PinConfig.PinTable),               _STR78C7_6ARSD,                 NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinConfig.VendorLength),           _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (PinConfig.VendorData),            _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpPinGroup[8] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPinGroup),           _STRC9E2_82RSD,                 NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinGroup.RevisionId),              _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinGroup.ProducerConsumer),        _STR91E9_60RSD,         AcpiGbl_ConsumeDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinGroup.PinTableLength),          _STR3651_69RSD,           NULL},
    {ACPI_RSD_WORDLIST, ACPI_RSD_OFFSET (PinGroup.PinTable),                _STR78C7_6ARSD,                 NULL},
    {ACPI_RSD_LABEL,    ACPI_RSD_OFFSET (PinGroup.ResourceLabel),           _STRF315_87RSD,            NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinGroup.VendorLength),            _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (PinGroup.VendorData),             _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpPinGroupFunction[9] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPinGroupFunction),   _STRE24A_8ARSD,         NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinGroupFunction.RevisionId),      _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinGroupFunction.ProducerConsumer), _STR91E9_60RSD,        AcpiGbl_ConsumeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinGroupFunction.Shareable),       _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinGroupFunction.FunctionNumber),  _STR8BFF_71RSD,           NULL},
    {ACPI_RSD_SOURCE_LABEL, ACPI_RSD_OFFSET (PinGroupFunction.ResourceSourceLabel), _STR61FD_8FRSD, NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (PinGroupFunction.ResourceSource),  _STRE3A4_68RSD,           NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinGroupFunction.VendorLength),    _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (PinGroupFunction.VendorData),     _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpPinGroupConfig[10] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPinGroupConfig),     _STRC90B_93RSD,           NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinGroupConfig.RevisionId),        _STR82B3_5ERSD,               NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinGroupConfig.ProducerConsumer),  _STR91E9_60RSD,         AcpiGbl_ConsumeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (PinGroupConfig.Shareable),         _STRA3B3_CRSD,                  AcpiGbl_ShrDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (PinGroupConfig.PinConfigType),     _STRCA7E_7BRSD,            NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (PinGroupConfig.PinConfigValue),    _STR1050_7CRSD,           NULL},
    {ACPI_RSD_SOURCE_LABEL, ACPI_RSD_OFFSET (PinGroupConfig.ResourceSourceLabel), _STR61FD_8FRSD, NULL},
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (PinGroupConfig.ResourceSource),    _STRE3A4_68RSD,           NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (PinGroupConfig.VendorLength),      _STRA6E4_6BRSD,             NULL},
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (PinGroupConfig.VendorData),       _STR8336_6CRSD,               NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpFixedDma[4] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpFixedDma),           _STRFDB6_9DRSD,                 NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (FixedDma.RequestLines),            _STRD276_9ERSD,             NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (FixedDma.Channels),                _STRBE7E_9FRSD,                 NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (FixedDma.Width),                   _STRA32D_A0RSD,            AcpiGbl_DtsDecode},
};

#define ACPI_RS_DUMP_COMMON_SERIAL_BUS \
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (CommonSerialBus.RevisionId),       _STR82B3_5ERSD,               NULL}, \
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (CommonSerialBus.Type),             _STRCE60_51RSD,                     AcpiGbl_SbtDecode}, \
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (CommonSerialBus.ProducerConsumer), _STR91E9_60RSD,         AcpiGbl_ConsumeDecode}, \
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (CommonSerialBus.SlaveMode),        _STR9140_A4RSD,                AcpiGbl_SmDecode}, \
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (CommonSerialBus.ConnectionSharing),_STR8B96_A5RSD,        AcpiGbl_ShrDecode}, \
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (CommonSerialBus.TypeRevisionId),   _STRB997_A6RSD,           NULL}, \
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (CommonSerialBus.TypeDataLength),   _STRCB21_A7RSD,           NULL}, \
    {ACPI_RSD_SOURCE,   ACPI_RSD_OFFSET (CommonSerialBus.ResourceSource),   _STRE3A4_68RSD,           NULL}, \
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (CommonSerialBus.VendorLength),     _STRA6E4_6BRSD,             NULL}, \
    {ACPI_RSD_SHORTLISTX,ACPI_RSD_OFFSET (CommonSerialBus.VendorData),      _STR8336_6CRSD,               NULL},

ACPI_RSDUMP_INFO        AcpiRsDumpCommonSerialBus[11] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpCommonSerialBus),    _STR91F6_ABRSD,        NULL},
    ACPI_RS_DUMP_COMMON_SERIAL_BUS
};

ACPI_RSDUMP_INFO        AcpiRsDumpI2cSerialBus[14] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpI2cSerialBus),       _STR7633_ACRSD,           NULL},
    ACPI_RS_DUMP_COMMON_SERIAL_BUS
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (I2cSerialBus.AccessMode),          _STRD315_ADRSD,               AcpiGbl_AmDecode},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (I2cSerialBus.ConnectionSpeed),     _STRB962_AERSD,          NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (I2cSerialBus.SlaveAddress),        _STR6D58_AFRSD,             NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpSpiSerialBus[18] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpSpiSerialBus),       _STR706F_B0RSD,           NULL},
    ACPI_RS_DUMP_COMMON_SERIAL_BUS
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (SpiSerialBus.WireMode),            _STR44DD_B1RSD,                 AcpiGbl_WmDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (SpiSerialBus.DevicePolarity),      _STREC36_B2RSD,           AcpiGbl_DpDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (SpiSerialBus.DataBitLength),       _STRB839_B3RSD,            NULL},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (SpiSerialBus.ClockPhase),          _STRED7F_B4RSD,               AcpiGbl_CphDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (SpiSerialBus.ClockPolarity),       _STR2F98_B5RSD,            AcpiGbl_CpoDecode},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (SpiSerialBus.DeviceSelection),     _STR5F75_B6RSD,          NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (SpiSerialBus.ConnectionSpeed),     _STRB962_AERSD,          NULL},
};

ACPI_RSDUMP_INFO        AcpiRsDumpUartSerialBus[20] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpUartSerialBus),       _STR5109_B8RSD,         NULL},
    ACPI_RS_DUMP_COMMON_SERIAL_BUS
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (UartSerialBus.FlowControl),         _STR6096_B9RSD,             AcpiGbl_FcDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (UartSerialBus.StopBits),            _STR64C7_BARSD,                AcpiGbl_SbDecode},
    {ACPI_RSD_3BITFLAG, ACPI_RSD_OFFSET (UartSerialBus.DataBits),            _STRD31A_BBRSD,                AcpiGbl_BpbDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (UartSerialBus.Endian),              _STR25B5_BCRSD,                  AcpiGbl_EdDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (UartSerialBus.Parity),              _STR4109_BDRSD,                  AcpiGbl_PtDecode},
    {ACPI_RSD_UINT8,    ACPI_RSD_OFFSET (UartSerialBus.LinesEnabled),        _STR5B7D_BERSD,            NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (UartSerialBus.RxFifoSize),          _STR7250_BFRSD,              NULL},
    {ACPI_RSD_UINT16,   ACPI_RSD_OFFSET (UartSerialBus.TxFifoSize),          _STR1011_C0RSD,              NULL},
    {ACPI_RSD_UINT32,   ACPI_RSD_OFFSET (UartSerialBus.DefaultBaudRate),     _STRB962_AERSD,         NULL},
};

/*
 * Tables used for common address descriptor flag fields
 */
ACPI_RSDUMP_INFO        AcpiRsDumpGeneralFlags[5] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpGeneralFlags),       NULL,                       NULL},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.ProducerConsumer),         _STR9C0E_C2RSD,        AcpiGbl_ConsumeDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.Decode),                   _STR24AE_C3RSD,           AcpiGbl_DecDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.MinAddressFixed),          _STRECDF_C4RSD,       AcpiGbl_MinDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.MaxAddressFixed),          _STRCA17_C5RSD,       AcpiGbl_MaxDecode}
};

ACPI_RSDUMP_INFO        AcpiRsDumpMemoryFlags[5] =
{
    {ACPI_RSD_LITERAL,  ACPI_RSD_TABLE_SIZE (AcpiRsDumpMemoryFlags),        _STR4977_C6RSD,            (void *) _STRA822_C7RSD},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.Info.Mem.WriteProtect),    _STRC8E4_28RSD,            AcpiGbl_RwDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Address.Info.Mem.Caching),         _STR3A13_C9RSD,                  AcpiGbl_MemDecode},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Address.Info.Mem.RangeType),       _STR429E_CARSD,               AcpiGbl_MtpDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.Info.Mem.Translation),     _STRC1A1_CBRSD,              AcpiGbl_TtpDecode}
};

ACPI_RSDUMP_INFO        AcpiRsDumpIoFlags[4] =
{
    {ACPI_RSD_LITERAL,  ACPI_RSD_TABLE_SIZE (AcpiRsDumpIoFlags),            _STR4977_C6RSD,            (void *) _STRDF17_CDRSD},
    {ACPI_RSD_2BITFLAG, ACPI_RSD_OFFSET (Address.Info.Io.RangeType),        _STR429E_CARSD,               AcpiGbl_RngDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.Info.Io.Translation),      _STRC1A1_CBRSD,              AcpiGbl_TtpDecode},
    {ACPI_RSD_1BITFLAG, ACPI_RSD_OFFSET (Address.Info.Io.TranslationType),  _STR218F_D0RSD,         AcpiGbl_TrsDecode}
};


/*
 * Table used to dump _PRT contents
 */
ACPI_RSDUMP_INFO        AcpiRsDumpPrt[5] =
{
    {ACPI_RSD_TITLE,    ACPI_RSD_TABLE_SIZE (AcpiRsDumpPrt),                NULL,                       NULL},
    {ACPI_RSD_UINT64,   ACPI_PRT_OFFSET (Address),                          _STRF3C8_21RSD,                  NULL},
    {ACPI_RSD_UINT32,   ACPI_PRT_OFFSET (Pin),                              _STRE039_D2RSD,                      NULL},
    {ACPI_RSD_STRING,   ACPI_PRT_OFFSET (Source[0]),                        _STR290C_D3RSD,                   NULL},
    {ACPI_RSD_UINT32,   ACPI_PRT_OFFSET (SourceIndex),                      _STR445E_D4RSD,             NULL}
};

#endif
