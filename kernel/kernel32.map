Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e0b8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x68d core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afda                firstTask()
                0x00000000c000afe8                Computer::detectFeatures()
                0x00000000c000b1c2                Computer::displayFeatures()
                0x00000000c000b1c4                Computer::rdmsr(unsigned int)
                0x00000000c000b1f0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b228                Computer::nmiEnabled()
                0x00000000c000b234                Computer::readCMOS(unsigned char)
                0x00000000c000b24e                Computer::enableNMI(bool)
                0x00000000c000b266                Computer::open(int, int, void*)
                0x00000000c000b32e                Computer::disableNMI()
                0x00000000c000b33c                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b35a                Computer::handleNMI()
                0x00000000c000b3c0                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b3eb      0xf95 core/elf.32
                0x00000000c000b3eb                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000b668                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000b87e                runtimeReferenceHelper()
                0x00000000c000b891                getAddressOfKernelSymbol(char const*)
                0x00000000c000b8e0                loadKernelSymbolTable(char const*)
                0x00000000c000bba1                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c2a9                loadDLL(char const*)
                0x00000000c000c372                executeDLL(unsigned long, void*)
 .text          0x00000000c000c380      0x1b7 core/gdt.32
                0x00000000c000c380                GDTEntry::setBase(unsigned int)
                0x00000000c000c39c                GDTEntry::setLimit(unsigned int)
                0x00000000c000c3ba                GDT::GDT()
                0x00000000c000c3ba                GDT::GDT()
                0x00000000c000c3d0                GDT::addEntry(GDTEntry)
                0x00000000c000c40c                GDT::getNumberOfEntries()
                0x00000000c000c414                GDT::flush()
                0x00000000c000c436                GDT::setup()
 .text          0x00000000c000c537       0x61 core/idle.32
                0x00000000c000c537                idleFunction(void*)
 .text          0x00000000c000c598      0x45f core/idt.32
                0x00000000c000c598                IDTEntry::IDTEntry(bool)
                0x00000000c000c598                IDTEntry::IDTEntry(bool)
                0x00000000c000c606                IDTEntry::setOffset(unsigned int)
                0x00000000c000c61a                IDT::IDT()
                0x00000000c000c61a                IDT::IDT()
                0x00000000c000c61c                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000c624                IDT::addEntry(IDTEntry, int)
                0x00000000c000c63e                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000c676                IDT::flush()
                0x00000000c000c690                IDT::setup()
 .text          0x00000000c000c9f7      0x519 core/kconsole.32
                0x00000000c000c9f7                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ca58                logc(char)
                0x00000000c000ca6f                logs(char*)
                0x00000000c000ca8c                logWriteInt(unsigned int)
                0x00000000c000caa9                logWriteIntBase(unsigned int, int)
                0x00000000c000cac8                kprintf(char const*, ...)
                0x00000000c000cbe6                panic(char const*)
 .text          0x00000000c000cf10      0x20d core/kheap.32
                0x00000000c000cf10                sbrk
                0x00000000c000d028                mmap
                0x00000000c000d03e                munmap
                0x00000000c000d054                liballoc_lock()
                0x00000000c000d065                liballoc_unlock()
                0x00000000c000d076                liballoc_alloc(int)
                0x00000000c000d091                liballoc_free(void*, int)
                0x00000000c000d0af                realloc
                0x00000000c000d0c3                malloc
                0x00000000c000d0d3                free
                0x00000000c000d0e3                rfree
                0x00000000c000d0f3                calloc
 .text          0x00000000c000d11d      0x38d core/main.32
                0x00000000c000d11d                hwTextMode_loadInData(VgaText*)
                0x00000000c000d162                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d1a4                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d1f8                hwTextMode_update(VgaText*)
                0x00000000c000d1f9                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d241                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d27d                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d303                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d361                setupTextMode()
                0x00000000c000d3b2                kernel_main
 .text          0x00000000c000d4aa      0x46c core/physmgr.32
                0x00000000c000d4aa                Phys::allocateDMA(unsigned long)
                0x00000000c000d54d                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d595                Phys::setPageState(unsigned long, bool)
                0x00000000c000d5c7                Phys::getPageState(unsigned long)
                0x00000000c000d5e3                Phys::freePage(unsigned long)
                0x00000000c000d66d                Phys::allocatePage()
                0x00000000c000d729                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000d761                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000d916      0x273 core/pipe.32
                0x00000000c000d916                Pipe::isAtty()
                0x00000000c000d91a                Pipe::~Pipe()
                0x00000000c000d91a                Pipe::~Pipe()
                0x00000000c000d93e                Pipe::~Pipe()
                0x00000000c000d966                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000da5a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000db22                Pipe::Pipe(int)
                0x00000000c000db22                Pipe::Pipe(int)
 *fill*         0x00000000c000db89        0x1 
 .text          0x00000000c000db8a     0x1154 core/prcssthr.32
                0x00000000c000db8a                changeTSS
                0x00000000c000dbb8                Process::addArgs(char**)
                0x00000000c000dc12                Process::Process(char const*, Process*, char**)
                0x00000000c000dc12                Process::Process(char const*, Process*, char**)
                0x00000000c000ddca                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000ddca                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000df4d                disableIRQs()
                0x00000000c000df55                getIRQNestingLevel()
                0x00000000c000df5b                enableIRQs()
                0x00000000c000df6a                lockScheduler()
                0x00000000c000df6c                unlockScheduler()
                0x00000000c000df6e                userModeEntryPoint(void*)
                0x00000000c000df91                lockStuff()
                0x00000000c000df9d                taskStartupFunction
                0x00000000c000dfa6                updateTimeUsed()
                0x00000000c000e004                switchToThread(ThreadControlBlock*)
                0x00000000c000e054                Semaphore::Semaphore(int)
                0x00000000c000e054                Semaphore::Semaphore(int)
                0x00000000c000e082                Mutex::Mutex()
                0x00000000c000e082                Mutex::Mutex()
                0x00000000c000e094                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e178                Process::createUserThread()
                0x00000000c000e194                setupMultitasking(void (*)())
                0x00000000c000e29e                schedule()
                0x00000000c000e323                unlockStuff()
                0x00000000c000e358                forkProcess(regs*)
                0x00000000c000e4c6                Semaphore::tryAcquire()
                0x00000000c000e4f4                Semaphore::assertLocked(char const*)
                0x00000000c000e527                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e569                blockTask(TaskState)
                0x00000000c000e58a                waitTask(int, int*, int)
                0x00000000c000e5cc                nanoSleepUntil(unsigned long long)
                0x00000000c000e623                nanoSleep(unsigned long long)
                0x00000000c000e638                sleep(unsigned long long)
                0x00000000c000e656                Semaphore::acquire()
                0x00000000c000e6be                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000e74c                taskReturned
                0x00000000c000e78e                unblockTask(ThreadControlBlock*)
                0x00000000c000e83d                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000eada                cleanerTaskFunction(void*)
                0x00000000c000eb6a                terminateTask(int)
                0x00000000c000ebf2                Semaphore::release()
 .text          0x00000000c000ecde      0xd8a core/syscalls.32
                0x00000000c000ecde                sysCallGetPID(regs*)
                0x00000000c000ecea                sysCallSeekDir(regs*)
                0x00000000c000ecef                sysCallTellDir(regs*)
                0x00000000c000ecf4                sysCallVerify(regs*)
                0x00000000c000ecfe                sysCallGetArgc(regs*)
                0x00000000c000ed0e                sysFormatDisk(regs*)
                0x00000000c000ed78                sysSetDiskVolumeLabel(regs*)
                0x00000000c000edbe                sysGetDiskVolumeLabel(regs*)
                0x00000000c000ee0f                sysShutdown(regs*)
                0x00000000c000ee57                sysCallGetCwd(regs*)
                0x00000000c000ee76                sysCallSetCwd(regs*)
                0x00000000c000ee92                sysCallRealpath(regs*)
                0x00000000c000eed5                sysCallOpen(regs*)
                0x00000000c000efc5                sysCallReadDir(regs*)
                0x00000000c000f034                sysCallIsATTY(regs*)
                0x00000000c000f087                sysCallSeek(regs*)
                0x00000000c000f0d8                sysCallTell(regs*)
                0x00000000c000f124                sysCallSizeFromFilename(regs*)
                0x00000000c000f19d                sysCallSize(regs*)
                0x00000000c000f1ef                sysCallClose(regs*)
                0x00000000c000f23d                sysCallOpenDir(regs*)
                0x00000000c000f2aa                sysCallMakeDir(regs*)
                0x00000000c000f303                sysCallCloseDir(regs*)
                0x00000000c000f351                sysCallWait(regs*)
                0x00000000c000f36b                sysCallFork(regs*)
                0x00000000c000f387                sysCallExecve(regs*)
                0x00000000c000f3dc                sysCallRmdir(regs*)
                0x00000000c000f42e                sysCallUnlink(regs*)
                0x00000000c000f480                sysCallGetArgv(regs*)
                0x00000000c000f4cc                sysCallTTYName(regs*)
                0x00000000c000f548                sysCallGetEnv(regs*)
                0x00000000c000f59a                sysCallUSleep(regs*)
                0x00000000c000f5c1                sysCallSpawn(regs*)
                0x00000000c000f631                sysAppSettings(regs*)
                0x00000000c000f750                sysSetFatAttrib(regs*)
                0x00000000c000f7b0                sysPanic(regs*)
                0x00000000c000f7d6                sysPipe(regs*)
                0x00000000c000f81b                sysGetUnixTime(regs*)
                0x00000000c000f82f                string_ends_with(char const*, char const*)
                0x00000000c000f877                setupSystemCalls()
                0x00000000c000fa26                systemCall(regs*, void*)
 .text          0x00000000c000fa68      0xf65 core/terminal.32
                0x00000000c000fa68                VgaText::isAtty()
                0x00000000c000fa6c                VgaText::~VgaText()
                0x00000000c000fa6c                VgaText::~VgaText()
                0x00000000c000fa90                VgaText::~VgaText()
                0x00000000c000faba                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fada                setTerminalScrollLock(bool)
                0x00000000c000fadb                addToTerminalCycle(VgaText*)
                0x00000000c000fb08                installVgaTextImplementation()
                0x00000000c000fb1d                scrollTerminalScrollLock(int)
                0x00000000c000fb1e                VgaText::load()
                0x00000000c000fb72                VgaText::updateCursor()
                0x00000000c000fb8c                VgaText::showCursor(bool)
                0x00000000c000fb9c                VgaText::disableBlink(bool)
                0x00000000c000fbd6                VgaText::doANSI_SGR(int)
                0x00000000c000fc62                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000fc78                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000fc8e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000fcae                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000fcc0                VgaText::scrollScreen()
                0x00000000c000fd54                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000fd66                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000fdc6                VgaText::getCursorX()
                0x00000000c000fdd2                VgaText::getCursorY()
                0x00000000c000fdde                VgaText::setCursor(int, int)
                0x00000000c000fdfc                VgaText::setCursorX(int)
                0x00000000c000fe18                VgaText::setCursorY(int)
                0x00000000c000fe34                VgaText::incrementCursor(bool)
                0x00000000c000fe9c                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000fef6                VgaText::updateDiskUsage()
                0x00000000c001005c                VgaText::updateTitle()
                0x00000000c00100a2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00100b2                VgaText::setTitleColour(VgaColour)
                0x00000000c00100c2                VgaText::setTitle(char*)
                0x00000000c00100e8                VgaText::decrementCursor(bool)
                0x00000000c0010110                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001020c                VgaText::isShowingCursor()
                0x00000000c0010218                VgaText::isBlinkDisabled()
                0x00000000c0010226                VgaText::setCursorHeight(int)
                0x00000000c0010244                VgaText::getCursorHeight()
                0x00000000c001024f                setActiveTerminal(VgaText*)
                0x00000000c0010301                doTerminalCycle()
                0x00000000c001031e                VgaText::doUpdate()
                0x00000000c0010330                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00104f0                VgaText::clearScreen()
                0x00000000c0010554                VgaText::putchar(char)
                0x00000000c001066e                VgaText::puts(char const*)
                0x00000000c0010694                VgaText::putx(unsigned int)
                0x00000000c00106da                VgaText::VgaText(char const*)
                0x00000000c00106da                VgaText::VgaText(char const*)
                0x00000000c001086c                VgaText::receiveKey(unsigned char)
                0x00000000c0010954                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00109a8                newTerminal(char*)
 *fill*         0x00000000c00109cd        0x1 
 .text          0x00000000c00109ce      0x18f core/tss.32
                0x00000000c00109ce                TSS::TSS()
                0x00000000c00109ce                TSS::TSS()
                0x00000000c00109dc                TSS::setESP(unsigned long)
                0x00000000c00109ee                TSS::flush()
                0x00000000c0010a0e                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010b5d        0x1 
 .text          0x00000000c0010b5e      0x32f core/unixfile.32
                0x00000000c0010b5e                ReservedFilename::isAtty()
                0x00000000c0010b74                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0010c06                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0010c9c                UnixFile::getFileDescriptor()
                0x00000000c0010ca4                UnixFile::UnixFile(int)
                0x00000000c0010ca4                UnixFile::UnixFile(int)
                0x00000000c0010ce0                ReservedFilename::ReservedFilename(int)
                0x00000000c0010ce0                ReservedFilename::ReservedFilename(int)
                0x00000000c0010d08                UnixFile::~UnixFile()
                0x00000000c0010d08                UnixFile::~UnixFile()
                0x00000000c0010d8e                UnixFile::~UnixFile()
                0x00000000c0010db6                ReservedFilename::~ReservedFilename()
                0x00000000c0010db6                ReservedFilename::~ReservedFilename()
                0x00000000c0010dda                ReservedFilename::~ReservedFilename()
                0x00000000c0010e01                getFromFileDescriptor(int)
 *fill*         0x00000000c0010e8d        0x1 
 .text          0x00000000c0010e8e     0x1175 core/virtmgr.32
                0x00000000c0010e8e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0010ec3                Virt::getPageState(unsigned long)
                0x00000000c0010ee7                Virt::allocateKernelVirtualPages(int)
                0x00000000c0010ff8                Virt::virtualMemorySetup()
                0x00000000c0011077                Virt::getAKernelVAS()
                0x00000000c001107d                Virt::setupPageSwapping(int)
                0x00000000c00111a2                VAS::VAS()
                0x00000000c00111a2                VAS::VAS()
                0x00000000c00111d2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00111fe                VAS::getPageTableEntry(unsigned long)
                0x00000000c001121d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0011340                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0011364                VAS::virtualToPhysical(unsigned long)
                0x00000000c001137c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00113b2                VAS::~VAS()
                0x00000000c00113b2                VAS::~VAS()
                0x00000000c001151e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c001161e                VAS::allocatePages(int, int)
                0x00000000c00117ee                VAS::setCPUSpecific(unsigned long)
                0x00000000c001180a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00118d4                VAS::VAS(VAS*)
                0x00000000c00118d4                VAS::VAS(VAS*)
                0x00000000c0011c1e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0011d0c                VAS::VAS(bool)
                0x00000000c0011d0c                VAS::VAS(bool)
                0x00000000c0011f3c                mapVASFirstTime
 .text          0x00000000c0012003       0x93 coreobjs/c++.32
                0x00000000c0012003                __cxa_atexit
                0x00000000c0012006                __cxa_finalize
                0x00000000c0012007                __stack_chk_fail
                0x00000000c0012067                __cxa_pure_virtual
                0x00000000c0012078                operator new(unsigned long)
                0x00000000c001207d                operator new[](unsigned long)
                0x00000000c0012082                operator delete(void*)
                0x00000000c0012087                operator delete(void*, unsigned long)
                0x00000000c001208c                operator delete[](void*)
                0x00000000c0012091                operator delete[](void*, unsigned long)
 .text          0x00000000c0012096        0x0 debugger/debug.32
 .text          0x00000000c0012096      0xb68 fs/vfs.32
                0x00000000c0012096                File::read(unsigned long long, void*, int*)
                0x00000000c00120ee                File::write(unsigned long long, void*, int*)
                0x00000000c0012146                Directory::read(unsigned long long, void*, int*)
                0x00000000c001219e                Directory::write(unsigned long long, void*, int*)
                0x00000000c00121cc                File::isAtty()
                0x00000000c00121d0                Directory::isAtty()
                0x00000000c00121d4                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00121da                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00121e0                File::~File()
                0x00000000c00121e0                File::~File()
                0x00000000c0012204                File::~File()
                0x00000000c001222e                Directory::~Directory()
                0x00000000c001222e                Directory::~Directory()
                0x00000000c0012252                Directory::~Directory()
                0x00000000c001227c                Filesystem::Filesystem()
                0x00000000c001227c                Filesystem::Filesystem()
                0x00000000c00122a0                Filesystem::~Filesystem()
                0x00000000c00122a0                Filesystem::~Filesystem()
                0x00000000c00122ae                Filesystem::~Filesystem()
                0x00000000c00122d2                initVFS()
                0x00000000c00122fc                standardiseFiles(char*, char const*, char const*)
                0x00000000c00124a6                File::File(char const*, Process*)
                0x00000000c00124a6                File::File(char const*, Process*)
                0x00000000c001250a                File::open(FileOpenMode)
                0x00000000c0012568                File::close()
                0x00000000c00125c8                File::seek(unsigned long long)
                0x00000000c001261e                File::tell(unsigned long long*)
                0x00000000c001266e                File::rewind()
                0x00000000c0012682                File::unlink()
                0x00000000c00126ce                File::rename(char const*)
                0x00000000c001271c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012778                File::exists()
                0x00000000c00127b6                File::stat(unsigned long long*, bool*)
                0x00000000c0012817                getcwd(Process*, char*, int)
                0x00000000c0012841                setcwd(Process*, char*)
                0x00000000c0012968                Directory::Directory(char const*, Process*)
                0x00000000c0012968                Directory::Directory(char const*, Process*)
                0x00000000c00129cc                Directory::open()
                0x00000000c0012a28                Directory::close()
                0x00000000c0012a88                Directory::unlink()
                0x00000000c0012ad4                Directory::rename(char const*)
                0x00000000c0012b22                Directory::exists()
                0x00000000c0012b60                Directory::read(dirent*)
                0x00000000c0012bac                Directory::create()
                0x00000000c0012bf8                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0012bfe       0x84 hal/bus.32
                0x00000000c0012bfe                Bus::Bus(char const*)
                0x00000000c0012bfe                Bus::Bus(char const*)
                0x00000000c0012c34                Bus::~Bus()
                0x00000000c0012c34                Bus::~Bus()
                0x00000000c0012c58                Bus::~Bus()
 .text          0x00000000c0012c82      0x14e hal/buzzer.32
                0x00000000c0012c82                Buzzer::Buzzer(char const*)
                0x00000000c0012c82                Buzzer::Buzzer(char const*)
                0x00000000c0012cc6                Buzzer::~Buzzer()
                0x00000000c0012cc6                Buzzer::~Buzzer()
                0x00000000c0012cea                Buzzer::~Buzzer()
                0x00000000c0012d14                Buzzer::stop()
                0x00000000c0012d27                beepThread(void*)
                0x00000000c0012d62                Buzzer::beep(int, int, bool)
 .text          0x00000000c0012dd0      0x42f hal/clock.32
                0x00000000c0012dd0                loadClockSettings()
                0x00000000c0012dea                Clock::Clock(char const*)
                0x00000000c0012dea                Clock::Clock(char const*)
                0x00000000c0012e20                Clock::~Clock()
                0x00000000c0012e20                Clock::~Clock()
                0x00000000c0012e44                Clock::~Clock()
                0x00000000c0012e6e                Clock::timeInSecondsLocal()
                0x00000000c0012eb6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0012f0f                datetimeToSeconds(datetime_t)
                0x00000000c0013036                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0013096                secondsToDatetime(unsigned long long)
                0x00000000c00131da                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00131ff        0x1 
 .text          0x00000000c0013200      0x504 hal/device.32
                0x00000000c0013200                Device::hibernate()
                0x00000000c0013202                Device::wake()
                0x00000000c0013204                Device::detect()
                0x00000000c0013206                Device::disableLegacy()
                0x00000000c0013208                Device::powerSaving(PowerSavingLevel)
                0x00000000c001320a                DriverlessDevice::close(int, int, void*)
                0x00000000c001320e                DriverlessDevice::detect()
                0x00000000c0013210                DriverlessDevice::open(int, int, void*)
                0x00000000c0013224                Device::~Device()
                0x00000000c0013224                Device::~Device()
                0x00000000c0013232                Device::~Device()
                0x00000000c001325a                Device::findAndLoadDriver()
                0x00000000c001325c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0013282                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00132d6                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013334                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013382                Device::addChild(Device*)
                0x00000000c00133c6                Device::removeAllChildren()
                0x00000000c001340c                Device::hibernateAll()
                0x00000000c001343c                Device::wakeAll()
                0x00000000c001346c                Device::detectAll()
                0x00000000c001349c                Device::disableLegacyAll()
                0x00000000c00134cc                Device::loadDriversForAll()
                0x00000000c00134f8                Device::closeAll()
                0x00000000c001352e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0013564                Device::setName(char const*)
                0x00000000c0013572                Device::Device(char const*)
                0x00000000c0013572                Device::Device(char const*)
                0x00000000c0013664                Device::getName()
                0x00000000c001366e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001366e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013696                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00136da                getDevicesOfType(DeviceType)
 .text          0x00000000c0013704       0x84 hal/diskctrl.32
                0x00000000c0013704                HardDiskController::HardDiskController(char const*)
                0x00000000c0013704                HardDiskController::HardDiskController(char const*)
                0x00000000c001373a                HardDiskController::~HardDiskController()
                0x00000000c001373a                HardDiskController::~HardDiskController()
                0x00000000c001375e                HardDiskController::~HardDiskController()
 .text          0x00000000c0013788       0xde hal/diskphys.32
                0x00000000c0013788                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013788                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00137f0                PhysicalDisk::startCache()
                0x00000000c0013818                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013818                PhysicalDisk::~PhysicalDisk()
                0x00000000c001383c                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013866      0x128 hal/fpu.32
                0x00000000c0013866                FPU::FPU(char const*)
                0x00000000c0013866                FPU::FPU(char const*)
                0x00000000c001389c                FPU::~FPU()
                0x00000000c001389c                FPU::~FPU()
                0x00000000c00138c0                FPU::~FPU()
                0x00000000c00138ea                setupFPU()
 .text          0x00000000c001398e      0xb89 hal/intctrl.32
                0x00000000c001398e                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00139c6                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013a18                doubleFault(regs*, void*)
                0x00000000c0013a26                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013ac2                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013b6a                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013bf1                nmiHandler(regs*, void*)
                0x00000000c0013bff                int_handler
                0x00000000c0013c9a                InterruptController::InterruptController(char const*)
                0x00000000c0013c9a                InterruptController::InterruptController(char const*)
                0x00000000c0013d40                InterruptController::~InterruptController()
                0x00000000c0013d40                InterruptController::~InterruptController()
                0x00000000c0013d64                InterruptController::~InterruptController()
                0x00000000c0013d8e                displayDebugInfo(regs*)
                0x00000000c0014170                gpFault(regs*, void*)
                0x00000000c00141a9                pgFault(regs*, void*)
                0x00000000c00141c0                otherISRHandler(regs*, void*)
                0x00000000c00141df                opcodeFault(regs*, void*)
                0x00000000c0014249                displayProgramFault(char const*)
                0x00000000c0014272                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00142bc                setupInterruptController()
 *fill*         0x00000000c0014517        0x1 
 .text          0x00000000c0014518      0x604 hal/keybrd.32
                0x00000000c0014518                startGUI(void*)
                0x00000000c0014586                sendKeyToTerminal(unsigned char)
                0x00000000c00145f2                sendKeyboardToken(KeyboardToken)
                0x00000000c00149cd                clearInternalKeybuffer(VgaText*)
                0x00000000c0014a02                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014a92                Keyboard::Keyboard(char const*)
                0x00000000c0014a92                Keyboard::Keyboard(char const*)
                0x00000000c0014ace                Keyboard::~Keyboard()
                0x00000000c0014ace                Keyboard::~Keyboard()
                0x00000000c0014af2                Keyboard::~Keyboard()
 .text          0x00000000c0014b1c      0x400 hal/logidisk.32
                0x00000000c0014b1c                LogicalDisk::close(int, int, void*)
                0x00000000c0014b20                LogicalDisk::~LogicalDisk()
                0x00000000c0014b20                LogicalDisk::~LogicalDisk()
                0x00000000c0014b44                LogicalDisk::~LogicalDisk()
                0x00000000c0014b6e                LogicalDisk::open(int, int, void*)
                0x00000000c0014b82                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014bba                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0014c00                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014c00                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014cb6                LogicalDisk::assignDriveLetter()
                0x00000000c0014d6c                LogicalDisk::mount()
                0x00000000c0014dde                LogicalDisk::unmount()
                0x00000000c0014dee                LogicalDisk::unassignDriveLetter()
                0x00000000c0014e44                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0014eb0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0014f1c       0x84 hal/mouse.32
                0x00000000c0014f1c                Mouse::Mouse(char const*)
                0x00000000c0014f1c                Mouse::Mouse(char const*)
                0x00000000c0014f52                Mouse::~Mouse()
                0x00000000c0014f52                Mouse::~Mouse()
                0x00000000c0014f76                Mouse::~Mouse()
 .text          0x00000000c0014fa0      0x339 hal/partition.32
                0x00000000c0014fa0                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015048                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00152d9        0x1 
 .text          0x00000000c00152da      0x2e7 hal/timer.32
                0x00000000c00152da                Timer::Timer(char const*)
                0x00000000c00152da                Timer::Timer(char const*)
                0x00000000c0015310                Timer::~Timer()
                0x00000000c0015310                Timer::~Timer()
                0x00000000c0015334                Timer::~Timer()
                0x00000000c001535e                Timer::read()
                0x00000000c0015369                timerHandler(unsigned long long)
                0x00000000c00154a0                setupTimer(int)
 *fill*         0x00000000c00155c1        0x1 
 .text          0x00000000c00155c2      0x2d1 hal/vcache.32
                0x00000000c00155c2                VCache::VCache(PhysicalDisk*)
                0x00000000c00155c2                VCache::VCache(PhysicalDisk*)
                0x00000000c00156b2                VCache::writeWriteBuffer()
                0x00000000c00156ee                VCache::~VCache()
                0x00000000c00156ee                VCache::~VCache()
                0x00000000c001572e                VCache::~VCache()
                0x00000000c0015756                VCache::write(unsigned long long, int, void*)
                0x00000000c001583a                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015893        0x1 
 .text          0x00000000c0015894      0x26d hal/video.32
                0x00000000c0015894                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00158de                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001595c                Video::clearScreen(unsigned int)
                0x00000000c0015990                Video::putpixel(int, int, unsigned int)
                0x00000000c001599e                Video::Video(char const*)
                0x00000000c001599e                Video::Video(char const*)
                0x00000000c00159d4                Video::~Video()
                0x00000000c00159d4                Video::~Video()
                0x00000000c00159f8                Video::~Video()
                0x00000000c0015a22                Video::isMonochrome()
                0x00000000c0015a2e                Video::getWidth()
                0x00000000c0015a3a                Video::getHeight()
                0x00000000c0015a46                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015b01        0x1 
 .text          0x00000000c0015b02      0xc86 hw/acpi.32
                0x00000000c0015b02                ACPI::close(int, int, void*)
                0x00000000c0015bb7                findRSDP()
                0x00000000c0015c41                loadACPITables(unsigned char*)
                0x00000000c0015e68                findRSDT(unsigned char*)
                0x00000000c0015f86                findDataTable(unsigned char*, char*)
                0x00000000c0016022                scanMADT()
                0x00000000c00163b6                ACPI::ACPI()
                0x00000000c00163b6                ACPI::ACPI()
                0x00000000c0016416                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00164f8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00165fe                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0016604                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001664c                ACPI::open(int, int, void*)
                0x00000000c0016770                ACPI::sleep()
 .text          0x00000000c0016788     0x132c hw/cpu.32
                0x00000000c0016788                CPU::close(int, int, void*)
                0x00000000c001678b                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c001691f                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016bcd                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016be9                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016c01                AMD_K6_writeback(int, int, int)
                0x00000000c0016c74                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016cf7                cpuidCheckEDX(unsigned int)
                0x00000000c0016d24                cpuidCheckECX(unsigned int)
                0x00000000c0016d51                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016d7e                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0016dab                getCPUNumber()
                0x00000000c0016dae                thisCPU()
                0x00000000c0016dc2                CPU::CPU()
                0x00000000c0016dc2                CPU::CPU()
                0x00000000c0016e50                CPU::displayFeatures()
                0x00000000c0016e52                CPU::detectFeatures()
                0x00000000c0017844                CPU::setupSMEP()
                0x00000000c001785e                CPU::setupUMIP()
                0x00000000c0017876                CPU::setupTSC()
                0x00000000c001788e                CPU::setupLargePages()
                0x00000000c00178a6                CPU::setupPAT()
                0x00000000c00178e2                CPU::setupMTRR()
                0x00000000c00178e4                CPU::setupGlobalPages()
                0x00000000c00178fa                CPU::allowUsermodeDataAccess()
                0x00000000c001790c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001791e                CPU::setupSMAP()
                0x00000000c0017944                CPU::setupFeatures()
                0x00000000c00179e6                CPU::open(int, int, void*)
 .text          0x00000000c0017ab4        0x0 hw/ports.32
 .text          0x00000000c0017ab4      0x503 registry/registry.32
                0x00000000c0017ab4                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0017c0c                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0017d6b                Reg::getLine(char*, char*, char*)
                0x00000000c0017da2                Reg::readInt(char*, char*, int*)
                0x00000000c0017e8d                Reg::readString(char*, char*, char*, int)
                0x00000000c0017f0e                Reg::readBool(char*, char*, bool*)
                0x00000000c0017f33                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0017f5f                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0017f8b                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0017fb7       0x18 syscalls/sc_exit.32
                0x00000000c0017fb7                Sys::exit(regs*)
 .text          0x00000000c0017fcf       0x68 syscalls/sc_read.32
                0x00000000c0017fcf                Sys::read(regs*)
 .text          0x00000000c0018037       0x55 syscalls/sc_sbrk.32
                0x00000000c0018037                Sys::sbrk(regs*)
 .text          0x00000000c001808c       0x68 syscalls/sc_write.32
                0x00000000c001808c                Sys::write(regs*)
 .text          0x00000000c00180f4       0x1a syscalls/sc_yield.32
                0x00000000c00180f4                Sys::yield(regs*)
 .text          0x00000000c001810e      0x8bf vm86/vm8086.32
                0x00000000c001810e                vm8086EntryPoint(void*)
                0x00000000c0018139                inbv(unsigned short)
                0x00000000c001813f                outbv(unsigned short, unsigned char)
                0x00000000c0018149                realToLinear(unsigned short, unsigned short)
                0x00000000c0018159                getSegment(unsigned int)
                0x00000000c0018161                getOffset(unsigned int)
                0x00000000c0018166                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018295                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001831f                readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018330                readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018342                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018353                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018368                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001837e                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018393                vm8086FaultHandler(regs*)
 *fill*         0x00000000c00189cd        0x1 
 .text          0x00000000c00189ce     0x1088 fs/fat/vfslink.32
                0x00000000c00189ce                FAT::getName()
                0x00000000c00189d4                FAT::tell(void*, unsigned long long*)
                0x00000000c0018a08                FAT::stat(void*, unsigned long long*)
                0x00000000c0018a3c                FAT::exists(char const*)
                0x00000000c0018a40                FAT::~FAT()
                0x00000000c0018a40                FAT::~FAT()
                0x00000000c0018a64                FAT::~FAT()
                0x00000000c0018a8c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018b2a                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018be4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018dc8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018fce                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00190d6                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019130                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001918a                FAT::close(void*)
                0x00000000c00191d6                FAT::closeDir(void*)
                0x00000000c0019222                FAT::seek(void*, unsigned long long)
                0x00000000c0019276                fatWrapperReadDisk
                0x00000000c00192bd                fatWrapperWriteDisk
                0x00000000c0019304                fatWrapperIoctl
                0x00000000c0019408                FAT::FAT()
                0x00000000c0019408                FAT::FAT()
                0x00000000c001945a                FAT::fixFilepath(char*)
                0x00000000c0019492                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00195ba                FAT::openDir(char const*, void**)
                0x00000000c0019660                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001974a                FAT::unlink(char const*)
                0x00000000c00197c4                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019918                FAT::rename(char const*, char const*)
                0x00000000c00199dc                FAT::mkdir(char const*)
 .text          0x00000000c0019a56      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019a56                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019a5c                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019a8c                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019ab0                ISO9660::getName()
                0x00000000c0019ab6                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019ada                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019ae0                ISO9660::unlink(char const*)
                0x00000000c0019ae6                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019aec                ISO9660::rename(char const*, char const*)
                0x00000000c0019af2                ISO9660::mkdir(char const*)
                0x00000000c0019af8                ISO9660::close(void*)
                0x00000000c0019b1a                ISO9660::closeDir(void*)
                0x00000000c0019b3c                ISO9660::~ISO9660()
                0x00000000c0019b3c                ISO9660::~ISO9660()
                0x00000000c0019b60                ISO9660::~ISO9660()
                0x00000000c0019b87                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019bc9                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019c30                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019c80                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019ec4                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a152                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a1a7                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a37a                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a408                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a4a2                ISO9660::exists(char const*)
                0x00000000c001a4c6                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a55a                ISO9660::openDir(char const*, void**)
                0x00000000c001a612                ISO9660::ISO9660()
                0x00000000c001a612                ISO9660::ISO9660()
 *fill*         0x00000000c001a635        0x1 
 .text          0x00000000c001a636      0x244 hal/sound/sndchannel.32
                0x00000000c001a636                SoundChannel::~SoundChannel()
                0x00000000c001a636                SoundChannel::~SoundChannel()
                0x00000000c001a652                SoundChannel::setSpeed(float)
                0x00000000c001a65e                SoundChannel::getSpeed()
                0x00000000c001a666                SoundChannel::setVolume(int)
                0x00000000c001a682                SoundChannel::getVolume()
                0x00000000c001a68a                SoundChannel::pause()
                0x00000000c001a694                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001a694                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001a78a                SoundChannel::play()
                0x00000000c001a794                SoundChannel::paused()
                0x00000000c001a79c                SoundChannel::getSampleRate()
                0x00000000c001a7a4                SoundChannel::getBits()
                0x00000000c001a7ac                SoundChannel::getBufferUsed()
                0x00000000c001a7b4                SoundChannel::getBufferSize()
                0x00000000c001a7bc                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001a82e                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001a87a      0x317 hal/sound/sndhw.32
                0x00000000c001a87a                SoundDevice::SoundDevice(char const*)
                0x00000000c001a87a                SoundDevice::SoundDevice(char const*)
                0x00000000c001a8e6                SoundDevice::~SoundDevice()
                0x00000000c001a8e6                SoundDevice::~SoundDevice()
                0x00000000c001a960                SoundDevice::~SoundDevice()
                0x00000000c001a98a                SoundDevice::getFreeChannelNum()
                0x00000000c001a9a4                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001aa14                SoundDevice::removeChannel(int)
                0x00000000c001aa46                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001aab2                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001ab91        0x0 hw/bus/isa.32
 *fill*         0x00000000c001ab91        0x1 
 .text          0x00000000c001ab92      0x6e5 hw/bus/pci.32
                0x00000000c001ab92                PCI::open(int, int, void*)
                0x00000000c001aba6                PCI::close(int, int, void*)
                0x00000000c001abaa                PCI::PCI()
                0x00000000c001abaa                PCI::PCI()
                0x00000000c001ac2a                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ac72                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ac94                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001acb8                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001acfc                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad20                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad42                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad64                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad88                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ade8                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001ae54                PCI::checkBus(unsigned char)
                0x00000000c001ae78                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001afe8                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1b8                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b224                PCI::detect()
 *fill*         0x00000000c001b277        0x1 
 .text          0x00000000c001b278      0xc70 hw/diskctrl/ide.32
                0x00000000c001b278                IDE::close(int, int, void*)
                0x00000000c001b27c                IDE::IDE()
                0x00000000c001b27c                IDE::IDE()
                0x00000000c001b2b0                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b2c2                selectDrive(unsigned char, unsigned char)
                0x00000000c001b2c4                IDE::getBase(unsigned char)
                0x00000000c001b2d6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b396                IDE::read(unsigned char, unsigned char)
                0x00000000c001b444                IDE::waitInterrupt(unsigned char)
                0x00000000c001b4aa                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b4c6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b4e2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b528                IDE::open(int, int, void*)
                0x00000000c001b938                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ba04                IDE::detect()
                0x00000000c001bcec                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001be82                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001bee8      0x62b hw/diskphys/ata.32
                0x00000000c001bee8                ATA::close(int, int, void*)
                0x00000000c001bf0c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bf0e                ATA::ATA()
                0x00000000c001bf0e                ATA::ATA()
                0x00000000c001bf3c                ATA::flush(bool)
                0x00000000c001bf86                ATA::readyForCommand()
                0x00000000c001bfd6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c354                ATA::read(unsigned long long, int, void*)
                0x00000000c001c3bc                ATA::write(unsigned long long, int, void*)
                0x00000000c001c424                ATA::detectCHS()
                0x00000000c001c44e                ATA::open(int, int, void*)
 *fill*         0x00000000c001c513        0x1 
 .text          0x00000000c001c514      0x5b3 hw/diskphys/atapi.32
                0x00000000c001c514                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c51a                ATAPI::close(int, int, void*)
                0x00000000c001c53e                ATAPI::ATAPI()
                0x00000000c001c53e                ATAPI::ATAPI()
                0x00000000c001c56c                ATAPI::readyForCommand()
                0x00000000c001c5bc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c87c                ATAPI::diskRemoved()
                0x00000000c001c898                ATAPI::eject()
                0x00000000c001c8de                ATAPI::diskInserted()
                0x00000000c001c90c                ATAPI::detectMedia()
                0x00000000c001c9c8                ATAPI::open(int, int, void*)
                0x00000000c001ca48                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001cac7        0x1 
 .text          0x00000000c001cac8       0x8e hw/fpu/avx.32
                0x00000000c001cac8                AVX::open(int, int, void*)
                0x00000000c001cada                AVX::close(int, int, void*)
                0x00000000c001caec                AVX::available()
                0x00000000c001cafe                AVX::save(void*)
                0x00000000c001cb16                AVX::load(void*)
                0x00000000c001cb2e                AVX::AVX()
                0x00000000c001cb2e                AVX::AVX()
 .text          0x00000000c001cb56       0x90 hw/fpu/mmx.32
                0x00000000c001cb56                MMX::available()
                0x00000000c001cb6a                MMX::open(int, int, void*)
                0x00000000c001cb7c                MMX::close(int, int, void*)
                0x00000000c001cb8e                MMX::save(void*)
                0x00000000c001cba6                MMX::load(void*)
                0x00000000c001cbbe                MMX::MMX()
                0x00000000c001cbbe                MMX::MMX()
 .text          0x00000000c001cbe6       0x96 hw/fpu/sse.32
                0x00000000c001cbe6                SSE::open(int, int, void*)
                0x00000000c001cbf8                SSE::close(int, int, void*)
                0x00000000c001cc0a                SSE::available()
                0x00000000c001cc24                SSE::save(void*)
                0x00000000c001cc3c                SSE::load(void*)
                0x00000000c001cc54                SSE::SSE()
                0x00000000c001cc54                SSE::SSE()
 .text          0x00000000c001cc7c       0x8e hw/fpu/x87.32
                0x00000000c001cc7c                x87::open(int, int, void*)
                0x00000000c001cc8e                x87::close(int, int, void*)
                0x00000000c001cca0                x87::available()
                0x00000000c001ccb2                x87::save(void*)
                0x00000000c001ccca                x87::load(void*)
                0x00000000c001cce2                x87::x87()
                0x00000000c001cce2                x87::x87()
 .text          0x00000000c001cd0a      0x5f3 hw/intctrl/apic.32
                0x00000000c001cd0a                APIC::disable()
                0x00000000c001cd0c                APIC::close(int, int, void*)
                0x00000000c001cd2e                IOAPIC::close(int, int, void*)
                0x00000000c001cd34                APIC::io_wait()
                0x00000000c001cd3a                APIC::getBase()
                0x00000000c001cd7c                APIC::eoi(unsigned char)
                0x00000000c001cdaa                APIC::open(int, int, void*)
                0x00000000c001ce64                IOAPIC::IOAPIC()
                0x00000000c001ce64                IOAPIC::IOAPIC()
                0x00000000c001ce8c                APIC::APIC()
                0x00000000c001ce8c                APIC::APIC()
                0x00000000c001cf5c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001cf8e                IOAPIC::read(int)
                0x00000000c001cfb6                IOAPIC::open(int, int, void*)
                0x00000000c001d0ac                IOAPIC::write(int, int)
                0x00000000c001d0d8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d192                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d2fd        0x1 
 .text          0x00000000c001d2fe      0x3d3 hw/intctrl/pic.32
                0x00000000c001d2fe                PIC::disable()
                0x00000000c001d32c                PIC::close(int, int, void*)
                0x00000000c001d34e                PIC::PIC()
                0x00000000c001d34e                PIC::PIC()
                0x00000000c001d424                PIC::ioWait()
                0x00000000c001d42a                PIC::getIRQReg(int)
                0x00000000c001d494                PIC::eoi(unsigned char)
                0x00000000c001d526                PIC::remap()
                0x00000000c001d692                PIC::open(int, int, void*)
 *fill*         0x00000000c001d6d1        0x1 
 .text          0x00000000c001d6d2      0x252 hw/timer/apictimer.32
                0x00000000c001d6d2                APICTimer::close(int, int, void*)
                0x00000000c001d6d8                apicTimerHandler(regs*, void*)
                0x00000000c001d706                APICTimer::write(int)
                0x00000000c001d804                APICTimer::open(int, int, void*)
                0x00000000c001d8fc                APICTimer::APICTimer()
                0x00000000c001d8fc                APICTimer::APICTimer()
 .text          0x00000000c001d924      0x1a7 hw/timer/pit.32
                0x00000000c001d924                PIT::write(int)
                0x00000000c001d9a2                pitHandler(regs*, void*)
                0x00000000c001d9ce                PIT::open(int, int, void*)
                0x00000000c001da1c                PIT::close(int, int, void*)
                0x00000000c001da4c                PIT::PIT()
                0x00000000c001da4c                PIT::PIT()
 *fill*         0x00000000c001dacb        0x5 
 .text          0x00000000c001dad0        0xa hw/fpu/x86/avx.32
                0x00000000c001dad0                avxDetect
                0x00000000c001dad6                avxSave
                0x00000000c001dad7                avxLoad
                0x00000000c001dad8                avxInit
                0x00000000c001dad9                avxClose
 *fill*         0x00000000c001dada        0x6 
 .text          0x00000000c001dae0       0x38 hw/fpu/x86/sse.32
                0x00000000c001dae0                sseDetect
                0x00000000c001dafb                sseSave
                0x00000000c001db01                sseLoad
                0x00000000c001db07                sseInit
                0x00000000c001db17                sseClose
 *fill*         0x00000000c001db18        0x8 
 .text          0x00000000c001db20       0x47 hw/fpu/x86/x87.32
                0x00000000c001db26                x87Detect
                0x00000000c001db41                x87Save
                0x00000000c001db47                x87Load
                0x00000000c001db4c                x87Init
                0x00000000c001db66                x87Close
 *fill*         0x00000000c001db67        0x1 
 .text          0x00000000c001db68       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001db8d        0x0 crtn.32
 *fill*         0x00000000c001db8d        0x3 
 .text          0x00000000c001db90      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001db90                __divdi3
 *fill*         0x00000000c001dcdb        0x1 
 .text          0x00000000c001dcdc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001dcdc                __moddi3
 *fill*         0x00000000c001de5a        0x2 
 .text          0x00000000c001de5c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001de5c                __udivdi3
 *fill*         0x00000000c001df5b        0x1 
 .text          0x00000000c001df5c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001df5c                __umoddi3
 *fill*         0x00000000c001e076        0xa 
 .text          0x00000000c001e080       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e080                fabs
 *fill*         0x00000000c001e09e        0x2 
 .text          0x00000000c001e0a0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e0a0                lrint
 .text          0x00000000c001e0ac        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e0ac                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e0b8        0x0
 .iplt          0x00000000c001e0b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e0b8        0xf
 .init          0x00000000c001e0b8        0x3 crti.32
                0x00000000c001e0b8                _init
 .init          0x00000000c001e0bb        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e0c0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e0c5        0x2 crtn.32

.fini           0x00000000c001e0c7        0xa
 .fini          0x00000000c001e0c7        0x3 crti.32
                0x00000000c001e0c7                _fini
 .fini          0x00000000c001e0ca        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e0cf        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e0d2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e0d2       0x23 core/computer.32
                0x00000000c001e0d2                Computer::~Computer()
                0x00000000c001e0d2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e0f6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e0f6       0x2a core/computer.32
                0x00000000c001e0f6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e120       0x15
 .text._Z10idleCommonv
                0x00000000c001e120       0x15 core/idle.32
                0x00000000c001e120                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e135       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e135       0x12 core/kconsole.32
                0x00000000c001e135                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e147       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e147       0x12 core/kconsole.32
                0x00000000c001e147                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e159       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e159       0x12 core/kconsole.32
                0x00000000c001e159                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001e16b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001e16b       0x12 core/kconsole.32
                0x00000000c001e16b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e17d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e17d        0x9 core/kheap.32
                0x00000000c001e17d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e186        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e186        0x2 core/prcssthr.32
                0x00000000c001e186                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e186                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e188       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e188       0x3e core/prcssthr.32
                0x00000000c001e188                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e188                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e1c6       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e1c6       0x58 core/prcssthr.32
                0x00000000c001e1c6                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e1c6                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e21e       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e21e       0xd3 core/prcssthr.32
                0x00000000c001e21e                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e2f2       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e2f2       0x1c core/prcssthr.32
                0x00000000c001e2f2                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e30e       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e30e       0xae core/prcssthr.32
                0x00000000c001e30e                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3bc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3bc        0x7 core/prcssthr.32
                0x00000000c001e3bc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e3c4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e3c4        0x8 core/prcssthr.32
                0x00000000c001e3c4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e3cc        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e3cc        0x2 core/unixfile.32
                0x00000000c001e3cc                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e3cc                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e3ce       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e3ce       0x58 core/unixfile.32
                0x00000000c001e3ce                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e3ce                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e426        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e426        0x7 core/unixfile.32
                0x00000000c001e426                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e42e       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e42e       0xa1 core/unixfile.32
                0x00000000c001e42e                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e4d0        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e4d0        0x8 core/unixfile.32
                0x00000000c001e4d0                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e4d8      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e4d8      0x130 core/unixfile.32
                0x00000000c001e4d8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e608       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e608       0x1a hal/device.32
                0x00000000c001e608                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e608                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e622       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e622       0x2a hal/device.32
                0x00000000c001e622                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e64c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e64c       0xdc hal/device.32
                0x00000000c001e64c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e728       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e728       0x58 hal/device.32
                0x00000000c001e728                LinkedList<Device>::LinkedList()
                0x00000000c001e728                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001e780       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001e780       0x12 hal/intctrl.32
                0x00000000c001e780                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001e792       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001e792       0x12 hal/intctrl.32
                0x00000000c001e792                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001e7a4       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001e7a4       0x12 hal/intctrl.32
                0x00000000c001e7a4                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001e7b6       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001e7b6       0x12 hal/intctrl.32
                0x00000000c001e7b6                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001e7c8       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001e7c8       0x12 hal/intctrl.32
                0x00000000c001e7c8                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001e7da       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001e7da       0x12 hal/intctrl.32
                0x00000000c001e7da                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001e7ec       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e7ec       0x23 hw/acpi.32
                0x00000000c001e7ec                ACPI::~ACPI()
                0x00000000c001e7ec                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e810       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e810       0x2a hw/acpi.32
                0x00000000c001e810                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001e83a       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e83a       0x23 hw/cpu.32
                0x00000000c001e83a                CPU::~CPU()
                0x00000000c001e83a                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e85e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e85e       0x2a hw/cpu.32
                0x00000000c001e85e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001e888        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001e888        0x9 hw/cpu.32
                0x00000000c001e888                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001e891        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001e891        0x9 hw/cpu.32
                0x00000000c001e891                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001e89a       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e89a       0x23 hw/bus/pci.32
                0x00000000c001e89a                PCI::~PCI()
                0x00000000c001e89a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e8be       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e8be       0x2a hw/bus/pci.32
                0x00000000c001e8be                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e8e8       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e8e8       0x23 hw/diskctrl/ide.32
                0x00000000c001e8e8                IDE::~IDE()
                0x00000000c001e8e8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e90c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e90c       0x2a hw/diskctrl/ide.32
                0x00000000c001e90c                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001e936       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e936       0x23 hw/diskphys/ata.32
                0x00000000c001e936                ATA::~ATA()
                0x00000000c001e936                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e95a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e95a       0x2a hw/diskphys/ata.32
                0x00000000c001e95a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e984       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e984       0x23 hw/diskphys/atapi.32
                0x00000000c001e984                ATAPI::~ATAPI()
                0x00000000c001e984                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e9a8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e9a8       0x2a hw/diskphys/atapi.32
                0x00000000c001e9a8                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001e9d2       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001e9d2       0x23 hw/fpu/avx.32
                0x00000000c001e9d2                AVX::~AVX()
                0x00000000c001e9d2                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001e9f6       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001e9f6       0x2a hw/fpu/avx.32
                0x00000000c001e9f6                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ea20       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ea20       0x23 hw/fpu/mmx.32
                0x00000000c001ea20                MMX::~MMX()
                0x00000000c001ea20                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ea44       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ea44       0x2a hw/fpu/mmx.32
                0x00000000c001ea44                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ea6e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ea6e       0x23 hw/fpu/sse.32
                0x00000000c001ea6e                SSE::~SSE()
                0x00000000c001ea6e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001ea92       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001ea92       0x2a hw/fpu/sse.32
                0x00000000c001ea92                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001eabc       0x23
 .text._ZN3x87D2Ev
                0x00000000c001eabc       0x23 hw/fpu/x87.32
                0x00000000c001eabc                x87::~x87()
                0x00000000c001eabc                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001eae0       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001eae0       0x2a hw/fpu/x87.32
                0x00000000c001eae0                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001eb0a       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001eb0a       0x23 hw/intctrl/apic.32
                0x00000000c001eb0a                IOAPIC::~IOAPIC()
                0x00000000c001eb0a                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001eb2e       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001eb2e       0x2a hw/intctrl/apic.32
                0x00000000c001eb2e                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001eb58       0x23
 .text._ZN4APICD2Ev
                0x00000000c001eb58       0x23 hw/intctrl/apic.32
                0x00000000c001eb58                APIC::~APIC()
                0x00000000c001eb58                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001eb7c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001eb7c       0x2a hw/intctrl/apic.32
                0x00000000c001eb7c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001eba6       0x23
 .text._ZN3PICD2Ev
                0x00000000c001eba6       0x23 hw/intctrl/pic.32
                0x00000000c001eba6                PIC::~PIC()
                0x00000000c001eba6                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001ebca       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001ebca       0x2a hw/intctrl/pic.32
                0x00000000c001ebca                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ebf4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ebf4       0x23 hw/timer/apictimer.32
                0x00000000c001ebf4                APICTimer::~APICTimer()
                0x00000000c001ebf4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ec18       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ec18       0x2a hw/timer/apictimer.32
                0x00000000c001ec18                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ec42       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ec42       0x23 hw/timer/pit.32
                0x00000000c001ec42                PIT::~PIT()
                0x00000000c001ec42                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ec66       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ec66       0x2a hw/timer/pit.32
                0x00000000c001ec66                PIT::~PIT()

.rodata         0x00000000c001ec90     0x3334
                0x00000000c001ec90                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001ec90        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ec94        0x4 core/prcssthr.32
 .ctors         0x00000000c001ec98        0x4 core/unixfile.32
 .ctors         0x00000000c001ec9c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eca0                end_ctors = .
                0x00000000c001eca0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001eca0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001eca4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001eca4                __DTOR_END__
                0x00000000c001eca8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001eca8       0x18 
 .rodata        0x00000000c001ecc0      0x101 acpica/utclib.32
                0x00000000c001ecc0                AcpiGbl_Ctypes
 *fill*         0x00000000c001edc1        0x3 
 .rodata        0x00000000c001edc4       0x18 core/malloc.32
 *fill*         0x00000000c001eddc        0x4 
 .rodata        0x00000000c001ede0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001ef00       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001ef56        0xa 
 .rodata        0x00000000c001ef60      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f360       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f416        0x2 
 .rodata.str1.4
                0x00000000c001f418      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001f7bd        0x3 
 .rodata        0x00000000c001f7c0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001f820       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001f840       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001f854       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001f896        0x2 
 .rodata.cst8   0x00000000c001f898        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001f8a0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001f90c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001f9d0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001fa1a        0x6 
 .rodata.cst8   0x00000000c001fa20        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001fa28        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fa34       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001fa7c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001fa7c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c001faef        0x1 
 .rodata._ZTV8Computer
                0x00000000c001faf0       0x2c core/computer.32
                0x00000000c001faf0                vtable for Computer
 .rodata.str1.1
                0x00000000c001fb1c      0x1a1 core/elf.32
                                        0x1a3 (size before relaxing)
 .rodata.str1.1
                0x00000000c001fcbd       0x1c core/gdt.32
 *fill*         0x00000000c001fcd9        0x3 
 .rodata.str1.4
                0x00000000c001fcdc      0x152 core/kconsole.32
 *fill*         0x00000000c001fe2e        0x2 
 .rodata        0x00000000c001fe30      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c001ff80       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0020035        0x3 
 .rodata.str1.4
                0x00000000c0020038       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020068        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020074       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c002008f       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c00200dd       0x39 core/pipe.32
 *fill*         0x00000000c0020116        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020118       0x1c core/pipe.32
                0x00000000c0020118                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020134       0x53 core/prcssthr.32
 *fill*         0x00000000c0020187        0x1 
 .rodata.str1.4
                0x00000000c0020188      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0020408       0x19 core/prcssthr.32
 *fill*         0x00000000c0020421        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020424       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020446       0x15 core/prcssthr.32
 *fill*         0x00000000c002045b        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002045c       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00204a7        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c00204af       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c002050c       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c0020558       0x9d core/terminal.32
 *fill*         0x00000000c00205f5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00205f8       0x1c core/terminal.32
                0x00000000c00205f8                vtable for VgaText
 .rodata        0x00000000c0020614       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c0020632       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002064c       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002064c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002064c        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002064c       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002067b       0x22 core/unixfile.32
 *fill*         0x00000000c002067b        0x1 
 .rodata.str1.4
                0x00000000c002067c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c002069c       0x1c core/unixfile.32
                0x00000000c002069c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00206b8       0x1c core/unixfile.32
                0x00000000c00206b8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00206d4      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c002087f      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020a03       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020a36       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0020a36        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c0020a38       0x64 fs/vfs.32
                0x00000000c0020a38                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020a9c       0x1c fs/vfs.32
                0x00000000c0020a9c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020ab8       0x1c fs/vfs.32
                0x00000000c0020ab8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020ad4       0x2c hal/bus.32
                0x00000000c0020ad4                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020b00       0x30 hal/buzzer.32
                0x00000000c0020b00                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020b30       0x3c hal/clock.32
                0x00000000c0020b30                vtable for Clock
 *fill*         0x00000000c0020b6c       0x14 
 .rodata        0x00000000c0020b80       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020bb0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020bce       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020bce       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0020bce       0x19 hal/device.32
 *fill*         0x00000000c0020bce        0x2 
 .rodata._ZTV6Device
                0x00000000c0020bd0       0x2c hal/device.32
                0x00000000c0020bd0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020bfc       0x2c hal/device.32
                0x00000000c0020bfc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020c28       0x2c hal/diskctrl.32
                0x00000000c0020c28                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020c54       0x34 hal/diskphys.32
                0x00000000c0020c54                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020c88        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0020c90       0x38 hal/fpu.32
                0x00000000c0020c90                vtable for FPU
 .rodata.str1.4
                0x00000000c0020cc8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020df8      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0020f65        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0020f68       0x48 hal/intctrl.32
                0x00000000c0020f68                vtable for InterruptController
 .rodata        0x00000000c0020fb0       0x4e hal/keybrd.32
 *fill*         0x00000000c0020ffe        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021000       0x34 hal/keybrd.32
                0x00000000c0021000                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021034       0x7a hal/logidisk.32
 *fill*         0x00000000c00210ae        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c00210b0       0x2c hal/logidisk.32
                0x00000000c00210b0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00210dc       0x2c hal/mouse.32
                0x00000000c00210dc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021108        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021113       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021113        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021113       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021113       0x22 hal/timer.32
 *fill*         0x00000000c0021113        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021114       0x30 hal/timer.32
                0x00000000c0021114                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021144       0x10 hal/vcache.32
                0x00000000c0021144                vtable for VCache
 .rodata.str1.1
                0x00000000c0021154        0xf hal/video.32
 *fill*         0x00000000c0021163        0x1 
 .rodata._ZTV5Video
                0x00000000c0021164       0x40 hal/video.32
                0x00000000c0021164                vtable for Video
 .rodata.str1.1
                0x00000000c00211a4       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c0021258       0xe5 hw/acpi.32
 *fill*         0x00000000c002133d        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021340       0x2c hw/acpi.32
                0x00000000c0021340                vtable for ACPI
 .rodata.str1.1
                0x00000000c002136c      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c0021590       0x2c hw/cpu.32
                0x00000000c0021590                vtable for CPU
 .rodata.str1.1
                0x00000000c00215bc       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021601       0x5f vm86/vm8086.32
 .rodata        0x00000000c0021660       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021690       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c00216e3        0x1 
 .rodata.str1.4
                0x00000000c00216e4       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c002170c       0x64 fs/fat/vfslink.32
                0x00000000c002170c                vtable for FAT
 .rodata.str1.1
                0x00000000c0021770       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c00217b9        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c00217bc       0x64 fs/iso9660/vfslink.32
                0x00000000c00217bc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021820       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002183a        0x2 
 .rodata.cst4   0x00000000c002183c        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0021840       0x38 hal/sound/sndhw.32
                0x00000000c0021840                vtable for SoundDevice
 .rodata.cst4   0x00000000c0021878       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0021888       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002192c       0x2c hw/bus/pci.32
                0x00000000c002192c                vtable for PCI
 .rodata.str1.1
                0x00000000c0021958      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0021b8e        0x2 
 .rodata._ZTV3IDE
                0x00000000c0021b90       0x2c hw/diskctrl/ide.32
                0x00000000c0021b90                vtable for IDE
 .rodata.str1.1
                0x00000000c0021bbc       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0021bdd        0x3 
 .rodata._ZTV3ATA
                0x00000000c0021be0       0x34 hw/diskphys/ata.32
                0x00000000c0021be0                vtable for ATA
 .rodata.str1.1
                0x00000000c0021c14       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0021c4c       0x34 hw/diskphys/atapi.32
                0x00000000c0021c4c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021c80        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0021c88       0x38 hw/fpu/avx.32
                0x00000000c0021c88                vtable for AVX
 .rodata.str1.1
                0x00000000c0021cc0        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0021cc8       0x38 hw/fpu/mmx.32
                0x00000000c0021cc8                vtable for MMX
 .rodata.str1.1
                0x00000000c0021d00        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0021d08       0x38 hw/fpu/sse.32
                0x00000000c0021d08                vtable for SSE
 .rodata.str1.1
                0x00000000c0021d40        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0021d48       0x38 hw/fpu/x87.32
                0x00000000c0021d48                vtable for x87
 .rodata        0x00000000c0021d80       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0021e58       0x48 hw/intctrl/apic.32
                0x00000000c0021e58                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0021ea0       0x2c hw/intctrl/apic.32
                0x00000000c0021ea0                vtable for IOAPIC
 .rodata        0x00000000c0021ecc       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0021eee        0x2 
 .rodata._ZTV3PIC
                0x00000000c0021ef0       0x48 hw/intctrl/pic.32
                0x00000000c0021ef0                vtable for PIC
 .rodata.str1.1
                0x00000000c0021f38        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0021f43        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021f44       0x30 hw/timer/apictimer.32
                0x00000000c0021f44                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021f74       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021f91        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021f94       0x30 hw/timer/pit.32
                0x00000000c0021f94                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0021fc4      0x601
 *(.data)
 .data          0x00000000c0021fc4        0x0 crti.32
 .data          0x00000000c0021fc4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0021fc4                __dso_handle
 .data          0x00000000c0021fc8        0x0 acpica/utclib.32
 .data          0x00000000c0021fc8        0x0 core/malloc.32
 .data          0x00000000c0021fc8        0x0 libk/string.32
 .data          0x00000000c0021fc8        0x0 fs/fat/diskio.32
 .data          0x00000000c0021fc8        0x0 fs/fat/ff.32
 .data          0x00000000c0021fc8        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0021fc8        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0021fc8        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0021fc8        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0021fc8        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0021fc8        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0021fc8        0x0 core/computer.32
 .data          0x00000000c0021fc8        0x0 core/elf.32
 .data          0x00000000c0021fc8        0x0 core/gdt.32
 .data          0x00000000c0021fc8        0x0 core/idle.32
 .data          0x00000000c0021fc8        0x0 core/idt.32
 .data          0x00000000c0021fc8        0x0 core/kconsole.32
 .data          0x00000000c0021fc8        0x4 core/kheap.32
 .data          0x00000000c0021fcc        0x0 core/main.32
 .data          0x00000000c0021fcc        0x4 core/physmgr.32
                0x00000000c0021fcc                Phys::bitmap
 .data          0x00000000c0021fd0        0x0 core/pipe.32
 .data          0x00000000c0021fd0        0x4 core/prcssthr.32
                0x00000000c0021fd0                nextPID
 .data          0x00000000c0021fd4        0x0 core/syscalls.32
 *fill*         0x00000000c0021fd4        0xc 
 .data          0x00000000c0021fe0       0x60 core/terminal.32
                0x00000000c0021fe0                VgaText::hiddenOut
                0x00000000c0022000                ansiToVGAMappings
 .data          0x00000000c0022040        0x0 core/tss.32
 .data          0x00000000c0022040        0x4 core/unixfile.32
                0x00000000c0022040                UnixFile::nextFd
 .data          0x00000000c0022044        0x8 core/virtmgr.32
                0x00000000c0022044                Virt::pageAllocPtr
                0x00000000c0022048                Virt::bitmap
 .data          0x00000000c002204c        0x4 coreobjs/c++.32
                0x00000000c002204c                __stack_chk_guard
 .data          0x00000000c0022050        0x0 debugger/debug.32
 .data          0x00000000c0022050        0x0 fs/vfs.32
 .data          0x00000000c0022050        0x0 hal/bus.32
 .data          0x00000000c0022050        0x0 hal/buzzer.32
 .data          0x00000000c0022050        0x0 hal/clock.32
 .data          0x00000000c0022050        0x0 hal/device.32
 .data          0x00000000c0022050        0x0 hal/diskctrl.32
 .data          0x00000000c0022050        0x0 hal/diskphys.32
 .data          0x00000000c0022050        0x0 hal/fpu.32
 *fill*         0x00000000c0022050       0x10 
 .data          0x00000000c0022060      0x2a0 hal/intctrl.32
                0x00000000c0022060                exceptionNames
 .data          0x00000000c0022300        0x0 hal/keybrd.32
 .data          0x00000000c0022300        0x0 hal/logidisk.32
 .data          0x00000000c0022300        0x0 hal/mouse.32
 .data          0x00000000c0022300        0x0 hal/partition.32
 .data          0x00000000c0022300        0x0 hal/timer.32
 .data          0x00000000c0022300        0x0 hal/vcache.32
 .data          0x00000000c0022300        0x0 hal/video.32
 .data          0x00000000c0022300       0x10 hw/acpi.32
                0x00000000c0022300                legacyIRQRemaps
 *fill*         0x00000000c0022310       0x10 
 .data          0x00000000c0022320      0x2a4 hw/cpu.32
                0x00000000c0022320                cpuNameList
                0x00000000c00225c0                lastCode
 .data          0x00000000c00225c4        0x0 hw/ports.32
 .data          0x00000000c00225c4        0x0 registry/registry.32
 .data          0x00000000c00225c4        0x0 syscalls/sc_exit.32
 .data          0x00000000c00225c4        0x0 syscalls/sc_read.32
 .data          0x00000000c00225c4        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c00225c4        0x0 syscalls/sc_write.32
 .data          0x00000000c00225c4        0x0 syscalls/sc_yield.32
 .data          0x00000000c00225c4        0x0 vm86/vm8086.32
 .data          0x00000000c00225c4        0x0 fs/fat/vfslink.32
 .data          0x00000000c00225c4        0x1 fs/iso9660/vfslink.32
                0x00000000c00225c4                recentDriveletter
 .data          0x00000000c00225c5        0x0 hal/sound/sndchannel.32
 .data          0x00000000c00225c5        0x0 hal/sound/sndhw.32
 .data          0x00000000c00225c5        0x0 hw/bus/isa.32
 .data          0x00000000c00225c5        0x0 hw/bus/pci.32
 .data          0x00000000c00225c5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00225c5        0x0 hw/diskphys/ata.32
 .data          0x00000000c00225c5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00225c5        0x0 hw/fpu/avx.32
 .data          0x00000000c00225c5        0x0 hw/fpu/mmx.32
 .data          0x00000000c00225c5        0x0 hw/fpu/sse.32
 .data          0x00000000c00225c5        0x0 hw/fpu/x87.32
 .data          0x00000000c00225c5        0x0 hw/intctrl/apic.32
 .data          0x00000000c00225c5        0x0 hw/intctrl/pic.32
 .data          0x00000000c00225c5        0x0 hw/timer/apictimer.32
 .data          0x00000000c00225c5        0x0 hw/timer/pit.32
 .data          0x00000000c00225c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00225c5        0x0 crtn.32
 .data          0x00000000c00225c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c00225c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c00225c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c00225c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c00225c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c00225c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c00225c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00225c8        0x0
 .got           0x00000000c00225c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00225c8        0x0
 .got.plt       0x00000000c00225c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00225c8        0x0
 .igot.plt      0x00000000c00225c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00225c8        0x0
 .tm_clone_table
                0x00000000c00225c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00225c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00225c5      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c00225c5        0x3 
 .eh_frame      0x00000000c00225c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00225c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00225c8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022620       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022660       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00226cc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022750       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0022768        0x0
 .rel.got       0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0022768        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0022768     0x1b80
                0x00000000c0022768                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0022768        0x0 crti.32
 .bss           0x00000000c0022768       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0022788        0x4 acpica/utclib.32
 *fill*         0x00000000c002278c       0x14 
 .bss           0x00000000c00227a0      0x378 core/malloc.32
 .bss           0x00000000c0022b18        0x0 libk/string.32
 .bss           0x00000000c0022b18        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0022b18        0x8 
 .bss           0x00000000c0022b20       0x88 fs/fat/ff.32
 .bss           0x00000000c0022ba8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0022ba8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0022ba8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0022ba8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0022ba8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0022ba8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0022ba8        0x6 core/computer.32
                0x00000000c0022ba8                computer
                0x00000000c0022bac                preemptionOn
                0x00000000c0022bad                schedulingOn
 *fill*         0x00000000c0022bae       0x12 
 .bss           0x00000000c0022bc0      0x184 core/elf.32
                0x00000000c0022bc0                kernelSymbols
                0x00000000c0022c40                kernelStringTable
                0x00000000c0022cc0                kernelSymbolTable
                0x00000000c0022d40                nextDLLSymbolIndex
 .bss           0x00000000c0022d44        0x6 core/gdt.32
                0x00000000c0022d44                gdtDescr
 .bss           0x00000000c0022d4a        0x0 core/idle.32
 *fill*         0x00000000c0022d4a        0x2 
 .bss           0x00000000c0022d4c        0x6 core/idt.32
                0x00000000c0022d4c                idtDescr
 .bss           0x00000000c0022d52        0x1 core/kconsole.32
                0x00000000c0022d52                kernelInPanic
 .bss           0x00000000c0022d53        0x0 core/kheap.32
 *fill*         0x00000000c0022d53        0x1 
 .bss           0x00000000c0022d54        0x4 core/main.32
                0x00000000c0022d54                sysBootSettings
 *fill*         0x00000000c0022d58        0x8 
 .bss           0x00000000c0022d60       0x50 core/physmgr.32
                0x00000000c0022d60                Phys::currentPagePointer
                0x00000000c0022d64                Phys::highestMem
                0x00000000c0022d68                Phys::oldPercent
                0x00000000c0022d6c                Phys::usedPages
                0x00000000c0022d70                Phys::usablePages
                0x00000000c0022d80                Phys::dmaUsage
 .bss           0x00000000c0022db0        0x0 core/pipe.32
 .bss           0x00000000c0022db0       0x68 core/prcssthr.32
                0x00000000c0022db0                cleanerThread
                0x00000000c0022db4                weNeedTheCleanerToNotBlock
                0x00000000c0022db8                xxxx
                0x00000000c0022dbc                retValLockStuff
                0x00000000c0022dc0                retValSchedLock
                0x00000000c0022dc4                lockStuffLock
                0x00000000c0022dc8                schedulerLock
                0x00000000c0022dcc                taskSwitchesPostponedFlag
                0x00000000c0022dd0                postponeTaskSwitchesCounter
                0x00000000c0022dd4                irqDisableCounter
                0x00000000c0022dd8                terminatedTaskList
                0x00000000c0022de4                sleepingTaskList
                0x00000000c0022df0                taskList
                0x00000000c0022dfc                kernelProcess
 *fill*         0x00000000c0022e18        0x8 
 .bss           0x00000000c0022e20      0x200 core/syscalls.32
                0x00000000c0022e20                systemCallHandlers
 .bss           0x00000000c0023020       0x29 core/terminal.32
                0x00000000c0023020                textModeImplementation
                0x00000000c0023040                terminalCycle
                0x00000000c0023044                activeTerminal
                0x00000000c0023048                VgaText::graphicMode
 *fill*         0x00000000c0023049        0x1 
 .bss           0x00000000c002304a        0x2 core/tss.32
                0x00000000c002304a                doubleFaultSelector
 .bss           0x00000000c002304c       0x10 core/unixfile.32
                0x00000000c002304c                initialFilesAdded
                0x00000000c0023050                unixFileLinkedList
 .bss           0x00000000c002305c        0x4 core/virtmgr.32
                0x00000000c002305c                firstVAS
 .bss           0x00000000c0023060        0x0 coreobjs/c++.32
 .bss           0x00000000c0023060        0x0 debugger/debug.32
 .bss           0x00000000c0023060        0x4 fs/vfs.32
                0x00000000c0023060                installedFilesystems
 .bss           0x00000000c0023064        0x0 hal/bus.32
 .bss           0x00000000c0023064        0x4 hal/buzzer.32
                0x00000000c0023064                systemBuzzer
 .bss           0x00000000c0023068        0x8 hal/clock.32
                0x00000000c0023068                dstOn
                0x00000000c0023069                timezoneHalfHourOffset
                0x00000000c002306c                timezoneHourOffset
 .bss           0x00000000c0023070        0x0 hal/device.32
 .bss           0x00000000c0023070        0x0 hal/diskctrl.32
 .bss           0x00000000c0023070        0x0 hal/diskphys.32
 .bss           0x00000000c0023070        0x0 hal/fpu.32
 .bss           0x00000000c0023070       0x1c hal/intctrl.32
                0x00000000c0023070                pf5
                0x00000000c0023074                pf4
                0x00000000c0023078                pf3
                0x00000000c002307c                pf2
                0x00000000c0023080                pf1
                0x00000000c0023084                pf0
                0x00000000c0023088                gpFaultIntercept
 *fill*         0x00000000c002308c       0x14 
 .bss           0x00000000c00230a0      0x429 hal/keybrd.32
                0x00000000c00230a0                keyboardWaitingTaskList
                0x00000000c00230a4                keyboardSetupYet
                0x00000000c00230c0                keystates
 *fill*         0x00000000c00234c9       0x17 
 .bss           0x00000000c00234e0       0x88 hal/logidisk.32
                0x00000000c00234e0                diskAssignments
                0x00000000c0023500                disks
 .bss           0x00000000c0023568        0x4 hal/mouse.32
                0x00000000c0023568                guiMouseHandler
 .bss           0x00000000c002356c        0x0 hal/partition.32
 *fill*         0x00000000c002356c        0x4 
 .bss           0x00000000c0023570        0x8 hal/timer.32
                0x00000000c0023570                nanoSinceBoot
 .bss           0x00000000c0023578        0x0 hal/vcache.32
 .bss           0x00000000c0023578        0x4 hal/video.32
                0x00000000c0023578                screen
 *fill*         0x00000000c002357c        0x4 
 .bss           0x00000000c0023580      0x3c0 hw/acpi.32
                0x00000000c0023580                systemSleepFunction
                0x00000000c0023584                systemResetFunction
                0x00000000c0023588                systemShutdownFunction
                0x00000000c002358c                nextACPITable
                0x00000000c00235a0                acpiTables
                0x00000000c00237a0                usingXSDT
                0x00000000c00237a4                MADTpointer
                0x00000000c00237a8                RSDTpointer
                0x00000000c00237ac                RSDPpointer
                0x00000000c00237b0                ioapicDiscoveryNumber
                0x00000000c00237c0                ioapicFoundInMADT
                0x00000000c00237e0                ioapicAddresses
                0x00000000c0023860                ioapicGSIBase
                0x00000000c00238e0                processorDiscoveryNumber
                0x00000000c0023900                matchingAPICID
                0x00000000c0023920                processorID
 .bss           0x00000000c0023940       0x10 hw/cpu.32
                0x00000000c0023940                lastD
                0x00000000c0023944                lastC
                0x00000000c0023948                lastB
                0x00000000c002394c                lastA
 .bss           0x00000000c0023950        0x0 hw/ports.32
 .bss           0x00000000c0023950        0x0 registry/registry.32
 .bss           0x00000000c0023950        0x0 syscalls/sc_exit.32
 .bss           0x00000000c0023950        0x0 syscalls/sc_read.32
 .bss           0x00000000c0023950        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c0023950        0x0 syscalls/sc_write.32
 .bss           0x00000000c0023950        0x0 syscalls/sc_yield.32
 .bss           0x00000000c0023950        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023950       0x10 
 .bss           0x00000000c0023960       0xf0 fs/fat/vfslink.32
                0x00000000c0023960                FAT::fats
                0x00000000c0023980                FAT::vfsToFatRemaps
                0x00000000c0023a00                fatToVFSRemaps
 *fill*         0x00000000c0023a50       0x10 
 .bss           0x00000000c0023a60      0x820 fs/iso9660/vfslink.32
                0x00000000c0023a60                recentSector
                0x00000000c0023a80                recentBuffer
 .bss           0x00000000c0024280        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0024280        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0024280        0x0 hw/bus/isa.32
 .bss           0x00000000c0024280        0x0 hw/bus/pci.32
 .bss           0x00000000c0024280        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0024280        0x8 hw/diskphys/ata.32
                0x00000000c0024280                ataSectorsWritten
                0x00000000c0024284                ataSectorsRead
 .bss           0x00000000c0024288        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024288        0x0 hw/fpu/avx.32
 .bss           0x00000000c0024288        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0024288        0x0 hw/fpu/sse.32
 .bss           0x00000000c0024288        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0024288       0x18 
 .bss           0x00000000c00242a0       0x41 hw/intctrl/apic.32
                0x00000000c00242a0                noOfIOAPICs
                0x00000000c00242c0                ioapics
                0x00000000c00242e0                IOAPICsSetupYet
 .bss           0x00000000c00242e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00242e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00242e1        0x3 
 .bss           0x00000000c00242e4        0x4 hw/timer/pit.32
                0x00000000c00242e4                pitFreq
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00242e8        0x0 crtn.32
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c00242e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c00242e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00242e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00242e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00242e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0025e68                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
