Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f628
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x411 acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c0000980      0xfc2 core/malloc.32
                0x00000000c0000aeb                dlfree
                0x00000000c0000e49                dlmalloc
                0x00000000c0001386                dlrealloc
                0x00000000c000153b                dlmemalign
                0x00000000c000165e                dlcalloc
                0x00000000c00016f8                dlcfree
                0x00000000c00016fd                dlindependent_calloc
                0x00000000c0001722                dlindependent_comalloc
                0x00000000c0001739                dlvalloc
                0x00000000c0001764                dlpvalloc
                0x00000000c000179a                dlmalloc_trim
                0x00000000c00017a7                dlmalloc_usable_size
                0x00000000c00017d8                dlmallinfo
                0x00000000c00018a7                dlmalloc_stats
                0x00000000c00018b8                dlmallopt
 .text          0x00000000c0001942        0x0 libk/string.32
 .text          0x00000000c0001942       0x51 fs/fat/diskio.32
                0x00000000c0001942                disk_status
                0x00000000c0001945                disk_initialize
                0x00000000c0001948                disk_read
                0x00000000c000195e                disk_write
                0x00000000c0001974                disk_ioctl
 .text          0x00000000c0001993     0x67e6 fs/fat/ff.32
                0x00000000c0004c49                f_mount
                0x00000000c0004cab                f_open
                0x00000000c00050e7                f_read
                0x00000000c0005367                f_write
                0x00000000c0005621                f_sync
                0x00000000c00057fd                f_close
                0x00000000c000582c                f_lseek
                0x00000000c0005c91                f_opendir
                0x00000000c0005d93                f_closedir
                0x00000000c0005db5                f_readdir
                0x00000000c0005e50                f_stat
                0x00000000c0005edf                f_getfree
                0x00000000c00060c7                f_truncate
                0x00000000c00061bf                f_unlink
                0x00000000c0006340                f_mkdir
                0x00000000c000656c                f_rename
                0x00000000c000685f                f_chmod
                0x00000000c000693d                f_utime
                0x00000000c0006a1b                f_getlabel
                0x00000000c0006c0f                f_setlabel
                0x00000000c0006e7c                f_forward
                0x00000000c000705a                f_mkfs
 .text          0x00000000c0008179       0x2d fs/fat/ffsystem.32
                0x00000000c0008179                ff_memalloc
                0x00000000c000818f                ff_memfree
 .text          0x00000000c00081a6      0x280 fs/fat/ffunicode.32
                0x00000000c00081a6                ff_uni2oem
                0x00000000c000823c                ff_oem2uni
                0x00000000c00082ab                ff_wtoupper
 .text          0x00000000c0008426      0x70e hal/libresample/samplerate.32
                0x00000000c00084ae                src_delete
                0x00000000c00084ea                src_process
                0x00000000c0008612                src_callback_read
                0x00000000c0008773                src_set_ratio
                0x00000000c00087ca                src_get_channels
                0x00000000c00087ec                src_reset
                0x00000000c0008830                src_new
                0x00000000c00088be                src_callback_new
                0x00000000c0008920                src_get_name
                0x00000000c0008957                src_get_description
                0x00000000c000898e                src_get_version
                0x00000000c0008994                src_is_valid_ratio
                0x00000000c00089ae                src_error
                0x00000000c00089bc                src_strerror
                0x00000000c00089cf                src_simple
                0x00000000c0008a22                src_short_to_float_array
                0x00000000c0008a48                src_float_to_short_array
                0x00000000c0008aac                src_int_to_float_array
                0x00000000c0008ad2                src_float_to_int_array
 .text          0x00000000c0008b34      0x3f9 hal/libresample/src_linear.32
                0x00000000c0008e88                linear_get_name
                0x00000000c0008e97                linear_get_description
                0x00000000c0008ea6                linear_set_converter
 .text          0x00000000c0008f2d     0x1a31 hal/libresample/src_sinc.32
                0x00000000c000a875                sinc_get_name
                0x00000000c000a888                sinc_get_description
                0x00000000c000a89b                sinc_set_converter
 .text          0x00000000c000a95e      0x3cf hal/libresample/src_zoh.32
                0x00000000c000ac88                zoh_get_name
                0x00000000c000ac97                zoh_get_description
                0x00000000c000aca6                zoh_set_converter
 *fill*         0x00000000c000ad2d        0x1 
 .text          0x00000000c000ad2e      0x9d0 core/computer.32
                0x00000000c000ad2e                Computer::close(int, int, void*)
                0x00000000c000ad74                Computer::Computer()
                0x00000000c000ad74                Computer::Computer()
                0x00000000c000aeda                Computer::setBootMessage(char const*)
                0x00000000c000aedc                Computer::start()
                0x00000000c000afdf                firstTask()
                0x00000000c000afee                Computer::detectFeatures()
                0x00000000c000b1e8                Computer::displayFeatures()
                0x00000000c000b4c4                Computer::rdmsr(unsigned int)
                0x00000000c000b4f0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b528                Computer::nmiEnabled()
                0x00000000c000b534                Computer::readCMOS(unsigned char)
                0x00000000c000b550                Computer::enableNMI(bool)
                0x00000000c000b568                Computer::open(int, int, void*)
                0x00000000c000b63c                Computer::disableNMI()
                0x00000000c000b64c                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b66c                Computer::handleNMI()
                0x00000000c000b6d2                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b6fe      0x1b7 core/gdt.32
                0x00000000c000b6fe                GDTEntry::setBase(unsigned int)
                0x00000000c000b71a                GDTEntry::setLimit(unsigned int)
                0x00000000c000b738                GDT::GDT()
                0x00000000c000b738                GDT::GDT()
                0x00000000c000b74e                GDT::addEntry(GDTEntry)
                0x00000000c000b78a                GDT::getNumberOfEntries()
                0x00000000c000b792                GDT::flush()
                0x00000000c000b7b4                GDT::setup()
 .text          0x00000000c000b8b5       0x61 core/idle.32
                0x00000000c000b8b5                idleFunction(void*)
 .text          0x00000000c000b916      0x45f core/idt.32
                0x00000000c000b916                IDTEntry::IDTEntry(bool)
                0x00000000c000b916                IDTEntry::IDTEntry(bool)
                0x00000000c000b984                IDTEntry::setOffset(unsigned int)
                0x00000000c000b998                IDT::IDT()
                0x00000000c000b998                IDT::IDT()
                0x00000000c000b99a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b9a2                IDT::addEntry(IDTEntry, int)
                0x00000000c000b9bc                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b9f4                IDT::flush()
                0x00000000c000ba0e                IDT::setup()
 .text          0x00000000c000bd75      0x20c core/kheap.32
                0x00000000c000bd75                sbrk
                0x00000000c000be8c                mmap
                0x00000000c000bea2                munmap
                0x00000000c000beb8                liballoc_lock()
                0x00000000c000bec9                liballoc_unlock()
                0x00000000c000beda                liballoc_alloc(int)
                0x00000000c000bef5                liballoc_free(void*, int)
                0x00000000c000bf13                realloc
                0x00000000c000bf27                malloc
                0x00000000c000bf37                free
                0x00000000c000bf47                rfree
                0x00000000c000bf57                calloc
 .text          0x00000000c000bf81      0x3a9 core/main.32
                0x00000000c000bf81                hwTextMode_loadInData(VgaText*)
                0x00000000c000bfc6                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000c010                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000c064                hwTextMode_update(VgaText*)
                0x00000000c000c065                hwTextMode_updateCursor(VgaText*)
                0x00000000c000c0b3                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000c0ef                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000c17b                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000c1e1                setupTextMode()
                0x00000000c000c232                kernel_main
 .text          0x00000000c000c32a      0x504 core/physmgr.32
                0x00000000c000c32a                Phys::allocateDMA(unsigned long)
                0x00000000c000c3ce                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c416                Phys::setPageState(unsigned long, bool)
                0x00000000c000c44f                Phys::getPageState(unsigned long)
                0x00000000c000c470                Phys::freePage(unsigned long)
                0x00000000c000c4fd                Phys::allocatePage()
                0x00000000c000c5c9                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c601                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c82e      0x273 core/pipe.32
                0x00000000c000c82e                Pipe::isAtty()
                0x00000000c000c832                Pipe::~Pipe()
                0x00000000c000c832                Pipe::~Pipe()
                0x00000000c000c856                Pipe::~Pipe()
                0x00000000c000c87e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c972                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000ca3a                Pipe::Pipe(int)
                0x00000000c000ca3a                Pipe::Pipe(int)
 *fill*         0x00000000c000caa1        0x1 
 .text          0x00000000c000caa2      0xf67 core/terminal.32
                0x00000000c000caa2                VgaText::isAtty()
                0x00000000c000caa6                VgaText::~VgaText()
                0x00000000c000caa6                VgaText::~VgaText()
                0x00000000c000caca                VgaText::~VgaText()
                0x00000000c000caf4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000cb14                setTerminalScrollLock(bool)
                0x00000000c000cb15                addToTerminalCycle(VgaText*)
                0x00000000c000cb42                installVgaTextImplementation()
                0x00000000c000cb57                scrollTerminalScrollLock(int)
                0x00000000c000cb58                VgaText::load()
                0x00000000c000cbac                VgaText::updateCursor()
                0x00000000c000cbc6                VgaText::showCursor(bool)
                0x00000000c000cbd6                VgaText::disableBlink(bool)
                0x00000000c000cc10                VgaText::doANSI_SGR(int)
                0x00000000c000cc9c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000ccb2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000ccc8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000cce8                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000ccfa                VgaText::scrollScreen()
                0x00000000c000cd8e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000cda0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ce00                VgaText::getCursorX()
                0x00000000c000ce0c                VgaText::getCursorY()
                0x00000000c000ce18                VgaText::setCursor(int, int)
                0x00000000c000ce36                VgaText::setCursorX(int)
                0x00000000c000ce52                VgaText::setCursorY(int)
                0x00000000c000ce6e                VgaText::incrementCursor(bool)
                0x00000000c000ced6                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cf30                VgaText::updateDiskUsage()
                0x00000000c000d096                VgaText::updateTitle()
                0x00000000c000d0dc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000d0ec                VgaText::setTitleColour(VgaColour)
                0x00000000c000d0fc                VgaText::setTitle(char*)
                0x00000000c000d122                VgaText::decrementCursor(bool)
                0x00000000c000d14a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000d246                VgaText::isShowingCursor()
                0x00000000c000d252                VgaText::isBlinkDisabled()
                0x00000000c000d260                VgaText::setCursorHeight(int)
                0x00000000c000d27e                VgaText::getCursorHeight()
                0x00000000c000d289                setActiveTerminal(VgaText*)
                0x00000000c000d33b                doTerminalCycle()
                0x00000000c000d358                VgaText::doUpdate()
                0x00000000c000d36a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d52c                VgaText::clearScreen()
                0x00000000c000d590                VgaText::putchar(char)
                0x00000000c000d6aa                VgaText::puts(char const*)
                0x00000000c000d6d0                VgaText::putx(unsigned int)
                0x00000000c000d716                VgaText::VgaText(char const*)
                0x00000000c000d716                VgaText::VgaText(char const*)
                0x00000000c000d8a8                VgaText::receiveKey(unsigned char)
                0x00000000c000d990                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d9e4                newTerminal(char*)
 *fill*         0x00000000c000da09        0x1 
 .text          0x00000000c000da0a      0x18f core/tss.32
                0x00000000c000da0a                TSS::TSS()
                0x00000000c000da0a                TSS::TSS()
                0x00000000c000da18                TSS::setESP(unsigned long)
                0x00000000c000da2a                TSS::flush()
                0x00000000c000da4a                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000db99        0x1 
 .text          0x00000000c000db9a      0x545 core/unixfile.32
                0x00000000c000db9a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000dc30                ReservedFilename::isAtty()
                0x00000000c000dc66                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000dd00                UnixFile::getFileDescriptor()
                0x00000000c000dd08                UnixFile::UnixFile(int)
                0x00000000c000dd08                UnixFile::UnixFile(int)
                0x00000000c000de78                ReservedFilename::ReservedFilename(int)
                0x00000000c000de78                ReservedFilename::ReservedFilename(int)
                0x00000000c000deaa                UnixFile::~UnixFile()
                0x00000000c000deaa                UnixFile::~UnixFile()
                0x00000000c000df42                UnixFile::~UnixFile()
                0x00000000c000df6a                ReservedFilename::~ReservedFilename()
                0x00000000c000df6a                ReservedFilename::~ReservedFilename()
                0x00000000c000df8e                ReservedFilename::~ReservedFilename()
                0x00000000c000dfb5                getFromFileDescriptor(int)
 *fill*         0x00000000c000e0df        0x1 
 .text          0x00000000c000e0e0      0xecf core/virtmgr.32
                0x00000000c000e0e0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000e117                Virt::getPageState(unsigned long)
                0x00000000c000e13e                Virt::allocateKernelVirtualPages(int)
                0x00000000c000e24f                Virt::virtualMemorySetup()
                0x00000000c000e2cb                Virt::getAKernelVAS()
                0x00000000c000e2d1                Virt::setupPageSwapping(int)
                0x00000000c000e3ec                VAS::VAS()
                0x00000000c000e3ec                VAS::VAS()
                0x00000000c000e41c                VAS::VAS(VAS*)
                0x00000000c000e41c                VAS::VAS(VAS*)
                0x00000000c000e440                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e46c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e48b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e5ac                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e5d0                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e5ea                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e62e                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e668                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e69e                VAS::~VAS()
                0x00000000c000e69e                VAS::~VAS()
                0x00000000c000e80a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e90c                VAS::allocatePages(int, int)
                0x00000000c000eade                VAS::setCPUSpecific(unsigned long)
                0x00000000c000eafc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000ebc6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ecb8                VAS::VAS(bool)
                0x00000000c000ecb8                VAS::VAS(bool)
                0x00000000c000eee8                mapVASFirstTime
 .text          0x00000000c000efaf       0x93 coreobjs/c++.32
                0x00000000c000efaf                __cxa_atexit
                0x00000000c000efb2                __cxa_finalize
                0x00000000c000efb3                __stack_chk_fail
                0x00000000c000f013                __cxa_pure_virtual
                0x00000000c000f024                operator new(unsigned long)
                0x00000000c000f029                operator new[](unsigned long)
                0x00000000c000f02e                operator delete(void*)
                0x00000000c000f033                operator delete(void*, unsigned long)
                0x00000000c000f038                operator delete[](void*)
                0x00000000c000f03d                operator delete[](void*, unsigned long)
 .text          0x00000000c000f042      0x23d dbg/kconsole.32
                0x00000000c000f042                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000f0e6                Dbg::logc(char)
                0x00000000c000f0fd                Dbg::logs(char*)
                0x00000000c000f11a                Dbg::logWriteInt(unsigned int)
                0x00000000c000f138                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000f159                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000f27f        0x1 
 .text          0x00000000c000f280      0xb68 fs/vfs.32
                0x00000000c000f280                File::read(unsigned long long, void*, int*)
                0x00000000c000f2d8                File::write(unsigned long long, void*, int*)
                0x00000000c000f330                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f388                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f3b6                File::isAtty()
                0x00000000c000f3ba                Directory::isAtty()
                0x00000000c000f3be                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f3c4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f3ca                File::~File()
                0x00000000c000f3ca                File::~File()
                0x00000000c000f3ee                File::~File()
                0x00000000c000f418                Directory::~Directory()
                0x00000000c000f418                Directory::~Directory()
                0x00000000c000f43c                Directory::~Directory()
                0x00000000c000f466                Filesystem::Filesystem()
                0x00000000c000f466                Filesystem::Filesystem()
                0x00000000c000f48a                Filesystem::~Filesystem()
                0x00000000c000f48a                Filesystem::~Filesystem()
                0x00000000c000f498                Filesystem::~Filesystem()
                0x00000000c000f4bc                initVFS()
                0x00000000c000f4e6                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f690                File::File(char const*, Process*)
                0x00000000c000f690                File::File(char const*, Process*)
                0x00000000c000f6f4                File::open(FileOpenMode)
                0x00000000c000f752                File::close()
                0x00000000c000f7b2                File::seek(unsigned long long)
                0x00000000c000f808                File::tell(unsigned long long*)
                0x00000000c000f858                File::rewind()
                0x00000000c000f86c                File::unlink()
                0x00000000c000f8b8                File::rename(char const*)
                0x00000000c000f906                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f962                File::exists()
                0x00000000c000f9a0                File::stat(unsigned long long*, bool*)
                0x00000000c000fa01                getcwd(Process*, char*, int)
                0x00000000c000fa2b                setcwd(Process*, char*)
                0x00000000c000fb52                Directory::Directory(char const*, Process*)
                0x00000000c000fb52                Directory::Directory(char const*, Process*)
                0x00000000c000fbb6                Directory::open()
                0x00000000c000fc12                Directory::close()
                0x00000000c000fc72                Directory::unlink()
                0x00000000c000fcbe                Directory::rename(char const*)
                0x00000000c000fd0c                Directory::exists()
                0x00000000c000fd4a                Directory::read(dirent*)
                0x00000000c000fd96                Directory::create()
                0x00000000c000fde2                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fde8       0x84 hal/bus.32
                0x00000000c000fde8                Bus::Bus(char const*)
                0x00000000c000fde8                Bus::Bus(char const*)
                0x00000000c000fe1e                Bus::~Bus()
                0x00000000c000fe1e                Bus::~Bus()
                0x00000000c000fe42                Bus::~Bus()
 .text          0x00000000c000fe6c      0x14e hal/buzzer.32
                0x00000000c000fe6c                Buzzer::Buzzer(char const*)
                0x00000000c000fe6c                Buzzer::Buzzer(char const*)
                0x00000000c000feb0                Buzzer::~Buzzer()
                0x00000000c000feb0                Buzzer::~Buzzer()
                0x00000000c000fed4                Buzzer::~Buzzer()
                0x00000000c000fefe                Buzzer::stop()
                0x00000000c000ff11                beepThread(void*)
                0x00000000c000ff4c                Buzzer::beep(int, int, bool)
 .text          0x00000000c000ffba      0x435 hal/clock.32
                0x00000000c000ffba                loadClockSettings()
                0x00000000c000ffd4                Clock::Clock(char const*)
                0x00000000c000ffd4                Clock::Clock(char const*)
                0x00000000c001000a                Clock::~Clock()
                0x00000000c001000a                Clock::~Clock()
                0x00000000c001002e                Clock::~Clock()
                0x00000000c0010058                Clock::timeInSecondsLocal()
                0x00000000c00100a0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00100f9                datetimeToSeconds(datetime_t)
                0x00000000c0010226                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0010286                secondsToDatetime(unsigned long long)
                0x00000000c00103ca                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00103ef        0x1 
 .text          0x00000000c00103f0      0x500 hal/device.32
                0x00000000c00103f0                Device::hibernate()
                0x00000000c00103f2                Device::wake()
                0x00000000c00103f4                Device::detect()
                0x00000000c00103f6                Device::disableLegacy()
                0x00000000c00103f8                Device::powerSaving(PowerSavingLevel)
                0x00000000c00103fa                DriverlessDevice::close(int, int, void*)
                0x00000000c00103fe                DriverlessDevice::detect()
                0x00000000c0010400                DriverlessDevice::open(int, int, void*)
                0x00000000c0010414                Device::~Device()
                0x00000000c0010414                Device::~Device()
                0x00000000c0010422                Device::~Device()
                0x00000000c001044a                Device::findAndLoadDriver()
                0x00000000c001044c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001046e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00104c2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010520                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001056e                Device::addChild(Device*)
                0x00000000c00105b2                Device::removeAllChildren()
                0x00000000c00105f8                Device::hibernateAll()
                0x00000000c0010628                Device::wakeAll()
                0x00000000c0010658                Device::detectAll()
                0x00000000c0010688                Device::disableLegacyAll()
                0x00000000c00106b8                Device::loadDriversForAll()
                0x00000000c00106e4                Device::closeAll()
                0x00000000c001071a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0010750                Device::setName(char const*)
                0x00000000c001075e                Device::Device(char const*)
                0x00000000c001075e                Device::Device(char const*)
                0x00000000c0010850                Device::getName()
                0x00000000c001085a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001085a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010882                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00108c6                getDevicesOfType(DeviceType)
 .text          0x00000000c00108f0       0x84 hal/diskctrl.32
                0x00000000c00108f0                HardDiskController::HardDiskController(char const*)
                0x00000000c00108f0                HardDiskController::HardDiskController(char const*)
                0x00000000c0010926                HardDiskController::~HardDiskController()
                0x00000000c0010926                HardDiskController::~HardDiskController()
                0x00000000c001094a                HardDiskController::~HardDiskController()
 .text          0x00000000c0010974       0xde hal/diskphys.32
                0x00000000c0010974                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010974                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00109dc                PhysicalDisk::startCache()
                0x00000000c0010a04                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010a04                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010a28                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0010a52      0x142 hal/fpu.32
                0x00000000c0010a52                FPU::FPU(char const*)
                0x00000000c0010a52                FPU::FPU(char const*)
                0x00000000c0010a88                FPU::~FPU()
                0x00000000c0010a88                FPU::~FPU()
                0x00000000c0010aac                FPU::~FPU()
                0x00000000c0010ad6                setupFPU()
 .text          0x00000000c0010b94     0x125b hal/intctrl.32
                0x00000000c0010b94                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010bce                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010c20                doubleFault(regs*, void*)
                0x00000000c0010c3a                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010cd6                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010d86                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010e0e                nmiHandler(regs*, void*)
                0x00000000c0010e1c                int_handler
                0x00000000c0010eb6                InterruptController::InterruptController(char const*)
                0x00000000c0010eb6                InterruptController::InterruptController(char const*)
                0x00000000c0010f5c                InterruptController::~InterruptController()
                0x00000000c0010f5c                InterruptController::~InterruptController()
                0x00000000c0010f80                InterruptController::~InterruptController()
                0x00000000c0010faa                displayDebugInfo(regs*)
                0x00000000c00113f0                x87EmulHandler(regs*, void*)
                0x00000000c0011453                gpFault(regs*, void*)
                0x00000000c001148c                pgFault(regs*, void*)
                0x00000000c00114a4                otherISRHandler(regs*, void*)
                0x00000000c00114c3                opcodeFault(regs*, void*)
                0x00000000c00119be                displayProgramFault(char const*)
                0x00000000c00119e7                setupInterruptController()
                0x00000000c0011da0                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0011def        0x1 
 .text          0x00000000c0011df0      0x61c hal/keybrd.32
                0x00000000c0011df0                startGUI(void*)
                0x00000000c0011e62                sendKeyToTerminal(unsigned char)
                0x00000000c0011ed3                sendKeyboardToken(KeyboardToken)
                0x00000000c00122bc                clearInternalKeybuffer(VgaText*)
                0x00000000c00122f1                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0012382                Keyboard::Keyboard(char const*)
                0x00000000c0012382                Keyboard::Keyboard(char const*)
                0x00000000c00123be                Keyboard::~Keyboard()
                0x00000000c00123be                Keyboard::~Keyboard()
                0x00000000c00123e2                Keyboard::~Keyboard()
 .text          0x00000000c001240c      0x400 hal/logidisk.32
                0x00000000c001240c                LogicalDisk::close(int, int, void*)
                0x00000000c0012410                LogicalDisk::~LogicalDisk()
                0x00000000c0012410                LogicalDisk::~LogicalDisk()
                0x00000000c0012434                LogicalDisk::~LogicalDisk()
                0x00000000c001245e                LogicalDisk::open(int, int, void*)
                0x00000000c0012472                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00124aa                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00124f0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00124f0                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00125a6                LogicalDisk::assignDriveLetter()
                0x00000000c001265c                LogicalDisk::mount()
                0x00000000c00126ce                LogicalDisk::unmount()
                0x00000000c00126de                LogicalDisk::unassignDriveLetter()
                0x00000000c0012734                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00127a0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c001280c       0x84 hal/mouse.32
                0x00000000c001280c                Mouse::Mouse(char const*)
                0x00000000c001280c                Mouse::Mouse(char const*)
                0x00000000c0012842                Mouse::~Mouse()
                0x00000000c0012842                Mouse::~Mouse()
                0x00000000c0012866                Mouse::~Mouse()
 .text          0x00000000c0012890      0x339 hal/partition.32
                0x00000000c0012890                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012938                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012bc9        0x1 
 .text          0x00000000c0012bca      0x2e7 hal/timer.32
                0x00000000c0012bca                Timer::Timer(char const*)
                0x00000000c0012bca                Timer::Timer(char const*)
                0x00000000c0012c00                Timer::~Timer()
                0x00000000c0012c00                Timer::~Timer()
                0x00000000c0012c24                Timer::~Timer()
                0x00000000c0012c4e                Timer::read()
                0x00000000c0012c59                timerHandler(unsigned long long)
                0x00000000c0012d90                setupTimer(int)
 *fill*         0x00000000c0012eb1        0x1 
 .text          0x00000000c0012eb2      0x2d1 hal/vcache.32
                0x00000000c0012eb2                VCache::VCache(PhysicalDisk*)
                0x00000000c0012eb2                VCache::VCache(PhysicalDisk*)
                0x00000000c0012fa2                VCache::writeWriteBuffer()
                0x00000000c0012fde                VCache::~VCache()
                0x00000000c0012fde                VCache::~VCache()
                0x00000000c001301e                VCache::~VCache()
                0x00000000c0013046                VCache::write(unsigned long long, int, void*)
                0x00000000c001312a                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0013183        0x1 
 .text          0x00000000c0013184      0x26d hal/video.32
                0x00000000c0013184                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00131ce                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001324c                Video::clearScreen(unsigned int)
                0x00000000c0013280                Video::putpixel(int, int, unsigned int)
                0x00000000c001328e                Video::Video(char const*)
                0x00000000c001328e                Video::Video(char const*)
                0x00000000c00132c4                Video::~Video()
                0x00000000c00132c4                Video::~Video()
                0x00000000c00132e8                Video::~Video()
                0x00000000c0013312                Video::isMonochrome()
                0x00000000c001331e                Video::getWidth()
                0x00000000c001332a                Video::getHeight()
                0x00000000c0013336                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c00133f1        0x1 
 .text          0x00000000c00133f2      0xd68 hw/acpi.32
                0x00000000c00133f2                ACPI::close(int, int, void*)
                0x00000000c00134ab                findRSDP()
                0x00000000c0013535                loadACPITables(unsigned char*)
                0x00000000c001375c                findRSDT(unsigned char*)
                0x00000000c001387a                findDataTable(unsigned char*, char*)
                0x00000000c0013916                scanMADT()
                0x00000000c0013cd2                ACPI::ACPI()
                0x00000000c0013cd2                ACPI::ACPI()
                0x00000000c0013d32                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013e14                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013f24                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013f2a                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0013f7c                ACPI::open(int, int, void*)
                0x00000000c0014142                ACPI::sleep()
 .text          0x00000000c001415a     0x17ae hw/cpu.32
                0x00000000c001415a                CPU::close(int, int, void*)
                0x00000000c001415d                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0014302                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c00145bb                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00145d7                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c00145ef                AMD_K6_writeback(int, int, int)
                0x00000000c0014662                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00146e5                cpuidCheckEDX(unsigned int)
                0x00000000c0014712                cpuidCheckECX(unsigned int)
                0x00000000c001473f                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001476c                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0014799                getCPUNumber()
                0x00000000c001479c                thisCPU()
                0x00000000c00147b0                CPU::CPU()
                0x00000000c00147b0                CPU::CPU()
                0x00000000c001483e                CPU::displayFeatures()
                0x00000000c0014aba                CPU::detectFeatures()
                0x00000000c0015490                CPU::setupSMEP()
                0x00000000c00154aa                CPU::setupUMIP()
                0x00000000c00154c2                CPU::setupTSC()
                0x00000000c00154da                CPU::setupLargePages()
                0x00000000c00154f2                CPU::setupPAT()
                0x00000000c001552e                CPU::setupMTRR()
                0x00000000c0015530                CPU::setupGlobalPages()
                0x00000000c0015546                CPU::allowUsermodeDataAccess()
                0x00000000c0015558                CPU::prohibitUsermodeDataAccess()
                0x00000000c001556a                CPU::setupSMAP()
                0x00000000c0015590                CPU::setupFeatures()
                0x00000000c0015632                CPU::open(int, int, void*)
                0x00000000c0015708                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0015908        0x0 hw/ports.32
 .text          0x00000000c0015908      0x354 krnl/panic.32
                0x00000000c0015908                Krnl::panic(char const*)
 .text          0x00000000c0015c5c      0x511 reg/registry.32
                0x00000000c0015c5c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015dc3                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015f22                Reg::getLine(char*, char*, char*)
                0x00000000c0015f59                Reg::readInt(char*, char*, int*)
                0x00000000c0016043                Reg::readString(char*, char*, char*, int)
                0x00000000c00160c4                Reg::readBool(char*, char*, bool*)
                0x00000000c00160e9                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0016115                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0016141                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001616d       0x18 sys/sc_exit.32
                0x00000000c001616d                Sys::exit(regs*)
 .text          0x00000000c0016185       0x95 sys/sc_loaddll.32
                0x00000000c0016185                Sys::loadDLL(regs*)
 .text          0x00000000c001621a       0x68 sys/sc_read.32
                0x00000000c001621a                Sys::read(regs*)
 .text          0x00000000c0016282       0x55 sys/sc_sbrk.32
                0x00000000c0016282                Sys::sbrk(regs*)
 .text          0x00000000c00162d7       0x83 sys/sc_write.32
                0x00000000c00162d7                Sys::write(regs*)
 .text          0x00000000c001635a       0x1a sys/sc_yield.32
                0x00000000c001635a                Sys::yield(regs*)
 .text          0x00000000c0016374      0xfe6 sys/syscalls.32
                0x00000000c0016374                sysCallGetPID(regs*)
                0x00000000c0016384                sysCallSeekDir(regs*)
                0x00000000c0016389                sysCallTellDir(regs*)
                0x00000000c001638e                sysCallVerify(regs*)
                0x00000000c0016398                sysCallFork(regs*)
                0x00000000c001639f                sysCallExecve(regs*)
                0x00000000c00163a6                sysCallGetArgc(regs*)
                0x00000000c00163ba                sysFormatDisk(regs*)
                0x00000000c001641d                sysSetDiskVolumeLabel(regs*)
                0x00000000c0016465                sysGetDiskVolumeLabel(regs*)
                0x00000000c00164b8                sysShutdown(regs*)
                0x00000000c0016533                sysCallGetCwd(regs*)
                0x00000000c0016559                sysCallSetCwd(regs*)
                0x00000000c001657b                sysCallRealpath(regs*)
                0x00000000c00165c8                sysCallReadDir(regs*)
                0x00000000c001665b                sysCallIsATTY(regs*)
                0x00000000c00166b3                sysCallSeek(regs*)
                0x00000000c0016719                sysCallTell(regs*)
                0x00000000c0016794                sysCallSizeFromFilename(regs*)
                0x00000000c0016842                sysCallSize(regs*)
                0x00000000c00168c3                sysCallClose(regs*)
                0x00000000c0016946                sysCallOpenDir(regs*)
                0x00000000c00169b1                sysCallMakeDir(regs*)
                0x00000000c0016a0c                sysCallCloseDir(regs*)
                0x00000000c0016a6d                sysCallWait(regs*)
                0x00000000c0016a8e                sysCallRmdir(regs*)
                0x00000000c0016ae1                sysCallUnlink(regs*)
                0x00000000c0016b34                sysCallGetArgv(regs*)
                0x00000000c0016b80                sysCallTTYName(regs*)
                0x00000000c0016c01                sysCallGetEnv(regs*)
                0x00000000c0016c58                sysCallUSleep(regs*)
                0x00000000c0016c9a                sysCallSpawn(regs*)
                0x00000000c0016cf9                sysAppSettings(regs*)
                0x00000000c0016e1e                sysSetFatAttrib(regs*)
                0x00000000c0016e81                sysPanic(regs*)
                0x00000000c0016ea8                sysPipe(regs*)
                0x00000000c0016eed                sysGetUnixTime(regs*)
                0x00000000c0016f01                string_ends_with(char const*, char const*)
                0x00000000c0016f4b                sysCallOpen(regs*)
                0x00000000c001715f                setupSystemCalls()
                0x00000000c0017318                systemCall(regs*, void*)
 .text          0x00000000c001735a     0x11c1 thr/elf.32
                0x00000000c001735a                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00175d1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00177e7                Thr::runtimeReferenceHelper()
                0x00000000c00177fa                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0017849                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017b0a                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00182a8                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00182da                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0018311                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001832b                Thr::loadDLL(char const*, bool)
                0x00000000c00184f1                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001851b        0x1 
 .text          0x00000000c001851c     0x1002 thr/prcssthr.32
                0x00000000c001851c                changeTSS
                0x00000000c001854a                Process::addArgs(char**)
                0x00000000c00185ac                Process::Process(char const*, Process*, char**)
                0x00000000c00185ac                Process::Process(char const*, Process*, char**)
                0x00000000c0018768                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018768                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00188ef                disableIRQs()
                0x00000000c00188fc                getIRQNestingLevel()
                0x00000000c0018902                enableIRQs()
                0x00000000c0018911                lockScheduler()
                0x00000000c0018913                unlockScheduler()
                0x00000000c0018915                userModeEntryPoint(void*)
                0x00000000c0018938                lockStuff()
                0x00000000c0018949                taskStartupFunction
                0x00000000c0018952                updateTimeUsed()
                0x00000000c00189b0                switchToThread(ThreadControlBlock*)
                0x00000000c0018a06                Semaphore::Semaphore(int)
                0x00000000c0018a06                Semaphore::Semaphore(int)
                0x00000000c0018a34                Mutex::Mutex()
                0x00000000c0018a34                Mutex::Mutex()
                0x00000000c0018a46                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018b28                Process::createUserThread()
                0x00000000c0018b45                setupMultitasking(void (*)())
                0x00000000c0018c5a                schedule()
                0x00000000c0018cdf                unlockStuff()
                0x00000000c0018d14                Semaphore::tryAcquire()
                0x00000000c0018d42                Semaphore::assertLocked(char const*)
                0x00000000c0018d72                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0018db3                blockTask(TaskState)
                0x00000000c0018dd4                waitTask(int, int*, int)
                0x00000000c0018e16                nanoSleepUntil(unsigned long long)
                0x00000000c0018e6f                nanoSleep(unsigned long long)
                0x00000000c0018e84                sleep(unsigned long long)
                0x00000000c0018ea2                Semaphore::acquire()
                0x00000000c0018f07                taskReturned
                0x00000000c0018f35                unblockTask(ThreadControlBlock*)
                0x00000000c0018fe2                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001928b                cleanerTaskFunction(void*)
                0x00000000c001933e                terminateTask(int)
                0x00000000c0019420                Thr::terminateFromIRQ(int)
                0x00000000c001942e                Semaphore::release()
 .text          0x00000000c001951e      0x8bf vm86/vm8086.32
                0x00000000c001951e                Vm::vm8086EntryPoint(void*)
                0x00000000c0019549                Vm::inbv(unsigned short)
                0x00000000c001954f                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019559                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0019569                Vm::getSegment(unsigned int)
                0x00000000c0019571                Vm::getOffset(unsigned int)
                0x00000000c0019576                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00196a5                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001972f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019740                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019752                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019763                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019778                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001978e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00197a3                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019ddd        0x1 
 .text          0x00000000c0019dde     0x112f fs/fat/vfslink.32
                0x00000000c0019dde                FAT::getName()
                0x00000000c0019de4                FAT::tell(void*, unsigned long long*)
                0x00000000c0019e18                FAT::stat(void*, unsigned long long*)
                0x00000000c0019e4c                FAT::~FAT()
                0x00000000c0019e4c                FAT::~FAT()
                0x00000000c0019e70                FAT::~FAT()
                0x00000000c0019e98                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019f36                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019ff0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a1d4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a3da                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4e2                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a53c                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a596                FAT::close(void*)
                0x00000000c001a5e2                FAT::closeDir(void*)
                0x00000000c001a62e                FAT::seek(void*, unsigned long long)
                0x00000000c001a682                fatWrapperReadDisk
                0x00000000c001a6cd                fatWrapperWriteDisk
                0x00000000c001a718                fatWrapperIoctl
                0x00000000c001a828                FAT::FAT()
                0x00000000c001a828                FAT::FAT()
                0x00000000c001a87a                FAT::fixFilepath(char*)
                0x00000000c001a8b2                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a9de                FAT::openDir(char const*, void**)
                0x00000000c001aa84                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ab70                FAT::unlink(char const*)
                0x00000000c001abea                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ad64                FAT::rename(char const*, char const*)
                0x00000000c001ae28                FAT::mkdir(char const*)
                0x00000000c001aea2                FAT::exists(char const*)
 *fill*         0x00000000c001af0d        0x1 
 .text          0x00000000c001af0e      0xbdd fs/iso9660/vfslink.32
                0x00000000c001af0e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001af14                ISO9660::seek(void*, unsigned long long)
                0x00000000c001af44                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001af68                ISO9660::getName()
                0x00000000c001af6e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001af92                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001af98                ISO9660::unlink(char const*)
                0x00000000c001af9e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001afa4                ISO9660::rename(char const*, char const*)
                0x00000000c001afaa                ISO9660::mkdir(char const*)
                0x00000000c001afb0                ISO9660::close(void*)
                0x00000000c001afd2                ISO9660::closeDir(void*)
                0x00000000c001aff4                ISO9660::~ISO9660()
                0x00000000c001aff4                ISO9660::~ISO9660()
                0x00000000c001b018                ISO9660::~ISO9660()
                0x00000000c001b03f                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b081                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b0e8                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b138                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b37c                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b607                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001b65c                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b82f                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b8be                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b958                ISO9660::exists(char const*)
                0x00000000c001b97c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ba10                ISO9660::openDir(char const*, void**)
                0x00000000c001bac8                ISO9660::ISO9660()
                0x00000000c001bac8                ISO9660::ISO9660()
 *fill*         0x00000000c001baeb        0x1 
 .text          0x00000000c001baec      0x248 hal/sound/sndchannel.32
                0x00000000c001baec                SoundChannel::~SoundChannel()
                0x00000000c001baec                SoundChannel::~SoundChannel()
                0x00000000c001bb08                SoundChannel::setSpeed(float)
                0x00000000c001bb14                SoundChannel::getSpeed()
                0x00000000c001bb1c                SoundChannel::setVolume(int)
                0x00000000c001bb38                SoundChannel::getVolume()
                0x00000000c001bb40                SoundChannel::pause()
                0x00000000c001bb4a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bb4a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bc44                SoundChannel::play()
                0x00000000c001bc4e                SoundChannel::paused()
                0x00000000c001bc56                SoundChannel::getSampleRate()
                0x00000000c001bc5e                SoundChannel::getBits()
                0x00000000c001bc66                SoundChannel::getBufferUsed()
                0x00000000c001bc6e                SoundChannel::getBufferSize()
                0x00000000c001bc76                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001bce8                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001bd34      0x30f hal/sound/sndhw.32
                0x00000000c001bd34                SoundDevice::SoundDevice(char const*)
                0x00000000c001bd34                SoundDevice::SoundDevice(char const*)
                0x00000000c001bda0                SoundDevice::~SoundDevice()
                0x00000000c001bda0                SoundDevice::~SoundDevice()
                0x00000000c001be1a                SoundDevice::~SoundDevice()
                0x00000000c001be44                SoundDevice::getFreeChannelNum()
                0x00000000c001be5e                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001bece                SoundDevice::removeChannel(int)
                0x00000000c001bf00                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001bf6c                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001c043        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c043        0x1 
 .text          0x00000000c001c044      0x6e9 hw/bus/pci.32
                0x00000000c001c044                PCI::open(int, int, void*)
                0x00000000c001c058                PCI::close(int, int, void*)
                0x00000000c001c05c                PCI::PCI()
                0x00000000c001c05c                PCI::PCI()
                0x00000000c001c0de                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c126                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c148                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c16c                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1b0                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1d4                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1f6                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c218                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c23c                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c29c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c308                PCI::checkBus(unsigned char)
                0x00000000c001c32e                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c49e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c66e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c6da                PCI::detect()
 *fill*         0x00000000c001c72d        0x1 
 .text          0x00000000c001c72e      0xc84 hw/diskctrl/ide.32
                0x00000000c001c72e                IDE::close(int, int, void*)
                0x00000000c001c732                IDE::IDE()
                0x00000000c001c732                IDE::IDE()
                0x00000000c001c766                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c778                selectDrive(unsigned char, unsigned char)
                0x00000000c001c77a                IDE::getBase(unsigned char)
                0x00000000c001c78c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c84c                IDE::read(unsigned char, unsigned char)
                0x00000000c001c8fa                IDE::waitInterrupt(unsigned char)
                0x00000000c001c966                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c982                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c99e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c9e4                IDE::open(int, int, void*)
                0x00000000c001cdf6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cec2                IDE::detect()
                0x00000000c001d1ac                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d342                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d3b2      0x64f hw/diskphys/ata.32
                0x00000000c001d3b2                ATA::close(int, int, void*)
                0x00000000c001d3d6                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d3d8                ATA::ATA()
                0x00000000c001d3d8                ATA::ATA()
                0x00000000c001d406                ATA::flush(bool)
                0x00000000c001d450                ATA::readyForCommand()
                0x00000000c001d4a0                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d842                ATA::read(unsigned long long, int, void*)
                0x00000000c001d8aa                ATA::write(unsigned long long, int, void*)
                0x00000000c001d912                ATA::detectCHS()
                0x00000000c001d93c                ATA::open(int, int, void*)
 *fill*         0x00000000c001da01        0x1 
 .text          0x00000000c001da02      0x5ae hw/diskphys/atapi.32
                0x00000000c001da02                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001da08                ATAPI::close(int, int, void*)
                0x00000000c001da2c                ATAPI::ATAPI()
                0x00000000c001da2c                ATAPI::ATAPI()
                0x00000000c001da5a                ATAPI::readyForCommand()
                0x00000000c001daaa                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001dd6a                ATAPI::diskRemoved()
                0x00000000c001dd86                ATAPI::eject()
                0x00000000c001ddcc                ATAPI::diskInserted()
                0x00000000c001ddfa                ATAPI::detectMedia()
                0x00000000c001deb6                ATAPI::open(int, int, void*)
                0x00000000c001df36                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001dfb0       0x8e hw/fpu/avx.32
                0x00000000c001dfb0                AVX::open(int, int, void*)
                0x00000000c001dfc2                AVX::close(int, int, void*)
                0x00000000c001dfd4                AVX::available()
                0x00000000c001dfe6                AVX::save(void*)
                0x00000000c001dffe                AVX::load(void*)
                0x00000000c001e016                AVX::AVX()
                0x00000000c001e016                AVX::AVX()
 .text          0x00000000c001e03e       0x90 hw/fpu/mmx.32
                0x00000000c001e03e                MMX::available()
                0x00000000c001e052                MMX::open(int, int, void*)
                0x00000000c001e064                MMX::close(int, int, void*)
                0x00000000c001e076                MMX::save(void*)
                0x00000000c001e08e                MMX::load(void*)
                0x00000000c001e0a6                MMX::MMX()
                0x00000000c001e0a6                MMX::MMX()
 .text          0x00000000c001e0ce       0x96 hw/fpu/sse.32
                0x00000000c001e0ce                SSE::open(int, int, void*)
                0x00000000c001e0e0                SSE::close(int, int, void*)
                0x00000000c001e0f2                SSE::available()
                0x00000000c001e10c                SSE::save(void*)
                0x00000000c001e124                SSE::load(void*)
                0x00000000c001e13c                SSE::SSE()
                0x00000000c001e13c                SSE::SSE()
 .text          0x00000000c001e164       0x8e hw/fpu/x87.32
                0x00000000c001e164                x87::open(int, int, void*)
                0x00000000c001e176                x87::close(int, int, void*)
                0x00000000c001e188                x87::available()
                0x00000000c001e19a                x87::save(void*)
                0x00000000c001e1b2                x87::load(void*)
                0x00000000c001e1ca                x87::x87()
                0x00000000c001e1ca                x87::x87()
 .text          0x00000000c001e1f2      0x63b hw/intctrl/apic.32
                0x00000000c001e1f2                APIC::disable()
                0x00000000c001e1f4                APIC::close(int, int, void*)
                0x00000000c001e216                IOAPIC::close(int, int, void*)
                0x00000000c001e21c                APIC::io_wait()
                0x00000000c001e222                APIC::getBase()
                0x00000000c001e264                APIC::eoi(unsigned char)
                0x00000000c001e292                APIC::open(int, int, void*)
                0x00000000c001e35c                IOAPIC::IOAPIC()
                0x00000000c001e35c                IOAPIC::IOAPIC()
                0x00000000c001e384                APIC::APIC()
                0x00000000c001e384                APIC::APIC()
                0x00000000c001e460                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e492                IOAPIC::read(int)
                0x00000000c001e4ba                IOAPIC::open(int, int, void*)
                0x00000000c001e5c2                IOAPIC::write(int, int)
                0x00000000c001e5ee                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001e6b4                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001e82d        0x1 
 .text          0x00000000c001e82e      0x3f3 hw/intctrl/pic.32
                0x00000000c001e82e                PIC::disable()
                0x00000000c001e85c                PIC::close(int, int, void*)
                0x00000000c001e87e                PIC::PIC()
                0x00000000c001e87e                PIC::PIC()
                0x00000000c001e95a                PIC::ioWait()
                0x00000000c001e960                PIC::getIRQReg(int)
                0x00000000c001e9d2                PIC::eoi(unsigned char)
                0x00000000c001ea6a                PIC::remap()
                0x00000000c001ebe2                PIC::open(int, int, void*)
 *fill*         0x00000000c001ec21        0x1 
 .text          0x00000000c001ec22      0x264 hw/timer/apictimer.32
                0x00000000c001ec22                APICTimer::close(int, int, void*)
                0x00000000c001ec28                apicTimerHandler(regs*, void*)
                0x00000000c001ec5a                APICTimer::write(int)
                0x00000000c001ed58                APICTimer::open(int, int, void*)
                0x00000000c001ee5e                APICTimer::APICTimer()
                0x00000000c001ee5e                APICTimer::APICTimer()
 .text          0x00000000c001ee86      0x1b6 hw/timer/pit.32
                0x00000000c001ee86                PIT::write(int)
                0x00000000c001ef0c                pitHandler(regs*, void*)
                0x00000000c001ef3c                PIT::open(int, int, void*)
                0x00000000c001ef8a                PIT::close(int, int, void*)
                0x00000000c001efba                PIT::PIT()
                0x00000000c001efba                PIT::PIT()
 *fill*         0x00000000c001f03c        0x4 
 .text          0x00000000c001f040        0xa hw/fpu/x86/avx.32
                0x00000000c001f040                avxDetect
                0x00000000c001f046                avxSave
                0x00000000c001f047                avxLoad
                0x00000000c001f048                avxInit
                0x00000000c001f049                avxClose
 *fill*         0x00000000c001f04a        0x6 
 .text          0x00000000c001f050       0x38 hw/fpu/x86/sse.32
                0x00000000c001f050                sseDetect
                0x00000000c001f06b                sseSave
                0x00000000c001f071                sseLoad
                0x00000000c001f077                sseInit
                0x00000000c001f087                sseClose
 *fill*         0x00000000c001f088        0x8 
 .text          0x00000000c001f090       0x47 hw/fpu/x86/x87.32
                0x00000000c001f096                x87Detect
                0x00000000c001f0b1                x87Save
                0x00000000c001f0b7                x87Load
                0x00000000c001f0bc                x87Init
                0x00000000c001f0d6                x87Close
 *fill*         0x00000000c001f0d7        0x1 
 .text          0x00000000c001f0d8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f0fd        0x0 crtn.32
 *fill*         0x00000000c001f0fd        0x3 
 .text          0x00000000c001f100      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001f100                __divdi3
 *fill*         0x00000000c001f24b        0x1 
 .text          0x00000000c001f24c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001f24c                __moddi3
 *fill*         0x00000000c001f3ca        0x2 
 .text          0x00000000c001f3cc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001f3cc                __udivdi3
 *fill*         0x00000000c001f4cb        0x1 
 .text          0x00000000c001f4cc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001f4cc                __umoddi3
 *fill*         0x00000000c001f5e6        0xa 
 .text          0x00000000c001f5f0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001f5f0                fabs
 *fill*         0x00000000c001f60e        0x2 
 .text          0x00000000c001f610        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001f610                lrint
 .text          0x00000000c001f61c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001f61c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f628        0x0
 .iplt          0x00000000c001f628        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f628        0xf
 .init          0x00000000c001f628        0x3 crti.32
                0x00000000c001f628                _init
 .init          0x00000000c001f62b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f630        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f635        0x2 crtn.32

.fini           0x00000000c001f637        0xa
 .fini          0x00000000c001f637        0x3 crti.32
                0x00000000c001f637                _fini
 .fini          0x00000000c001f63a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f63f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f642       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f642       0x23 core/computer.32
                0x00000000c001f642                Computer::~Computer()
                0x00000000c001f642                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f666       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f666       0x2a core/computer.32
                0x00000000c001f666                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f690       0x15
 .text._Z10idleCommonv
                0x00000000c001f690       0x15 core/idle.32
                0x00000000c001f690                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001f6a5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001f6a5       0x12 core/kheap.32
                0x00000000c001f6a5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001f6b7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001f6b7        0x9 core/kheap.32
                0x00000000c001f6b7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f6c0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f6c0        0x2 core/unixfile.32
                0x00000000c001f6c0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f6c0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f6c2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f6c2       0x58 core/unixfile.32
                0x00000000c001f6c2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f6c2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f71a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f71a       0xd3 core/unixfile.32
                0x00000000c001f71a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f7ee        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f7ee        0x7 core/unixfile.32
                0x00000000c001f7ee                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f7f6       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f7f6       0xa1 core/unixfile.32
                0x00000000c001f7f6                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f898        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f898        0x8 core/unixfile.32
                0x00000000c001f898                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f8a0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f8a0       0x1a hal/device.32
                0x00000000c001f8a0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f8a0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f8ba       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f8ba       0x2a hal/device.32
                0x00000000c001f8ba                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f8e4       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f8e4       0xdc hal/device.32
                0x00000000c001f8e4                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f9c0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f9c0       0x58 hal/device.32
                0x00000000c001f9c0                LinkedList<Device>::LinkedList()
                0x00000000c001f9c0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001fa18       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001fa18       0x12 hal/fpu.32
                0x00000000c001fa18                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001fa2a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001fa2a        0x9 hal/fpu.32
                0x00000000c001fa2a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001fa33       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001fa33       0x12 hal/intctrl.32
                0x00000000c001fa33                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001fa45       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001fa45       0x12 hal/intctrl.32
                0x00000000c001fa45                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001fa57       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001fa57       0x12 hal/intctrl.32
                0x00000000c001fa57                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001fa69       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001fa69       0x12 hal/intctrl.32
                0x00000000c001fa69                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001fa7b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001fa7b       0x12 hal/intctrl.32
                0x00000000c001fa7b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001fa8d       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001fa8d       0x12 hal/intctrl.32
                0x00000000c001fa8d                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001faa0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001faa0        0x7 hal/timer.32
                0x00000000c001faa0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faa8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faa8       0x1c hal/timer.32
                0x00000000c001faa8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fac4       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fac4       0xae hal/timer.32
                0x00000000c001fac4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fb72       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fb72       0xd3 hal/timer.32
                0x00000000c001fb72                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fc46       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fc46       0x23 hw/acpi.32
                0x00000000c001fc46                ACPI::~ACPI()
                0x00000000c001fc46                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fc6a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fc6a       0x2a hw/acpi.32
                0x00000000c001fc6a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001fc94       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fc94       0x23 hw/cpu.32
                0x00000000c001fc94                CPU::~CPU()
                0x00000000c001fc94                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fcb8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fcb8       0x2a hw/cpu.32
                0x00000000c001fcb8                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001fce2       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001fce2       0x12 hw/cpu.32
                0x00000000c001fce2                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001fcf4        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001fcf4        0x9 hw/cpu.32
                0x00000000c001fcf4                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001fcfd        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001fcfd        0x9 hw/cpu.32
                0x00000000c001fcfd                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001fd06       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001fd06       0x12 krnl/panic.32
                0x00000000c001fd06                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fd18        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fd18        0x2 thr/prcssthr.32
                0x00000000c001fd18                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fd18                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fd1a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fd1a       0x3e thr/prcssthr.32
                0x00000000c001fd1a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fd1a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd58       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd58       0x58 thr/prcssthr.32
                0x00000000c001fd58                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fd58                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fdb0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fdb0        0x8 thr/prcssthr.32
                0x00000000c001fdb0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001fdb8       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fdb8       0x23 hw/bus/pci.32
                0x00000000c001fdb8                PCI::~PCI()
                0x00000000c001fdb8                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fddc       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fddc       0x2a hw/bus/pci.32
                0x00000000c001fddc                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fe06       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fe06       0x23 hw/diskctrl/ide.32
                0x00000000c001fe06                IDE::~IDE()
                0x00000000c001fe06                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fe2a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fe2a       0x2a hw/diskctrl/ide.32
                0x00000000c001fe2a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001fe54       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fe54       0x23 hw/diskphys/ata.32
                0x00000000c001fe54                ATA::~ATA()
                0x00000000c001fe54                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fe78       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fe78       0x2a hw/diskphys/ata.32
                0x00000000c001fe78                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fea2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fea2       0x23 hw/diskphys/atapi.32
                0x00000000c001fea2                ATAPI::~ATAPI()
                0x00000000c001fea2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fec6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fec6       0x2a hw/diskphys/atapi.32
                0x00000000c001fec6                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001fef0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001fef0       0x23 hw/fpu/avx.32
                0x00000000c001fef0                AVX::~AVX()
                0x00000000c001fef0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ff14       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ff14       0x2a hw/fpu/avx.32
                0x00000000c001ff14                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ff3e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ff3e       0x23 hw/fpu/mmx.32
                0x00000000c001ff3e                MMX::~MMX()
                0x00000000c001ff3e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ff62       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ff62       0x2a hw/fpu/mmx.32
                0x00000000c001ff62                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ff8c       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ff8c       0x23 hw/fpu/sse.32
                0x00000000c001ff8c                SSE::~SSE()
                0x00000000c001ff8c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001ffb0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001ffb0       0x2a hw/fpu/sse.32
                0x00000000c001ffb0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001ffda       0x23
 .text._ZN3x87D2Ev
                0x00000000c001ffda       0x23 hw/fpu/x87.32
                0x00000000c001ffda                x87::~x87()
                0x00000000c001ffda                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001fffe       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001fffe       0x2a hw/fpu/x87.32
                0x00000000c001fffe                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0020028       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020028       0x23 hw/intctrl/apic.32
                0x00000000c0020028                IOAPIC::~IOAPIC()
                0x00000000c0020028                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002004c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002004c       0x2a hw/intctrl/apic.32
                0x00000000c002004c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0020076       0x23
 .text._ZN4APICD2Ev
                0x00000000c0020076       0x23 hw/intctrl/apic.32
                0x00000000c0020076                APIC::~APIC()
                0x00000000c0020076                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c002009a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c002009a       0x2a hw/intctrl/apic.32
                0x00000000c002009a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c00200c4       0x23
 .text._ZN3PICD2Ev
                0x00000000c00200c4       0x23 hw/intctrl/pic.32
                0x00000000c00200c4                PIC::~PIC()
                0x00000000c00200c4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c00200e8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c00200e8       0x2a hw/intctrl/pic.32
                0x00000000c00200e8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020112       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020112       0x23 hw/timer/apictimer.32
                0x00000000c0020112                APICTimer::~APICTimer()
                0x00000000c0020112                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020136       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020136       0x2a hw/timer/apictimer.32
                0x00000000c0020136                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020160       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020160       0x23 hw/timer/pit.32
                0x00000000c0020160                PIT::~PIT()
                0x00000000c0020160                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020184       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020184       0x2a hw/timer/pit.32
                0x00000000c0020184                PIT::~PIT()

.rodata         0x00000000c00201ae     0x38be
                0x00000000c00201ae                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00201ae        0x2 
 .ctors         0x00000000c00201b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c00201b4        0x4 core/unixfile.32
 .ctors         0x00000000c00201b8        0x4 thr/prcssthr.32
 .ctors         0x00000000c00201bc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00201c0                end_ctors = .
                0x00000000c00201c0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c00201c0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c00201c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c00201c4                __DTOR_END__
                0x00000000c00201c8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c00201c8       0x18 
 .rodata        0x00000000c00201e0      0x101 acpica/utclib.32
                0x00000000c00201e0                AcpiGbl_Ctypes
 *fill*         0x00000000c00202e1        0x3 
 .rodata        0x00000000c00202e4       0x18 core/malloc.32
 *fill*         0x00000000c00202fc        0x4 
 .rodata        0x00000000c0020300      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0020420       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0020476        0xa 
 .rodata        0x00000000c0020480      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020880       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0020936        0x2 
 .rodata.str1.4
                0x00000000c0020938      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0020cdd        0x3 
 .rodata        0x00000000c0020ce0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020d40       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020d60       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020d74       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020db6        0x2 
 .rodata.cst8   0x00000000c0020db8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020dc0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0020e2c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020ef0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0020f3a        0x6 
 .rodata.cst8   0x00000000c0020f40        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020f48        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020f54       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c0020f9c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0020f9c      0x1bf core/computer.32
                                        0x1c8 (size before relaxing)
 *fill*         0x00000000c002115b        0x1 
 .rodata._ZTV8Computer
                0x00000000c002115c       0x2c core/computer.32
                0x00000000c002115c                vtable for Computer
 .rodata.str1.1
                0x00000000c0021188       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c00211a4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00211d4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00211e0       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00211fb       0x5f core/physmgr.32
 *fill*         0x00000000c002125a        0x2 
 .rodata.str1.4
                0x00000000c002125c       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c00212a9       0x39 core/pipe.32
 *fill*         0x00000000c00212e2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00212e4       0x1c core/pipe.32
                0x00000000c00212e4                vtable for Pipe
 .rodata.str1.1
                0x00000000c0021300       0x9d core/terminal.32
 *fill*         0x00000000c002139d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00213a0       0x1c core/terminal.32
                0x00000000c00213a0                vtable for VgaText
 .rodata        0x00000000c00213bc       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c00213da       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002145d       0x19 core/unixfile.32
 *fill*         0x00000000c0021476        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021478       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002149a       0x15 core/unixfile.32
 *fill*         0x00000000c00214af        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00214b0       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00214fb        0x8 core/unixfile.32
 *fill*         0x00000000c0021503        0x1 
 .rodata.str1.4
                0x00000000c0021504       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021524       0x1c core/unixfile.32
                0x00000000c0021524                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021540       0x1c core/unixfile.32
                0x00000000c0021540                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002155c      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00216e3      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00217e6       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021819        0x3 
 .rodata.str1.4
                0x00000000c002181c       0x3f dbg/kconsole.32
 *fill*         0x00000000c002185b        0x1 
 .rodata        0x00000000c002185c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00219ac       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00219ac       0x64 fs/vfs.32
                0x00000000c00219ac                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021a10       0x1c fs/vfs.32
                0x00000000c0021a10                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021a2c       0x1c fs/vfs.32
                0x00000000c0021a2c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a48       0x2c hal/bus.32
                0x00000000c0021a48                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0021a74       0x30 hal/buzzer.32
                0x00000000c0021a74                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0021aa4       0x3c hal/clock.32
                0x00000000c0021aa4                vtable for Clock
 .rodata        0x00000000c0021ae0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021b10       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021b2e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021b2e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0021b2e       0x19 hal/device.32
 *fill*         0x00000000c0021b2e        0x2 
 .rodata._ZTV6Device
                0x00000000c0021b30       0x2c hal/device.32
                0x00000000c0021b30                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021b5c       0x2c hal/device.32
                0x00000000c0021b5c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b88       0x2c hal/diskctrl.32
                0x00000000c0021b88                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021bb4       0x34 hal/diskphys.32
                0x00000000c0021bb4                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021be8        0x9 hal/fpu.32
 *fill*         0x00000000c0021bf1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0021bf4       0x38 hal/fpu.32
                0x00000000c0021bf4                vtable for FPU
 .rodata        0x00000000c0021c2c      0x2e0 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0021f0c       0x48 hal/intctrl.32
                0x00000000c0021f0c                vtable for InterruptController
 .rodata        0x00000000c0021f54       0x4e hal/keybrd.32
 *fill*         0x00000000c0021fa2        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021fa4       0x34 hal/keybrd.32
                0x00000000c0021fa4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021fd8       0x7a hal/logidisk.32
 *fill*         0x00000000c0022052        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0022054       0x2c hal/logidisk.32
                0x00000000c0022054                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022080       0x2c hal/mouse.32
                0x00000000c0022080                vtable for Mouse
 .rodata.str1.1
                0x00000000c00220ac        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00220b7       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00220b7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00220b7       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00220b7       0x15 hal/timer.32
 *fill*         0x00000000c00220b7        0x1 
 .rodata._ZTV5Timer
                0x00000000c00220b8       0x30 hal/timer.32
                0x00000000c00220b8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00220e8       0x10 hal/vcache.32
                0x00000000c00220e8                vtable for VCache
 .rodata.str1.1
                0x00000000c00220f8        0xf hal/video.32
 *fill*         0x00000000c0022107        0x1 
 .rodata._ZTV5Video
                0x00000000c0022108       0x40 hal/video.32
                0x00000000c0022108                vtable for Video
 .rodata.str1.1
                0x00000000c0022148       0xd1 hw/acpi.32
 *fill*         0x00000000c0022219        0x3 
 .rodata.str1.4
                0x00000000c002221c       0xe5 hw/acpi.32
 *fill*         0x00000000c0022301        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0022304       0x2c hw/acpi.32
                0x00000000c0022304                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022330      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c00226f1        0x3 
 .rodata._ZTV3CPU
                0x00000000c00226f4       0x2c hw/cpu.32
                0x00000000c00226f4                vtable for CPU
 .rodata.str1.1
                0x00000000c0022720       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c00227de        0x2 
 .rodata.str1.4
                0x00000000c00227e0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00228f2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022937       0x3e sys/sc_write.32
 *fill*         0x00000000c0022975        0x3 
 .rodata.str1.4
                0x00000000c0022978       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c0022a34       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0022af6      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c0022d02       0xfb thr/prcssthr.32
 *fill*         0x00000000c0022dfd        0x3 
 .rodata.str1.4
                0x00000000c0022e00      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c00230a7       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00230a7       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00230a7       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00230a7       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00230a7        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00230a7       0x5f vm86/vm8086.32
 *fill*         0x00000000c0023106        0x2 
 .rodata        0x00000000c0023108       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0023138       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002318b        0x1 
 .rodata.str1.4
                0x00000000c002318c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c00231b4       0x64 fs/fat/vfslink.32
                0x00000000c00231b4                vtable for FAT
 .rodata.str1.1
                0x00000000c0023218       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0023261        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0023264       0x64 fs/iso9660/vfslink.32
                0x00000000c0023264                vtable for ISO9660
 .rodata.str1.1
                0x00000000c00232c8       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c00232e2        0x2 
 .rodata.cst4   0x00000000c00232e4        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c00232e8       0x38 hal/sound/sndhw.32
                0x00000000c00232e8                vtable for SoundDevice
 .rodata.cst4   0x00000000c0023320       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0023330       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c00233d4       0x2c hw/bus/pci.32
                0x00000000c00233d4                vtable for PCI
 .rodata.str1.1
                0x00000000c0023400      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0023636        0x2 
 .rodata._ZTV3IDE
                0x00000000c0023638       0x2c hw/diskctrl/ide.32
                0x00000000c0023638                vtable for IDE
 .rodata.str1.1
                0x00000000c0023664       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0023685        0x3 
 .rodata._ZTV3ATA
                0x00000000c0023688       0x34 hw/diskphys/ata.32
                0x00000000c0023688                vtable for ATA
 .rodata.str1.1
                0x00000000c00236bc       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c00236f4       0x34 hw/diskphys/atapi.32
                0x00000000c00236f4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0023728        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0023730       0x38 hw/fpu/avx.32
                0x00000000c0023730                vtable for AVX
 .rodata.str1.1
                0x00000000c0023768        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0023770       0x38 hw/fpu/mmx.32
                0x00000000c0023770                vtable for MMX
 .rodata.str1.1
                0x00000000c00237a8        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c00237b0       0x38 hw/fpu/sse.32
                0x00000000c00237b0                vtable for SSE
 .rodata.str1.1
                0x00000000c00237e8        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c00237f0       0x38 hw/fpu/x87.32
                0x00000000c00237f0                vtable for x87
 .rodata        0x00000000c0023828       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0023900       0x48 hw/intctrl/apic.32
                0x00000000c0023900                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0023948       0x2c hw/intctrl/apic.32
                0x00000000c0023948                vtable for IOAPIC
 .rodata        0x00000000c0023974       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0023996        0x2 
 .rodata._ZTV3PIC
                0x00000000c0023998       0x48 hw/intctrl/pic.32
                0x00000000c0023998                vtable for PIC
 .rodata.str1.1
                0x00000000c00239e0        0xb hw/timer/apictimer.32
 *fill*         0x00000000c00239eb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00239ec       0x30 hw/timer/apictimer.32
                0x00000000c00239ec                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023a1c       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023a39        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023a3c       0x30 hw/timer/pit.32
                0x00000000c0023a3c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023a6c      0x5fd
 *(.data)
 .data          0x00000000c0023a6c        0x0 crti.32
 .data          0x00000000c0023a6c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023a6c                __dso_handle
 .data          0x00000000c0023a70        0x0 acpica/utclib.32
 .data          0x00000000c0023a70        0x0 core/malloc.32
 .data          0x00000000c0023a70        0x0 libk/string.32
 .data          0x00000000c0023a70        0x0 fs/fat/diskio.32
 .data          0x00000000c0023a70        0x0 fs/fat/ff.32
 .data          0x00000000c0023a70        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023a70        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023a70        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0023a70        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0023a70        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0023a70        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0023a70        0x0 core/computer.32
 .data          0x00000000c0023a70        0x0 core/gdt.32
 .data          0x00000000c0023a70        0x0 core/idle.32
 .data          0x00000000c0023a70        0x0 core/idt.32
 .data          0x00000000c0023a70        0x4 core/kheap.32
 .data          0x00000000c0023a74        0x0 core/main.32
 .data          0x00000000c0023a74        0x4 core/physmgr.32
                0x00000000c0023a74                Phys::bitmap
 .data          0x00000000c0023a78        0x0 core/pipe.32
 *fill*         0x00000000c0023a78        0x8 
 .data          0x00000000c0023a80       0x60 core/terminal.32
                0x00000000c0023a80                VgaText::hiddenOut
                0x00000000c0023aa0                ansiToVGAMappings
 .data          0x00000000c0023ae0        0x0 core/tss.32
 .data          0x00000000c0023ae0        0x4 core/unixfile.32
                0x00000000c0023ae0                UnixFile::nextFd
 .data          0x00000000c0023ae4        0x8 core/virtmgr.32
                0x00000000c0023ae4                Virt::pageAllocPtr
                0x00000000c0023ae8                Virt::bitmap
 .data          0x00000000c0023aec        0x4 coreobjs/c++.32
                0x00000000c0023aec                __stack_chk_guard
 .data          0x00000000c0023af0        0x0 dbg/kconsole.32
 .data          0x00000000c0023af0        0x0 fs/vfs.32
 .data          0x00000000c0023af0        0x0 hal/bus.32
 .data          0x00000000c0023af0        0x0 hal/buzzer.32
 .data          0x00000000c0023af0        0x0 hal/clock.32
 .data          0x00000000c0023af0        0x0 hal/device.32
 .data          0x00000000c0023af0        0x0 hal/diskctrl.32
 .data          0x00000000c0023af0        0x0 hal/diskphys.32
 .data          0x00000000c0023af0        0x0 hal/fpu.32
 *fill*         0x00000000c0023af0       0x10 
 .data          0x00000000c0023b00      0x2a0 hal/intctrl.32
                0x00000000c0023b00                exceptionNames
 .data          0x00000000c0023da0        0x0 hal/keybrd.32
 .data          0x00000000c0023da0        0x0 hal/logidisk.32
 .data          0x00000000c0023da0        0x0 hal/mouse.32
 .data          0x00000000c0023da0        0x0 hal/partition.32
 .data          0x00000000c0023da0        0x0 hal/timer.32
 .data          0x00000000c0023da0        0x0 hal/vcache.32
 .data          0x00000000c0023da0        0x0 hal/video.32
 .data          0x00000000c0023da0       0x10 hw/acpi.32
                0x00000000c0023da0                legacyIRQRemaps
 *fill*         0x00000000c0023db0       0x10 
 .data          0x00000000c0023dc0      0x2a4 hw/cpu.32
                0x00000000c0023dc0                cpuNameList
                0x00000000c0024060                lastCode
 .data          0x00000000c0024064        0x0 hw/ports.32
 .data          0x00000000c0024064        0x0 krnl/panic.32
 .data          0x00000000c0024064        0x0 reg/registry.32
 .data          0x00000000c0024064        0x0 sys/sc_exit.32
 .data          0x00000000c0024064        0x0 sys/sc_loaddll.32
 .data          0x00000000c0024064        0x0 sys/sc_read.32
 .data          0x00000000c0024064        0x0 sys/sc_sbrk.32
 .data          0x00000000c0024064        0x0 sys/sc_write.32
 .data          0x00000000c0024064        0x0 sys/sc_yield.32
 .data          0x00000000c0024064        0x0 sys/syscalls.32
 .data          0x00000000c0024064        0x0 thr/elf.32
 .data          0x00000000c0024064        0x4 thr/prcssthr.32
                0x00000000c0024064                nextPID
 .data          0x00000000c0024068        0x0 vm86/vm8086.32
 .data          0x00000000c0024068        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024068        0x1 fs/iso9660/vfslink.32
                0x00000000c0024068                recentDriveletter
 .data          0x00000000c0024069        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0024069        0x0 hal/sound/sndhw.32
 .data          0x00000000c0024069        0x0 hw/bus/isa.32
 .data          0x00000000c0024069        0x0 hw/bus/pci.32
 .data          0x00000000c0024069        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024069        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024069        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024069        0x0 hw/fpu/avx.32
 .data          0x00000000c0024069        0x0 hw/fpu/mmx.32
 .data          0x00000000c0024069        0x0 hw/fpu/sse.32
 .data          0x00000000c0024069        0x0 hw/fpu/x87.32
 .data          0x00000000c0024069        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024069        0x0 hw/intctrl/pic.32
 .data          0x00000000c0024069        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024069        0x0 hw/timer/pit.32
 .data          0x00000000c0024069        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024069        0x0 crtn.32
 .data          0x00000000c0024069        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0024069        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0024069        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0024069        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0024069        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0024069        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0024069        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002406c        0x0
 .got           0x00000000c002406c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002406c        0x0
 .got.plt       0x00000000c002406c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002406c        0x0
 .igot.plt      0x00000000c002406c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002406c        0x0
 .tm_clone_table
                0x00000000c002406c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002406c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024069      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0024069        0x3 
 .eh_frame      0x00000000c002406c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002406c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002406c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00240c4       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0024104       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024170       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c00241f4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002420c        0x0
 .rel.got       0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002420c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002420c     0x223c
                0x00000000c002420c                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002420c        0x0 crti.32
 .bss           0x00000000c002420c       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002422c        0x4 acpica/utclib.32
 *fill*         0x00000000c0024230       0x10 
 .bss           0x00000000c0024240      0x378 core/malloc.32
 .bss           0x00000000c00245b8        0x0 libk/string.32
 .bss           0x00000000c00245b8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c00245b8        0x8 
 .bss           0x00000000c00245c0       0x88 fs/fat/ff.32
 .bss           0x00000000c0024648        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024648        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0024648        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0024648        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0024648        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0024648        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0024648        0x6 core/computer.32
                0x00000000c0024648                computer
                0x00000000c002464c                preemptionOn
                0x00000000c002464d                schedulingOn
 *fill*         0x00000000c002464e        0x2 
 .bss           0x00000000c0024650        0x6 core/gdt.32
                0x00000000c0024650                gdtDescr
 .bss           0x00000000c0024656        0x0 core/idle.32
 *fill*         0x00000000c0024656        0x2 
 .bss           0x00000000c0024658        0x6 core/idt.32
                0x00000000c0024658                idtDescr
 .bss           0x00000000c002465e        0x0 core/kheap.32
 *fill*         0x00000000c002465e        0x2 
 .bss           0x00000000c0024660        0x4 core/main.32
                0x00000000c0024660                sysBootSettings
 *fill*         0x00000000c0024664       0x1c 
 .bss           0x00000000c0024680       0x50 core/physmgr.32
                0x00000000c0024680                Phys::currentPagePointer
                0x00000000c0024684                Phys::highestMem
                0x00000000c0024688                Phys::oldPercent
                0x00000000c002468c                Phys::usedPages
                0x00000000c0024690                Phys::usablePages
                0x00000000c00246a0                Phys::dmaUsage
 .bss           0x00000000c00246d0        0x0 core/pipe.32
 *fill*         0x00000000c00246d0       0x10 
 .bss           0x00000000c00246e0       0x29 core/terminal.32
                0x00000000c00246e0                textModeImplementation
                0x00000000c0024700                terminalCycle
                0x00000000c0024704                activeTerminal
                0x00000000c0024708                VgaText::graphicMode
 *fill*         0x00000000c0024709        0x1 
 .bss           0x00000000c002470a        0x2 core/tss.32
                0x00000000c002470a                doubleFaultSelector
 *fill*         0x00000000c002470c       0x14 
 .bss           0x00000000c0024720       0x84 core/unixfile.32
                0x00000000c0024720                sfileLpt
                0x00000000c0024760                sfileCom
                0x00000000c0024784                sfileNul
                0x00000000c0024788                sfilePnt
                0x00000000c002478c                sfileAux
                0x00000000c0024790                sfileCon
                0x00000000c0024794                initialFilesAdded
                0x00000000c0024798                unixFileLinkedList
 .bss           0x00000000c00247a4        0x4 core/virtmgr.32
                0x00000000c00247a4                firstVAS
 .bss           0x00000000c00247a8        0x0 coreobjs/c++.32
 .bss           0x00000000c00247a8        0x0 dbg/kconsole.32
 .bss           0x00000000c00247a8        0x4 fs/vfs.32
                0x00000000c00247a8                installedFilesystems
 .bss           0x00000000c00247ac        0x0 hal/bus.32
 .bss           0x00000000c00247ac        0x4 hal/buzzer.32
                0x00000000c00247ac                systemBuzzer
 .bss           0x00000000c00247b0        0x8 hal/clock.32
                0x00000000c00247b0                dstOn
                0x00000000c00247b1                timezoneHalfHourOffset
                0x00000000c00247b4                timezoneHourOffset
 .bss           0x00000000c00247b8        0x0 hal/device.32
 .bss           0x00000000c00247b8        0x0 hal/diskctrl.32
 .bss           0x00000000c00247b8        0x0 hal/diskphys.32
 .bss           0x00000000c00247b8        0x0 hal/fpu.32
 .bss           0x00000000c00247b8       0x20 hal/intctrl.32
                0x00000000c00247b8                pf5
                0x00000000c00247bc                pf4
                0x00000000c00247c0                pf3
                0x00000000c00247c4                pf2
                0x00000000c00247c8                pf1
                0x00000000c00247cc                pf0
                0x00000000c00247d0                gpFaultIntercept
                0x00000000c00247d4                x87FaultIntercept
 *fill*         0x00000000c00247d8        0x8 
 .bss           0x00000000c00247e0      0x429 hal/keybrd.32
                0x00000000c00247e0                keyboardWaitingTaskList
                0x00000000c00247e4                keyboardSetupYet
                0x00000000c0024800                keystates
 *fill*         0x00000000c0024c09       0x17 
 .bss           0x00000000c0024c20       0x88 hal/logidisk.32
                0x00000000c0024c20                diskAssignments
                0x00000000c0024c40                disks
 .bss           0x00000000c0024ca8        0x4 hal/mouse.32
                0x00000000c0024ca8                guiMouseHandler
 .bss           0x00000000c0024cac        0x0 hal/partition.32
 *fill*         0x00000000c0024cac        0x4 
 .bss           0x00000000c0024cb0        0x8 hal/timer.32
                0x00000000c0024cb0                nanoSinceBoot
 .bss           0x00000000c0024cb8        0x0 hal/vcache.32
 .bss           0x00000000c0024cb8        0x4 hal/video.32
                0x00000000c0024cb8                screen
 *fill*         0x00000000c0024cbc        0x4 
 .bss           0x00000000c0024cc0      0x3c0 hw/acpi.32
                0x00000000c0024cc0                systemSleepFunction
                0x00000000c0024cc4                systemResetFunction
                0x00000000c0024cc8                systemShutdownFunction
                0x00000000c0024ccc                nextACPITable
                0x00000000c0024ce0                acpiTables
                0x00000000c0024ee0                usingXSDT
                0x00000000c0024ee4                MADTpointer
                0x00000000c0024ee8                RSDTpointer
                0x00000000c0024eec                RSDPpointer
                0x00000000c0024ef0                ioapicDiscoveryNumber
                0x00000000c0024f00                ioapicFoundInMADT
                0x00000000c0024f20                ioapicAddresses
                0x00000000c0024fa0                ioapicGSIBase
                0x00000000c0025020                processorDiscoveryNumber
                0x00000000c0025040                matchingAPICID
                0x00000000c0025060                processorID
 .bss           0x00000000c0025080       0x10 hw/cpu.32
                0x00000000c0025080                lastD
                0x00000000c0025084                lastC
                0x00000000c0025088                lastB
                0x00000000c002508c                lastA
 .bss           0x00000000c0025090        0x0 hw/ports.32
 .bss           0x00000000c0025090        0x5 krnl/panic.32
                0x00000000c0025090                Krnl::guiPanicHandler
                0x00000000c0025094                Krnl::kernelInPanic
 .bss           0x00000000c0025095        0x0 reg/registry.32
 .bss           0x00000000c0025095        0x0 sys/sc_exit.32
 .bss           0x00000000c0025095        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0025095        0x0 sys/sc_read.32
 .bss           0x00000000c0025095        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0025095        0x0 sys/sc_write.32
 .bss           0x00000000c0025095        0x0 sys/sc_yield.32
 *fill*         0x00000000c0025095        0xb 
 .bss           0x00000000c00250a0      0x200 sys/syscalls.32
                0x00000000c00250a0                systemCallHandlers
 .bss           0x00000000c00252a0      0x7a4 thr/elf.32
                0x00000000c00252a0                Thr::driverLookupNext
                0x00000000c00252c0                Thr::driverLookupLen
                0x00000000c00254c0                Thr::driverLookupAddr
                0x00000000c00256c0                Thr::driverNameLookup
                0x00000000c00258c0                Thr::kernelSymbols
                0x00000000c0025940                Thr::kernelStringTable
                0x00000000c00259c0                Thr::kernelSymbolTable
                0x00000000c0025a40                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025a44        0x4 
 .bss           0x00000000c0025a48       0x68 thr/prcssthr.32
                0x00000000c0025a48                cleanerThread
                0x00000000c0025a4c                weNeedTheCleanerToNotBlock
                0x00000000c0025a50                xxxx
                0x00000000c0025a54                retValLockStuff
                0x00000000c0025a58                retValSchedLock
                0x00000000c0025a5c                lockStuffLock
                0x00000000c0025a60                schedulerLock
                0x00000000c0025a64                taskSwitchesPostponedFlag
                0x00000000c0025a68                postponeTaskSwitchesCounter
                0x00000000c0025a6c                irqDisableCounter
                0x00000000c0025a70                terminatedTaskList
                0x00000000c0025a7c                sleepingTaskList
                0x00000000c0025a88                taskList
                0x00000000c0025a94                kernelProcess
 .bss           0x00000000c0025ab0        0x0 vm86/vm8086.32
 *fill*         0x00000000c0025ab0       0x10 
 .bss           0x00000000c0025ac0       0xf0 fs/fat/vfslink.32
                0x00000000c0025ac0                FAT::fats
                0x00000000c0025ae0                FAT::vfsToFatRemaps
                0x00000000c0025b60                fatToVFSRemaps
 *fill*         0x00000000c0025bb0       0x10 
 .bss           0x00000000c0025bc0      0x820 fs/iso9660/vfslink.32
                0x00000000c0025bc0                recentSector
                0x00000000c0025be0                recentBuffer
 .bss           0x00000000c00263e0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c00263e0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00263e0        0x0 hw/bus/isa.32
 .bss           0x00000000c00263e0        0x0 hw/bus/pci.32
 .bss           0x00000000c00263e0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00263e0        0x8 hw/diskphys/ata.32
                0x00000000c00263e0                ataSectorsWritten
                0x00000000c00263e4                ataSectorsRead
 .bss           0x00000000c00263e8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00263e8        0x0 hw/fpu/avx.32
 .bss           0x00000000c00263e8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00263e8        0x0 hw/fpu/sse.32
 .bss           0x00000000c00263e8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00263e8       0x18 
 .bss           0x00000000c0026400       0x41 hw/intctrl/apic.32
                0x00000000c0026400                noOfIOAPICs
                0x00000000c0026420                ioapics
                0x00000000c0026440                IOAPICsSetupYet
 .bss           0x00000000c0026441        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0026441        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0026441        0x3 
 .bss           0x00000000c0026444        0x4 hw/timer/pit.32
                0x00000000c0026444                pitFreq
 .bss           0x00000000c0026448        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0026448        0x0 crtn.32
 .bss           0x00000000c0026448        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0026448        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0026448        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0026448        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0026448        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0026448        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0026448        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0026448                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0028684                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
