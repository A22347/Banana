Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f3b8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4d1 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                voodooXADD
                0x00000000c0000202                doTPAUSE
                0x00000000c000020c                hasLegacyFPU
                0x00000000c0000231                is486
                0x00000000c0000267                goToVM86
                0x00000000c0000298                goToUsermode
                0x00000000c00002c3                switchToThreadASMFirstTime
                0x00000000c00002d1                switchToThreadASM
                0x00000000c0000371                detectCPUID
                0x00000000c0000387                asmQuickAcquireLock
                0x00000000c00003a5                asmQuickReleaseLock
                0x00000000c00003b1                asmAcquireLock
                0x00000000c00003d2                asmReleaseLock
                0x00000000c00003e5                loadGDT
                0x00000000c0000405                isr0
                0x00000000c0000415                isr1
                0x00000000c000041f                isr2
                0x00000000c0000429                isr3
                0x00000000c0000433                isr4
                0x00000000c000043d                isr5
                0x00000000c0000447                isr6
                0x00000000c0000451                isr7
                0x00000000c000045b                isr8
                0x00000000c0000463                isr9
                0x00000000c000046d                isr10
                0x00000000c0000475                isr11
                0x00000000c000047d                isr12
                0x00000000c0000485                isr13
                0x00000000c000048d                isr14
                0x00000000c0000495                isr15
                0x00000000c000049f                isr16
                0x00000000c00004a9                isr17
                0x00000000c00004b3                isr18
                0x00000000c00004bd                isr96
                0x00000000c00004c7                irq0
                0x00000000c00004d1                irq1
                0x00000000c00004db                irq2
                0x00000000c00004e5                irq3
                0x00000000c00004ef                irq4
                0x00000000c00004f9                irq5
                0x00000000c0000503                irq6
                0x00000000c000050d                irq7
                0x00000000c0000517                irq8
                0x00000000c0000521                irq9
                0x00000000c000052b                irq10
                0x00000000c0000535                irq11
                0x00000000c000053f                irq12
                0x00000000c0000549                irq13
                0x00000000c0000553                irq14
                0x00000000c000055d                irq15
                0x00000000c0000567                irq16
                0x00000000c0000571                irq17
                0x00000000c000057b                irq18
                0x00000000c0000585                irq19
                0x00000000c000058f                irq20
                0x00000000c0000599                irq21
                0x00000000c00005a3                irq22
                0x00000000c00005ad                irq23
                0x00000000c00005b7                int_common_stub
                0x00000000c00005e7                syscall_common_stub
 .text          0x00000000c0000621      0x40f acpica/utclib.32
                0x00000000c0000621                memcmp
                0x00000000c000064c                memmove
                0x00000000c0000684                memcpy
                0x00000000c00006ba                memset
                0x00000000c00006d7                strlen
                0x00000000c00006e7                strpbrk
                0x00000000c000070a                strtok
                0x00000000c0000759                strcpy
                0x00000000c0000779                strncpy
                0x00000000c00007aa                strcmp
                0x00000000c00007cb                strchr
                0x00000000c00007e1                strncmp
                0x00000000c0000810                strcat
                0x00000000c0000837                strncat
                0x00000000c0000871                strstr
                0x00000000c00008ae                toupper
                0x00000000c00008c2                tolower
                0x00000000c00008d6                simple_strtoul
 .text          0x00000000c0000a30      0xfbf core/malloc.32
                0x00000000c0000b9b                dlfree
                0x00000000c0000ef6                dlmalloc
                0x00000000c0001433                dlrealloc
                0x00000000c00015e8                dlmemalign
                0x00000000c000170b                dlcalloc
                0x00000000c00017a5                dlcfree
                0x00000000c00017aa                dlindependent_calloc
                0x00000000c00017cf                dlindependent_comalloc
                0x00000000c00017e6                dlvalloc
                0x00000000c0001811                dlpvalloc
                0x00000000c0001847                dlmalloc_trim
                0x00000000c0001854                dlmalloc_usable_size
                0x00000000c0001885                dlmallinfo
                0x00000000c0001954                dlmalloc_stats
                0x00000000c0001965                dlmallopt
 .text          0x00000000c00019ef        0x0 libk/string.32
 .text          0x00000000c00019ef       0x51 fs/fat/diskio.32
                0x00000000c00019ef                disk_status
                0x00000000c00019f2                disk_initialize
                0x00000000c00019f5                disk_read
                0x00000000c0001a0b                disk_write
                0x00000000c0001a21                disk_ioctl
 .text          0x00000000c0001a40     0x6833 fs/fat/ff.32
                0x00000000c0004d0e                f_mount
                0x00000000c0004d70                f_open
                0x00000000c00051ac                f_read
                0x00000000c000542c                f_write
                0x00000000c00056e6                f_sync
                0x00000000c00058c2                f_close
                0x00000000c00058f1                f_lseek
                0x00000000c0005da8                f_opendir
                0x00000000c0005eaa                f_closedir
                0x00000000c0005ecc                f_readdir
                0x00000000c0005f67                f_stat
                0x00000000c0005ff6                f_getfree
                0x00000000c00061c1                f_truncate
                0x00000000c00062b9                f_unlink
                0x00000000c000643c                f_mkdir
                0x00000000c0006668                f_rename
                0x00000000c000695b                f_chmod
                0x00000000c0006a39                f_utime
                0x00000000c0006b17                f_getlabel
                0x00000000c0006d05                f_setlabel
                0x00000000c0006f72                f_forward
                0x00000000c0007150                f_mkfs
 .text          0x00000000c0008273       0x2d fs/fat/ffsystem.32
                0x00000000c0008273                ff_memalloc
                0x00000000c0008289                ff_memfree
 .text          0x00000000c00082a0      0x253 fs/fat/ffunicode.32
                0x00000000c00082a0                ff_uni2oem
                0x00000000c0008330                ff_oem2uni
                0x00000000c000839c                ff_wtoupper
 .text          0x00000000c00084f3      0x70e hal/libresample/samplerate.32
                0x00000000c000857b                src_delete
                0x00000000c00085b7                src_process
                0x00000000c00086df                src_callback_read
                0x00000000c0008840                src_set_ratio
                0x00000000c0008897                src_get_channels
                0x00000000c00088b9                src_reset
                0x00000000c00088fd                src_new
                0x00000000c000898b                src_callback_new
                0x00000000c00089ed                src_get_name
                0x00000000c0008a24                src_get_description
                0x00000000c0008a5b                src_get_version
                0x00000000c0008a61                src_is_valid_ratio
                0x00000000c0008a7b                src_error
                0x00000000c0008a89                src_strerror
                0x00000000c0008a9c                src_simple
                0x00000000c0008aef                src_short_to_float_array
                0x00000000c0008b15                src_float_to_short_array
                0x00000000c0008b79                src_int_to_float_array
                0x00000000c0008b9f                src_float_to_int_array
 .text          0x00000000c0008c01      0x3fd hal/libresample/src_linear.32
                0x00000000c0008f59                linear_get_name
                0x00000000c0008f68                linear_get_description
                0x00000000c0008f77                linear_set_converter
 .text          0x00000000c0008ffe     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a954                sinc_get_name
                0x00000000c000a967                sinc_get_description
                0x00000000c000a97a                sinc_set_converter
 .text          0x00000000c000aa3d      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000ad6b                zoh_get_name
                0x00000000c000ad7a                zoh_get_description
                0x00000000c000ad89                zoh_set_converter
 .text          0x00000000c000ae10      0x9c9 core/computer.32
                0x00000000c000ae10                Computer::close(int, int, void*)
                0x00000000c000ae54                Computer::Computer()
                0x00000000c000ae54                Computer::Computer()
                0x00000000c000afb0                Computer::setBootMessage(char const*)
                0x00000000c000afb2                Computer::start()
                0x00000000c000b075                firstTask()
                0x00000000c000b084                Computer::detectFeatures()
                0x00000000c000b25e                Computer::displayFeatures()
                0x00000000c000b5a4                Computer::rdmsr(unsigned int)
                0x00000000c000b5d0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b608                Computer::nmiEnabled()
                0x00000000c000b614                Computer::readCMOS(unsigned char)
                0x00000000c000b62e                Computer::enableNMI(bool)
                0x00000000c000b646                Computer::open(int, int, void*)
                0x00000000c000b71c                Computer::disableNMI()
                0x00000000c000b72a                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b748                Computer::handleNMI()
                0x00000000c000b7ae                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b7d9        0x1 
 .text          0x00000000c000b7da      0x1b7 core/gdt.32
                0x00000000c000b7da                GDTEntry::setBase(unsigned int)
                0x00000000c000b7f6                GDTEntry::setLimit(unsigned int)
                0x00000000c000b814                GDT::GDT()
                0x00000000c000b814                GDT::GDT()
                0x00000000c000b82a                GDT::addEntry(GDTEntry)
                0x00000000c000b866                GDT::getNumberOfEntries()
                0x00000000c000b86e                GDT::flush()
                0x00000000c000b890                GDT::setup()
 .text          0x00000000c000b991       0x61 core/idle.32
                0x00000000c000b991                idleFunction(void*)
 .text          0x00000000c000b9f2      0x45f core/idt.32
                0x00000000c000b9f2                IDTEntry::IDTEntry(bool)
                0x00000000c000b9f2                IDTEntry::IDTEntry(bool)
                0x00000000c000ba60                IDTEntry::setOffset(unsigned int)
                0x00000000c000ba74                IDT::IDT()
                0x00000000c000ba74                IDT::IDT()
                0x00000000c000ba76                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ba7e                IDT::addEntry(IDTEntry, int)
                0x00000000c000ba98                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000bad0                IDT::flush()
                0x00000000c000baea                IDT::setup()
 .text          0x00000000c000be51      0x20d core/kheap.32
                0x00000000c000be51                sbrk
                0x00000000c000bf69                mmap
                0x00000000c000bf7f                munmap
                0x00000000c000bf95                liballoc_lock()
                0x00000000c000bfa6                liballoc_unlock()
                0x00000000c000bfb7                liballoc_alloc(int)
                0x00000000c000bfd2                liballoc_free(void*, int)
                0x00000000c000bff0                realloc
                0x00000000c000c004                malloc
                0x00000000c000c014                free
                0x00000000c000c024                rfree
                0x00000000c000c034                calloc
 .text          0x00000000c000c05e      0x38d core/main.32
                0x00000000c000c05e                hwTextMode_loadInData(VgaText*)
                0x00000000c000c0a3                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000c0e5                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000c139                hwTextMode_update(VgaText*)
                0x00000000c000c13a                hwTextMode_updateCursor(VgaText*)
                0x00000000c000c182                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000c1be                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000c244                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000c2a2                setupTextMode()
                0x00000000c000c2f3                kernel_main
 .text          0x00000000c000c3eb      0x4f3 core/physmgr.32
                0x00000000c000c3eb                Phys::allocateDMA(unsigned long)
                0x00000000c000c48e                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c4d6                Phys::setPageState(unsigned long, bool)
                0x00000000c000c508                Phys::getPageState(unsigned long)
                0x00000000c000c524                Phys::freePage(unsigned long)
                0x00000000c000c5ae                Phys::allocatePage()
                0x00000000c000c676                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c6ae                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c8de      0x273 core/pipe.32
                0x00000000c000c8de                Pipe::isAtty()
                0x00000000c000c8e2                Pipe::~Pipe()
                0x00000000c000c8e2                Pipe::~Pipe()
                0x00000000c000c906                Pipe::~Pipe()
                0x00000000c000c92e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000ca22                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000caea                Pipe::Pipe(int)
                0x00000000c000caea                Pipe::Pipe(int)
 *fill*         0x00000000c000cb51        0x1 
 .text          0x00000000c000cb52      0xf65 core/terminal.32
                0x00000000c000cb52                VgaText::isAtty()
                0x00000000c000cb56                VgaText::~VgaText()
                0x00000000c000cb56                VgaText::~VgaText()
                0x00000000c000cb7a                VgaText::~VgaText()
                0x00000000c000cba4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000cbc4                setTerminalScrollLock(bool)
                0x00000000c000cbc5                addToTerminalCycle(VgaText*)
                0x00000000c000cbf2                installVgaTextImplementation()
                0x00000000c000cc07                scrollTerminalScrollLock(int)
                0x00000000c000cc08                VgaText::load()
                0x00000000c000cc5c                VgaText::updateCursor()
                0x00000000c000cc76                VgaText::showCursor(bool)
                0x00000000c000cc86                VgaText::disableBlink(bool)
                0x00000000c000ccc0                VgaText::doANSI_SGR(int)
                0x00000000c000cd4c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000cd62                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000cd78                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000cd98                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000cdaa                VgaText::scrollScreen()
                0x00000000c000ce3e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ce50                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ceb0                VgaText::getCursorX()
                0x00000000c000cebc                VgaText::getCursorY()
                0x00000000c000cec8                VgaText::setCursor(int, int)
                0x00000000c000cee6                VgaText::setCursorX(int)
                0x00000000c000cf02                VgaText::setCursorY(int)
                0x00000000c000cf1e                VgaText::incrementCursor(bool)
                0x00000000c000cf86                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cfe0                VgaText::updateDiskUsage()
                0x00000000c000d146                VgaText::updateTitle()
                0x00000000c000d18c                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000d19c                VgaText::setTitleColour(VgaColour)
                0x00000000c000d1ac                VgaText::setTitle(char*)
                0x00000000c000d1d2                VgaText::decrementCursor(bool)
                0x00000000c000d1fa                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000d2f6                VgaText::isShowingCursor()
                0x00000000c000d302                VgaText::isBlinkDisabled()
                0x00000000c000d310                VgaText::setCursorHeight(int)
                0x00000000c000d32e                VgaText::getCursorHeight()
                0x00000000c000d339                setActiveTerminal(VgaText*)
                0x00000000c000d3eb                doTerminalCycle()
                0x00000000c000d408                VgaText::doUpdate()
                0x00000000c000d41a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d5da                VgaText::clearScreen()
                0x00000000c000d63e                VgaText::putchar(char)
                0x00000000c000d758                VgaText::puts(char const*)
                0x00000000c000d77e                VgaText::putx(unsigned int)
                0x00000000c000d7c4                VgaText::VgaText(char const*)
                0x00000000c000d7c4                VgaText::VgaText(char const*)
                0x00000000c000d956                VgaText::receiveKey(unsigned char)
                0x00000000c000da3e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000da92                newTerminal(char*)
 *fill*         0x00000000c000dab7        0x1 
 .text          0x00000000c000dab8      0x18f core/tss.32
                0x00000000c000dab8                TSS::TSS()
                0x00000000c000dab8                TSS::TSS()
                0x00000000c000dac6                TSS::setESP(unsigned long)
                0x00000000c000dad8                TSS::flush()
                0x00000000c000daf8                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000dc47        0x1 
 .text          0x00000000c000dc48      0x482 core/unixfile.32
                0x00000000c000dc48                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000dc9e                ReservedFilename::isAtty()
                0x00000000c000dcba                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000dd18                UnixFile::getFileDescriptor()
                0x00000000c000dd20                UnixFile::UnixFile(int)
                0x00000000c000dd20                UnixFile::UnixFile(int)
                0x00000000c000de90                ReservedFilename::ReservedFilename(int)
                0x00000000c000de90                ReservedFilename::ReservedFilename(int)
                0x00000000c000dec2                UnixFile::~UnixFile()
                0x00000000c000dec2                UnixFile::~UnixFile()
                0x00000000c000df5a                UnixFile::~UnixFile()
                0x00000000c000df82                ReservedFilename::~ReservedFilename()
                0x00000000c000df82                ReservedFilename::~ReservedFilename()
                0x00000000c000dfa6                ReservedFilename::~ReservedFilename()
                0x00000000c000dfcd                getFromFileDescriptor(int)
 .text          0x00000000c000e0ca      0xec7 core/virtmgr.32
                0x00000000c000e0ca                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000e0ff                Virt::getPageState(unsigned long)
                0x00000000c000e123                Virt::allocateKernelVirtualPages(int)
                0x00000000c000e234                Virt::virtualMemorySetup()
                0x00000000c000e2b3                Virt::getAKernelVAS()
                0x00000000c000e2b9                Virt::setupPageSwapping(int)
                0x00000000c000e3de                VAS::VAS()
                0x00000000c000e3de                VAS::VAS()
                0x00000000c000e40e                VAS::VAS(VAS*)
                0x00000000c000e40e                VAS::VAS(VAS*)
                0x00000000c000e432                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e45e                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e47d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e5a0                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e5c4                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e5dc                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e61c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e654                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e68a                VAS::~VAS()
                0x00000000c000e68a                VAS::~VAS()
                0x00000000c000e7f6                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e8f6                VAS::allocatePages(int, int)
                0x00000000c000eac6                VAS::setCPUSpecific(unsigned long)
                0x00000000c000eae2                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000ebac                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ec9a                VAS::VAS(bool)
                0x00000000c000ec9a                VAS::VAS(bool)
                0x00000000c000eeca                mapVASFirstTime
 .text          0x00000000c000ef91       0x93 coreobjs/c++.32
                0x00000000c000ef91                __cxa_atexit
                0x00000000c000ef94                __cxa_finalize
                0x00000000c000ef95                __stack_chk_fail
                0x00000000c000eff5                __cxa_pure_virtual
                0x00000000c000f006                operator new(unsigned long)
                0x00000000c000f00b                operator new[](unsigned long)
                0x00000000c000f010                operator delete(void*)
                0x00000000c000f015                operator delete(void*, unsigned long)
                0x00000000c000f01a                operator delete[](void*)
                0x00000000c000f01f                operator delete[](void*, unsigned long)
 .text          0x00000000c000f024      0x1ef dbg/kconsole.32
                0x00000000c000f024                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000f085                Dbg::logc(char)
                0x00000000c000f09c                Dbg::logs(char*)
                0x00000000c000f0b9                Dbg::logWriteInt(unsigned int)
                0x00000000c000f0d6                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000f0f5                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000f213        0x1 
 .text          0x00000000c000f214      0xb68 fs/vfs.32
                0x00000000c000f214                File::read(unsigned long long, void*, int*)
                0x00000000c000f26c                File::write(unsigned long long, void*, int*)
                0x00000000c000f2c4                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f31c                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f34a                File::isAtty()
                0x00000000c000f34e                Directory::isAtty()
                0x00000000c000f352                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f358                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f35e                File::~File()
                0x00000000c000f35e                File::~File()
                0x00000000c000f382                File::~File()
                0x00000000c000f3ac                Directory::~Directory()
                0x00000000c000f3ac                Directory::~Directory()
                0x00000000c000f3d0                Directory::~Directory()
                0x00000000c000f3fa                Filesystem::Filesystem()
                0x00000000c000f3fa                Filesystem::Filesystem()
                0x00000000c000f41e                Filesystem::~Filesystem()
                0x00000000c000f41e                Filesystem::~Filesystem()
                0x00000000c000f42c                Filesystem::~Filesystem()
                0x00000000c000f450                initVFS()
                0x00000000c000f47a                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f624                File::File(char const*, Process*)
                0x00000000c000f624                File::File(char const*, Process*)
                0x00000000c000f688                File::open(FileOpenMode)
                0x00000000c000f6e6                File::close()
                0x00000000c000f746                File::seek(unsigned long long)
                0x00000000c000f79c                File::tell(unsigned long long*)
                0x00000000c000f7ec                File::rewind()
                0x00000000c000f800                File::unlink()
                0x00000000c000f84c                File::rename(char const*)
                0x00000000c000f89a                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f8f6                File::exists()
                0x00000000c000f934                File::stat(unsigned long long*, bool*)
                0x00000000c000f995                getcwd(Process*, char*, int)
                0x00000000c000f9bf                setcwd(Process*, char*)
                0x00000000c000fae6                Directory::Directory(char const*, Process*)
                0x00000000c000fae6                Directory::Directory(char const*, Process*)
                0x00000000c000fb4a                Directory::open()
                0x00000000c000fba6                Directory::close()
                0x00000000c000fc06                Directory::unlink()
                0x00000000c000fc52                Directory::rename(char const*)
                0x00000000c000fca0                Directory::exists()
                0x00000000c000fcde                Directory::read(dirent*)
                0x00000000c000fd2a                Directory::create()
                0x00000000c000fd76                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fd7c       0x84 hal/bus.32
                0x00000000c000fd7c                Bus::Bus(char const*)
                0x00000000c000fd7c                Bus::Bus(char const*)
                0x00000000c000fdb2                Bus::~Bus()
                0x00000000c000fdb2                Bus::~Bus()
                0x00000000c000fdd6                Bus::~Bus()
 .text          0x00000000c000fe00      0x14e hal/buzzer.32
                0x00000000c000fe00                Buzzer::Buzzer(char const*)
                0x00000000c000fe00                Buzzer::Buzzer(char const*)
                0x00000000c000fe44                Buzzer::~Buzzer()
                0x00000000c000fe44                Buzzer::~Buzzer()
                0x00000000c000fe68                Buzzer::~Buzzer()
                0x00000000c000fe92                Buzzer::stop()
                0x00000000c000fea5                beepThread(void*)
                0x00000000c000fee0                Buzzer::beep(int, int, bool)
 .text          0x00000000c000ff4e      0x42f hal/clock.32
                0x00000000c000ff4e                loadClockSettings()
                0x00000000c000ff68                Clock::Clock(char const*)
                0x00000000c000ff68                Clock::Clock(char const*)
                0x00000000c000ff9e                Clock::~Clock()
                0x00000000c000ff9e                Clock::~Clock()
                0x00000000c000ffc2                Clock::~Clock()
                0x00000000c000ffec                Clock::timeInSecondsLocal()
                0x00000000c0010034                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c001008d                datetimeToSeconds(datetime_t)
                0x00000000c00101b4                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0010214                secondsToDatetime(unsigned long long)
                0x00000000c0010358                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c001037d        0x1 
 .text          0x00000000c001037e      0x504 hal/device.32
                0x00000000c001037e                Device::hibernate()
                0x00000000c0010380                Device::wake()
                0x00000000c0010382                Device::detect()
                0x00000000c0010384                Device::disableLegacy()
                0x00000000c0010386                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010388                DriverlessDevice::close(int, int, void*)
                0x00000000c001038c                DriverlessDevice::detect()
                0x00000000c001038e                DriverlessDevice::open(int, int, void*)
                0x00000000c00103a2                Device::~Device()
                0x00000000c00103a2                Device::~Device()
                0x00000000c00103b0                Device::~Device()
                0x00000000c00103d8                Device::findAndLoadDriver()
                0x00000000c00103da                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0010400                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0010454                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00104b2                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010500                Device::addChild(Device*)
                0x00000000c0010544                Device::removeAllChildren()
                0x00000000c001058a                Device::hibernateAll()
                0x00000000c00105ba                Device::wakeAll()
                0x00000000c00105ea                Device::detectAll()
                0x00000000c001061a                Device::disableLegacyAll()
                0x00000000c001064a                Device::loadDriversForAll()
                0x00000000c0010676                Device::closeAll()
                0x00000000c00106ac                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00106e2                Device::setName(char const*)
                0x00000000c00106f0                Device::Device(char const*)
                0x00000000c00106f0                Device::Device(char const*)
                0x00000000c00107e2                Device::getName()
                0x00000000c00107ec                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00107ec                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010814                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010858                getDevicesOfType(DeviceType)
 .text          0x00000000c0010882       0x84 hal/diskctrl.32
                0x00000000c0010882                HardDiskController::HardDiskController(char const*)
                0x00000000c0010882                HardDiskController::HardDiskController(char const*)
                0x00000000c00108b8                HardDiskController::~HardDiskController()
                0x00000000c00108b8                HardDiskController::~HardDiskController()
                0x00000000c00108dc                HardDiskController::~HardDiskController()
 .text          0x00000000c0010906       0xde hal/diskphys.32
                0x00000000c0010906                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010906                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001096e                PhysicalDisk::startCache()
                0x00000000c0010996                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010996                PhysicalDisk::~PhysicalDisk()
                0x00000000c00109ba                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00109e4      0x142 hal/fpu.32
                0x00000000c00109e4                FPU::FPU(char const*)
                0x00000000c00109e4                FPU::FPU(char const*)
                0x00000000c0010a1a                FPU::~FPU()
                0x00000000c0010a1a                FPU::~FPU()
                0x00000000c0010a3e                FPU::~FPU()
                0x00000000c0010a68                setupFPU()
 .text          0x00000000c0010b26     0x12db hal/intctrl.32
                0x00000000c0010b26                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010b5e                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010bb0                doubleFault(regs*, void*)
                0x00000000c0010bca                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010c66                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010d0e                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010d95                nmiHandler(regs*, void*)
                0x00000000c0010da3                int_handler
                0x00000000c0010e3e                InterruptController::InterruptController(char const*)
                0x00000000c0010e3e                InterruptController::InterruptController(char const*)
                0x00000000c0010ee4                InterruptController::~InterruptController()
                0x00000000c0010ee4                InterruptController::~InterruptController()
                0x00000000c0010f08                InterruptController::~InterruptController()
                0x00000000c0010f32                displayDebugInfo(regs*)
                0x00000000c0011349                x87EmulHandler(regs*, void*)
                0x00000000c00113ac                gpFault(regs*, void*)
                0x00000000c00113e5                pgFault(regs*, void*)
                0x00000000c00113fc                otherISRHandler(regs*, void*)
                0x00000000c001141b                opcodeFault(regs*, void*)
                0x00000000c00119d4                displayProgramFault(char const*)
                0x00000000c00119fc                setupInterruptController()
                0x00000000c0011db4                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0011e01        0x1 
 .text          0x00000000c0011e02      0x608 hal/keybrd.32
                0x00000000c0011e02                startGUI(void*)
                0x00000000c0011e74                sendKeyToTerminal(unsigned char)
                0x00000000c0011ee0                sendKeyboardToken(KeyboardToken)
                0x00000000c00122bb                clearInternalKeybuffer(VgaText*)
                0x00000000c00122f0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0012380                Keyboard::Keyboard(char const*)
                0x00000000c0012380                Keyboard::Keyboard(char const*)
                0x00000000c00123bc                Keyboard::~Keyboard()
                0x00000000c00123bc                Keyboard::~Keyboard()
                0x00000000c00123e0                Keyboard::~Keyboard()
 .text          0x00000000c001240a      0x400 hal/logidisk.32
                0x00000000c001240a                LogicalDisk::close(int, int, void*)
                0x00000000c001240e                LogicalDisk::~LogicalDisk()
                0x00000000c001240e                LogicalDisk::~LogicalDisk()
                0x00000000c0012432                LogicalDisk::~LogicalDisk()
                0x00000000c001245c                LogicalDisk::open(int, int, void*)
                0x00000000c0012470                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c00124a8                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00124ee                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00124ee                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00125a4                LogicalDisk::assignDriveLetter()
                0x00000000c001265a                LogicalDisk::mount()
                0x00000000c00126cc                LogicalDisk::unmount()
                0x00000000c00126dc                LogicalDisk::unassignDriveLetter()
                0x00000000c0012732                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c001279e                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c001280a       0x84 hal/mouse.32
                0x00000000c001280a                Mouse::Mouse(char const*)
                0x00000000c001280a                Mouse::Mouse(char const*)
                0x00000000c0012840                Mouse::~Mouse()
                0x00000000c0012840                Mouse::~Mouse()
                0x00000000c0012864                Mouse::~Mouse()
 .text          0x00000000c001288e      0x339 hal/partition.32
                0x00000000c001288e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012936                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012bc7        0x1 
 .text          0x00000000c0012bc8      0x2e7 hal/timer.32
                0x00000000c0012bc8                Timer::Timer(char const*)
                0x00000000c0012bc8                Timer::Timer(char const*)
                0x00000000c0012bfe                Timer::~Timer()
                0x00000000c0012bfe                Timer::~Timer()
                0x00000000c0012c22                Timer::~Timer()
                0x00000000c0012c4c                Timer::read()
                0x00000000c0012c57                timerHandler(unsigned long long)
                0x00000000c0012d8e                setupTimer(int)
 *fill*         0x00000000c0012eaf        0x1 
 .text          0x00000000c0012eb0      0x2d1 hal/vcache.32
                0x00000000c0012eb0                VCache::VCache(PhysicalDisk*)
                0x00000000c0012eb0                VCache::VCache(PhysicalDisk*)
                0x00000000c0012fa0                VCache::writeWriteBuffer()
                0x00000000c0012fdc                VCache::~VCache()
                0x00000000c0012fdc                VCache::~VCache()
                0x00000000c001301c                VCache::~VCache()
                0x00000000c0013044                VCache::write(unsigned long long, int, void*)
                0x00000000c0013128                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0013181        0x1 
 .text          0x00000000c0013182      0x26d hal/video.32
                0x00000000c0013182                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00131cc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001324a                Video::clearScreen(unsigned int)
                0x00000000c001327e                Video::putpixel(int, int, unsigned int)
                0x00000000c001328c                Video::Video(char const*)
                0x00000000c001328c                Video::Video(char const*)
                0x00000000c00132c2                Video::~Video()
                0x00000000c00132c2                Video::~Video()
                0x00000000c00132e6                Video::~Video()
                0x00000000c0013310                Video::isMonochrome()
                0x00000000c001331c                Video::getWidth()
                0x00000000c0013328                Video::getHeight()
                0x00000000c0013334                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c00133ef        0x1 
 .text          0x00000000c00133f0      0xd04 hw/acpi.32
                0x00000000c00133f0                ACPI::close(int, int, void*)
                0x00000000c00134a5                findRSDP()
                0x00000000c001352f                loadACPITables(unsigned char*)
                0x00000000c0013756                findRSDT(unsigned char*)
                0x00000000c0013874                findDataTable(unsigned char*, char*)
                0x00000000c0013910                scanMADT()
                0x00000000c0013ca4                ACPI::ACPI()
                0x00000000c0013ca4                ACPI::ACPI()
                0x00000000c0013d04                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013de6                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013eec                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013ef2                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0013f3a                ACPI::open(int, int, void*)
                0x00000000c00140dc                ACPI::sleep()
 .text          0x00000000c00140f4     0x1796 hw/cpu.32
                0x00000000c00140f4                CPU::close(int, int, void*)
                0x00000000c00140f7                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c001428b                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0014539                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0014555                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c001456d                AMD_K6_writeback(int, int, int)
                0x00000000c00145e0                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0014663                cpuidCheckEDX(unsigned int)
                0x00000000c0014690                cpuidCheckECX(unsigned int)
                0x00000000c00146bd                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00146ea                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0014717                getCPUNumber()
                0x00000000c001471a                thisCPU()
                0x00000000c001472e                CPU::CPU()
                0x00000000c001472e                CPU::CPU()
                0x00000000c00147bc                CPU::displayFeatures()
                0x00000000c0014a38                CPU::detectFeatures()
                0x00000000c001542a                CPU::setupSMEP()
                0x00000000c0015444                CPU::setupUMIP()
                0x00000000c001545c                CPU::setupTSC()
                0x00000000c0015474                CPU::setupLargePages()
                0x00000000c001548c                CPU::setupPAT()
                0x00000000c00154c8                CPU::setupMTRR()
                0x00000000c00154ca                CPU::setupGlobalPages()
                0x00000000c00154e0                CPU::allowUsermodeDataAccess()
                0x00000000c00154f2                CPU::prohibitUsermodeDataAccess()
                0x00000000c0015504                CPU::setupSMAP()
                0x00000000c001552a                CPU::setupFeatures()
                0x00000000c00155cc                CPU::open(int, int, void*)
                0x00000000c00156a2                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c001588a        0x0 hw/ports.32
 .text          0x00000000c001588a      0x338 krnl/panic.32
                0x00000000c001588a                Krnl::panic(char const*)
 .text          0x00000000c0015bc2      0x503 reg/registry.32
                0x00000000c0015bc2                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015d1a                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015e79                Reg::getLine(char*, char*, char*)
                0x00000000c0015eb0                Reg::readInt(char*, char*, int*)
                0x00000000c0015f9b                Reg::readString(char*, char*, char*, int)
                0x00000000c001601c                Reg::readBool(char*, char*, bool*)
                0x00000000c0016041                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001606d                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0016099                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00160c5       0x18 sys/sc_exit.32
                0x00000000c00160c5                Sys::exit(regs*)
 .text          0x00000000c00160dd       0x95 sys/sc_loaddll.32
                0x00000000c00160dd                Sys::loadDLL(regs*)
 .text          0x00000000c0016172       0x68 sys/sc_read.32
                0x00000000c0016172                Sys::read(regs*)
 .text          0x00000000c00161da       0x55 sys/sc_sbrk.32
                0x00000000c00161da                Sys::sbrk(regs*)
 .text          0x00000000c001622f       0x68 sys/sc_write.32
                0x00000000c001622f                Sys::write(regs*)
 .text          0x00000000c0016297       0x1a sys/sc_yield.32
                0x00000000c0016297                Sys::yield(regs*)
 .text          0x00000000c00162b1      0xf85 sys/syscalls.32
                0x00000000c00162b1                sysCallGetPID(regs*)
                0x00000000c00162bd                sysCallSeekDir(regs*)
                0x00000000c00162c2                sysCallTellDir(regs*)
                0x00000000c00162c7                sysCallVerify(regs*)
                0x00000000c00162d1                sysCallFork(regs*)
                0x00000000c00162dc                sysCallExecve(regs*)
                0x00000000c00162e7                sysCallGetArgc(regs*)
                0x00000000c00162f7                sysFormatDisk(regs*)
                0x00000000c0016361                sysSetDiskVolumeLabel(regs*)
                0x00000000c00163a7                sysGetDiskVolumeLabel(regs*)
                0x00000000c00163f8                sysShutdown(regs*)
                0x00000000c0016456                sysCallGetCwd(regs*)
                0x00000000c0016475                sysCallSetCwd(regs*)
                0x00000000c0016491                sysCallRealpath(regs*)
                0x00000000c00164d4                sysCallReadDir(regs*)
                0x00000000c0016562                sysCallIsATTY(regs*)
                0x00000000c00165bc                sysCallSeek(regs*)
                0x00000000c0016625                sysCallTell(regs*)
                0x00000000c00166a2                sysCallSizeFromFilename(regs*)
                0x00000000c0016753                sysCallSize(regs*)
                0x00000000c00167d6                sysCallClose(regs*)
                0x00000000c001685e                sysCallOpenDir(regs*)
                0x00000000c00168cb                sysCallMakeDir(regs*)
                0x00000000c0016924                sysCallCloseDir(regs*)
                0x00000000c001698a                sysCallWait(regs*)
                0x00000000c00169a4                sysCallRmdir(regs*)
                0x00000000c00169f6                sysCallUnlink(regs*)
                0x00000000c0016a48                sysCallGetArgv(regs*)
                0x00000000c0016a94                sysCallTTYName(regs*)
                0x00000000c0016b17                sysCallGetEnv(regs*)
                0x00000000c0016b69                sysCallUSleep(regs*)
                0x00000000c0016b90                sysCallSpawn(regs*)
                0x00000000c0016be8                sysAppSettings(regs*)
                0x00000000c0016d07                sysSetFatAttrib(regs*)
                0x00000000c0016d67                sysPanic(regs*)
                0x00000000c0016d8d                sysPipe(regs*)
                0x00000000c0016dd2                sysGetUnixTime(regs*)
                0x00000000c0016de6                string_ends_with(char const*, char const*)
                0x00000000c0016e2e                sysCallOpen(regs*)
                0x00000000c001703b                setupSystemCalls()
                0x00000000c00171f4                systemCall(regs*, void*)
 .text          0x00000000c0017236     0x11c7 thr/elf.32
                0x00000000c0017236                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00174b3                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00176c9                Thr::runtimeReferenceHelper()
                0x00000000c00176dc                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001772b                Thr::loadKernelSymbolTable(char const*)
                0x00000000c00179ec                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001818a                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00181bc                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00181f3                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001820d                Thr::loadDLL(char const*, bool)
                0x00000000c00183d3                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00183fd        0x1 
 .text          0x00000000c00183fe      0xfce thr/prcssthr.32
                0x00000000c00183fe                changeTSS
                0x00000000c001842c                Process::addArgs(char**)
                0x00000000c0018486                Process::Process(char const*, Process*, char**)
                0x00000000c0018486                Process::Process(char const*, Process*, char**)
                0x00000000c001863e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001863e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00187c1                disableIRQs()
                0x00000000c00187c9                getIRQNestingLevel()
                0x00000000c00187cf                enableIRQs()
                0x00000000c00187de                lockScheduler()
                0x00000000c00187e0                unlockScheduler()
                0x00000000c00187e2                userModeEntryPoint(void*)
                0x00000000c0018805                lockStuff()
                0x00000000c0018811                taskStartupFunction
                0x00000000c001881a                updateTimeUsed()
                0x00000000c0018878                switchToThread(ThreadControlBlock*)
                0x00000000c00188c8                Semaphore::Semaphore(int)
                0x00000000c00188c8                Semaphore::Semaphore(int)
                0x00000000c00188f6                Mutex::Mutex()
                0x00000000c00188f6                Mutex::Mutex()
                0x00000000c0018908                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00189ec                Process::createUserThread()
                0x00000000c0018a08                setupMultitasking(void (*)())
                0x00000000c0018b12                schedule()
                0x00000000c0018b97                unlockStuff()
                0x00000000c0018bcc                Semaphore::tryAcquire()
                0x00000000c0018bfa                Semaphore::assertLocked(char const*)
                0x00000000c0018c2a                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0018c6c                blockTask(TaskState)
                0x00000000c0018c8d                waitTask(int, int*, int)
                0x00000000c0018ccf                nanoSleepUntil(unsigned long long)
                0x00000000c0018d26                nanoSleep(unsigned long long)
                0x00000000c0018d3b                sleep(unsigned long long)
                0x00000000c0018d58                Semaphore::acquire()
                0x00000000c0018dc0                taskReturned
                0x00000000c0018dee                unblockTask(ThreadControlBlock*)
                0x00000000c0018e9d                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0019141                cleanerTaskFunction(void*)
                0x00000000c00191f4                terminateTask(int)
                0x00000000c00192d4                Thr::terminateFromIRQ(int)
                0x00000000c00192e0                Semaphore::release()
 .text          0x00000000c00193cc      0x8bf vm86/vm8086.32
                0x00000000c00193cc                Vm::vm8086EntryPoint(void*)
                0x00000000c00193f7                Vm::inbv(unsigned short)
                0x00000000c00193fd                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0019407                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0019417                Vm::getSegment(unsigned int)
                0x00000000c001941f                Vm::getOffset(unsigned int)
                0x00000000c0019424                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019553                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00195dd                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00195ee                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019600                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019611                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0019626                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001963c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019651                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019c8b        0x1 
 .text          0x00000000c0019c8c     0x10ed fs/fat/vfslink.32
                0x00000000c0019c8c                FAT::getName()
                0x00000000c0019c92                FAT::tell(void*, unsigned long long*)
                0x00000000c0019cc6                FAT::stat(void*, unsigned long long*)
                0x00000000c0019cfa                FAT::~FAT()
                0x00000000c0019cfa                FAT::~FAT()
                0x00000000c0019d1e                FAT::~FAT()
                0x00000000c0019d46                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019de4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019e9e                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a082                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a288                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a38e                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a3e8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a442                FAT::close(void*)
                0x00000000c001a48e                FAT::closeDir(void*)
                0x00000000c001a4da                FAT::seek(void*, unsigned long long)
                0x00000000c001a52e                fatWrapperReadDisk
                0x00000000c001a575                fatWrapperWriteDisk
                0x00000000c001a5bc                fatWrapperIoctl
                0x00000000c001a6c0                FAT::FAT()
                0x00000000c001a6c0                FAT::FAT()
                0x00000000c001a712                FAT::fixFilepath(char*)
                0x00000000c001a74a                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a872                FAT::openDir(char const*, void**)
                0x00000000c001a918                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aa02                FAT::unlink(char const*)
                0x00000000c001aa7c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001abd0                FAT::rename(char const*, char const*)
                0x00000000c001ac94                FAT::mkdir(char const*)
                0x00000000c001ad0e                FAT::exists(char const*)
 *fill*         0x00000000c001ad79        0x1 
 .text          0x00000000c001ad7a      0xbdf fs/iso9660/vfslink.32
                0x00000000c001ad7a                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001ad80                ISO9660::seek(void*, unsigned long long)
                0x00000000c001adb0                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001add4                ISO9660::getName()
                0x00000000c001adda                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001adfe                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ae04                ISO9660::unlink(char const*)
                0x00000000c001ae0a                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001ae10                ISO9660::rename(char const*, char const*)
                0x00000000c001ae16                ISO9660::mkdir(char const*)
                0x00000000c001ae1c                ISO9660::close(void*)
                0x00000000c001ae3e                ISO9660::closeDir(void*)
                0x00000000c001ae60                ISO9660::~ISO9660()
                0x00000000c001ae60                ISO9660::~ISO9660()
                0x00000000c001ae84                ISO9660::~ISO9660()
                0x00000000c001aeab                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001aeed                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001af54                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001afa4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b1e8                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b475                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001b4ca                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b69d                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b72c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b7c6                ISO9660::exists(char const*)
                0x00000000c001b7ea                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b87e                ISO9660::openDir(char const*, void**)
                0x00000000c001b936                ISO9660::ISO9660()
                0x00000000c001b936                ISO9660::ISO9660()
 *fill*         0x00000000c001b959        0x1 
 .text          0x00000000c001b95a      0x244 hal/sound/sndchannel.32
                0x00000000c001b95a                SoundChannel::~SoundChannel()
                0x00000000c001b95a                SoundChannel::~SoundChannel()
                0x00000000c001b976                SoundChannel::setSpeed(float)
                0x00000000c001b982                SoundChannel::getSpeed()
                0x00000000c001b98a                SoundChannel::setVolume(int)
                0x00000000c001b9a6                SoundChannel::getVolume()
                0x00000000c001b9ae                SoundChannel::pause()
                0x00000000c001b9b8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001b9b8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001baae                SoundChannel::play()
                0x00000000c001bab8                SoundChannel::paused()
                0x00000000c001bac0                SoundChannel::getSampleRate()
                0x00000000c001bac8                SoundChannel::getBits()
                0x00000000c001bad0                SoundChannel::getBufferUsed()
                0x00000000c001bad8                SoundChannel::getBufferSize()
                0x00000000c001bae0                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001bb52                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001bb9e      0x317 hal/sound/sndhw.32
                0x00000000c001bb9e                SoundDevice::SoundDevice(char const*)
                0x00000000c001bb9e                SoundDevice::SoundDevice(char const*)
                0x00000000c001bc0a                SoundDevice::~SoundDevice()
                0x00000000c001bc0a                SoundDevice::~SoundDevice()
                0x00000000c001bc84                SoundDevice::~SoundDevice()
                0x00000000c001bcae                SoundDevice::getFreeChannelNum()
                0x00000000c001bcc8                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001bd38                SoundDevice::removeChannel(int)
                0x00000000c001bd6a                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001bdd6                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001beb5        0x0 hw/bus/isa.32
 *fill*         0x00000000c001beb5        0x1 
 .text          0x00000000c001beb6      0x6c1 hw/bus/pci.32
                0x00000000c001beb6                PCI::open(int, int, void*)
                0x00000000c001beca                PCI::close(int, int, void*)
                0x00000000c001bece                PCI::PCI()
                0x00000000c001bece                PCI::PCI()
                0x00000000c001bf4e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001bf96                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfb8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001bfdc                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c020                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c044                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c066                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c088                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c0ac                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c10c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c178                PCI::checkBus(unsigned char)
                0x00000000c001c19c                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c30c                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c4b8                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c524                PCI::detect()
 *fill*         0x00000000c001c577        0x1 
 .text          0x00000000c001c578      0xc70 hw/diskctrl/ide.32
                0x00000000c001c578                IDE::close(int, int, void*)
                0x00000000c001c57c                IDE::IDE()
                0x00000000c001c57c                IDE::IDE()
                0x00000000c001c5b0                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c5c2                selectDrive(unsigned char, unsigned char)
                0x00000000c001c5c4                IDE::getBase(unsigned char)
                0x00000000c001c5d6                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c696                IDE::read(unsigned char, unsigned char)
                0x00000000c001c744                IDE::waitInterrupt(unsigned char)
                0x00000000c001c7aa                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c7c6                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c7e2                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c828                IDE::open(int, int, void*)
                0x00000000c001cc38                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cd04                IDE::detect()
                0x00000000c001cfec                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d182                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d1e8      0x62b hw/diskphys/ata.32
                0x00000000c001d1e8                ATA::close(int, int, void*)
                0x00000000c001d20c                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d20e                ATA::ATA()
                0x00000000c001d20e                ATA::ATA()
                0x00000000c001d23c                ATA::flush(bool)
                0x00000000c001d286                ATA::readyForCommand()
                0x00000000c001d2d6                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d654                ATA::read(unsigned long long, int, void*)
                0x00000000c001d6bc                ATA::write(unsigned long long, int, void*)
                0x00000000c001d724                ATA::detectCHS()
                0x00000000c001d74e                ATA::open(int, int, void*)
 *fill*         0x00000000c001d813        0x1 
 .text          0x00000000c001d814      0x5b3 hw/diskphys/atapi.32
                0x00000000c001d814                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d81a                ATAPI::close(int, int, void*)
                0x00000000c001d83e                ATAPI::ATAPI()
                0x00000000c001d83e                ATAPI::ATAPI()
                0x00000000c001d86c                ATAPI::readyForCommand()
                0x00000000c001d8bc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001db7c                ATAPI::diskRemoved()
                0x00000000c001db98                ATAPI::eject()
                0x00000000c001dbde                ATAPI::diskInserted()
                0x00000000c001dc0c                ATAPI::detectMedia()
                0x00000000c001dcc8                ATAPI::open(int, int, void*)
                0x00000000c001dd48                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001ddc7        0x1 
 .text          0x00000000c001ddc8       0x8e hw/fpu/avx.32
                0x00000000c001ddc8                AVX::open(int, int, void*)
                0x00000000c001ddda                AVX::close(int, int, void*)
                0x00000000c001ddec                AVX::available()
                0x00000000c001ddfe                AVX::save(void*)
                0x00000000c001de16                AVX::load(void*)
                0x00000000c001de2e                AVX::AVX()
                0x00000000c001de2e                AVX::AVX()
 .text          0x00000000c001de56       0x90 hw/fpu/mmx.32
                0x00000000c001de56                MMX::available()
                0x00000000c001de6a                MMX::open(int, int, void*)
                0x00000000c001de7c                MMX::close(int, int, void*)
                0x00000000c001de8e                MMX::save(void*)
                0x00000000c001dea6                MMX::load(void*)
                0x00000000c001debe                MMX::MMX()
                0x00000000c001debe                MMX::MMX()
 .text          0x00000000c001dee6       0x96 hw/fpu/sse.32
                0x00000000c001dee6                SSE::open(int, int, void*)
                0x00000000c001def8                SSE::close(int, int, void*)
                0x00000000c001df0a                SSE::available()
                0x00000000c001df24                SSE::save(void*)
                0x00000000c001df3c                SSE::load(void*)
                0x00000000c001df54                SSE::SSE()
                0x00000000c001df54                SSE::SSE()
 .text          0x00000000c001df7c       0x8e hw/fpu/x87.32
                0x00000000c001df7c                x87::open(int, int, void*)
                0x00000000c001df8e                x87::close(int, int, void*)
                0x00000000c001dfa0                x87::available()
                0x00000000c001dfb2                x87::save(void*)
                0x00000000c001dfca                x87::load(void*)
                0x00000000c001dfe2                x87::x87()
                0x00000000c001dfe2                x87::x87()
 .text          0x00000000c001e00a      0x5f3 hw/intctrl/apic.32
                0x00000000c001e00a                APIC::disable()
                0x00000000c001e00c                APIC::close(int, int, void*)
                0x00000000c001e02e                IOAPIC::close(int, int, void*)
                0x00000000c001e034                APIC::io_wait()
                0x00000000c001e03a                APIC::getBase()
                0x00000000c001e07c                APIC::eoi(unsigned char)
                0x00000000c001e0aa                APIC::open(int, int, void*)
                0x00000000c001e164                IOAPIC::IOAPIC()
                0x00000000c001e164                IOAPIC::IOAPIC()
                0x00000000c001e18c                APIC::APIC()
                0x00000000c001e18c                APIC::APIC()
                0x00000000c001e25c                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e28e                IOAPIC::read(int)
                0x00000000c001e2b6                IOAPIC::open(int, int, void*)
                0x00000000c001e3ac                IOAPIC::write(int, int)
                0x00000000c001e3d8                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001e492                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001e5fd        0x1 
 .text          0x00000000c001e5fe      0x3d3 hw/intctrl/pic.32
                0x00000000c001e5fe                PIC::disable()
                0x00000000c001e62c                PIC::close(int, int, void*)
                0x00000000c001e64e                PIC::PIC()
                0x00000000c001e64e                PIC::PIC()
                0x00000000c001e724                PIC::ioWait()
                0x00000000c001e72a                PIC::getIRQReg(int)
                0x00000000c001e794                PIC::eoi(unsigned char)
                0x00000000c001e826                PIC::remap()
                0x00000000c001e992                PIC::open(int, int, void*)
 *fill*         0x00000000c001e9d1        0x1 
 .text          0x00000000c001e9d2      0x252 hw/timer/apictimer.32
                0x00000000c001e9d2                APICTimer::close(int, int, void*)
                0x00000000c001e9d8                apicTimerHandler(regs*, void*)
                0x00000000c001ea06                APICTimer::write(int)
                0x00000000c001eb04                APICTimer::open(int, int, void*)
                0x00000000c001ebfc                APICTimer::APICTimer()
                0x00000000c001ebfc                APICTimer::APICTimer()
 .text          0x00000000c001ec24      0x1a7 hw/timer/pit.32
                0x00000000c001ec24                PIT::write(int)
                0x00000000c001eca2                pitHandler(regs*, void*)
                0x00000000c001ecce                PIT::open(int, int, void*)
                0x00000000c001ed1c                PIT::close(int, int, void*)
                0x00000000c001ed4c                PIT::PIT()
                0x00000000c001ed4c                PIT::PIT()
 *fill*         0x00000000c001edcb        0x5 
 .text          0x00000000c001edd0        0xa hw/fpu/x86/avx.32
                0x00000000c001edd0                avxDetect
                0x00000000c001edd6                avxSave
                0x00000000c001edd7                avxLoad
                0x00000000c001edd8                avxInit
                0x00000000c001edd9                avxClose
 *fill*         0x00000000c001edda        0x6 
 .text          0x00000000c001ede0       0x38 hw/fpu/x86/sse.32
                0x00000000c001ede0                sseDetect
                0x00000000c001edfb                sseSave
                0x00000000c001ee01                sseLoad
                0x00000000c001ee07                sseInit
                0x00000000c001ee17                sseClose
 *fill*         0x00000000c001ee18        0x8 
 .text          0x00000000c001ee20       0x47 hw/fpu/x86/x87.32
                0x00000000c001ee26                x87Detect
                0x00000000c001ee41                x87Save
                0x00000000c001ee47                x87Load
                0x00000000c001ee4c                x87Init
                0x00000000c001ee66                x87Close
 *fill*         0x00000000c001ee67        0x1 
 .text          0x00000000c001ee68       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001ee8d        0x0 crtn.32
 *fill*         0x00000000c001ee8d        0x3 
 .text          0x00000000c001ee90      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001ee90                __divdi3
 *fill*         0x00000000c001efdb        0x1 
 .text          0x00000000c001efdc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001efdc                __moddi3
 *fill*         0x00000000c001f15a        0x2 
 .text          0x00000000c001f15c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001f15c                __udivdi3
 *fill*         0x00000000c001f25b        0x1 
 .text          0x00000000c001f25c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001f25c                __umoddi3
 *fill*         0x00000000c001f376        0xa 
 .text          0x00000000c001f380       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001f380                fabs
 *fill*         0x00000000c001f39e        0x2 
 .text          0x00000000c001f3a0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001f3a0                lrint
 .text          0x00000000c001f3ac        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001f3ac                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f3b8        0x0
 .iplt          0x00000000c001f3b8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f3b8        0xf
 .init          0x00000000c001f3b8        0x3 crti.32
                0x00000000c001f3b8                _init
 .init          0x00000000c001f3bb        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f3c0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f3c5        0x2 crtn.32

.fini           0x00000000c001f3c7        0xa
 .fini          0x00000000c001f3c7        0x3 crti.32
                0x00000000c001f3c7                _fini
 .fini          0x00000000c001f3ca        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f3cf        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f3d2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f3d2       0x23 core/computer.32
                0x00000000c001f3d2                Computer::~Computer()
                0x00000000c001f3d2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f3f6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f3f6       0x2a core/computer.32
                0x00000000c001f3f6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f420       0x15
 .text._Z10idleCommonv
                0x00000000c001f420       0x15 core/idle.32
                0x00000000c001f420                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001f435       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001f435       0x12 core/kheap.32
                0x00000000c001f435                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001f447        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001f447        0x9 core/kheap.32
                0x00000000c001f447                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f450        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f450        0x2 core/unixfile.32
                0x00000000c001f450                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f450                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f452       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f452       0x58 core/unixfile.32
                0x00000000c001f452                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f452                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f4aa       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f4aa       0xd3 core/unixfile.32
                0x00000000c001f4aa                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f57e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f57e        0x7 core/unixfile.32
                0x00000000c001f57e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f586       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f586       0xa1 core/unixfile.32
                0x00000000c001f586                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f628        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f628        0x8 core/unixfile.32
                0x00000000c001f628                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f630       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f630       0x1a hal/device.32
                0x00000000c001f630                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f630                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f64a       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f64a       0x2a hal/device.32
                0x00000000c001f64a                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f674       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f674       0xdc hal/device.32
                0x00000000c001f674                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f750       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f750       0x58 hal/device.32
                0x00000000c001f750                LinkedList<Device>::LinkedList()
                0x00000000c001f750                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001f7a8       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001f7a8       0x12 hal/fpu.32
                0x00000000c001f7a8                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001f7ba        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001f7ba        0x9 hal/fpu.32
                0x00000000c001f7ba                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001f7c3       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001f7c3       0x12 hal/intctrl.32
                0x00000000c001f7c3                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001f7d5       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001f7d5       0x12 hal/intctrl.32
                0x00000000c001f7d5                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f7e7       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f7e7       0x12 hal/intctrl.32
                0x00000000c001f7e7                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f7f9       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f7f9       0x12 hal/intctrl.32
                0x00000000c001f7f9                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f80b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f80b       0x12 hal/intctrl.32
                0x00000000c001f80b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f81d       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f81d       0x12 hal/intctrl.32
                0x00000000c001f81d                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f830        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f830        0x7 hal/timer.32
                0x00000000c001f830                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f838       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f838       0x1c hal/timer.32
                0x00000000c001f838                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f854       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f854       0xae hal/timer.32
                0x00000000c001f854                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f902       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f902       0xd3 hal/timer.32
                0x00000000c001f902                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f9d6       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f9d6       0x23 hw/acpi.32
                0x00000000c001f9d6                ACPI::~ACPI()
                0x00000000c001f9d6                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f9fa       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f9fa       0x2a hw/acpi.32
                0x00000000c001f9fa                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001fa24       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fa24       0x23 hw/cpu.32
                0x00000000c001fa24                CPU::~CPU()
                0x00000000c001fa24                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fa48       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fa48       0x2a hw/cpu.32
                0x00000000c001fa48                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001fa72       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001fa72       0x12 hw/cpu.32
                0x00000000c001fa72                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001fa84        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001fa84        0x9 hw/cpu.32
                0x00000000c001fa84                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001fa8d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001fa8d        0x9 hw/cpu.32
                0x00000000c001fa8d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001fa96       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001fa96       0x12 krnl/panic.32
                0x00000000c001fa96                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001faa8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001faa8        0x2 thr/prcssthr.32
                0x00000000c001faa8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001faa8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001faaa       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001faaa       0x3e thr/prcssthr.32
                0x00000000c001faaa                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001faaa                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fae8       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fae8       0x58 thr/prcssthr.32
                0x00000000c001fae8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fae8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb40        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fb40        0x8 thr/prcssthr.32
                0x00000000c001fb40                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001fb48       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fb48       0x23 hw/bus/pci.32
                0x00000000c001fb48                PCI::~PCI()
                0x00000000c001fb48                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fb6c       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fb6c       0x2a hw/bus/pci.32
                0x00000000c001fb6c                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fb96       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fb96       0x23 hw/diskctrl/ide.32
                0x00000000c001fb96                IDE::~IDE()
                0x00000000c001fb96                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fbba       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fbba       0x2a hw/diskctrl/ide.32
                0x00000000c001fbba                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001fbe4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fbe4       0x23 hw/diskphys/ata.32
                0x00000000c001fbe4                ATA::~ATA()
                0x00000000c001fbe4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fc08       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fc08       0x2a hw/diskphys/ata.32
                0x00000000c001fc08                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fc32       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fc32       0x23 hw/diskphys/atapi.32
                0x00000000c001fc32                ATAPI::~ATAPI()
                0x00000000c001fc32                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fc56       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fc56       0x2a hw/diskphys/atapi.32
                0x00000000c001fc56                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001fc80       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001fc80       0x23 hw/fpu/avx.32
                0x00000000c001fc80                AVX::~AVX()
                0x00000000c001fc80                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001fca4       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001fca4       0x2a hw/fpu/avx.32
                0x00000000c001fca4                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001fcce       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001fcce       0x23 hw/fpu/mmx.32
                0x00000000c001fcce                MMX::~MMX()
                0x00000000c001fcce                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001fcf2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001fcf2       0x2a hw/fpu/mmx.32
                0x00000000c001fcf2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001fd1c       0x23
 .text._ZN3SSED2Ev
                0x00000000c001fd1c       0x23 hw/fpu/sse.32
                0x00000000c001fd1c                SSE::~SSE()
                0x00000000c001fd1c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001fd40       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001fd40       0x2a hw/fpu/sse.32
                0x00000000c001fd40                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001fd6a       0x23
 .text._ZN3x87D2Ev
                0x00000000c001fd6a       0x23 hw/fpu/x87.32
                0x00000000c001fd6a                x87::~x87()
                0x00000000c001fd6a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001fd8e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001fd8e       0x2a hw/fpu/x87.32
                0x00000000c001fd8e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001fdb8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fdb8       0x23 hw/intctrl/apic.32
                0x00000000c001fdb8                IOAPIC::~IOAPIC()
                0x00000000c001fdb8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001fddc       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001fddc       0x2a hw/intctrl/apic.32
                0x00000000c001fddc                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001fe06       0x23
 .text._ZN4APICD2Ev
                0x00000000c001fe06       0x23 hw/intctrl/apic.32
                0x00000000c001fe06                APIC::~APIC()
                0x00000000c001fe06                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001fe2a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001fe2a       0x2a hw/intctrl/apic.32
                0x00000000c001fe2a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001fe54       0x23
 .text._ZN3PICD2Ev
                0x00000000c001fe54       0x23 hw/intctrl/pic.32
                0x00000000c001fe54                PIC::~PIC()
                0x00000000c001fe54                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001fe78       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001fe78       0x2a hw/intctrl/pic.32
                0x00000000c001fe78                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001fea2       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001fea2       0x23 hw/timer/apictimer.32
                0x00000000c001fea2                APICTimer::~APICTimer()
                0x00000000c001fea2                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001fec6       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001fec6       0x2a hw/timer/apictimer.32
                0x00000000c001fec6                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001fef0       0x23
 .text._ZN3PITD2Ev
                0x00000000c001fef0       0x23 hw/timer/pit.32
                0x00000000c001fef0                PIT::~PIT()
                0x00000000c001fef0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ff14       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ff14       0x2a hw/timer/pit.32
                0x00000000c001ff14                PIT::~PIT()

.rodata         0x00000000c001ff3e     0x37be
                0x00000000c001ff3e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001ff3e        0x2 
 .ctors         0x00000000c001ff40        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ff44        0x4 core/unixfile.32
 .ctors         0x00000000c001ff48        0x4 thr/prcssthr.32
 .ctors         0x00000000c001ff4c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff50                end_ctors = .
                0x00000000c001ff50                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ff50        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ff54        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ff54                __DTOR_END__
                0x00000000c001ff58                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ff58        0x8 
 .rodata        0x00000000c001ff60      0x101 acpica/utclib.32
                0x00000000c001ff60                AcpiGbl_Ctypes
 *fill*         0x00000000c0020061        0x3 
 .rodata        0x00000000c0020064       0x18 core/malloc.32
 *fill*         0x00000000c002007c        0x4 
 .rodata        0x00000000c0020080      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00201a0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00201f6        0xa 
 .rodata        0x00000000c0020200      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020600       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c00206b6        0x2 
 .rodata.str1.4
                0x00000000c00206b8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0020a5d        0x3 
 .rodata        0x00000000c0020a60       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020ac0       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020ae0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020af4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020b36        0x2 
 .rodata.cst8   0x00000000c0020b38        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020b40       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0020bac       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020c70       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0020cba        0x6 
 .rodata.cst8   0x00000000c0020cc0        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020cc8        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020cd4       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c0020d1c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0020d1c      0x1c0 core/computer.32
                                        0x1c2 (size before relaxing)
 .rodata._ZTV8Computer
                0x00000000c0020edc       0x2c core/computer.32
                0x00000000c0020edc                vtable for Computer
 .rodata.str1.1
                0x00000000c0020f08       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020f24       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020f54        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020f60       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0020f7b       0x5f core/physmgr.32
 *fill*         0x00000000c0020fda        0x2 
 .rodata.str1.4
                0x00000000c0020fdc       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c0021029       0x39 core/pipe.32
 *fill*         0x00000000c0021062        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0021064       0x1c core/pipe.32
                0x00000000c0021064                vtable for Pipe
 .rodata.str1.1
                0x00000000c0021080       0x9d core/terminal.32
 *fill*         0x00000000c002111d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0021120       0x1c core/terminal.32
                0x00000000c0021120                vtable for VgaText
 .rodata        0x00000000c002113c       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002115a       0x19 core/unixfile.32
 *fill*         0x00000000c0021173        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021174       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021196       0x15 core/unixfile.32
 *fill*         0x00000000c00211ab        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00211ac       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00211f7        0x8 core/unixfile.32
 *fill*         0x00000000c00211ff        0x1 
 .rodata.str1.4
                0x00000000c0021200       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0021220       0x1c core/unixfile.32
                0x00000000c0021220                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002123c       0x1c core/unixfile.32
                0x00000000c002123c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021258      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00213df      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00214e2       0x33 coreobjs/c++.32
 *fill*         0x00000000c0021515        0x3 
 .rodata.str1.4
                0x00000000c0021518       0x3f dbg/kconsole.32
 *fill*         0x00000000c0021557        0x1 
 .rodata        0x00000000c0021558      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c00216a8       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c00216a8       0x64 fs/vfs.32
                0x00000000c00216a8                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c002170c       0x1c fs/vfs.32
                0x00000000c002170c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0021728       0x1c fs/vfs.32
                0x00000000c0021728                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021744       0x2c hal/bus.32
                0x00000000c0021744                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0021770       0x30 hal/buzzer.32
                0x00000000c0021770                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c00217a0       0x3c hal/clock.32
                0x00000000c00217a0                vtable for Clock
 *fill*         0x00000000c00217dc        0x4 
 .rodata        0x00000000c00217e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021810       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002182e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002182e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002182e       0x19 hal/device.32
 *fill*         0x00000000c002182e        0x2 
 .rodata._ZTV6Device
                0x00000000c0021830       0x2c hal/device.32
                0x00000000c0021830                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002185c       0x2c hal/device.32
                0x00000000c002185c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021888       0x2c hal/diskctrl.32
                0x00000000c0021888                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00218b4       0x34 hal/diskphys.32
                0x00000000c00218b4                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00218e8        0x9 hal/fpu.32
 *fill*         0x00000000c00218f1        0x3 
 .rodata._ZTV3FPU
                0x00000000c00218f4       0x38 hal/fpu.32
                0x00000000c00218f4                vtable for FPU
 .rodata        0x00000000c002192c      0x2f0 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0021c1c       0x48 hal/intctrl.32
                0x00000000c0021c1c                vtable for InterruptController
 .rodata        0x00000000c0021c64       0x4e hal/keybrd.32
 *fill*         0x00000000c0021cb2        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021cb4       0x34 hal/keybrd.32
                0x00000000c0021cb4                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021ce8       0x7a hal/logidisk.32
 *fill*         0x00000000c0021d62        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0021d64       0x2c hal/logidisk.32
                0x00000000c0021d64                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021d90       0x2c hal/mouse.32
                0x00000000c0021d90                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021dbc        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021dc7       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021dc7        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021dc7       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021dc7       0x15 hal/timer.32
 *fill*         0x00000000c0021dc7        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021dc8       0x30 hal/timer.32
                0x00000000c0021dc8                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021df8       0x10 hal/vcache.32
                0x00000000c0021df8                vtable for VCache
 .rodata.str1.1
                0x00000000c0021e08        0xf hal/video.32
 *fill*         0x00000000c0021e17        0x1 
 .rodata._ZTV5Video
                0x00000000c0021e18       0x40 hal/video.32
                0x00000000c0021e18                vtable for Video
 .rodata.str1.1
                0x00000000c0021e58       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c0021f0c       0xe5 hw/acpi.32
 *fill*         0x00000000c0021ff1        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021ff4       0x2c hw/acpi.32
                0x00000000c0021ff4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022020      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c00223e1        0x3 
 .rodata._ZTV3CPU
                0x00000000c00223e4       0x2c hw/cpu.32
                0x00000000c00223e4                vtable for CPU
 .rodata.str1.1
                0x00000000c0022410       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c00224ce        0x2 
 .rodata.str1.4
                0x00000000c00224d0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00225e2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 *fill*         0x00000000c0022627        0x1 
 .rodata.str1.4
                0x00000000c0022628       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c00226e4       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c00227a6      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c00229b2       0xfb thr/prcssthr.32
 *fill*         0x00000000c0022aad        0x3 
 .rodata.str1.4
                0x00000000c0022ab0      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0022d57       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022d57       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022d57       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022d57       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022d57        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022d57       0x5f vm86/vm8086.32
 *fill*         0x00000000c0022db6        0x2 
 .rodata        0x00000000c0022db8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022de8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0022e3b        0x1 
 .rodata.str1.4
                0x00000000c0022e3c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0022e64       0x64 fs/fat/vfslink.32
                0x00000000c0022e64                vtable for FAT
 .rodata.str1.1
                0x00000000c0022ec8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0022f11        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0022f14       0x64 fs/iso9660/vfslink.32
                0x00000000c0022f14                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022f78       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0022f92        0x2 
 .rodata.cst4   0x00000000c0022f94        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0022f98       0x38 hal/sound/sndhw.32
                0x00000000c0022f98                vtable for SoundDevice
 .rodata.cst4   0x00000000c0022fd0       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0022fe0       0x81 hw/bus/pci.32
 *fill*         0x00000000c0023061        0x3 
 .rodata._ZTV3PCI
                0x00000000c0023064       0x2c hw/bus/pci.32
                0x00000000c0023064                vtable for PCI
 .rodata.str1.1
                0x00000000c0023090      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00232c6        0x2 
 .rodata._ZTV3IDE
                0x00000000c00232c8       0x2c hw/diskctrl/ide.32
                0x00000000c00232c8                vtable for IDE
 .rodata.str1.1
                0x00000000c00232f4       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0023315        0x3 
 .rodata._ZTV3ATA
                0x00000000c0023318       0x34 hw/diskphys/ata.32
                0x00000000c0023318                vtable for ATA
 .rodata.str1.1
                0x00000000c002334c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0023384       0x34 hw/diskphys/atapi.32
                0x00000000c0023384                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00233b8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00233c0       0x38 hw/fpu/avx.32
                0x00000000c00233c0                vtable for AVX
 .rodata.str1.1
                0x00000000c00233f8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0023400       0x38 hw/fpu/mmx.32
                0x00000000c0023400                vtable for MMX
 .rodata.str1.1
                0x00000000c0023438        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0023440       0x38 hw/fpu/sse.32
                0x00000000c0023440                vtable for SSE
 .rodata.str1.1
                0x00000000c0023478        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0023480       0x38 hw/fpu/x87.32
                0x00000000c0023480                vtable for x87
 .rodata        0x00000000c00234b8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0023590       0x48 hw/intctrl/apic.32
                0x00000000c0023590                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00235d8       0x2c hw/intctrl/apic.32
                0x00000000c00235d8                vtable for IOAPIC
 .rodata        0x00000000c0023604       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0023626        0x2 
 .rodata._ZTV3PIC
                0x00000000c0023628       0x48 hw/intctrl/pic.32
                0x00000000c0023628                vtable for PIC
 .rodata.str1.1
                0x00000000c0023670        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002367b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002367c       0x30 hw/timer/apictimer.32
                0x00000000c002367c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00236ac       0x1d hw/timer/pit.32
 *fill*         0x00000000c00236c9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00236cc       0x30 hw/timer/pit.32
                0x00000000c00236cc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00236fc      0x60d
 *(.data)
 .data          0x00000000c00236fc        0x0 crti.32
 .data          0x00000000c00236fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00236fc                __dso_handle
 .data          0x00000000c0023700        0x0 acpica/utclib.32
 .data          0x00000000c0023700        0x0 core/malloc.32
 .data          0x00000000c0023700        0x0 libk/string.32
 .data          0x00000000c0023700        0x0 fs/fat/diskio.32
 .data          0x00000000c0023700        0x0 fs/fat/ff.32
 .data          0x00000000c0023700        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023700        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023700        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0023700        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0023700        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0023700        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0023700        0x0 core/computer.32
 .data          0x00000000c0023700        0x0 core/gdt.32
 .data          0x00000000c0023700        0x0 core/idle.32
 .data          0x00000000c0023700        0x0 core/idt.32
 .data          0x00000000c0023700        0x4 core/kheap.32
 .data          0x00000000c0023704        0x0 core/main.32
 .data          0x00000000c0023704        0x4 core/physmgr.32
                0x00000000c0023704                Phys::bitmap
 .data          0x00000000c0023708        0x0 core/pipe.32
 *fill*         0x00000000c0023708       0x18 
 .data          0x00000000c0023720       0x60 core/terminal.32
                0x00000000c0023720                VgaText::hiddenOut
                0x00000000c0023740                ansiToVGAMappings
 .data          0x00000000c0023780        0x0 core/tss.32
 .data          0x00000000c0023780        0x4 core/unixfile.32
                0x00000000c0023780                UnixFile::nextFd
 .data          0x00000000c0023784        0x8 core/virtmgr.32
                0x00000000c0023784                Virt::pageAllocPtr
                0x00000000c0023788                Virt::bitmap
 .data          0x00000000c002378c        0x4 coreobjs/c++.32
                0x00000000c002378c                __stack_chk_guard
 .data          0x00000000c0023790        0x0 dbg/kconsole.32
 .data          0x00000000c0023790        0x0 fs/vfs.32
 .data          0x00000000c0023790        0x0 hal/bus.32
 .data          0x00000000c0023790        0x0 hal/buzzer.32
 .data          0x00000000c0023790        0x0 hal/clock.32
 .data          0x00000000c0023790        0x0 hal/device.32
 .data          0x00000000c0023790        0x0 hal/diskctrl.32
 .data          0x00000000c0023790        0x0 hal/diskphys.32
 .data          0x00000000c0023790        0x0 hal/fpu.32
 *fill*         0x00000000c0023790       0x10 
 .data          0x00000000c00237a0      0x2a0 hal/intctrl.32
                0x00000000c00237a0                exceptionNames
 .data          0x00000000c0023a40        0x0 hal/keybrd.32
 .data          0x00000000c0023a40        0x0 hal/logidisk.32
 .data          0x00000000c0023a40        0x0 hal/mouse.32
 .data          0x00000000c0023a40        0x0 hal/partition.32
 .data          0x00000000c0023a40        0x0 hal/timer.32
 .data          0x00000000c0023a40        0x0 hal/vcache.32
 .data          0x00000000c0023a40        0x0 hal/video.32
 .data          0x00000000c0023a40       0x10 hw/acpi.32
                0x00000000c0023a40                legacyIRQRemaps
 *fill*         0x00000000c0023a50       0x10 
 .data          0x00000000c0023a60      0x2a4 hw/cpu.32
                0x00000000c0023a60                cpuNameList
                0x00000000c0023d00                lastCode
 .data          0x00000000c0023d04        0x0 hw/ports.32
 .data          0x00000000c0023d04        0x0 krnl/panic.32
 .data          0x00000000c0023d04        0x0 reg/registry.32
 .data          0x00000000c0023d04        0x0 sys/sc_exit.32
 .data          0x00000000c0023d04        0x0 sys/sc_loaddll.32
 .data          0x00000000c0023d04        0x0 sys/sc_read.32
 .data          0x00000000c0023d04        0x0 sys/sc_sbrk.32
 .data          0x00000000c0023d04        0x0 sys/sc_write.32
 .data          0x00000000c0023d04        0x0 sys/sc_yield.32
 .data          0x00000000c0023d04        0x0 sys/syscalls.32
 .data          0x00000000c0023d04        0x0 thr/elf.32
 .data          0x00000000c0023d04        0x4 thr/prcssthr.32
                0x00000000c0023d04                nextPID
 .data          0x00000000c0023d08        0x0 vm86/vm8086.32
 .data          0x00000000c0023d08        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023d08        0x1 fs/iso9660/vfslink.32
                0x00000000c0023d08                recentDriveletter
 .data          0x00000000c0023d09        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0023d09        0x0 hal/sound/sndhw.32
 .data          0x00000000c0023d09        0x0 hw/bus/isa.32
 .data          0x00000000c0023d09        0x0 hw/bus/pci.32
 .data          0x00000000c0023d09        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023d09        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023d09        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023d09        0x0 hw/fpu/avx.32
 .data          0x00000000c0023d09        0x0 hw/fpu/mmx.32
 .data          0x00000000c0023d09        0x0 hw/fpu/sse.32
 .data          0x00000000c0023d09        0x0 hw/fpu/x87.32
 .data          0x00000000c0023d09        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023d09        0x0 hw/intctrl/pic.32
 .data          0x00000000c0023d09        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023d09        0x0 hw/timer/pit.32
 .data          0x00000000c0023d09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023d09        0x0 crtn.32
 .data          0x00000000c0023d09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0023d09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0023d09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0023d09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0023d09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0023d09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0023d09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0023d0c        0x0
 .got           0x00000000c0023d0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0023d0c        0x0
 .got.plt       0x00000000c0023d0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0023d0c        0x0
 .igot.plt      0x00000000c0023d0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0023d0c        0x0
 .tm_clone_table
                0x00000000c0023d0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0023d0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023d09      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0023d09        0x3 
 .eh_frame      0x00000000c0023d0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0023d0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0023d0c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023d64       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023da4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023e10       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0023e94       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0023eac        0x0
 .rel.got       0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0023eac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0023eac     0x223c
                0x00000000c0023eac                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0023eac        0x0 crti.32
 .bss           0x00000000c0023eac       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0023ecc        0x4 acpica/utclib.32
 *fill*         0x00000000c0023ed0       0x10 
 .bss           0x00000000c0023ee0      0x378 core/malloc.32
 .bss           0x00000000c0024258        0x0 libk/string.32
 .bss           0x00000000c0024258        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024258        0x8 
 .bss           0x00000000c0024260       0x88 fs/fat/ff.32
 .bss           0x00000000c00242e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00242e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00242e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c00242e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c00242e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c00242e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c00242e8        0x6 core/computer.32
                0x00000000c00242e8                computer
                0x00000000c00242ec                preemptionOn
                0x00000000c00242ed                schedulingOn
 *fill*         0x00000000c00242ee        0x2 
 .bss           0x00000000c00242f0        0x6 core/gdt.32
                0x00000000c00242f0                gdtDescr
 .bss           0x00000000c00242f6        0x0 core/idle.32
 *fill*         0x00000000c00242f6        0x2 
 .bss           0x00000000c00242f8        0x6 core/idt.32
                0x00000000c00242f8                idtDescr
 .bss           0x00000000c00242fe        0x0 core/kheap.32
 *fill*         0x00000000c00242fe        0x2 
 .bss           0x00000000c0024300        0x4 core/main.32
                0x00000000c0024300                sysBootSettings
 *fill*         0x00000000c0024304       0x1c 
 .bss           0x00000000c0024320       0x50 core/physmgr.32
                0x00000000c0024320                Phys::currentPagePointer
                0x00000000c0024324                Phys::highestMem
                0x00000000c0024328                Phys::oldPercent
                0x00000000c002432c                Phys::usedPages
                0x00000000c0024330                Phys::usablePages
                0x00000000c0024340                Phys::dmaUsage
 .bss           0x00000000c0024370        0x0 core/pipe.32
 *fill*         0x00000000c0024370       0x10 
 .bss           0x00000000c0024380       0x29 core/terminal.32
                0x00000000c0024380                textModeImplementation
                0x00000000c00243a0                terminalCycle
                0x00000000c00243a4                activeTerminal
                0x00000000c00243a8                VgaText::graphicMode
 *fill*         0x00000000c00243a9        0x1 
 .bss           0x00000000c00243aa        0x2 core/tss.32
                0x00000000c00243aa                doubleFaultSelector
 *fill*         0x00000000c00243ac       0x14 
 .bss           0x00000000c00243c0       0x84 core/unixfile.32
                0x00000000c00243c0                sfileLpt
                0x00000000c0024400                sfileCom
                0x00000000c0024424                sfileNul
                0x00000000c0024428                sfilePnt
                0x00000000c002442c                sfileAux
                0x00000000c0024430                sfileCon
                0x00000000c0024434                initialFilesAdded
                0x00000000c0024438                unixFileLinkedList
 .bss           0x00000000c0024444        0x4 core/virtmgr.32
                0x00000000c0024444                firstVAS
 .bss           0x00000000c0024448        0x0 coreobjs/c++.32
 .bss           0x00000000c0024448        0x0 dbg/kconsole.32
 .bss           0x00000000c0024448        0x4 fs/vfs.32
                0x00000000c0024448                installedFilesystems
 .bss           0x00000000c002444c        0x0 hal/bus.32
 .bss           0x00000000c002444c        0x4 hal/buzzer.32
                0x00000000c002444c                systemBuzzer
 .bss           0x00000000c0024450        0x8 hal/clock.32
                0x00000000c0024450                dstOn
                0x00000000c0024451                timezoneHalfHourOffset
                0x00000000c0024454                timezoneHourOffset
 .bss           0x00000000c0024458        0x0 hal/device.32
 .bss           0x00000000c0024458        0x0 hal/diskctrl.32
 .bss           0x00000000c0024458        0x0 hal/diskphys.32
 .bss           0x00000000c0024458        0x0 hal/fpu.32
 .bss           0x00000000c0024458       0x20 hal/intctrl.32
                0x00000000c0024458                pf5
                0x00000000c002445c                pf4
                0x00000000c0024460                pf3
                0x00000000c0024464                pf2
                0x00000000c0024468                pf1
                0x00000000c002446c                pf0
                0x00000000c0024470                gpFaultIntercept
                0x00000000c0024474                x87FaultIntercept
 *fill*         0x00000000c0024478        0x8 
 .bss           0x00000000c0024480      0x429 hal/keybrd.32
                0x00000000c0024480                keyboardWaitingTaskList
                0x00000000c0024484                keyboardSetupYet
                0x00000000c00244a0                keystates
 *fill*         0x00000000c00248a9       0x17 
 .bss           0x00000000c00248c0       0x88 hal/logidisk.32
                0x00000000c00248c0                diskAssignments
                0x00000000c00248e0                disks
 .bss           0x00000000c0024948        0x4 hal/mouse.32
                0x00000000c0024948                guiMouseHandler
 .bss           0x00000000c002494c        0x0 hal/partition.32
 *fill*         0x00000000c002494c        0x4 
 .bss           0x00000000c0024950        0x8 hal/timer.32
                0x00000000c0024950                nanoSinceBoot
 .bss           0x00000000c0024958        0x0 hal/vcache.32
 .bss           0x00000000c0024958        0x4 hal/video.32
                0x00000000c0024958                screen
 *fill*         0x00000000c002495c        0x4 
 .bss           0x00000000c0024960      0x3c0 hw/acpi.32
                0x00000000c0024960                systemSleepFunction
                0x00000000c0024964                systemResetFunction
                0x00000000c0024968                systemShutdownFunction
                0x00000000c002496c                nextACPITable
                0x00000000c0024980                acpiTables
                0x00000000c0024b80                usingXSDT
                0x00000000c0024b84                MADTpointer
                0x00000000c0024b88                RSDTpointer
                0x00000000c0024b8c                RSDPpointer
                0x00000000c0024b90                ioapicDiscoveryNumber
                0x00000000c0024ba0                ioapicFoundInMADT
                0x00000000c0024bc0                ioapicAddresses
                0x00000000c0024c40                ioapicGSIBase
                0x00000000c0024cc0                processorDiscoveryNumber
                0x00000000c0024ce0                matchingAPICID
                0x00000000c0024d00                processorID
 .bss           0x00000000c0024d20       0x10 hw/cpu.32
                0x00000000c0024d20                lastD
                0x00000000c0024d24                lastC
                0x00000000c0024d28                lastB
                0x00000000c0024d2c                lastA
 .bss           0x00000000c0024d30        0x0 hw/ports.32
 .bss           0x00000000c0024d30        0x5 krnl/panic.32
                0x00000000c0024d30                Krnl::guiPanicHandler
                0x00000000c0024d34                Krnl::kernelInPanic
 .bss           0x00000000c0024d35        0x0 reg/registry.32
 .bss           0x00000000c0024d35        0x0 sys/sc_exit.32
 .bss           0x00000000c0024d35        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0024d35        0x0 sys/sc_read.32
 .bss           0x00000000c0024d35        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0024d35        0x0 sys/sc_write.32
 .bss           0x00000000c0024d35        0x0 sys/sc_yield.32
 *fill*         0x00000000c0024d35        0xb 
 .bss           0x00000000c0024d40      0x200 sys/syscalls.32
                0x00000000c0024d40                systemCallHandlers
 .bss           0x00000000c0024f40      0x7a4 thr/elf.32
                0x00000000c0024f40                Thr::driverLookupNext
                0x00000000c0024f60                Thr::driverLookupLen
                0x00000000c0025160                Thr::driverLookupAddr
                0x00000000c0025360                Thr::driverNameLookup
                0x00000000c0025560                Thr::kernelSymbols
                0x00000000c00255e0                Thr::kernelStringTable
                0x00000000c0025660                Thr::kernelSymbolTable
                0x00000000c00256e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00256e4        0x4 
 .bss           0x00000000c00256e8       0x68 thr/prcssthr.32
                0x00000000c00256e8                cleanerThread
                0x00000000c00256ec                weNeedTheCleanerToNotBlock
                0x00000000c00256f0                xxxx
                0x00000000c00256f4                retValLockStuff
                0x00000000c00256f8                retValSchedLock
                0x00000000c00256fc                lockStuffLock
                0x00000000c0025700                schedulerLock
                0x00000000c0025704                taskSwitchesPostponedFlag
                0x00000000c0025708                postponeTaskSwitchesCounter
                0x00000000c002570c                irqDisableCounter
                0x00000000c0025710                terminatedTaskList
                0x00000000c002571c                sleepingTaskList
                0x00000000c0025728                taskList
                0x00000000c0025734                kernelProcess
 .bss           0x00000000c0025750        0x0 vm86/vm8086.32
 *fill*         0x00000000c0025750       0x10 
 .bss           0x00000000c0025760       0xf0 fs/fat/vfslink.32
                0x00000000c0025760                FAT::fats
                0x00000000c0025780                FAT::vfsToFatRemaps
                0x00000000c0025800                fatToVFSRemaps
 *fill*         0x00000000c0025850       0x10 
 .bss           0x00000000c0025860      0x820 fs/iso9660/vfslink.32
                0x00000000c0025860                recentSector
                0x00000000c0025880                recentBuffer
 .bss           0x00000000c0026080        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0026080        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0026080        0x0 hw/bus/isa.32
 .bss           0x00000000c0026080        0x0 hw/bus/pci.32
 .bss           0x00000000c0026080        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0026080        0x8 hw/diskphys/ata.32
                0x00000000c0026080                ataSectorsWritten
                0x00000000c0026084                ataSectorsRead
 .bss           0x00000000c0026088        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0026088        0x0 hw/fpu/avx.32
 .bss           0x00000000c0026088        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0026088        0x0 hw/fpu/sse.32
 .bss           0x00000000c0026088        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0026088       0x18 
 .bss           0x00000000c00260a0       0x41 hw/intctrl/apic.32
                0x00000000c00260a0                noOfIOAPICs
                0x00000000c00260c0                ioapics
                0x00000000c00260e0                IOAPICsSetupYet
 .bss           0x00000000c00260e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00260e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00260e1        0x3 
 .bss           0x00000000c00260e4        0x4 hw/timer/pit.32
                0x00000000c00260e4                pitFreq
 .bss           0x00000000c00260e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00260e8        0x0 crtn.32
 .bss           0x00000000c00260e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c00260e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c00260e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c00260e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c00260e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00260e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00260e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00260e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0028324                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
