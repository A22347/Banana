Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e568
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x68f core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b330                Computer::disableNMI()
                0x00000000c000b33e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b35c                Computer::handleNMI()
                0x00000000c000b3c2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3ed        0x1 
 .text          0x00000000c000b3ee      0x1b7 core/gdt.32
                0x00000000c000b3ee                GDTEntry::setBase(unsigned int)
                0x00000000c000b40a                GDTEntry::setLimit(unsigned int)
                0x00000000c000b428                GDT::GDT()
                0x00000000c000b428                GDT::GDT()
                0x00000000c000b43e                GDT::addEntry(GDTEntry)
                0x00000000c000b47a                GDT::getNumberOfEntries()
                0x00000000c000b482                GDT::flush()
                0x00000000c000b4a4                GDT::setup()
 .text          0x00000000c000b5a5       0x61 core/idle.32
                0x00000000c000b5a5                idleFunction(void*)
 .text          0x00000000c000b606      0x45f core/idt.32
                0x00000000c000b606                IDTEntry::IDTEntry(bool)
                0x00000000c000b606                IDTEntry::IDTEntry(bool)
                0x00000000c000b674                IDTEntry::setOffset(unsigned int)
                0x00000000c000b688                IDT::IDT()
                0x00000000c000b688                IDT::IDT()
                0x00000000c000b68a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b692                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6ac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6e4                IDT::flush()
                0x00000000c000b6fe                IDT::setup()
 .text          0x00000000c000ba65      0x20d core/kheap.32
                0x00000000c000ba65                sbrk
                0x00000000c000bb7d                mmap
                0x00000000c000bb93                munmap
                0x00000000c000bba9                liballoc_lock()
                0x00000000c000bbba                liballoc_unlock()
                0x00000000c000bbcb                liballoc_alloc(int)
                0x00000000c000bbe6                liballoc_free(void*, int)
                0x00000000c000bc04                realloc
                0x00000000c000bc18                malloc
                0x00000000c000bc28                free
                0x00000000c000bc38                rfree
                0x00000000c000bc48                calloc
 .text          0x00000000c000bc72      0x38d core/main.32
                0x00000000c000bc72                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcb7                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcf9                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd4d                hwTextMode_update(VgaText*)
                0x00000000c000bd4e                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd96                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd2                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be58                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000beb6                setupTextMode()
                0x00000000c000bf07                kernel_main
 .text          0x00000000c000bfff      0x46c core/physmgr.32
                0x00000000c000bfff                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0ea                Phys::setPageState(unsigned long, bool)
                0x00000000c000c11c                Phys::getPageState(unsigned long)
                0x00000000c000c138                Phys::freePage(unsigned long)
                0x00000000c000c1c2                Phys::allocatePage()
                0x00000000c000c27e                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2b6                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000c46b        0x1 
 .text          0x00000000c000c46c      0x273 core/pipe.32
                0x00000000c000c46c                Pipe::isAtty()
                0x00000000c000c470                Pipe::~Pipe()
                0x00000000c000c470                Pipe::~Pipe()
                0x00000000c000c494                Pipe::~Pipe()
                0x00000000c000c4bc                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c5b0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c678                Pipe::Pipe(int)
                0x00000000c000c678                Pipe::Pipe(int)
 *fill*         0x00000000c000c6df        0x1 
 .text          0x00000000c000c6e0      0xf65 core/terminal.32
                0x00000000c000c6e0                VgaText::isAtty()
                0x00000000c000c6e4                VgaText::~VgaText()
                0x00000000c000c6e4                VgaText::~VgaText()
                0x00000000c000c708                VgaText::~VgaText()
                0x00000000c000c732                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c752                setTerminalScrollLock(bool)
                0x00000000c000c753                addToTerminalCycle(VgaText*)
                0x00000000c000c780                installVgaTextImplementation()
                0x00000000c000c795                scrollTerminalScrollLock(int)
                0x00000000c000c796                VgaText::load()
                0x00000000c000c7ea                VgaText::updateCursor()
                0x00000000c000c804                VgaText::showCursor(bool)
                0x00000000c000c814                VgaText::disableBlink(bool)
                0x00000000c000c84e                VgaText::doANSI_SGR(int)
                0x00000000c000c8da                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c8f0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c906                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c926                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c938                VgaText::scrollScreen()
                0x00000000c000c9cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000c9de                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ca3e                VgaText::getCursorX()
                0x00000000c000ca4a                VgaText::getCursorY()
                0x00000000c000ca56                VgaText::setCursor(int, int)
                0x00000000c000ca74                VgaText::setCursorX(int)
                0x00000000c000ca90                VgaText::setCursorY(int)
                0x00000000c000caac                VgaText::incrementCursor(bool)
                0x00000000c000cb14                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cb6e                VgaText::updateDiskUsage()
                0x00000000c000ccd4                VgaText::updateTitle()
                0x00000000c000cd1a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cd2a                VgaText::setTitleColour(VgaColour)
                0x00000000c000cd3a                VgaText::setTitle(char*)
                0x00000000c000cd60                VgaText::decrementCursor(bool)
                0x00000000c000cd88                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000ce84                VgaText::isShowingCursor()
                0x00000000c000ce90                VgaText::isBlinkDisabled()
                0x00000000c000ce9e                VgaText::setCursorHeight(int)
                0x00000000c000cebc                VgaText::getCursorHeight()
                0x00000000c000cec7                setActiveTerminal(VgaText*)
                0x00000000c000cf79                doTerminalCycle()
                0x00000000c000cf96                VgaText::doUpdate()
                0x00000000c000cfa8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d168                VgaText::clearScreen()
                0x00000000c000d1cc                VgaText::putchar(char)
                0x00000000c000d2e6                VgaText::puts(char const*)
                0x00000000c000d30c                VgaText::putx(unsigned int)
                0x00000000c000d352                VgaText::VgaText(char const*)
                0x00000000c000d352                VgaText::VgaText(char const*)
                0x00000000c000d4e4                VgaText::receiveKey(unsigned char)
                0x00000000c000d5cc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d620                newTerminal(char*)
 *fill*         0x00000000c000d645        0x1 
 .text          0x00000000c000d646      0x18f core/tss.32
                0x00000000c000d646                TSS::TSS()
                0x00000000c000d646                TSS::TSS()
                0x00000000c000d654                TSS::setESP(unsigned long)
                0x00000000c000d666                TSS::flush()
                0x00000000c000d686                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d7d5        0x1 
 .text          0x00000000c000d7d6      0x32f core/unixfile.32
                0x00000000c000d7d6                ReservedFilename::isAtty()
                0x00000000c000d7ec                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d87e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d914                UnixFile::getFileDescriptor()
                0x00000000c000d91c                UnixFile::UnixFile(int)
                0x00000000c000d91c                UnixFile::UnixFile(int)
                0x00000000c000d958                ReservedFilename::ReservedFilename(int)
                0x00000000c000d958                ReservedFilename::ReservedFilename(int)
                0x00000000c000d980                UnixFile::~UnixFile()
                0x00000000c000d980                UnixFile::~UnixFile()
                0x00000000c000da06                UnixFile::~UnixFile()
                0x00000000c000da2e                ReservedFilename::~ReservedFilename()
                0x00000000c000da2e                ReservedFilename::~ReservedFilename()
                0x00000000c000da52                ReservedFilename::~ReservedFilename()
                0x00000000c000da79                getFromFileDescriptor(int)
 *fill*         0x00000000c000db05        0x1 
 .text          0x00000000c000db06     0x1175 core/virtmgr.32
                0x00000000c000db06                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000db3b                Virt::getPageState(unsigned long)
                0x00000000c000db5f                Virt::allocateKernelVirtualPages(int)
                0x00000000c000dc70                Virt::virtualMemorySetup()
                0x00000000c000dcef                Virt::getAKernelVAS()
                0x00000000c000dcf5                Virt::setupPageSwapping(int)
                0x00000000c000de1a                VAS::VAS()
                0x00000000c000de1a                VAS::VAS()
                0x00000000c000de4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000de76                VAS::getPageTableEntry(unsigned long)
                0x00000000c000de95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000dfb8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000dfdc                VAS::virtualToPhysical(unsigned long)
                0x00000000c000dff4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e02a                VAS::~VAS()
                0x00000000c000e02a                VAS::~VAS()
                0x00000000c000e196                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e296                VAS::allocatePages(int, int)
                0x00000000c000e466                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e482                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e54c                VAS::VAS(VAS*)
                0x00000000c000e54c                VAS::VAS(VAS*)
                0x00000000c000e896                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000e984                VAS::VAS(bool)
                0x00000000c000e984                VAS::VAS(bool)
                0x00000000c000ebb4                mapVASFirstTime
 .text          0x00000000c000ec7b       0x93 coreobjs/c++.32
                0x00000000c000ec7b                __cxa_atexit
                0x00000000c000ec7e                __cxa_finalize
                0x00000000c000ec7f                __stack_chk_fail
                0x00000000c000ecdf                __cxa_pure_virtual
                0x00000000c000ecf0                operator new(unsigned long)
                0x00000000c000ecf5                operator new[](unsigned long)
                0x00000000c000ecfa                operator delete(void*)
                0x00000000c000ecff                operator delete(void*, unsigned long)
                0x00000000c000ed04                operator delete[](void*)
                0x00000000c000ed09                operator delete[](void*, unsigned long)
 .text          0x00000000c000ed0e      0x1ef dbg/kconsole.32
                0x00000000c000ed0e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ed6f                Dbg::logc(char)
                0x00000000c000ed86                Dbg::logs(char*)
                0x00000000c000eda3                Dbg::logWriteInt(unsigned int)
                0x00000000c000edc0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000eddf                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000eefd        0x1 
 .text          0x00000000c000eefe      0xb68 fs/vfs.32
                0x00000000c000eefe                File::read(unsigned long long, void*, int*)
                0x00000000c000ef56                File::write(unsigned long long, void*, int*)
                0x00000000c000efae                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f006                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f034                File::isAtty()
                0x00000000c000f038                Directory::isAtty()
                0x00000000c000f03c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f042                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f048                File::~File()
                0x00000000c000f048                File::~File()
                0x00000000c000f06c                File::~File()
                0x00000000c000f096                Directory::~Directory()
                0x00000000c000f096                Directory::~Directory()
                0x00000000c000f0ba                Directory::~Directory()
                0x00000000c000f0e4                Filesystem::Filesystem()
                0x00000000c000f0e4                Filesystem::Filesystem()
                0x00000000c000f108                Filesystem::~Filesystem()
                0x00000000c000f108                Filesystem::~Filesystem()
                0x00000000c000f116                Filesystem::~Filesystem()
                0x00000000c000f13a                initVFS()
                0x00000000c000f164                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f30e                File::File(char const*, Process*)
                0x00000000c000f30e                File::File(char const*, Process*)
                0x00000000c000f372                File::open(FileOpenMode)
                0x00000000c000f3d0                File::close()
                0x00000000c000f430                File::seek(unsigned long long)
                0x00000000c000f486                File::tell(unsigned long long*)
                0x00000000c000f4d6                File::rewind()
                0x00000000c000f4ea                File::unlink()
                0x00000000c000f536                File::rename(char const*)
                0x00000000c000f584                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f5e0                File::exists()
                0x00000000c000f61e                File::stat(unsigned long long*, bool*)
                0x00000000c000f67f                getcwd(Process*, char*, int)
                0x00000000c000f6a9                setcwd(Process*, char*)
                0x00000000c000f7d0                Directory::Directory(char const*, Process*)
                0x00000000c000f7d0                Directory::Directory(char const*, Process*)
                0x00000000c000f834                Directory::open()
                0x00000000c000f890                Directory::close()
                0x00000000c000f8f0                Directory::unlink()
                0x00000000c000f93c                Directory::rename(char const*)
                0x00000000c000f98a                Directory::exists()
                0x00000000c000f9c8                Directory::read(dirent*)
                0x00000000c000fa14                Directory::create()
                0x00000000c000fa60                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fa66       0x84 hal/bus.32
                0x00000000c000fa66                Bus::Bus(char const*)
                0x00000000c000fa66                Bus::Bus(char const*)
                0x00000000c000fa9c                Bus::~Bus()
                0x00000000c000fa9c                Bus::~Bus()
                0x00000000c000fac0                Bus::~Bus()
 .text          0x00000000c000faea      0x14e hal/buzzer.32
                0x00000000c000faea                Buzzer::Buzzer(char const*)
                0x00000000c000faea                Buzzer::Buzzer(char const*)
                0x00000000c000fb2e                Buzzer::~Buzzer()
                0x00000000c000fb2e                Buzzer::~Buzzer()
                0x00000000c000fb52                Buzzer::~Buzzer()
                0x00000000c000fb7c                Buzzer::stop()
                0x00000000c000fb8f                beepThread(void*)
                0x00000000c000fbca                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fc38      0x42f hal/clock.32
                0x00000000c000fc38                loadClockSettings()
                0x00000000c000fc52                Clock::Clock(char const*)
                0x00000000c000fc52                Clock::Clock(char const*)
                0x00000000c000fc88                Clock::~Clock()
                0x00000000c000fc88                Clock::~Clock()
                0x00000000c000fcac                Clock::~Clock()
                0x00000000c000fcd6                Clock::timeInSecondsLocal()
                0x00000000c000fd1e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fd77                datetimeToSeconds(datetime_t)
                0x00000000c000fe9e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fefe                secondsToDatetime(unsigned long long)
                0x00000000c0010042                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0010067        0x1 
 .text          0x00000000c0010068      0x504 hal/device.32
                0x00000000c0010068                Device::hibernate()
                0x00000000c001006a                Device::wake()
                0x00000000c001006c                Device::detect()
                0x00000000c001006e                Device::disableLegacy()
                0x00000000c0010070                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010072                DriverlessDevice::close(int, int, void*)
                0x00000000c0010076                DriverlessDevice::detect()
                0x00000000c0010078                DriverlessDevice::open(int, int, void*)
                0x00000000c001008c                Device::~Device()
                0x00000000c001008c                Device::~Device()
                0x00000000c001009a                Device::~Device()
                0x00000000c00100c2                Device::findAndLoadDriver()
                0x00000000c00100c4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00100ea                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001013e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001019c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00101ea                Device::addChild(Device*)
                0x00000000c001022e                Device::removeAllChildren()
                0x00000000c0010274                Device::hibernateAll()
                0x00000000c00102a4                Device::wakeAll()
                0x00000000c00102d4                Device::detectAll()
                0x00000000c0010304                Device::disableLegacyAll()
                0x00000000c0010334                Device::loadDriversForAll()
                0x00000000c0010360                Device::closeAll()
                0x00000000c0010396                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00103cc                Device::setName(char const*)
                0x00000000c00103da                Device::Device(char const*)
                0x00000000c00103da                Device::Device(char const*)
                0x00000000c00104cc                Device::getName()
                0x00000000c00104d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104fe                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010542                getDevicesOfType(DeviceType)
 .text          0x00000000c001056c       0x84 hal/diskctrl.32
                0x00000000c001056c                HardDiskController::HardDiskController(char const*)
                0x00000000c001056c                HardDiskController::HardDiskController(char const*)
                0x00000000c00105a2                HardDiskController::~HardDiskController()
                0x00000000c00105a2                HardDiskController::~HardDiskController()
                0x00000000c00105c6                HardDiskController::~HardDiskController()
 .text          0x00000000c00105f0       0xde hal/diskphys.32
                0x00000000c00105f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00105f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010658                PhysicalDisk::startCache()
                0x00000000c0010680                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010680                PhysicalDisk::~PhysicalDisk()
                0x00000000c00106a4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00106ce      0x128 hal/fpu.32
                0x00000000c00106ce                FPU::FPU(char const*)
                0x00000000c00106ce                FPU::FPU(char const*)
                0x00000000c0010704                FPU::~FPU()
                0x00000000c0010704                FPU::~FPU()
                0x00000000c0010728                FPU::~FPU()
                0x00000000c0010752                setupFPU()
 .text          0x00000000c00107f6      0xcdb hal/intctrl.32
                0x00000000c00107f6                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001082e                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010880                doubleFault(regs*, void*)
                0x00000000c001088e                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001092a                InterruptController::clearAllHandlers(int, bool)
                0x00000000c00109d2                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010a59                nmiHandler(regs*, void*)
                0x00000000c0010a67                int_handler
                0x00000000c0010b02                InterruptController::InterruptController(char const*)
                0x00000000c0010b02                InterruptController::InterruptController(char const*)
                0x00000000c0010ba8                InterruptController::~InterruptController()
                0x00000000c0010ba8                InterruptController::~InterruptController()
                0x00000000c0010bcc                InterruptController::~InterruptController()
                0x00000000c0010bf6                displayDebugInfo(regs*)
                0x00000000c00110b3                displayProgramFault(char const*)
                0x00000000c00110db                gpFault(regs*, void*)
                0x00000000c0011131                pgFault(regs*, void*)
                0x00000000c0011168                otherISRHandler(regs*, void*)
                0x00000000c00111a4                opcodeFault(regs*, void*)
                0x00000000c001122c                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0011276                setupInterruptController()
 *fill*         0x00000000c00114d1        0x1 
 .text          0x00000000c00114d2      0x608 hal/keybrd.32
                0x00000000c00114d2                startGUI(void*)
                0x00000000c0011544                sendKeyToTerminal(unsigned char)
                0x00000000c00115b0                sendKeyboardToken(KeyboardToken)
                0x00000000c001198b                clearInternalKeybuffer(VgaText*)
                0x00000000c00119c0                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0011a50                Keyboard::Keyboard(char const*)
                0x00000000c0011a50                Keyboard::Keyboard(char const*)
                0x00000000c0011a8c                Keyboard::~Keyboard()
                0x00000000c0011a8c                Keyboard::~Keyboard()
                0x00000000c0011ab0                Keyboard::~Keyboard()
 .text          0x00000000c0011ada      0x400 hal/logidisk.32
                0x00000000c0011ada                LogicalDisk::close(int, int, void*)
                0x00000000c0011ade                LogicalDisk::~LogicalDisk()
                0x00000000c0011ade                LogicalDisk::~LogicalDisk()
                0x00000000c0011b02                LogicalDisk::~LogicalDisk()
                0x00000000c0011b2c                LogicalDisk::open(int, int, void*)
                0x00000000c0011b40                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011b78                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011bbe                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011bbe                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011c74                LogicalDisk::assignDriveLetter()
                0x00000000c0011d2a                LogicalDisk::mount()
                0x00000000c0011d9c                LogicalDisk::unmount()
                0x00000000c0011dac                LogicalDisk::unassignDriveLetter()
                0x00000000c0011e02                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011e6e                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011eda       0x84 hal/mouse.32
                0x00000000c0011eda                Mouse::Mouse(char const*)
                0x00000000c0011eda                Mouse::Mouse(char const*)
                0x00000000c0011f10                Mouse::~Mouse()
                0x00000000c0011f10                Mouse::~Mouse()
                0x00000000c0011f34                Mouse::~Mouse()
 .text          0x00000000c0011f5e      0x339 hal/partition.32
                0x00000000c0011f5e                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012006                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012297        0x1 
 .text          0x00000000c0012298      0x2e7 hal/timer.32
                0x00000000c0012298                Timer::Timer(char const*)
                0x00000000c0012298                Timer::Timer(char const*)
                0x00000000c00122ce                Timer::~Timer()
                0x00000000c00122ce                Timer::~Timer()
                0x00000000c00122f2                Timer::~Timer()
                0x00000000c001231c                Timer::read()
                0x00000000c0012327                timerHandler(unsigned long long)
                0x00000000c001245e                setupTimer(int)
 *fill*         0x00000000c001257f        0x1 
 .text          0x00000000c0012580      0x2d1 hal/vcache.32
                0x00000000c0012580                VCache::VCache(PhysicalDisk*)
                0x00000000c0012580                VCache::VCache(PhysicalDisk*)
                0x00000000c0012670                VCache::writeWriteBuffer()
                0x00000000c00126ac                VCache::~VCache()
                0x00000000c00126ac                VCache::~VCache()
                0x00000000c00126ec                VCache::~VCache()
                0x00000000c0012714                VCache::write(unsigned long long, int, void*)
                0x00000000c00127f8                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0012851        0x1 
 .text          0x00000000c0012852      0x26d hal/video.32
                0x00000000c0012852                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001289c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001291a                Video::clearScreen(unsigned int)
                0x00000000c001294e                Video::putpixel(int, int, unsigned int)
                0x00000000c001295c                Video::Video(char const*)
                0x00000000c001295c                Video::Video(char const*)
                0x00000000c0012992                Video::~Video()
                0x00000000c0012992                Video::~Video()
                0x00000000c00129b6                Video::~Video()
                0x00000000c00129e0                Video::isMonochrome()
                0x00000000c00129ec                Video::getWidth()
                0x00000000c00129f8                Video::getHeight()
                0x00000000c0012a04                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012abf        0x1 
 .text          0x00000000c0012ac0      0xd28 hw/acpi.32
                0x00000000c0012ac0                ACPI::close(int, int, void*)
                0x00000000c0012b75                findRSDP()
                0x00000000c0012bff                loadACPITables(unsigned char*)
                0x00000000c0012e26                findRSDT(unsigned char*)
                0x00000000c0012f44                findDataTable(unsigned char*, char*)
                0x00000000c0012fe0                scanMADT()
                0x00000000c0013374                ACPI::ACPI()
                0x00000000c0013374                ACPI::ACPI()
                0x00000000c00133d4                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00134b6                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00135bc                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00135c2                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001360a                ACPI::open(int, int, void*)
                0x00000000c00137d0                ACPI::sleep()
 .text          0x00000000c00137e8     0x132c hw/cpu.32
                0x00000000c00137e8                CPU::close(int, int, void*)
                0x00000000c00137eb                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c001397f                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013c2d                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013c49                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013c61                AMD_K6_writeback(int, int, int)
                0x00000000c0013cd4                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013d57                cpuidCheckEDX(unsigned int)
                0x00000000c0013d84                cpuidCheckECX(unsigned int)
                0x00000000c0013db1                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013dde                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013e0b                getCPUNumber()
                0x00000000c0013e0e                thisCPU()
                0x00000000c0013e22                CPU::CPU()
                0x00000000c0013e22                CPU::CPU()
                0x00000000c0013eb0                CPU::displayFeatures()
                0x00000000c0013eb2                CPU::detectFeatures()
                0x00000000c00148a4                CPU::setupSMEP()
                0x00000000c00148be                CPU::setupUMIP()
                0x00000000c00148d6                CPU::setupTSC()
                0x00000000c00148ee                CPU::setupLargePages()
                0x00000000c0014906                CPU::setupPAT()
                0x00000000c0014942                CPU::setupMTRR()
                0x00000000c0014944                CPU::setupGlobalPages()
                0x00000000c001495a                CPU::allowUsermodeDataAccess()
                0x00000000c001496c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001497e                CPU::setupSMAP()
                0x00000000c00149a4                CPU::setupFeatures()
                0x00000000c0014a46                CPU::open(int, int, void*)
 .text          0x00000000c0014b14        0x0 hw/ports.32
 .text          0x00000000c0014b14      0x32c krnl/panic.32
                0x00000000c0014b14                Krnl::panic(char const*)
 .text          0x00000000c0014e40      0x503 reg/registry.32
                0x00000000c0014e40                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014f98                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00150f7                Reg::getLine(char*, char*, char*)
                0x00000000c001512e                Reg::readInt(char*, char*, int*)
                0x00000000c0015219                Reg::readString(char*, char*, char*, int)
                0x00000000c001529a                Reg::readBool(char*, char*, bool*)
                0x00000000c00152bf                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00152eb                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015317                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0015343       0x18 sys/sc_exit.32
                0x00000000c0015343                Sys::exit(regs*)
 .text          0x00000000c001535b       0x95 sys/sc_loaddll.32
                0x00000000c001535b                Sys::loadDLL(regs*)
 .text          0x00000000c00153f0       0x68 sys/sc_read.32
                0x00000000c00153f0                Sys::read(regs*)
 .text          0x00000000c0015458       0x55 sys/sc_sbrk.32
                0x00000000c0015458                Sys::sbrk(regs*)
 .text          0x00000000c00154ad       0x68 sys/sc_write.32
                0x00000000c00154ad                Sys::write(regs*)
 .text          0x00000000c0015515       0x1a sys/sc_yield.32
                0x00000000c0015515                Sys::yield(regs*)
 .text          0x00000000c001552f      0xdaa sys/syscalls.32
                0x00000000c001552f                sysCallGetPID(regs*)
                0x00000000c001553b                sysCallSeekDir(regs*)
                0x00000000c0015540                sysCallTellDir(regs*)
                0x00000000c0015545                sysCallVerify(regs*)
                0x00000000c001554f                sysCallGetArgc(regs*)
                0x00000000c001555f                sysFormatDisk(regs*)
                0x00000000c00155c9                sysSetDiskVolumeLabel(regs*)
                0x00000000c001560f                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015660                sysShutdown(regs*)
                0x00000000c00156be                sysCallGetCwd(regs*)
                0x00000000c00156dd                sysCallSetCwd(regs*)
                0x00000000c00156f9                sysCallRealpath(regs*)
                0x00000000c001573c                sysCallOpen(regs*)
                0x00000000c001582c                sysCallReadDir(regs*)
                0x00000000c001589b                sysCallIsATTY(regs*)
                0x00000000c00158ee                sysCallSeek(regs*)
                0x00000000c001593f                sysCallTell(regs*)
                0x00000000c001598b                sysCallSizeFromFilename(regs*)
                0x00000000c0015a04                sysCallSize(regs*)
                0x00000000c0015a56                sysCallClose(regs*)
                0x00000000c0015aa4                sysCallOpenDir(regs*)
                0x00000000c0015b11                sysCallMakeDir(regs*)
                0x00000000c0015b6a                sysCallCloseDir(regs*)
                0x00000000c0015bb8                sysCallWait(regs*)
                0x00000000c0015bd2                sysCallFork(regs*)
                0x00000000c0015bee                sysCallExecve(regs*)
                0x00000000c0015c43                sysCallRmdir(regs*)
                0x00000000c0015c95                sysCallUnlink(regs*)
                0x00000000c0015ce7                sysCallGetArgv(regs*)
                0x00000000c0015d33                sysCallTTYName(regs*)
                0x00000000c0015daf                sysCallGetEnv(regs*)
                0x00000000c0015e01                sysCallUSleep(regs*)
                0x00000000c0015e28                sysCallSpawn(regs*)
                0x00000000c0015e98                sysAppSettings(regs*)
                0x00000000c0015fb7                sysSetFatAttrib(regs*)
                0x00000000c0016017                sysPanic(regs*)
                0x00000000c001603d                sysPipe(regs*)
                0x00000000c0016082                sysGetUnixTime(regs*)
                0x00000000c0016096                string_ends_with(char const*, char const*)
                0x00000000c00160de                setupSystemCalls()
                0x00000000c0016297                systemCall(regs*, void*)
 .text          0x00000000c00162d9     0x1134 thr/elf.32
                0x00000000c00162d9                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0016556                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001676c                Thr::runtimeReferenceHelper()
                0x00000000c001677f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00167ce                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016a8f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001720d                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001723f                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017276                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0017290                Thr::loadDLL(char const*, bool)
                0x00000000c00173e3                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001740d        0x1 
 .text          0x00000000c001740e     0x1140 thr/prcssthr.32
                0x00000000c001740e                changeTSS
                0x00000000c001743c                Process::addArgs(char**)
                0x00000000c0017496                Process::Process(char const*, Process*, char**)
                0x00000000c0017496                Process::Process(char const*, Process*, char**)
                0x00000000c001764e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001764e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00177d1                disableIRQs()
                0x00000000c00177d9                getIRQNestingLevel()
                0x00000000c00177df                enableIRQs()
                0x00000000c00177ee                lockScheduler()
                0x00000000c00177f0                unlockScheduler()
                0x00000000c00177f2                userModeEntryPoint(void*)
                0x00000000c0017815                lockStuff()
                0x00000000c0017821                taskStartupFunction
                0x00000000c001782a                updateTimeUsed()
                0x00000000c0017888                switchToThread(ThreadControlBlock*)
                0x00000000c00178d8                Semaphore::Semaphore(int)
                0x00000000c00178d8                Semaphore::Semaphore(int)
                0x00000000c0017906                Mutex::Mutex()
                0x00000000c0017906                Mutex::Mutex()
                0x00000000c0017918                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00179fc                Process::createUserThread()
                0x00000000c0017a18                setupMultitasking(void (*)())
                0x00000000c0017b22                schedule()
                0x00000000c0017ba7                unlockStuff()
                0x00000000c0017bdc                forkProcess(regs*)
                0x00000000c0017d4a                Semaphore::tryAcquire()
                0x00000000c0017d78                Semaphore::assertLocked(char const*)
                0x00000000c0017dab                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017ded                blockTask(TaskState)
                0x00000000c0017e0e                waitTask(int, int*, int)
                0x00000000c0017e50                nanoSleepUntil(unsigned long long)
                0x00000000c0017ea7                nanoSleep(unsigned long long)
                0x00000000c0017ebc                sleep(unsigned long long)
                0x00000000c0017eda                Semaphore::acquire()
                0x00000000c0017f42                execveProcess(char const*, char* const*, char* const*)
                0x00000000c0017fd0                taskReturned
                0x00000000c0017ffe                unblockTask(ThreadControlBlock*)
                0x00000000c00180ad                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001834a                cleanerTaskFunction(void*)
                0x00000000c00183da                terminateTask(int)
                0x00000000c0018462                Semaphore::release()
 .text          0x00000000c001854e      0x8c7 vm86/vm8086.32
                0x00000000c001854e                Vm::vm8086EntryPoint(void*)
                0x00000000c0018579                Vm::inbv(unsigned short)
                0x00000000c001857f                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018589                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018599                Vm::getSegment(unsigned int)
                0x00000000c00185a1                Vm::getOffset(unsigned int)
                0x00000000c00185a6                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00186d5                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001875f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018770                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018782                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018793                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00187a8                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00187be                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00187d3                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018e15        0x1 
 .text          0x00000000c0018e16     0x10ed fs/fat/vfslink.32
                0x00000000c0018e16                FAT::getName()
                0x00000000c0018e1c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018e50                FAT::stat(void*, unsigned long long*)
                0x00000000c0018e84                FAT::~FAT()
                0x00000000c0018e84                FAT::~FAT()
                0x00000000c0018ea8                FAT::~FAT()
                0x00000000c0018ed0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018f6e                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019028                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001920c                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019412                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019518                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019572                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00195cc                FAT::close(void*)
                0x00000000c0019618                FAT::closeDir(void*)
                0x00000000c0019664                FAT::seek(void*, unsigned long long)
                0x00000000c00196b8                fatWrapperReadDisk
                0x00000000c00196ff                fatWrapperWriteDisk
                0x00000000c0019746                fatWrapperIoctl
                0x00000000c001984a                FAT::FAT()
                0x00000000c001984a                FAT::FAT()
                0x00000000c001989c                FAT::fixFilepath(char*)
                0x00000000c00198d4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00199fc                FAT::openDir(char const*, void**)
                0x00000000c0019aa2                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b8c                FAT::unlink(char const*)
                0x00000000c0019c06                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d5a                FAT::rename(char const*, char const*)
                0x00000000c0019e1e                FAT::mkdir(char const*)
                0x00000000c0019e98                FAT::exists(char const*)
 *fill*         0x00000000c0019f03        0x1 
 .text          0x00000000c0019f04      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019f04                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f0a                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019f3a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019f5e                ISO9660::getName()
                0x00000000c0019f64                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019f88                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019f8e                ISO9660::unlink(char const*)
                0x00000000c0019f94                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019f9a                ISO9660::rename(char const*, char const*)
                0x00000000c0019fa0                ISO9660::mkdir(char const*)
                0x00000000c0019fa6                ISO9660::close(void*)
                0x00000000c0019fc8                ISO9660::closeDir(void*)
                0x00000000c0019fea                ISO9660::~ISO9660()
                0x00000000c0019fea                ISO9660::~ISO9660()
                0x00000000c001a00e                ISO9660::~ISO9660()
                0x00000000c001a035                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a077                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a0de                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a12e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a372                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a5ff                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a654                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a827                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a8b6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a950                ISO9660::exists(char const*)
                0x00000000c001a974                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aa08                ISO9660::openDir(char const*, void**)
                0x00000000c001aac0                ISO9660::ISO9660()
                0x00000000c001aac0                ISO9660::ISO9660()
 *fill*         0x00000000c001aae3        0x1 
 .text          0x00000000c001aae4      0x244 hal/sound/sndchannel.32
                0x00000000c001aae4                SoundChannel::~SoundChannel()
                0x00000000c001aae4                SoundChannel::~SoundChannel()
                0x00000000c001ab00                SoundChannel::setSpeed(float)
                0x00000000c001ab0c                SoundChannel::getSpeed()
                0x00000000c001ab14                SoundChannel::setVolume(int)
                0x00000000c001ab30                SoundChannel::getVolume()
                0x00000000c001ab38                SoundChannel::pause()
                0x00000000c001ab42                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ab42                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ac38                SoundChannel::play()
                0x00000000c001ac42                SoundChannel::paused()
                0x00000000c001ac4a                SoundChannel::getSampleRate()
                0x00000000c001ac52                SoundChannel::getBits()
                0x00000000c001ac5a                SoundChannel::getBufferUsed()
                0x00000000c001ac62                SoundChannel::getBufferSize()
                0x00000000c001ac6a                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001acdc                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ad28      0x317 hal/sound/sndhw.32
                0x00000000c001ad28                SoundDevice::SoundDevice(char const*)
                0x00000000c001ad28                SoundDevice::SoundDevice(char const*)
                0x00000000c001ad94                SoundDevice::~SoundDevice()
                0x00000000c001ad94                SoundDevice::~SoundDevice()
                0x00000000c001ae0e                SoundDevice::~SoundDevice()
                0x00000000c001ae38                SoundDevice::getFreeChannelNum()
                0x00000000c001ae52                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001aec2                SoundDevice::removeChannel(int)
                0x00000000c001aef4                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001af60                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b03f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b03f        0x1 
 .text          0x00000000c001b040      0x6e5 hw/bus/pci.32
                0x00000000c001b040                PCI::open(int, int, void*)
                0x00000000c001b054                PCI::close(int, int, void*)
                0x00000000c001b058                PCI::PCI()
                0x00000000c001b058                PCI::PCI()
                0x00000000c001b0d8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b120                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b142                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b166                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1aa                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1ce                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1f0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b212                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b236                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b296                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b302                PCI::checkBus(unsigned char)
                0x00000000c001b326                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b496                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b666                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b6d2                PCI::detect()
 *fill*         0x00000000c001b725        0x1 
 .text          0x00000000c001b726      0xc70 hw/diskctrl/ide.32
                0x00000000c001b726                IDE::close(int, int, void*)
                0x00000000c001b72a                IDE::IDE()
                0x00000000c001b72a                IDE::IDE()
                0x00000000c001b75e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b770                selectDrive(unsigned char, unsigned char)
                0x00000000c001b772                IDE::getBase(unsigned char)
                0x00000000c001b784                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b844                IDE::read(unsigned char, unsigned char)
                0x00000000c001b8f2                IDE::waitInterrupt(unsigned char)
                0x00000000c001b958                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b974                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b990                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b9d6                IDE::open(int, int, void*)
                0x00000000c001bde6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001beb2                IDE::detect()
                0x00000000c001c19a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c330                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c396      0x62b hw/diskphys/ata.32
                0x00000000c001c396                ATA::close(int, int, void*)
                0x00000000c001c3ba                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c3bc                ATA::ATA()
                0x00000000c001c3bc                ATA::ATA()
                0x00000000c001c3ea                ATA::flush(bool)
                0x00000000c001c434                ATA::readyForCommand()
                0x00000000c001c484                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c802                ATA::read(unsigned long long, int, void*)
                0x00000000c001c86a                ATA::write(unsigned long long, int, void*)
                0x00000000c001c8d2                ATA::detectCHS()
                0x00000000c001c8fc                ATA::open(int, int, void*)
 *fill*         0x00000000c001c9c1        0x1 
 .text          0x00000000c001c9c2      0x5b3 hw/diskphys/atapi.32
                0x00000000c001c9c2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c9c8                ATAPI::close(int, int, void*)
                0x00000000c001c9ec                ATAPI::ATAPI()
                0x00000000c001c9ec                ATAPI::ATAPI()
                0x00000000c001ca1a                ATAPI::readyForCommand()
                0x00000000c001ca6a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cd2a                ATAPI::diskRemoved()
                0x00000000c001cd46                ATAPI::eject()
                0x00000000c001cd8c                ATAPI::diskInserted()
                0x00000000c001cdba                ATAPI::detectMedia()
                0x00000000c001ce76                ATAPI::open(int, int, void*)
                0x00000000c001cef6                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001cf75        0x1 
 .text          0x00000000c001cf76       0x8e hw/fpu/avx.32
                0x00000000c001cf76                AVX::open(int, int, void*)
                0x00000000c001cf88                AVX::close(int, int, void*)
                0x00000000c001cf9a                AVX::available()
                0x00000000c001cfac                AVX::save(void*)
                0x00000000c001cfc4                AVX::load(void*)
                0x00000000c001cfdc                AVX::AVX()
                0x00000000c001cfdc                AVX::AVX()
 .text          0x00000000c001d004       0x90 hw/fpu/mmx.32
                0x00000000c001d004                MMX::available()
                0x00000000c001d018                MMX::open(int, int, void*)
                0x00000000c001d02a                MMX::close(int, int, void*)
                0x00000000c001d03c                MMX::save(void*)
                0x00000000c001d054                MMX::load(void*)
                0x00000000c001d06c                MMX::MMX()
                0x00000000c001d06c                MMX::MMX()
 .text          0x00000000c001d094       0x96 hw/fpu/sse.32
                0x00000000c001d094                SSE::open(int, int, void*)
                0x00000000c001d0a6                SSE::close(int, int, void*)
                0x00000000c001d0b8                SSE::available()
                0x00000000c001d0d2                SSE::save(void*)
                0x00000000c001d0ea                SSE::load(void*)
                0x00000000c001d102                SSE::SSE()
                0x00000000c001d102                SSE::SSE()
 .text          0x00000000c001d12a       0x8e hw/fpu/x87.32
                0x00000000c001d12a                x87::open(int, int, void*)
                0x00000000c001d13c                x87::close(int, int, void*)
                0x00000000c001d14e                x87::available()
                0x00000000c001d160                x87::save(void*)
                0x00000000c001d178                x87::load(void*)
                0x00000000c001d190                x87::x87()
                0x00000000c001d190                x87::x87()
 .text          0x00000000c001d1b8      0x5f3 hw/intctrl/apic.32
                0x00000000c001d1b8                APIC::disable()
                0x00000000c001d1ba                APIC::close(int, int, void*)
                0x00000000c001d1dc                IOAPIC::close(int, int, void*)
                0x00000000c001d1e2                APIC::io_wait()
                0x00000000c001d1e8                APIC::getBase()
                0x00000000c001d22a                APIC::eoi(unsigned char)
                0x00000000c001d258                APIC::open(int, int, void*)
                0x00000000c001d312                IOAPIC::IOAPIC()
                0x00000000c001d312                IOAPIC::IOAPIC()
                0x00000000c001d33a                APIC::APIC()
                0x00000000c001d33a                APIC::APIC()
                0x00000000c001d40a                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d43c                IOAPIC::read(int)
                0x00000000c001d464                IOAPIC::open(int, int, void*)
                0x00000000c001d55a                IOAPIC::write(int, int)
                0x00000000c001d586                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d640                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d7ab        0x1 
 .text          0x00000000c001d7ac      0x3d3 hw/intctrl/pic.32
                0x00000000c001d7ac                PIC::disable()
                0x00000000c001d7da                PIC::close(int, int, void*)
                0x00000000c001d7fc                PIC::PIC()
                0x00000000c001d7fc                PIC::PIC()
                0x00000000c001d8d2                PIC::ioWait()
                0x00000000c001d8d8                PIC::getIRQReg(int)
                0x00000000c001d942                PIC::eoi(unsigned char)
                0x00000000c001d9d4                PIC::remap()
                0x00000000c001db40                PIC::open(int, int, void*)
 *fill*         0x00000000c001db7f        0x1 
 .text          0x00000000c001db80      0x252 hw/timer/apictimer.32
                0x00000000c001db80                APICTimer::close(int, int, void*)
                0x00000000c001db86                apicTimerHandler(regs*, void*)
                0x00000000c001dbb4                APICTimer::write(int)
                0x00000000c001dcb2                APICTimer::open(int, int, void*)
                0x00000000c001ddaa                APICTimer::APICTimer()
                0x00000000c001ddaa                APICTimer::APICTimer()
 .text          0x00000000c001ddd2      0x1a7 hw/timer/pit.32
                0x00000000c001ddd2                PIT::write(int)
                0x00000000c001de50                pitHandler(regs*, void*)
                0x00000000c001de7c                PIT::open(int, int, void*)
                0x00000000c001deca                PIT::close(int, int, void*)
                0x00000000c001defa                PIT::PIT()
                0x00000000c001defa                PIT::PIT()
 *fill*         0x00000000c001df79        0x7 
 .text          0x00000000c001df80        0xa hw/fpu/x86/avx.32
                0x00000000c001df80                avxDetect
                0x00000000c001df86                avxSave
                0x00000000c001df87                avxLoad
                0x00000000c001df88                avxInit
                0x00000000c001df89                avxClose
 *fill*         0x00000000c001df8a        0x6 
 .text          0x00000000c001df90       0x38 hw/fpu/x86/sse.32
                0x00000000c001df90                sseDetect
                0x00000000c001dfab                sseSave
                0x00000000c001dfb1                sseLoad
                0x00000000c001dfb7                sseInit
                0x00000000c001dfc7                sseClose
 *fill*         0x00000000c001dfc8        0x8 
 .text          0x00000000c001dfd0       0x47 hw/fpu/x86/x87.32
                0x00000000c001dfd6                x87Detect
                0x00000000c001dff1                x87Save
                0x00000000c001dff7                x87Load
                0x00000000c001dffc                x87Init
                0x00000000c001e016                x87Close
 *fill*         0x00000000c001e017        0x1 
 .text          0x00000000c001e018       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e03d        0x0 crtn.32
 *fill*         0x00000000c001e03d        0x3 
 .text          0x00000000c001e040      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e040                __divdi3
 *fill*         0x00000000c001e18b        0x1 
 .text          0x00000000c001e18c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e18c                __moddi3
 *fill*         0x00000000c001e30a        0x2 
 .text          0x00000000c001e30c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e30c                __udivdi3
 *fill*         0x00000000c001e40b        0x1 
 .text          0x00000000c001e40c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e40c                __umoddi3
 *fill*         0x00000000c001e526        0xa 
 .text          0x00000000c001e530       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e530                fabs
 *fill*         0x00000000c001e54e        0x2 
 .text          0x00000000c001e550        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e550                lrint
 .text          0x00000000c001e55c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e55c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e568        0x0
 .iplt          0x00000000c001e568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e568        0xf
 .init          0x00000000c001e568        0x3 crti.32
                0x00000000c001e568                _init
 .init          0x00000000c001e56b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e570        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e575        0x2 crtn.32

.fini           0x00000000c001e577        0xa
 .fini          0x00000000c001e577        0x3 crti.32
                0x00000000c001e577                _fini
 .fini          0x00000000c001e57a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e57f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e582       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e582       0x23 core/computer.32
                0x00000000c001e582                Computer::~Computer()
                0x00000000c001e582                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e5a6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e5a6       0x2a core/computer.32
                0x00000000c001e5a6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e5d0       0x15
 .text._Z10idleCommonv
                0x00000000c001e5d0       0x15 core/idle.32
                0x00000000c001e5d0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e5e5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e5e5       0x12 core/kheap.32
                0x00000000c001e5e5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e5f7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e5f7        0x9 core/kheap.32
                0x00000000c001e5f7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e600        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e600        0x2 core/unixfile.32
                0x00000000c001e600                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e600                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e602       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e602       0x58 core/unixfile.32
                0x00000000c001e602                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e602                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e65a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e65a       0xd3 core/unixfile.32
                0x00000000c001e65a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e72e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e72e        0x7 core/unixfile.32
                0x00000000c001e72e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e736       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e736       0xa1 core/unixfile.32
                0x00000000c001e736                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e7d8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e7d8        0x8 core/unixfile.32
                0x00000000c001e7d8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e7e0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e7e0       0x1a hal/device.32
                0x00000000c001e7e0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e7e0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e7fa       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e7fa       0x2a hal/device.32
                0x00000000c001e7fa                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e824       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e824       0xdc hal/device.32
                0x00000000c001e824                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e900       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e900       0x58 hal/device.32
                0x00000000c001e900                LinkedList<Device>::LinkedList()
                0x00000000c001e900                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001e958       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001e958       0x12 hal/intctrl.32
                0x00000000c001e958                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001e96a       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001e96a       0x12 hal/intctrl.32
                0x00000000c001e96a                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001e97c       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001e97c       0x12 hal/intctrl.32
                0x00000000c001e97c                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001e98e       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001e98e       0x12 hal/intctrl.32
                0x00000000c001e98e                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001e9a0       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001e9a0       0x12 hal/intctrl.32
                0x00000000c001e9a0                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001e9b2       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001e9b2       0x12 hal/intctrl.32
                0x00000000c001e9b2                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e9c4        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e9c4        0x7 hal/timer.32
                0x00000000c001e9c4                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e9cc       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e9cc       0x1c hal/timer.32
                0x00000000c001e9cc                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e9e8       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e9e8       0xae hal/timer.32
                0x00000000c001e9e8                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea96       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea96       0xd3 hal/timer.32
                0x00000000c001ea96                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001eb6a       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001eb6a       0x23 hw/acpi.32
                0x00000000c001eb6a                ACPI::~ACPI()
                0x00000000c001eb6a                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001eb8e       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001eb8e       0x2a hw/acpi.32
                0x00000000c001eb8e                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001ebb8       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ebb8       0x23 hw/cpu.32
                0x00000000c001ebb8                CPU::~CPU()
                0x00000000c001ebb8                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ebdc       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ebdc       0x2a hw/cpu.32
                0x00000000c001ebdc                CPU::~CPU()

.text._ZN3CPU7readCR0Ev
                0x00000000c001ec06       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001ec06       0x12 hw/cpu.32
                0x00000000c001ec06                CPU::readCR0()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ec18       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ec18       0x12 hw/cpu.32
                0x00000000c001ec18                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001ec2a        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001ec2a        0x9 hw/cpu.32
                0x00000000c001ec2a                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001ec33        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001ec33        0x9 hw/cpu.32
                0x00000000c001ec33                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001ec3c       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001ec3c       0x12 krnl/panic.32
                0x00000000c001ec3c                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ec4e        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ec4e        0x2 thr/prcssthr.32
                0x00000000c001ec4e                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ec4e                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ec50       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ec50       0x3e thr/prcssthr.32
                0x00000000c001ec50                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ec50                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ec8e       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ec8e       0x58 thr/prcssthr.32
                0x00000000c001ec8e                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ec8e                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ece6        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ece6        0x8 thr/prcssthr.32
                0x00000000c001ece6                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ecee       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ecee       0x23 hw/bus/pci.32
                0x00000000c001ecee                PCI::~PCI()
                0x00000000c001ecee                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ed12       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ed12       0x2a hw/bus/pci.32
                0x00000000c001ed12                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ed3c       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ed3c       0x23 hw/diskctrl/ide.32
                0x00000000c001ed3c                IDE::~IDE()
                0x00000000c001ed3c                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ed60       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ed60       0x2a hw/diskctrl/ide.32
                0x00000000c001ed60                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001ed8a       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ed8a       0x23 hw/diskphys/ata.32
                0x00000000c001ed8a                ATA::~ATA()
                0x00000000c001ed8a                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001edae       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001edae       0x2a hw/diskphys/ata.32
                0x00000000c001edae                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001edd8       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001edd8       0x23 hw/diskphys/atapi.32
                0x00000000c001edd8                ATAPI::~ATAPI()
                0x00000000c001edd8                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001edfc       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001edfc       0x2a hw/diskphys/atapi.32
                0x00000000c001edfc                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001ee26       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001ee26       0x23 hw/fpu/avx.32
                0x00000000c001ee26                AVX::~AVX()
                0x00000000c001ee26                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ee4a       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ee4a       0x2a hw/fpu/avx.32
                0x00000000c001ee4a                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ee74       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ee74       0x23 hw/fpu/mmx.32
                0x00000000c001ee74                MMX::~MMX()
                0x00000000c001ee74                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ee98       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ee98       0x2a hw/fpu/mmx.32
                0x00000000c001ee98                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001eec2       0x23
 .text._ZN3SSED2Ev
                0x00000000c001eec2       0x23 hw/fpu/sse.32
                0x00000000c001eec2                SSE::~SSE()
                0x00000000c001eec2                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001eee6       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001eee6       0x2a hw/fpu/sse.32
                0x00000000c001eee6                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001ef10       0x23
 .text._ZN3x87D2Ev
                0x00000000c001ef10       0x23 hw/fpu/x87.32
                0x00000000c001ef10                x87::~x87()
                0x00000000c001ef10                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001ef34       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001ef34       0x2a hw/fpu/x87.32
                0x00000000c001ef34                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001ef5e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ef5e       0x23 hw/intctrl/apic.32
                0x00000000c001ef5e                IOAPIC::~IOAPIC()
                0x00000000c001ef5e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ef82       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ef82       0x2a hw/intctrl/apic.32
                0x00000000c001ef82                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001efac       0x23
 .text._ZN4APICD2Ev
                0x00000000c001efac       0x23 hw/intctrl/apic.32
                0x00000000c001efac                APIC::~APIC()
                0x00000000c001efac                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001efd0       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001efd0       0x2a hw/intctrl/apic.32
                0x00000000c001efd0                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001effa       0x23
 .text._ZN3PICD2Ev
                0x00000000c001effa       0x23 hw/intctrl/pic.32
                0x00000000c001effa                PIC::~PIC()
                0x00000000c001effa                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f01e       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f01e       0x2a hw/intctrl/pic.32
                0x00000000c001f01e                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f048       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f048       0x23 hw/timer/apictimer.32
                0x00000000c001f048                APICTimer::~APICTimer()
                0x00000000c001f048                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f06c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f06c       0x2a hw/timer/apictimer.32
                0x00000000c001f06c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f096       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f096       0x23 hw/timer/pit.32
                0x00000000c001f096                PIT::~PIT()
                0x00000000c001f096                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f0ba       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f0ba       0x2a hw/timer/pit.32
                0x00000000c001f0ba                PIT::~PIT()

.rodata         0x00000000c001f0e4     0x33e4
                0x00000000c001f0e4                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f0e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f0e8        0x4 core/unixfile.32
 .ctors         0x00000000c001f0ec        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f0f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f0f4                end_ctors = .
                0x00000000c001f0f4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f0f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f0f8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f0f8                __DTOR_END__
                0x00000000c001f0fc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f0fc        0x4 
 .rodata        0x00000000c001f100      0x101 acpica/utclib.32
                0x00000000c001f100                AcpiGbl_Ctypes
 *fill*         0x00000000c001f201        0x3 
 .rodata        0x00000000c001f204       0x18 core/malloc.32
 *fill*         0x00000000c001f21c        0x4 
 .rodata        0x00000000c001f220      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f340       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f396        0xa 
 .rodata        0x00000000c001f3a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f7a0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f856        0x2 
 .rodata.str1.4
                0x00000000c001f858      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001fbfd        0x3 
 .rodata        0x00000000c001fc00       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001fc60       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001fc80       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001fc94       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001fcd6        0x2 
 .rodata.cst8   0x00000000c001fcd8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001fce0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001fd4c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fe10       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001fe5a        0x6 
 .rodata.cst8   0x00000000c001fe60        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001fe68        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fe74       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001febc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001febc       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c001ff2f        0x1 
 .rodata._ZTV8Computer
                0x00000000c001ff30       0x2c core/computer.32
                0x00000000c001ff30                vtable for Computer
 .rodata.str1.1
                0x00000000c001ff5c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c001ff78       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001ffa8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001ffb4       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c001ffcf       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c002001d       0x39 core/pipe.32
 *fill*         0x00000000c0020056        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020058       0x1c core/pipe.32
                0x00000000c0020058                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020074       0x9d core/terminal.32
 *fill*         0x00000000c0020111        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020114       0x1c core/terminal.32
                0x00000000c0020114                vtable for VgaText
 .rodata        0x00000000c0020130       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002014e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020168       0x19 core/unixfile.32
 *fill*         0x00000000c0020181        0x3 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020184       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00201a6       0x15 core/unixfile.32
 *fill*         0x00000000c00201bb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00201bc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020207        0x8 core/unixfile.32
 *fill*         0x00000000c002020f        0x1 
 .rodata.str1.4
                0x00000000c0020210       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020230       0x1c core/unixfile.32
                0x00000000c0020230                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002024c       0x1c core/unixfile.32
                0x00000000c002024c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020268      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020413      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020597       0x33 coreobjs/c++.32
 *fill*         0x00000000c00205ca        0x2 
 .rodata.str1.4
                0x00000000c00205cc       0x3f dbg/kconsole.32
 *fill*         0x00000000c002060b        0x1 
 .rodata        0x00000000c002060c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002075c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002075c       0x64 fs/vfs.32
                0x00000000c002075c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00207c0       0x1c fs/vfs.32
                0x00000000c00207c0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00207dc       0x1c fs/vfs.32
                0x00000000c00207dc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00207f8       0x2c hal/bus.32
                0x00000000c00207f8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020824       0x30 hal/buzzer.32
                0x00000000c0020824                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020854       0x3c hal/clock.32
                0x00000000c0020854                vtable for Clock
 *fill*         0x00000000c0020890       0x10 
 .rodata        0x00000000c00208a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00208d0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00208ee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00208ee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00208ee       0x19 hal/device.32
 *fill*         0x00000000c00208ee        0x2 
 .rodata._ZTV6Device
                0x00000000c00208f0       0x2c hal/device.32
                0x00000000c00208f0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c002091c       0x2c hal/device.32
                0x00000000c002091c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020948       0x2c hal/diskctrl.32
                0x00000000c0020948                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020974       0x34 hal/diskphys.32
                0x00000000c0020974                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00209a8        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c00209b0       0x38 hal/fpu.32
                0x00000000c00209b0                vtable for FPU
 .rodata.str1.4
                0x00000000c00209e8      0x158 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020b40      0x1b0 hal/intctrl.32
                                        0x1c3 (size before relaxing)
 .rodata._ZTV19InterruptController
                0x00000000c0020cf0       0x48 hal/intctrl.32
                0x00000000c0020cf0                vtable for InterruptController
 .rodata        0x00000000c0020d38       0x4e hal/keybrd.32
 *fill*         0x00000000c0020d86        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0020d88       0x34 hal/keybrd.32
                0x00000000c0020d88                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020dbc       0x7a hal/logidisk.32
 *fill*         0x00000000c0020e36        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0020e38       0x2c hal/logidisk.32
                0x00000000c0020e38                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020e64       0x2c hal/mouse.32
                0x00000000c0020e64                vtable for Mouse
 .rodata.str1.1
                0x00000000c0020e90        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020e9b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020e9b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020e9b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020e9b       0x15 hal/timer.32
 *fill*         0x00000000c0020e9b        0x1 
 .rodata._ZTV5Timer
                0x00000000c0020e9c       0x30 hal/timer.32
                0x00000000c0020e9c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020ecc       0x10 hal/vcache.32
                0x00000000c0020ecc                vtable for VCache
 .rodata.str1.1
                0x00000000c0020edc        0xf hal/video.32
 *fill*         0x00000000c0020eeb        0x1 
 .rodata._ZTV5Video
                0x00000000c0020eec       0x40 hal/video.32
                0x00000000c0020eec                vtable for Video
 .rodata.str1.1
                0x00000000c0020f2c       0xd1 hw/acpi.32
 *fill*         0x00000000c0020ffd        0x3 
 .rodata.str1.4
                0x00000000c0021000       0xe5 hw/acpi.32
 *fill*         0x00000000c00210e5        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00210e8       0x2c hw/acpi.32
                0x00000000c00210e8                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021114      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c0021338       0x2c hw/cpu.32
                0x00000000c0021338                vtable for CPU
 .rodata.str1.1
                0x00000000c0021364       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021419        0x3 
 .rodata.str1.4
                0x00000000c002141c      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c002152e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021573       0x5d sys/syscalls.32
 .rodata.str1.4
                0x00000000c00215d0       0x4c sys/syscalls.32
 .rodata.str1.1
                0x00000000c002161c      0x1ea thr/elf.32
                                        0x1ec (size before relaxing)
 .rodata.str1.1
                0x00000000c0021806       0x37 thr/prcssthr.32
 *fill*         0x00000000c002183d        0x3 
 .rodata.str1.4
                0x00000000c0021840      0x2b4 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0021af4       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021af4       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021af4       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021af4       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021af4        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021af4       0x70 vm86/vm8086.32
 .rodata        0x00000000c0021b64       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021b94       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0021be7        0x1 
 .rodata.str1.4
                0x00000000c0021be8       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0021c10       0x64 fs/fat/vfslink.32
                0x00000000c0021c10                vtable for FAT
 .rodata.str1.1
                0x00000000c0021c74       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0021cbd        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0021cc0       0x64 fs/iso9660/vfslink.32
                0x00000000c0021cc0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021d24       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0021d3e        0x2 
 .rodata.cst4   0x00000000c0021d40        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0021d44       0x38 hal/sound/sndhw.32
                0x00000000c0021d44                vtable for SoundDevice
 .rodata.cst4   0x00000000c0021d7c       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0021d8c       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021e30       0x2c hw/bus/pci.32
                0x00000000c0021e30                vtable for PCI
 .rodata.str1.1
                0x00000000c0021e5c      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0022092        0x2 
 .rodata._ZTV3IDE
                0x00000000c0022094       0x2c hw/diskctrl/ide.32
                0x00000000c0022094                vtable for IDE
 .rodata.str1.1
                0x00000000c00220c0       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c00220e1        0x3 
 .rodata._ZTV3ATA
                0x00000000c00220e4       0x34 hw/diskphys/ata.32
                0x00000000c00220e4                vtable for ATA
 .rodata.str1.1
                0x00000000c0022118       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0022150       0x34 hw/diskphys/atapi.32
                0x00000000c0022150                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022184        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c002218c       0x38 hw/fpu/avx.32
                0x00000000c002218c                vtable for AVX
 .rodata.str1.1
                0x00000000c00221c4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c00221cc       0x38 hw/fpu/mmx.32
                0x00000000c00221cc                vtable for MMX
 .rodata.str1.1
                0x00000000c0022204        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c002220c       0x38 hw/fpu/sse.32
                0x00000000c002220c                vtable for SSE
 .rodata.str1.1
                0x00000000c0022244        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c002224c       0x38 hw/fpu/x87.32
                0x00000000c002224c                vtable for x87
 .rodata        0x00000000c0022284       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002235c       0x48 hw/intctrl/apic.32
                0x00000000c002235c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00223a4       0x2c hw/intctrl/apic.32
                0x00000000c00223a4                vtable for IOAPIC
 .rodata        0x00000000c00223d0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c00223f2        0x2 
 .rodata._ZTV3PIC
                0x00000000c00223f4       0x48 hw/intctrl/pic.32
                0x00000000c00223f4                vtable for PIC
 .rodata.str1.1
                0x00000000c002243c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0022447        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022448       0x30 hw/timer/apictimer.32
                0x00000000c0022448                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022478       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022495        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022498       0x30 hw/timer/pit.32
                0x00000000c0022498                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00224c8      0x601
 *(.data)
 .data          0x00000000c00224c8        0x0 crti.32
 .data          0x00000000c00224c8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00224c8                __dso_handle
 .data          0x00000000c00224cc        0x0 acpica/utclib.32
 .data          0x00000000c00224cc        0x0 core/malloc.32
 .data          0x00000000c00224cc        0x0 libk/string.32
 .data          0x00000000c00224cc        0x0 fs/fat/diskio.32
 .data          0x00000000c00224cc        0x0 fs/fat/ff.32
 .data          0x00000000c00224cc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00224cc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00224cc        0x0 hal/libresample/samplerate.32
 .data          0x00000000c00224cc        0x0 hal/libresample/src_linear.32
 .data          0x00000000c00224cc        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c00224cc        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c00224cc        0x0 core/computer.32
 .data          0x00000000c00224cc        0x0 core/gdt.32
 .data          0x00000000c00224cc        0x0 core/idle.32
 .data          0x00000000c00224cc        0x0 core/idt.32
 .data          0x00000000c00224cc        0x4 core/kheap.32
 .data          0x00000000c00224d0        0x0 core/main.32
 .data          0x00000000c00224d0        0x4 core/physmgr.32
                0x00000000c00224d0                Phys::bitmap
 .data          0x00000000c00224d4        0x0 core/pipe.32
 *fill*         0x00000000c00224d4        0xc 
 .data          0x00000000c00224e0       0x60 core/terminal.32
                0x00000000c00224e0                VgaText::hiddenOut
                0x00000000c0022500                ansiToVGAMappings
 .data          0x00000000c0022540        0x0 core/tss.32
 .data          0x00000000c0022540        0x4 core/unixfile.32
                0x00000000c0022540                UnixFile::nextFd
 .data          0x00000000c0022544        0x8 core/virtmgr.32
                0x00000000c0022544                Virt::pageAllocPtr
                0x00000000c0022548                Virt::bitmap
 .data          0x00000000c002254c        0x4 coreobjs/c++.32
                0x00000000c002254c                __stack_chk_guard
 .data          0x00000000c0022550        0x0 dbg/kconsole.32
 .data          0x00000000c0022550        0x0 fs/vfs.32
 .data          0x00000000c0022550        0x0 hal/bus.32
 .data          0x00000000c0022550        0x0 hal/buzzer.32
 .data          0x00000000c0022550        0x0 hal/clock.32
 .data          0x00000000c0022550        0x0 hal/device.32
 .data          0x00000000c0022550        0x0 hal/diskctrl.32
 .data          0x00000000c0022550        0x0 hal/diskphys.32
 .data          0x00000000c0022550        0x0 hal/fpu.32
 *fill*         0x00000000c0022550       0x10 
 .data          0x00000000c0022560      0x2a0 hal/intctrl.32
                0x00000000c0022560                exceptionNames
 .data          0x00000000c0022800        0x0 hal/keybrd.32
 .data          0x00000000c0022800        0x0 hal/logidisk.32
 .data          0x00000000c0022800        0x0 hal/mouse.32
 .data          0x00000000c0022800        0x0 hal/partition.32
 .data          0x00000000c0022800        0x0 hal/timer.32
 .data          0x00000000c0022800        0x0 hal/vcache.32
 .data          0x00000000c0022800        0x0 hal/video.32
 .data          0x00000000c0022800       0x10 hw/acpi.32
                0x00000000c0022800                legacyIRQRemaps
 *fill*         0x00000000c0022810       0x10 
 .data          0x00000000c0022820      0x2a4 hw/cpu.32
                0x00000000c0022820                cpuNameList
                0x00000000c0022ac0                lastCode
 .data          0x00000000c0022ac4        0x0 hw/ports.32
 .data          0x00000000c0022ac4        0x0 krnl/panic.32
 .data          0x00000000c0022ac4        0x0 reg/registry.32
 .data          0x00000000c0022ac4        0x0 sys/sc_exit.32
 .data          0x00000000c0022ac4        0x0 sys/sc_loaddll.32
 .data          0x00000000c0022ac4        0x0 sys/sc_read.32
 .data          0x00000000c0022ac4        0x0 sys/sc_sbrk.32
 .data          0x00000000c0022ac4        0x0 sys/sc_write.32
 .data          0x00000000c0022ac4        0x0 sys/sc_yield.32
 .data          0x00000000c0022ac4        0x0 sys/syscalls.32
 .data          0x00000000c0022ac4        0x0 thr/elf.32
 .data          0x00000000c0022ac4        0x4 thr/prcssthr.32
                0x00000000c0022ac4                nextPID
 .data          0x00000000c0022ac8        0x0 vm86/vm8086.32
 .data          0x00000000c0022ac8        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022ac8        0x1 fs/iso9660/vfslink.32
                0x00000000c0022ac8                recentDriveletter
 .data          0x00000000c0022ac9        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022ac9        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022ac9        0x0 hw/bus/isa.32
 .data          0x00000000c0022ac9        0x0 hw/bus/pci.32
 .data          0x00000000c0022ac9        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022ac9        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022ac9        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022ac9        0x0 hw/fpu/avx.32
 .data          0x00000000c0022ac9        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022ac9        0x0 hw/fpu/sse.32
 .data          0x00000000c0022ac9        0x0 hw/fpu/x87.32
 .data          0x00000000c0022ac9        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022ac9        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022ac9        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022ac9        0x0 hw/timer/pit.32
 .data          0x00000000c0022ac9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022ac9        0x0 crtn.32
 .data          0x00000000c0022ac9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022ac9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022ac9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022ac9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022ac9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022ac9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022ac9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022acc        0x0
 .got           0x00000000c0022acc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022acc        0x0
 .got.plt       0x00000000c0022acc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022acc        0x0
 .igot.plt      0x00000000c0022acc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022acc        0x0
 .tm_clone_table
                0x00000000c0022acc        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022acc        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022ac9      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022ac9        0x3 
 .eh_frame      0x00000000c0022acc        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022acc        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022acc       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022b24       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022b64       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0022bd0       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022c54       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0022c6c        0x0
 .rel.got       0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0022c6c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0022c6c     0x21bc
                0x00000000c0022c6c                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0022c6c        0x0 crti.32
 .bss           0x00000000c0022c6c       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0022c8c        0x4 acpica/utclib.32
 *fill*         0x00000000c0022c90       0x10 
 .bss           0x00000000c0022ca0      0x378 core/malloc.32
 .bss           0x00000000c0023018        0x0 libk/string.32
 .bss           0x00000000c0023018        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023018        0x8 
 .bss           0x00000000c0023020       0x88 fs/fat/ff.32
 .bss           0x00000000c00230a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00230a8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00230a8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c00230a8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c00230a8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c00230a8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c00230a8        0x6 core/computer.32
                0x00000000c00230a8                computer
                0x00000000c00230ac                preemptionOn
                0x00000000c00230ad                schedulingOn
 *fill*         0x00000000c00230ae        0x2 
 .bss           0x00000000c00230b0        0x6 core/gdt.32
                0x00000000c00230b0                gdtDescr
 .bss           0x00000000c00230b6        0x0 core/idle.32
 *fill*         0x00000000c00230b6        0x2 
 .bss           0x00000000c00230b8        0x6 core/idt.32
                0x00000000c00230b8                idtDescr
 .bss           0x00000000c00230be        0x0 core/kheap.32
 *fill*         0x00000000c00230be        0x2 
 .bss           0x00000000c00230c0        0x4 core/main.32
                0x00000000c00230c0                sysBootSettings
 *fill*         0x00000000c00230c4       0x1c 
 .bss           0x00000000c00230e0       0x50 core/physmgr.32
                0x00000000c00230e0                Phys::currentPagePointer
                0x00000000c00230e4                Phys::highestMem
                0x00000000c00230e8                Phys::oldPercent
                0x00000000c00230ec                Phys::usedPages
                0x00000000c00230f0                Phys::usablePages
                0x00000000c0023100                Phys::dmaUsage
 .bss           0x00000000c0023130        0x0 core/pipe.32
 *fill*         0x00000000c0023130       0x10 
 .bss           0x00000000c0023140       0x29 core/terminal.32
                0x00000000c0023140                textModeImplementation
                0x00000000c0023160                terminalCycle
                0x00000000c0023164                activeTerminal
                0x00000000c0023168                VgaText::graphicMode
 *fill*         0x00000000c0023169        0x1 
 .bss           0x00000000c002316a        0x2 core/tss.32
                0x00000000c002316a                doubleFaultSelector
 .bss           0x00000000c002316c       0x10 core/unixfile.32
                0x00000000c002316c                initialFilesAdded
                0x00000000c0023170                unixFileLinkedList
 .bss           0x00000000c002317c        0x4 core/virtmgr.32
                0x00000000c002317c                firstVAS
 .bss           0x00000000c0023180        0x0 coreobjs/c++.32
 .bss           0x00000000c0023180        0x0 dbg/kconsole.32
 .bss           0x00000000c0023180        0x4 fs/vfs.32
                0x00000000c0023180                installedFilesystems
 .bss           0x00000000c0023184        0x0 hal/bus.32
 .bss           0x00000000c0023184        0x4 hal/buzzer.32
                0x00000000c0023184                systemBuzzer
 .bss           0x00000000c0023188        0x8 hal/clock.32
                0x00000000c0023188                dstOn
                0x00000000c0023189                timezoneHalfHourOffset
                0x00000000c002318c                timezoneHourOffset
 .bss           0x00000000c0023190        0x0 hal/device.32
 .bss           0x00000000c0023190        0x0 hal/diskctrl.32
 .bss           0x00000000c0023190        0x0 hal/diskphys.32
 .bss           0x00000000c0023190        0x0 hal/fpu.32
 .bss           0x00000000c0023190       0x1c hal/intctrl.32
                0x00000000c0023190                pf5
                0x00000000c0023194                pf4
                0x00000000c0023198                pf3
                0x00000000c002319c                pf2
                0x00000000c00231a0                pf1
                0x00000000c00231a4                pf0
                0x00000000c00231a8                gpFaultIntercept
 *fill*         0x00000000c00231ac       0x14 
 .bss           0x00000000c00231c0      0x429 hal/keybrd.32
                0x00000000c00231c0                keyboardWaitingTaskList
                0x00000000c00231c4                keyboardSetupYet
                0x00000000c00231e0                keystates
 *fill*         0x00000000c00235e9       0x17 
 .bss           0x00000000c0023600       0x88 hal/logidisk.32
                0x00000000c0023600                diskAssignments
                0x00000000c0023620                disks
 .bss           0x00000000c0023688        0x4 hal/mouse.32
                0x00000000c0023688                guiMouseHandler
 .bss           0x00000000c002368c        0x0 hal/partition.32
 *fill*         0x00000000c002368c        0x4 
 .bss           0x00000000c0023690        0x8 hal/timer.32
                0x00000000c0023690                nanoSinceBoot
 .bss           0x00000000c0023698        0x0 hal/vcache.32
 .bss           0x00000000c0023698        0x4 hal/video.32
                0x00000000c0023698                screen
 *fill*         0x00000000c002369c        0x4 
 .bss           0x00000000c00236a0      0x3c0 hw/acpi.32
                0x00000000c00236a0                systemSleepFunction
                0x00000000c00236a4                systemResetFunction
                0x00000000c00236a8                systemShutdownFunction
                0x00000000c00236ac                nextACPITable
                0x00000000c00236c0                acpiTables
                0x00000000c00238c0                usingXSDT
                0x00000000c00238c4                MADTpointer
                0x00000000c00238c8                RSDTpointer
                0x00000000c00238cc                RSDPpointer
                0x00000000c00238d0                ioapicDiscoveryNumber
                0x00000000c00238e0                ioapicFoundInMADT
                0x00000000c0023900                ioapicAddresses
                0x00000000c0023980                ioapicGSIBase
                0x00000000c0023a00                processorDiscoveryNumber
                0x00000000c0023a20                matchingAPICID
                0x00000000c0023a40                processorID
 .bss           0x00000000c0023a60       0x10 hw/cpu.32
                0x00000000c0023a60                lastD
                0x00000000c0023a64                lastC
                0x00000000c0023a68                lastB
                0x00000000c0023a6c                lastA
 .bss           0x00000000c0023a70        0x0 hw/ports.32
 .bss           0x00000000c0023a70        0x1 krnl/panic.32
                0x00000000c0023a70                Krnl::kernelInPanic
 .bss           0x00000000c0023a71        0x0 reg/registry.32
 .bss           0x00000000c0023a71        0x0 sys/sc_exit.32
 .bss           0x00000000c0023a71        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023a71        0x0 sys/sc_read.32
 .bss           0x00000000c0023a71        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023a71        0x0 sys/sc_write.32
 .bss           0x00000000c0023a71        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023a71        0xf 
 .bss           0x00000000c0023a80      0x200 sys/syscalls.32
                0x00000000c0023a80                systemCallHandlers
 .bss           0x00000000c0023c80      0x7a4 thr/elf.32
                0x00000000c0023c80                Thr::driverLookupNext
                0x00000000c0023ca0                Thr::driverLookupLen
                0x00000000c0023ea0                Thr::driverLookupAddr
                0x00000000c00240a0                Thr::driverNameLookup
                0x00000000c00242a0                Thr::kernelSymbols
                0x00000000c0024320                Thr::kernelStringTable
                0x00000000c00243a0                Thr::kernelSymbolTable
                0x00000000c0024420                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0024424        0x4 
 .bss           0x00000000c0024428       0x68 thr/prcssthr.32
                0x00000000c0024428                cleanerThread
                0x00000000c002442c                weNeedTheCleanerToNotBlock
                0x00000000c0024430                xxxx
                0x00000000c0024434                retValLockStuff
                0x00000000c0024438                retValSchedLock
                0x00000000c002443c                lockStuffLock
                0x00000000c0024440                schedulerLock
                0x00000000c0024444                taskSwitchesPostponedFlag
                0x00000000c0024448                postponeTaskSwitchesCounter
                0x00000000c002444c                irqDisableCounter
                0x00000000c0024450                terminatedTaskList
                0x00000000c002445c                sleepingTaskList
                0x00000000c0024468                taskList
                0x00000000c0024474                kernelProcess
 .bss           0x00000000c0024490        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024490       0x10 
 .bss           0x00000000c00244a0       0xf0 fs/fat/vfslink.32
                0x00000000c00244a0                FAT::fats
                0x00000000c00244c0                FAT::vfsToFatRemaps
                0x00000000c0024540                fatToVFSRemaps
 *fill*         0x00000000c0024590       0x10 
 .bss           0x00000000c00245a0      0x820 fs/iso9660/vfslink.32
                0x00000000c00245a0                recentSector
                0x00000000c00245c0                recentBuffer
 .bss           0x00000000c0024dc0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0024dc0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0024dc0        0x0 hw/bus/isa.32
 .bss           0x00000000c0024dc0        0x0 hw/bus/pci.32
 .bss           0x00000000c0024dc0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0024dc0        0x8 hw/diskphys/ata.32
                0x00000000c0024dc0                ataSectorsWritten
                0x00000000c0024dc4                ataSectorsRead
 .bss           0x00000000c0024dc8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024dc8        0x0 hw/fpu/avx.32
 .bss           0x00000000c0024dc8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0024dc8        0x0 hw/fpu/sse.32
 .bss           0x00000000c0024dc8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0024dc8       0x18 
 .bss           0x00000000c0024de0       0x41 hw/intctrl/apic.32
                0x00000000c0024de0                noOfIOAPICs
                0x00000000c0024e00                ioapics
                0x00000000c0024e20                IOAPICsSetupYet
 .bss           0x00000000c0024e21        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0024e21        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024e21        0x3 
 .bss           0x00000000c0024e24        0x4 hw/timer/pit.32
                0x00000000c0024e24                pitFreq
 .bss           0x00000000c0024e28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024e28        0x0 crtn.32
 .bss           0x00000000c0024e28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0024e28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0024e28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0024e28        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0024e28        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0024e28        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0024e28        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024e28                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0026fe4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
