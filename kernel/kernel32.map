Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/clock/rtc.32
 .comment       0x0000000000000000       0x12 hw/clock/rtc.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/clock/rtc.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e8d8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x44c D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001e2                goToVM86
                0x00000000c0000213                goToUsermode
                0x00000000c000023e                switchToThreadASMFirstTime
                0x00000000c000024c                switchToThreadASM
                0x00000000c00002ec                detectCPUID
                0x00000000c0000302                asmQuickAcquireLock
                0x00000000c0000320                asmQuickReleaseLock
                0x00000000c000032c                asmAcquireLock
                0x00000000c000034d                asmReleaseLock
                0x00000000c0000360                loadGDT
                0x00000000c0000380                isr0
                0x00000000c0000390                isr1
                0x00000000c000039a                isr2
                0x00000000c00003a4                isr3
                0x00000000c00003ae                isr4
                0x00000000c00003b8                isr5
                0x00000000c00003c2                isr6
                0x00000000c00003cc                isr7
                0x00000000c00003d6                isr8
                0x00000000c00003de                isr9
                0x00000000c00003e8                isr10
                0x00000000c00003f0                isr11
                0x00000000c00003f8                isr12
                0x00000000c0000400                isr13
                0x00000000c0000408                isr14
                0x00000000c0000410                isr15
                0x00000000c000041a                isr16
                0x00000000c0000424                isr17
                0x00000000c000042e                isr18
                0x00000000c0000438                isr96
                0x00000000c0000442                irq0
                0x00000000c000044c                irq1
                0x00000000c0000456                irq2
                0x00000000c0000460                irq3
                0x00000000c000046a                irq4
                0x00000000c0000474                irq5
                0x00000000c000047e                irq6
                0x00000000c0000488                irq7
                0x00000000c0000492                irq8
                0x00000000c000049c                irq9
                0x00000000c00004a6                irq10
                0x00000000c00004b0                irq11
                0x00000000c00004ba                irq12
                0x00000000c00004c4                irq13
                0x00000000c00004ce                irq14
                0x00000000c00004d8                irq15
                0x00000000c00004e2                irq16
                0x00000000c00004ec                irq17
                0x00000000c00004f6                irq18
                0x00000000c0000500                irq19
                0x00000000c000050a                irq20
                0x00000000c0000514                irq21
                0x00000000c000051e                irq22
                0x00000000c0000528                irq23
                0x00000000c0000532                int_common_stub
                0x00000000c0000562                syscall_common_stub
 .text          0x00000000c000059c      0x6ff acpica/utclib.32
                0x00000000c000059c                memcmp
                0x00000000c00005f4                memmove
                0x00000000c0000661                memcpy
                0x00000000c00006d8                memset
                0x00000000c0000701                strlen
                0x00000000c0000724                strpbrk
                0x00000000c0000766                strtok
                0x00000000c00007f4                strcpy
                0x00000000c0000826                strncpy
                0x00000000c000087a                strcmp
                0x00000000c00008bc                strchr
                0x00000000c00008e5                strncmp
                0x00000000c0000941                strcat
                0x00000000c0000982                strncat
                0x00000000c00009de                strstr
                0x00000000c0000a31                toupper
                0x00000000c0000a57                tolower
                0x00000000c0000a7d                simple_strtoul
 .text          0x00000000c0000c9b      0xfbf core/malloc.32
                0x00000000c0000e06                dlfree
                0x00000000c0001161                dlmalloc
                0x00000000c000169e                dlrealloc
                0x00000000c0001853                dlmemalign
                0x00000000c0001976                dlcalloc
                0x00000000c0001a10                dlcfree
                0x00000000c0001a15                dlindependent_calloc
                0x00000000c0001a3a                dlindependent_comalloc
                0x00000000c0001a51                dlvalloc
                0x00000000c0001a7c                dlpvalloc
                0x00000000c0001ab2                dlmalloc_trim
                0x00000000c0001abf                dlmalloc_usable_size
                0x00000000c0001af0                dlmallinfo
                0x00000000c0001bbf                dlmalloc_stats
                0x00000000c0001bd0                dlmallopt
 .text          0x00000000c0001c5a        0x0 libk/string.32
 .text          0x00000000c0001c5a       0x51 fs/fat/diskio.32
                0x00000000c0001c5a                disk_status
                0x00000000c0001c5d                disk_initialize
                0x00000000c0001c60                disk_read
                0x00000000c0001c76                disk_write
                0x00000000c0001c8c                disk_ioctl
 .text          0x00000000c0001cab     0x6833 fs/fat/ff.32
                0x00000000c0004f79                f_mount
                0x00000000c0004fdb                f_open
                0x00000000c0005417                f_read
                0x00000000c0005697                f_write
                0x00000000c0005951                f_sync
                0x00000000c0005b2d                f_close
                0x00000000c0005b5c                f_lseek
                0x00000000c0006013                f_opendir
                0x00000000c0006115                f_closedir
                0x00000000c0006137                f_readdir
                0x00000000c00061d2                f_stat
                0x00000000c0006261                f_getfree
                0x00000000c000642c                f_truncate
                0x00000000c0006524                f_unlink
                0x00000000c00066a7                f_mkdir
                0x00000000c00068d3                f_rename
                0x00000000c0006bc6                f_chmod
                0x00000000c0006ca4                f_utime
                0x00000000c0006d82                f_getlabel
                0x00000000c0006f70                f_setlabel
                0x00000000c00071dd                f_forward
                0x00000000c00073bb                f_mkfs
 .text          0x00000000c00084de       0x2d fs/fat/ffsystem.32
                0x00000000c00084de                ff_memalloc
                0x00000000c00084f4                ff_memfree
 .text          0x00000000c000850b      0x253 fs/fat/ffunicode.32
                0x00000000c000850b                ff_uni2oem
                0x00000000c000859b                ff_oem2uni
                0x00000000c0008607                ff_wtoupper
 .text          0x00000000c000875e      0x70e hal/libresample/samplerate.32
                0x00000000c00087e6                src_delete
                0x00000000c0008822                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008aab                src_set_ratio
                0x00000000c0008b02                src_get_channels
                0x00000000c0008b24                src_reset
                0x00000000c0008b68                src_new
                0x00000000c0008bf6                src_callback_new
                0x00000000c0008c58                src_get_name
                0x00000000c0008c8f                src_get_description
                0x00000000c0008cc6                src_get_version
                0x00000000c0008ccc                src_is_valid_ratio
                0x00000000c0008ce6                src_error
                0x00000000c0008cf4                src_strerror
                0x00000000c0008d07                src_simple
                0x00000000c0008d5a                src_short_to_float_array
                0x00000000c0008d80                src_float_to_short_array
                0x00000000c0008de4                src_int_to_float_array
                0x00000000c0008e0a                src_float_to_int_array
 .text          0x00000000c0008e6c      0x3fd hal/libresample/src_linear.32
                0x00000000c00091c4                linear_get_name
                0x00000000c00091d3                linear_get_description
                0x00000000c00091e2                linear_set_converter
 .text          0x00000000c0009269     0x1b46 hal/libresample/src_sinc.32
                0x00000000c000abbf                sinc_get_name
                0x00000000c000abd2                sinc_get_description
                0x00000000c000abe5                sinc_set_converter
 .text          0x00000000c000adaf      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000b0dd                zoh_get_name
                0x00000000c000b0ec                zoh_get_description
                0x00000000c000b0fb                zoh_set_converter
 .text          0x00000000c000b182      0x68d core/computer.32
                0x00000000c000b182                Computer::close(int, int, void*)
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b322                Computer::setBootMessage(char const*)
                0x00000000c000b324                Computer::start()
                0x00000000c000b3fe                firstTask()
                0x00000000c000b40c                Computer::detectFeatures()
                0x00000000c000b5e6                Computer::displayFeatures()
                0x00000000c000b5e8                Computer::rdmsr(unsigned int)
                0x00000000c000b614                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b64c                Computer::nmiEnabled()
                0x00000000c000b658                Computer::readCMOS(unsigned char)
                0x00000000c000b672                Computer::enableNMI(bool)
                0x00000000c000b68a                Computer::open(int, int, void*)
                0x00000000c000b752                Computer::disableNMI()
                0x00000000c000b760                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b77e                Computer::handleNMI()
                0x00000000c000b7e4                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b80f      0xf08 core/elf.32
                0x00000000c000b80f                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000ba8c                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000bca2                runtimeReferenceHelper()
                0x00000000c000bcb5                getAddressOfKernelSymbol(char const*)
                0x00000000c000bd04                loadKernelSymbolTable(char const*)
                0x00000000c000bfc5                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c640                loadDLL(char const*)
                0x00000000c000c709                executeDLL(unsigned long, void*)
 *fill*         0x00000000c000c717        0x1 
 .text          0x00000000c000c718      0x1b7 core/gdt.32
                0x00000000c000c718                GDTEntry::setBase(unsigned int)
                0x00000000c000c734                GDTEntry::setLimit(unsigned int)
                0x00000000c000c752                GDT::GDT()
                0x00000000c000c752                GDT::GDT()
                0x00000000c000c768                GDT::addEntry(GDTEntry)
                0x00000000c000c7a4                GDT::getNumberOfEntries()
                0x00000000c000c7ac                GDT::flush()
                0x00000000c000c7ce                GDT::setup()
 .text          0x00000000c000c8cf       0x61 core/idle.32
                0x00000000c000c8cf                idleFunction(void*)
 .text          0x00000000c000c930      0x45f core/idt.32
                0x00000000c000c930                IDTEntry::IDTEntry(bool)
                0x00000000c000c930                IDTEntry::IDTEntry(bool)
                0x00000000c000c99e                IDTEntry::setOffset(unsigned int)
                0x00000000c000c9b2                IDT::IDT()
                0x00000000c000c9b2                IDT::IDT()
                0x00000000c000c9b4                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000c9bc                IDT::addEntry(IDTEntry, int)
                0x00000000c000c9d6                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ca0e                IDT::flush()
                0x00000000c000ca28                IDT::setup()
 .text          0x00000000c000cd8f      0x519 core/kconsole.32
                0x00000000c000cd8f                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000cdf0                logc(char)
                0x00000000c000ce07                logs(char*)
                0x00000000c000ce24                logWriteInt(unsigned int)
                0x00000000c000ce41                logWriteIntBase(unsigned int, int)
                0x00000000c000ce60                kprintf(char const*, ...)
                0x00000000c000cf7e                panic(char const*)
 .text          0x00000000c000d2a8      0x20d core/kheap.32
                0x00000000c000d2a8                sbrk
                0x00000000c000d3c0                mmap
                0x00000000c000d3d6                munmap
                0x00000000c000d3ec                liballoc_lock()
                0x00000000c000d3fd                liballoc_unlock()
                0x00000000c000d40e                liballoc_alloc(int)
                0x00000000c000d429                liballoc_free(void*, int)
                0x00000000c000d447                realloc
                0x00000000c000d45b                malloc
                0x00000000c000d46b                free
                0x00000000c000d47b                rfree
                0x00000000c000d48b                calloc
 .text          0x00000000c000d4b5      0x38d core/main.32
                0x00000000c000d4b5                hwTextMode_loadInData(VgaText*)
                0x00000000c000d4fa                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d53c                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d590                hwTextMode_update(VgaText*)
                0x00000000c000d591                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d5d9                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d615                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d69b                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d6f9                setupTextMode()
                0x00000000c000d74a                kernel_main
 .text          0x00000000c000d842      0x46c core/physmgr.32
                0x00000000c000d842                Phys::allocateDMA(unsigned long)
                0x00000000c000d8e5                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d92d                Phys::setPageState(unsigned long, bool)
                0x00000000c000d95f                Phys::getPageState(unsigned long)
                0x00000000c000d97b                Phys::freePage(unsigned long)
                0x00000000c000da05                Phys::allocatePage()
                0x00000000c000dac1                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000daf9                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000dcae      0x273 core/pipe.32
                0x00000000c000dcae                Pipe::isAtty()
                0x00000000c000dcb2                Pipe::~Pipe()
                0x00000000c000dcb2                Pipe::~Pipe()
                0x00000000c000dcd6                Pipe::~Pipe()
                0x00000000c000dcfe                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000ddf2                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000deba                Pipe::Pipe(int)
                0x00000000c000deba                Pipe::Pipe(int)
 *fill*         0x00000000c000df21        0x1 
 .text          0x00000000c000df22     0x1154 core/prcssthr.32
                0x00000000c000df22                changeTSS
                0x00000000c000df50                Process::addArgs(char**)
                0x00000000c000dfaa                Process::Process(char const*, Process*, char**)
                0x00000000c000dfaa                Process::Process(char const*, Process*, char**)
                0x00000000c000e162                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e162                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e2e5                disableIRQs()
                0x00000000c000e2ed                getIRQNestingLevel()
                0x00000000c000e2f3                enableIRQs()
                0x00000000c000e302                lockScheduler()
                0x00000000c000e304                unlockScheduler()
                0x00000000c000e306                userModeEntryPoint(void*)
                0x00000000c000e329                lockStuff()
                0x00000000c000e335                taskStartupFunction
                0x00000000c000e33e                updateTimeUsed()
                0x00000000c000e39c                switchToThread(ThreadControlBlock*)
                0x00000000c000e3ec                Semaphore::Semaphore(int)
                0x00000000c000e3ec                Semaphore::Semaphore(int)
                0x00000000c000e41a                Mutex::Mutex()
                0x00000000c000e41a                Mutex::Mutex()
                0x00000000c000e42c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e510                Process::createUserThread()
                0x00000000c000e52c                setupMultitasking(void (*)())
                0x00000000c000e636                schedule()
                0x00000000c000e6bb                unlockStuff()
                0x00000000c000e6f0                forkProcess(regs*)
                0x00000000c000e85e                Semaphore::tryAcquire()
                0x00000000c000e88c                Semaphore::assertLocked(char const*)
                0x00000000c000e8bf                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e901                blockTask(TaskState)
                0x00000000c000e922                waitTask(int, int*, int)
                0x00000000c000e964                nanoSleepUntil(unsigned long long)
                0x00000000c000e9bb                nanoSleep(unsigned long long)
                0x00000000c000e9d0                sleep(unsigned long long)
                0x00000000c000e9ee                Semaphore::acquire()
                0x00000000c000ea56                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000eae4                taskReturned
                0x00000000c000eb26                unblockTask(ThreadControlBlock*)
                0x00000000c000ebd5                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000ee72                cleanerTaskFunction(void*)
                0x00000000c000ef02                terminateTask(int)
                0x00000000c000ef8a                Semaphore::release()
 .text          0x00000000c000f076      0xd8a core/syscalls.32
                0x00000000c000f076                sysCallGetPID(regs*)
                0x00000000c000f082                sysCallSeekDir(regs*)
                0x00000000c000f087                sysCallTellDir(regs*)
                0x00000000c000f08c                sysCallVerify(regs*)
                0x00000000c000f096                sysCallGetArgc(regs*)
                0x00000000c000f0a6                sysFormatDisk(regs*)
                0x00000000c000f110                sysSetDiskVolumeLabel(regs*)
                0x00000000c000f156                sysGetDiskVolumeLabel(regs*)
                0x00000000c000f1a7                sysShutdown(regs*)
                0x00000000c000f1ef                sysCallGetCwd(regs*)
                0x00000000c000f20e                sysCallSetCwd(regs*)
                0x00000000c000f22a                sysCallRealpath(regs*)
                0x00000000c000f26d                sysCallOpen(regs*)
                0x00000000c000f35d                sysCallReadDir(regs*)
                0x00000000c000f3cc                sysCallIsATTY(regs*)
                0x00000000c000f41f                sysCallSeek(regs*)
                0x00000000c000f470                sysCallTell(regs*)
                0x00000000c000f4bc                sysCallSizeFromFilename(regs*)
                0x00000000c000f535                sysCallSize(regs*)
                0x00000000c000f587                sysCallClose(regs*)
                0x00000000c000f5d5                sysCallOpenDir(regs*)
                0x00000000c000f642                sysCallMakeDir(regs*)
                0x00000000c000f69b                sysCallCloseDir(regs*)
                0x00000000c000f6e9                sysCallWait(regs*)
                0x00000000c000f703                sysCallFork(regs*)
                0x00000000c000f71f                sysCallExecve(regs*)
                0x00000000c000f774                sysCallRmdir(regs*)
                0x00000000c000f7c6                sysCallUnlink(regs*)
                0x00000000c000f818                sysCallGetArgv(regs*)
                0x00000000c000f864                sysCallTTYName(regs*)
                0x00000000c000f8e0                sysCallGetEnv(regs*)
                0x00000000c000f932                sysCallUSleep(regs*)
                0x00000000c000f959                sysCallSpawn(regs*)
                0x00000000c000f9c9                sysAppSettings(regs*)
                0x00000000c000fae8                sysSetFatAttrib(regs*)
                0x00000000c000fb48                sysPanic(regs*)
                0x00000000c000fb6e                sysPipe(regs*)
                0x00000000c000fbb3                sysGetUnixTime(regs*)
                0x00000000c000fbc7                string_ends_with(char const*, char const*)
                0x00000000c000fc0f                setupSystemCalls()
                0x00000000c000fdbe                systemCall(regs*, void*)
 .text          0x00000000c000fe00      0xf65 core/terminal.32
                0x00000000c000fe00                VgaText::isAtty()
                0x00000000c000fe04                VgaText::~VgaText()
                0x00000000c000fe04                VgaText::~VgaText()
                0x00000000c000fe28                VgaText::~VgaText()
                0x00000000c000fe52                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fe72                setTerminalScrollLock(bool)
                0x00000000c000fe73                addToTerminalCycle(VgaText*)
                0x00000000c000fea0                installVgaTextImplementation()
                0x00000000c000feb5                scrollTerminalScrollLock(int)
                0x00000000c000feb6                VgaText::load()
                0x00000000c000ff0a                VgaText::updateCursor()
                0x00000000c000ff24                VgaText::showCursor(bool)
                0x00000000c000ff34                VgaText::disableBlink(bool)
                0x00000000c000ff6e                VgaText::doANSI_SGR(int)
                0x00000000c000fffa                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010010                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010026                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c0010046                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c0010058                VgaText::scrollScreen()
                0x00000000c00100ec                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00100fe                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c001015e                VgaText::getCursorX()
                0x00000000c001016a                VgaText::getCursorY()
                0x00000000c0010176                VgaText::setCursor(int, int)
                0x00000000c0010194                VgaText::setCursorX(int)
                0x00000000c00101b0                VgaText::setCursorY(int)
                0x00000000c00101cc                VgaText::incrementCursor(bool)
                0x00000000c0010234                VgaText::updateRAMUsageDisplay(int)
                0x00000000c001028e                VgaText::updateDiskUsage()
                0x00000000c00103f4                VgaText::updateTitle()
                0x00000000c001043a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001044a                VgaText::setTitleColour(VgaColour)
                0x00000000c001045a                VgaText::setTitle(char*)
                0x00000000c0010480                VgaText::decrementCursor(bool)
                0x00000000c00104a8                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00105a4                VgaText::isShowingCursor()
                0x00000000c00105b0                VgaText::isBlinkDisabled()
                0x00000000c00105be                VgaText::setCursorHeight(int)
                0x00000000c00105dc                VgaText::getCursorHeight()
                0x00000000c00105e7                setActiveTerminal(VgaText*)
                0x00000000c0010699                doTerminalCycle()
                0x00000000c00106b6                VgaText::doUpdate()
                0x00000000c00106c8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010888                VgaText::clearScreen()
                0x00000000c00108ec                VgaText::putchar(char)
                0x00000000c0010a06                VgaText::puts(char const*)
                0x00000000c0010a2c                VgaText::putx(unsigned int)
                0x00000000c0010a72                VgaText::VgaText(char const*)
                0x00000000c0010a72                VgaText::VgaText(char const*)
                0x00000000c0010c04                VgaText::receiveKey(unsigned char)
                0x00000000c0010cec                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0010d40                newTerminal(char*)
 *fill*         0x00000000c0010d65        0x1 
 .text          0x00000000c0010d66      0x18f core/tss.32
                0x00000000c0010d66                TSS::TSS()
                0x00000000c0010d66                TSS::TSS()
                0x00000000c0010d74                TSS::setESP(unsigned long)
                0x00000000c0010d86                TSS::flush()
                0x00000000c0010da6                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010ef5        0x1 
 .text          0x00000000c0010ef6      0x32f core/unixfile.32
                0x00000000c0010ef6                ReservedFilename::isAtty()
                0x00000000c0010f0c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0010f9e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011034                UnixFile::getFileDescriptor()
                0x00000000c001103c                UnixFile::UnixFile(int)
                0x00000000c001103c                UnixFile::UnixFile(int)
                0x00000000c0011078                ReservedFilename::ReservedFilename(int)
                0x00000000c0011078                ReservedFilename::ReservedFilename(int)
                0x00000000c00110a0                UnixFile::~UnixFile()
                0x00000000c00110a0                UnixFile::~UnixFile()
                0x00000000c0011126                UnixFile::~UnixFile()
                0x00000000c001114e                ReservedFilename::~ReservedFilename()
                0x00000000c001114e                ReservedFilename::~ReservedFilename()
                0x00000000c0011172                ReservedFilename::~ReservedFilename()
                0x00000000c0011199                getFromFileDescriptor(int)
 *fill*         0x00000000c0011225        0x1 
 .text          0x00000000c0011226     0x1175 core/virtmgr.32
                0x00000000c0011226                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001125b                Virt::getPageState(unsigned long)
                0x00000000c001127f                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011390                Virt::virtualMemorySetup()
                0x00000000c001140f                Virt::getAKernelVAS()
                0x00000000c0011415                Virt::setupPageSwapping(int)
                0x00000000c001153a                VAS::VAS()
                0x00000000c001153a                VAS::VAS()
                0x00000000c001156a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011596                VAS::getPageTableEntry(unsigned long)
                0x00000000c00115b5                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c00116d8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c00116fc                VAS::virtualToPhysical(unsigned long)
                0x00000000c0011714                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001174a                VAS::~VAS()
                0x00000000c001174a                VAS::~VAS()
                0x00000000c00118b6                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00119b6                VAS::allocatePages(int, int)
                0x00000000c0011b86                VAS::setCPUSpecific(unsigned long)
                0x00000000c0011ba2                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0011c6c                VAS::VAS(VAS*)
                0x00000000c0011c6c                VAS::VAS(VAS*)
                0x00000000c0011fb6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00120a4                VAS::VAS(bool)
                0x00000000c00120a4                VAS::VAS(bool)
                0x00000000c00122d4                mapVASFirstTime
 .text          0x00000000c001239b       0x93 coreobjs/c++.32
                0x00000000c001239b                __cxa_atexit
                0x00000000c001239e                __cxa_finalize
                0x00000000c001239f                __stack_chk_fail
                0x00000000c00123ff                __cxa_pure_virtual
                0x00000000c0012410                operator new(unsigned long)
                0x00000000c0012415                operator new[](unsigned long)
                0x00000000c001241a                operator delete(void*)
                0x00000000c001241f                operator delete(void*, unsigned long)
                0x00000000c0012424                operator delete[](void*)
                0x00000000c0012429                operator delete[](void*, unsigned long)
 .text          0x00000000c001242e        0x0 debugger/debug.32
 .text          0x00000000c001242e      0xb68 fs/vfs.32
                0x00000000c001242e                File::read(unsigned long long, void*, int*)
                0x00000000c0012486                File::write(unsigned long long, void*, int*)
                0x00000000c00124de                Directory::read(unsigned long long, void*, int*)
                0x00000000c0012536                Directory::write(unsigned long long, void*, int*)
                0x00000000c0012564                File::isAtty()
                0x00000000c0012568                Directory::isAtty()
                0x00000000c001256c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0012572                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0012578                File::~File()
                0x00000000c0012578                File::~File()
                0x00000000c001259c                File::~File()
                0x00000000c00125c6                Directory::~Directory()
                0x00000000c00125c6                Directory::~Directory()
                0x00000000c00125ea                Directory::~Directory()
                0x00000000c0012614                Filesystem::Filesystem()
                0x00000000c0012614                Filesystem::Filesystem()
                0x00000000c0012638                Filesystem::~Filesystem()
                0x00000000c0012638                Filesystem::~Filesystem()
                0x00000000c0012646                Filesystem::~Filesystem()
                0x00000000c001266a                initVFS()
                0x00000000c0012694                standardiseFiles(char*, char const*, char const*)
                0x00000000c001283e                File::File(char const*, Process*)
                0x00000000c001283e                File::File(char const*, Process*)
                0x00000000c00128a2                File::open(FileOpenMode)
                0x00000000c0012900                File::close()
                0x00000000c0012960                File::seek(unsigned long long)
                0x00000000c00129b6                File::tell(unsigned long long*)
                0x00000000c0012a06                File::rewind()
                0x00000000c0012a1a                File::unlink()
                0x00000000c0012a66                File::rename(char const*)
                0x00000000c0012ab4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012b10                File::exists()
                0x00000000c0012b4e                File::stat(unsigned long long*, bool*)
                0x00000000c0012baf                getcwd(Process*, char*, int)
                0x00000000c0012bd9                setcwd(Process*, char*)
                0x00000000c0012d00                Directory::Directory(char const*, Process*)
                0x00000000c0012d00                Directory::Directory(char const*, Process*)
                0x00000000c0012d64                Directory::open()
                0x00000000c0012dc0                Directory::close()
                0x00000000c0012e20                Directory::unlink()
                0x00000000c0012e6c                Directory::rename(char const*)
                0x00000000c0012eba                Directory::exists()
                0x00000000c0012ef8                Directory::read(dirent*)
                0x00000000c0012f44                Directory::create()
                0x00000000c0012f90                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0012f96       0x84 hal/bus.32
                0x00000000c0012f96                Bus::Bus(char const*)
                0x00000000c0012f96                Bus::Bus(char const*)
                0x00000000c0012fcc                Bus::~Bus()
                0x00000000c0012fcc                Bus::~Bus()
                0x00000000c0012ff0                Bus::~Bus()
 .text          0x00000000c001301a      0x14e hal/buzzer.32
                0x00000000c001301a                Buzzer::Buzzer(char const*)
                0x00000000c001301a                Buzzer::Buzzer(char const*)
                0x00000000c001305e                Buzzer::~Buzzer()
                0x00000000c001305e                Buzzer::~Buzzer()
                0x00000000c0013082                Buzzer::~Buzzer()
                0x00000000c00130ac                Buzzer::stop()
                0x00000000c00130bf                beepThread(void*)
                0x00000000c00130fa                Buzzer::beep(int, int, bool)
 .text          0x00000000c0013168      0x42f hal/clock.32
                0x00000000c0013168                loadClockSettings()
                0x00000000c0013182                Clock::Clock(char const*)
                0x00000000c0013182                Clock::Clock(char const*)
                0x00000000c00131b8                Clock::~Clock()
                0x00000000c00131b8                Clock::~Clock()
                0x00000000c00131dc                Clock::~Clock()
                0x00000000c0013206                Clock::timeInSecondsLocal()
                0x00000000c001324e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00132a7                datetimeToSeconds(datetime_t)
                0x00000000c00133ce                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c001342e                secondsToDatetime(unsigned long long)
                0x00000000c0013572                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0013597        0x1 
 .text          0x00000000c0013598      0x504 hal/device.32
                0x00000000c0013598                Device::hibernate()
                0x00000000c001359a                Device::wake()
                0x00000000c001359c                Device::detect()
                0x00000000c001359e                Device::disableLegacy()
                0x00000000c00135a0                Device::powerSaving(PowerSavingLevel)
                0x00000000c00135a2                DriverlessDevice::close(int, int, void*)
                0x00000000c00135a6                DriverlessDevice::detect()
                0x00000000c00135a8                DriverlessDevice::open(int, int, void*)
                0x00000000c00135bc                Device::~Device()
                0x00000000c00135bc                Device::~Device()
                0x00000000c00135ca                Device::~Device()
                0x00000000c00135f2                Device::findAndLoadDriver()
                0x00000000c00135f4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001361a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001366e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00136cc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001371a                Device::addChild(Device*)
                0x00000000c001375e                Device::removeAllChildren()
                0x00000000c00137a4                Device::hibernateAll()
                0x00000000c00137d4                Device::wakeAll()
                0x00000000c0013804                Device::detectAll()
                0x00000000c0013834                Device::disableLegacyAll()
                0x00000000c0013864                Device::loadDriversForAll()
                0x00000000c0013890                Device::closeAll()
                0x00000000c00138c6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00138fc                Device::setName(char const*)
                0x00000000c001390a                Device::Device(char const*)
                0x00000000c001390a                Device::Device(char const*)
                0x00000000c00139fc                Device::getName()
                0x00000000c0013a06                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a06                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a2e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0013a72                getDevicesOfType(DeviceType)
 .text          0x00000000c0013a9c       0x84 hal/diskctrl.32
                0x00000000c0013a9c                HardDiskController::HardDiskController(char const*)
                0x00000000c0013a9c                HardDiskController::HardDiskController(char const*)
                0x00000000c0013ad2                HardDiskController::~HardDiskController()
                0x00000000c0013ad2                HardDiskController::~HardDiskController()
                0x00000000c0013af6                HardDiskController::~HardDiskController()
 .text          0x00000000c0013b20       0xde hal/diskphys.32
                0x00000000c0013b20                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013b20                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013b88                PhysicalDisk::startCache()
                0x00000000c0013bb0                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013bb0                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013bd4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013bfe      0x128 hal/fpu.32
                0x00000000c0013bfe                FPU::FPU(char const*)
                0x00000000c0013bfe                FPU::FPU(char const*)
                0x00000000c0013c34                FPU::~FPU()
                0x00000000c0013c34                FPU::~FPU()
                0x00000000c0013c58                FPU::~FPU()
                0x00000000c0013c82                setupFPU()
 .text          0x00000000c0013d26      0xb89 hal/intctrl.32
                0x00000000c0013d26                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0013d5e                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013db0                doubleFault(regs*, void*)
                0x00000000c0013dbe                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013e5a                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013f02                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013f89                nmiHandler(regs*, void*)
                0x00000000c0013f97                int_handler
                0x00000000c0014032                InterruptController::InterruptController(char const*)
                0x00000000c0014032                InterruptController::InterruptController(char const*)
                0x00000000c00140d8                InterruptController::~InterruptController()
                0x00000000c00140d8                InterruptController::~InterruptController()
                0x00000000c00140fc                InterruptController::~InterruptController()
                0x00000000c0014126                displayDebugInfo(regs*)
                0x00000000c0014508                gpFault(regs*, void*)
                0x00000000c0014541                pgFault(regs*, void*)
                0x00000000c0014558                otherISRHandler(regs*, void*)
                0x00000000c0014577                opcodeFault(regs*, void*)
                0x00000000c00145e1                displayProgramFault(char const*)
                0x00000000c001460a                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0014654                setupInterruptController()
 *fill*         0x00000000c00148af        0x1 
 .text          0x00000000c00148b0      0x604 hal/keybrd.32
                0x00000000c00148b0                startGUI(void*)
                0x00000000c001491e                sendKeyToTerminal(unsigned char)
                0x00000000c001498a                sendKeyboardToken(KeyboardToken)
                0x00000000c0014d65                clearInternalKeybuffer(VgaText*)
                0x00000000c0014d9a                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014e2a                Keyboard::Keyboard(char const*)
                0x00000000c0014e2a                Keyboard::Keyboard(char const*)
                0x00000000c0014e66                Keyboard::~Keyboard()
                0x00000000c0014e66                Keyboard::~Keyboard()
                0x00000000c0014e8a                Keyboard::~Keyboard()
 .text          0x00000000c0014eb4      0x400 hal/logidisk.32
                0x00000000c0014eb4                LogicalDisk::close(int, int, void*)
                0x00000000c0014eb8                LogicalDisk::~LogicalDisk()
                0x00000000c0014eb8                LogicalDisk::~LogicalDisk()
                0x00000000c0014edc                LogicalDisk::~LogicalDisk()
                0x00000000c0014f06                LogicalDisk::open(int, int, void*)
                0x00000000c0014f1a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014f52                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0014f98                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014f98                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001504e                LogicalDisk::assignDriveLetter()
                0x00000000c0015104                LogicalDisk::mount()
                0x00000000c0015176                LogicalDisk::unmount()
                0x00000000c0015186                LogicalDisk::unassignDriveLetter()
                0x00000000c00151dc                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0015248                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00152b4       0x84 hal/mouse.32
                0x00000000c00152b4                Mouse::Mouse(char const*)
                0x00000000c00152b4                Mouse::Mouse(char const*)
                0x00000000c00152ea                Mouse::~Mouse()
                0x00000000c00152ea                Mouse::~Mouse()
                0x00000000c001530e                Mouse::~Mouse()
 .text          0x00000000c0015338      0x339 hal/partition.32
                0x00000000c0015338                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00153e0                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0015671        0x1 
 .text          0x00000000c0015672      0x2e7 hal/timer.32
                0x00000000c0015672                Timer::Timer(char const*)
                0x00000000c0015672                Timer::Timer(char const*)
                0x00000000c00156a8                Timer::~Timer()
                0x00000000c00156a8                Timer::~Timer()
                0x00000000c00156cc                Timer::~Timer()
                0x00000000c00156f6                Timer::read()
                0x00000000c0015701                timerHandler(unsigned long long)
                0x00000000c0015838                setupTimer(int)
 *fill*         0x00000000c0015959        0x1 
 .text          0x00000000c001595a      0x2d1 hal/vcache.32
                0x00000000c001595a                VCache::VCache(PhysicalDisk*)
                0x00000000c001595a                VCache::VCache(PhysicalDisk*)
                0x00000000c0015a4a                VCache::writeWriteBuffer()
                0x00000000c0015a86                VCache::~VCache()
                0x00000000c0015a86                VCache::~VCache()
                0x00000000c0015ac6                VCache::~VCache()
                0x00000000c0015aee                VCache::write(unsigned long long, int, void*)
                0x00000000c0015bd2                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015c2b        0x1 
 .text          0x00000000c0015c2c      0x26d hal/video.32
                0x00000000c0015c2c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0015c76                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0015cf4                Video::clearScreen(unsigned int)
                0x00000000c0015d28                Video::putpixel(int, int, unsigned int)
                0x00000000c0015d36                Video::Video(char const*)
                0x00000000c0015d36                Video::Video(char const*)
                0x00000000c0015d6c                Video::~Video()
                0x00000000c0015d6c                Video::~Video()
                0x00000000c0015d90                Video::~Video()
                0x00000000c0015dba                Video::isMonochrome()
                0x00000000c0015dc6                Video::getWidth()
                0x00000000c0015dd2                Video::getHeight()
                0x00000000c0015dde                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015e99        0x1 
 .text          0x00000000c0015e9a      0xc56 hw/acpi.32
                0x00000000c0015e9a                ACPI::close(int, int, void*)
                0x00000000c0015f4f                findRSDP()
                0x00000000c0015fd9                loadACPITables(unsigned char*)
                0x00000000c0016200                findRSDT(unsigned char*)
                0x00000000c001631e                findDataTable(unsigned char*, char*)
                0x00000000c00163ba                scanMADT()
                0x00000000c001674e                ACPI::ACPI()
                0x00000000c001674e                ACPI::ACPI()
                0x00000000c00167ae                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0016890                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0016956                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001695c                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00169a4                ACPI::open(int, int, void*)
                0x00000000c0016ad8                ACPI::sleep()
 .text          0x00000000c0016af0     0x132c hw/cpu.32
                0x00000000c0016af0                CPU::close(int, int, void*)
                0x00000000c0016af3                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016c87                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016f35                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016f51                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016f69                AMD_K6_writeback(int, int, int)
                0x00000000c0016fdc                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c001705f                cpuidCheckEDX(unsigned int)
                0x00000000c001708c                cpuidCheckECX(unsigned int)
                0x00000000c00170b9                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00170e6                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017113                getCPUNumber()
                0x00000000c0017116                thisCPU()
                0x00000000c001712a                CPU::CPU()
                0x00000000c001712a                CPU::CPU()
                0x00000000c00171b8                CPU::displayFeatures()
                0x00000000c00171ba                CPU::detectFeatures()
                0x00000000c0017bac                CPU::setupSMEP()
                0x00000000c0017bc6                CPU::setupUMIP()
                0x00000000c0017bde                CPU::setupTSC()
                0x00000000c0017bf6                CPU::setupLargePages()
                0x00000000c0017c0e                CPU::setupPAT()
                0x00000000c0017c4a                CPU::setupMTRR()
                0x00000000c0017c4c                CPU::setupGlobalPages()
                0x00000000c0017c62                CPU::allowUsermodeDataAccess()
                0x00000000c0017c74                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017c86                CPU::setupSMAP()
                0x00000000c0017cac                CPU::setupFeatures()
                0x00000000c0017d4e                CPU::open(int, int, void*)
 .text          0x00000000c0017e1c        0x0 hw/ports.32
 .text          0x00000000c0017e1c      0x503 registry/registry.32
                0x00000000c0017e1c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0017f74                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00180d3                Reg::getLine(char*, char*, char*)
                0x00000000c001810a                Reg::readInt(char*, char*, int*)
                0x00000000c00181f5                Reg::readString(char*, char*, char*, int)
                0x00000000c0018276                Reg::readBool(char*, char*, bool*)
                0x00000000c001829b                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00182c7                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00182f3                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001831f       0x18 syscalls/sc_exit.32
                0x00000000c001831f                Sys::exit(regs*)
 .text          0x00000000c0018337       0x68 syscalls/sc_read.32
                0x00000000c0018337                Sys::read(regs*)
 .text          0x00000000c001839f       0x55 syscalls/sc_sbrk.32
                0x00000000c001839f                Sys::sbrk(regs*)
 .text          0x00000000c00183f4       0x68 syscalls/sc_write.32
                0x00000000c00183f4                Sys::write(regs*)
 .text          0x00000000c001845c       0x1a syscalls/sc_yield.32
                0x00000000c001845c                Sys::yield(regs*)
 .text          0x00000000c0018476      0x8bf vm86/vm8086.32
                0x00000000c0018476                vm8086EntryPoint(void*)
                0x00000000c00184a1                inbv(unsigned short)
                0x00000000c00184a7                outbv(unsigned short, unsigned char)
                0x00000000c00184b1                realToLinear(unsigned short, unsigned short)
                0x00000000c00184c1                getSegment(unsigned int)
                0x00000000c00184c9                getOffset(unsigned int)
                0x00000000c00184ce                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00185fd                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018687                readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018698                readWordFromReal(unsigned short, unsigned short)
                0x00000000c00186aa                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00186bb                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00186d0                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00186e6                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00186fb                vm8086FaultHandler(regs*)
 *fill*         0x00000000c0018d35        0x1 
 .text          0x00000000c0018d36     0x1088 fs/fat/vfslink.32
                0x00000000c0018d36                FAT::getName()
                0x00000000c0018d3c                FAT::tell(void*, unsigned long long*)
                0x00000000c0018d70                FAT::stat(void*, unsigned long long*)
                0x00000000c0018da4                FAT::exists(char const*)
                0x00000000c0018da8                FAT::~FAT()
                0x00000000c0018da8                FAT::~FAT()
                0x00000000c0018dcc                FAT::~FAT()
                0x00000000c0018df4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018e92                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018f4c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019130                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019336                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001943e                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019498                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00194f2                FAT::close(void*)
                0x00000000c001953e                FAT::closeDir(void*)
                0x00000000c001958a                FAT::seek(void*, unsigned long long)
                0x00000000c00195de                fatWrapperReadDisk
                0x00000000c0019625                fatWrapperWriteDisk
                0x00000000c001966c                fatWrapperIoctl
                0x00000000c0019770                FAT::FAT()
                0x00000000c0019770                FAT::FAT()
                0x00000000c00197c2                FAT::fixFilepath(char*)
                0x00000000c00197fa                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019922                FAT::openDir(char const*, void**)
                0x00000000c00199c8                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019ab2                FAT::unlink(char const*)
                0x00000000c0019b2c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c80                FAT::rename(char const*, char const*)
                0x00000000c0019d44                FAT::mkdir(char const*)
 .text          0x00000000c0019dbe      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019dbe                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019dc4                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019df4                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019e18                ISO9660::getName()
                0x00000000c0019e1e                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019e42                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e48                ISO9660::unlink(char const*)
                0x00000000c0019e4e                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e54                ISO9660::rename(char const*, char const*)
                0x00000000c0019e5a                ISO9660::mkdir(char const*)
                0x00000000c0019e60                ISO9660::close(void*)
                0x00000000c0019e82                ISO9660::closeDir(void*)
                0x00000000c0019ea4                ISO9660::~ISO9660()
                0x00000000c0019ea4                ISO9660::~ISO9660()
                0x00000000c0019ec8                ISO9660::~ISO9660()
                0x00000000c0019eef                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019f31                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019f98                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019fe8                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a22c                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4ba                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a50f                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a6e2                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a770                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a80a                ISO9660::exists(char const*)
                0x00000000c001a82e                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8c2                ISO9660::openDir(char const*, void**)
                0x00000000c001a97a                ISO9660::ISO9660()
                0x00000000c001a97a                ISO9660::ISO9660()
 *fill*         0x00000000c001a99d        0x1 
 .text          0x00000000c001a99e      0x244 hal/sound/sndchannel.32
                0x00000000c001a99e                SoundChannel::~SoundChannel()
                0x00000000c001a99e                SoundChannel::~SoundChannel()
                0x00000000c001a9ba                SoundChannel::setSpeed(float)
                0x00000000c001a9c6                SoundChannel::getSpeed()
                0x00000000c001a9ce                SoundChannel::setVolume(int)
                0x00000000c001a9ea                SoundChannel::getVolume()
                0x00000000c001a9f2                SoundChannel::pause()
                0x00000000c001a9fc                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001a9fc                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aaf2                SoundChannel::play()
                0x00000000c001aafc                SoundChannel::paused()
                0x00000000c001ab04                SoundChannel::getSampleRate()
                0x00000000c001ab0c                SoundChannel::getBits()
                0x00000000c001ab14                SoundChannel::getBufferUsed()
                0x00000000c001ab1c                SoundChannel::getBufferSize()
                0x00000000c001ab24                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001ab96                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001abe2      0x317 hal/sound/sndhw.32
                0x00000000c001abe2                SoundDevice::SoundDevice(char const*)
                0x00000000c001abe2                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac4e                SoundDevice::~SoundDevice()
                0x00000000c001ac4e                SoundDevice::~SoundDevice()
                0x00000000c001acc8                SoundDevice::~SoundDevice()
                0x00000000c001acf2                SoundDevice::getFreeChannelNum()
                0x00000000c001ad0c                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001ad7c                SoundDevice::removeChannel(int)
                0x00000000c001adae                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001ae1a                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001aef9        0x0 hw/bus/isa.32
 *fill*         0x00000000c001aef9        0x1 
 .text          0x00000000c001aefa      0x6e5 hw/bus/pci.32
                0x00000000c001aefa                PCI::open(int, int, void*)
                0x00000000c001af0e                PCI::close(int, int, void*)
                0x00000000c001af12                PCI::PCI()
                0x00000000c001af12                PCI::PCI()
                0x00000000c001af92                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afda                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001affc                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b020                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b064                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b088                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0aa                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0cc                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0f0                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b150                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b1bc                PCI::checkBus(unsigned char)
                0x00000000c001b1e0                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b350                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b520                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b58c                PCI::detect()
 *fill*         0x00000000c001b5df        0x1 
 .text          0x00000000c001b5e0      0x4b9 hw/clock/rtc.32
                0x00000000c001b5e0                RTC::open(int, int, void*)
                0x00000000c001b5e4                RTC::close(int, int, void*)
                0x00000000c001b5e8                RTC::timeInSecondsUTC()
                0x00000000c001b5fa                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b5fe                RTC::timeInDatetimeUTC()
                0x00000000c001b624                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b662                RTC::~RTC()
                0x00000000c001b662                RTC::~RTC()
                0x00000000c001b686                RTC::~RTC()
                0x00000000c001b6b0                RTC::get_update_in_progress_flag()
                0x00000000c001b6c8                RTC::completeRTCRefresh()
                0x00000000c001b9b4                rtcIRQHandler(regs*, void*)
                0x00000000c001b9fa                RTC::RTC()
                0x00000000c001b9fa                RTC::RTC()
 *fill*         0x00000000c001ba99        0x1 
 .text          0x00000000c001ba9a      0xc70 hw/diskctrl/ide.32
                0x00000000c001ba9a                IDE::close(int, int, void*)
                0x00000000c001ba9e                IDE::IDE()
                0x00000000c001ba9e                IDE::IDE()
                0x00000000c001bad2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bae4                selectDrive(unsigned char, unsigned char)
                0x00000000c001bae6                IDE::getBase(unsigned char)
                0x00000000c001baf8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bbb8                IDE::read(unsigned char, unsigned char)
                0x00000000c001bc66                IDE::waitInterrupt(unsigned char)
                0x00000000c001bccc                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bce8                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bd04                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bd4a                IDE::open(int, int, void*)
                0x00000000c001c15a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c226                IDE::detect()
                0x00000000c001c50e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c6a4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c70a      0x62b hw/diskphys/ata.32
                0x00000000c001c70a                ATA::close(int, int, void*)
                0x00000000c001c72e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c730                ATA::ATA()
                0x00000000c001c730                ATA::ATA()
                0x00000000c001c75e                ATA::flush(bool)
                0x00000000c001c7a8                ATA::readyForCommand()
                0x00000000c001c7f8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cb76                ATA::read(unsigned long long, int, void*)
                0x00000000c001cbde                ATA::write(unsigned long long, int, void*)
                0x00000000c001cc46                ATA::detectCHS()
                0x00000000c001cc70                ATA::open(int, int, void*)
 *fill*         0x00000000c001cd35        0x1 
 .text          0x00000000c001cd36      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cd36                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cd3c                ATAPI::close(int, int, void*)
                0x00000000c001cd60                ATAPI::ATAPI()
                0x00000000c001cd60                ATAPI::ATAPI()
                0x00000000c001cd8e                ATAPI::readyForCommand()
                0x00000000c001cdde                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d09e                ATAPI::diskRemoved()
                0x00000000c001d0ba                ATAPI::eject()
                0x00000000c001d100                ATAPI::diskInserted()
                0x00000000c001d12e                ATAPI::detectMedia()
                0x00000000c001d1ea                ATAPI::open(int, int, void*)
                0x00000000c001d26a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d2e9        0x1 
 .text          0x00000000c001d2ea       0x8e hw/fpu/avx.32
                0x00000000c001d2ea                AVX::open(int, int, void*)
                0x00000000c001d2fc                AVX::close(int, int, void*)
                0x00000000c001d30e                AVX::available()
                0x00000000c001d320                AVX::save(void*)
                0x00000000c001d338                AVX::load(void*)
                0x00000000c001d350                AVX::AVX()
                0x00000000c001d350                AVX::AVX()
 .text          0x00000000c001d378       0x90 hw/fpu/mmx.32
                0x00000000c001d378                MMX::available()
                0x00000000c001d38c                MMX::open(int, int, void*)
                0x00000000c001d39e                MMX::close(int, int, void*)
                0x00000000c001d3b0                MMX::save(void*)
                0x00000000c001d3c8                MMX::load(void*)
                0x00000000c001d3e0                MMX::MMX()
                0x00000000c001d3e0                MMX::MMX()
 .text          0x00000000c001d408       0x96 hw/fpu/sse.32
                0x00000000c001d408                SSE::open(int, int, void*)
                0x00000000c001d41a                SSE::close(int, int, void*)
                0x00000000c001d42c                SSE::available()
                0x00000000c001d446                SSE::save(void*)
                0x00000000c001d45e                SSE::load(void*)
                0x00000000c001d476                SSE::SSE()
                0x00000000c001d476                SSE::SSE()
 .text          0x00000000c001d49e       0x8e hw/fpu/x87.32
                0x00000000c001d49e                x87::open(int, int, void*)
                0x00000000c001d4b0                x87::close(int, int, void*)
                0x00000000c001d4c2                x87::available()
                0x00000000c001d4d4                x87::save(void*)
                0x00000000c001d4ec                x87::load(void*)
                0x00000000c001d504                x87::x87()
                0x00000000c001d504                x87::x87()
 .text          0x00000000c001d52c      0x5f3 hw/intctrl/apic.32
                0x00000000c001d52c                APIC::disable()
                0x00000000c001d52e                APIC::close(int, int, void*)
                0x00000000c001d550                IOAPIC::close(int, int, void*)
                0x00000000c001d556                APIC::io_wait()
                0x00000000c001d55c                APIC::getBase()
                0x00000000c001d59e                APIC::eoi(unsigned char)
                0x00000000c001d5cc                APIC::open(int, int, void*)
                0x00000000c001d686                IOAPIC::IOAPIC()
                0x00000000c001d686                IOAPIC::IOAPIC()
                0x00000000c001d6ae                APIC::APIC()
                0x00000000c001d6ae                APIC::APIC()
                0x00000000c001d77e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d7b0                IOAPIC::read(int)
                0x00000000c001d7d8                IOAPIC::open(int, int, void*)
                0x00000000c001d8ce                IOAPIC::write(int, int)
                0x00000000c001d8fa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d9b4                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001db1f        0x1 
 .text          0x00000000c001db20      0x3d3 hw/intctrl/pic.32
                0x00000000c001db20                PIC::disable()
                0x00000000c001db4e                PIC::close(int, int, void*)
                0x00000000c001db70                PIC::PIC()
                0x00000000c001db70                PIC::PIC()
                0x00000000c001dc46                PIC::ioWait()
                0x00000000c001dc4c                PIC::getIRQReg(int)
                0x00000000c001dcb6                PIC::eoi(unsigned char)
                0x00000000c001dd48                PIC::remap()
                0x00000000c001deb4                PIC::open(int, int, void*)
 *fill*         0x00000000c001def3        0x1 
 .text          0x00000000c001def4      0x252 hw/timer/apictimer.32
                0x00000000c001def4                APICTimer::close(int, int, void*)
                0x00000000c001defa                apicTimerHandler(regs*, void*)
                0x00000000c001df28                APICTimer::write(int)
                0x00000000c001e026                APICTimer::open(int, int, void*)
                0x00000000c001e11e                APICTimer::APICTimer()
                0x00000000c001e11e                APICTimer::APICTimer()
 .text          0x00000000c001e146      0x1a7 hw/timer/pit.32
                0x00000000c001e146                PIT::write(int)
                0x00000000c001e1c4                pitHandler(regs*, void*)
                0x00000000c001e1f0                PIT::open(int, int, void*)
                0x00000000c001e23e                PIT::close(int, int, void*)
                0x00000000c001e26e                PIT::PIT()
                0x00000000c001e26e                PIT::PIT()
 *fill*         0x00000000c001e2ed        0x3 
 .text          0x00000000c001e2f0        0xa hw/fpu/x86/avx.32
                0x00000000c001e2f0                avxDetect
                0x00000000c001e2f6                avxSave
                0x00000000c001e2f7                avxLoad
                0x00000000c001e2f8                avxInit
                0x00000000c001e2f9                avxClose
 *fill*         0x00000000c001e2fa        0x6 
 .text          0x00000000c001e300       0x38 hw/fpu/x86/sse.32
                0x00000000c001e300                sseDetect
                0x00000000c001e31b                sseSave
                0x00000000c001e321                sseLoad
                0x00000000c001e327                sseInit
                0x00000000c001e337                sseClose
 *fill*         0x00000000c001e338        0x8 
 .text          0x00000000c001e340       0x47 hw/fpu/x86/x87.32
                0x00000000c001e346                x87Detect
                0x00000000c001e361                x87Save
                0x00000000c001e367                x87Load
                0x00000000c001e36c                x87Init
                0x00000000c001e386                x87Close
 *fill*         0x00000000c001e387        0x1 
 .text          0x00000000c001e388       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e3ad        0x0 crtn.32
 *fill*         0x00000000c001e3ad        0x3 
 .text          0x00000000c001e3b0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e3b0                __divdi3
 *fill*         0x00000000c001e4fb        0x1 
 .text          0x00000000c001e4fc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e4fc                __moddi3
 *fill*         0x00000000c001e67a        0x2 
 .text          0x00000000c001e67c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e67c                __udivdi3
 *fill*         0x00000000c001e77b        0x1 
 .text          0x00000000c001e77c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e77c                __umoddi3
 *fill*         0x00000000c001e896        0xa 
 .text          0x00000000c001e8a0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e8a0                fabs
 *fill*         0x00000000c001e8be        0x2 
 .text          0x00000000c001e8c0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e8c0                lrint
 .text          0x00000000c001e8cc        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e8cc                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e8d8        0x0
 .iplt          0x00000000c001e8d8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e8d8        0xf
 .init          0x00000000c001e8d8        0x3 crti.32
                0x00000000c001e8d8                _init
 .init          0x00000000c001e8db        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e8e0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e8e5        0x2 crtn.32

.fini           0x00000000c001e8e7        0xa
 .fini          0x00000000c001e8e7        0x3 crti.32
                0x00000000c001e8e7                _fini
 .fini          0x00000000c001e8ea        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e8ef        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e8f2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e8f2       0x23 core/computer.32
                0x00000000c001e8f2                Computer::~Computer()
                0x00000000c001e8f2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e916       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e916       0x2a core/computer.32
                0x00000000c001e916                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e940       0x15
 .text._Z10idleCommonv
                0x00000000c001e940       0x15 core/idle.32
                0x00000000c001e940                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e955       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e955       0x12 core/kconsole.32
                0x00000000c001e955                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e967       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e967       0x12 core/kconsole.32
                0x00000000c001e967                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e979       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e979       0x12 core/kconsole.32
                0x00000000c001e979                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001e98b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001e98b       0x12 core/kconsole.32
                0x00000000c001e98b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e99d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e99d        0x9 core/kheap.32
                0x00000000c001e99d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e9a6        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e9a6        0x2 core/prcssthr.32
                0x00000000c001e9a6                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e9a6                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e9a8       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e9a8       0x3e core/prcssthr.32
                0x00000000c001e9a8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e9a8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e9e6       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e9e6       0x58 core/prcssthr.32
                0x00000000c001e9e6                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e9e6                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea3e       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea3e       0xd3 core/prcssthr.32
                0x00000000c001ea3e                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb12       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb12       0x1c core/prcssthr.32
                0x00000000c001eb12                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb2e       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb2e       0xae core/prcssthr.32
                0x00000000c001eb2e                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebdc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ebdc        0x7 core/prcssthr.32
                0x00000000c001ebdc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ebe4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ebe4        0x8 core/prcssthr.32
                0x00000000c001ebe4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ebec        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ebec        0x2 core/unixfile.32
                0x00000000c001ebec                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ebec                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ebee       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ebee       0x58 core/unixfile.32
                0x00000000c001ebee                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ebee                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec46        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec46        0x7 core/unixfile.32
                0x00000000c001ec46                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec4e       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec4e       0xa1 core/unixfile.32
                0x00000000c001ec4e                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ecf0        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ecf0        0x8 core/unixfile.32
                0x00000000c001ecf0                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ecf8      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ecf8      0x130 core/unixfile.32
                0x00000000c001ecf8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee28       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee28       0x1a hal/device.32
                0x00000000c001ee28                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ee28                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ee42       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ee42       0x2a hal/device.32
                0x00000000c001ee42                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ee6c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ee6c       0xdc hal/device.32
                0x00000000c001ee6c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ef48       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ef48       0x58 hal/device.32
                0x00000000c001ef48                LinkedList<Device>::LinkedList()
                0x00000000c001ef48                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001efa0       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001efa0       0x12 hal/intctrl.32
                0x00000000c001efa0                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001efb2       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001efb2       0x12 hal/intctrl.32
                0x00000000c001efb2                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001efc4       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001efc4       0x12 hal/intctrl.32
                0x00000000c001efc4                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001efd6       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001efd6       0x12 hal/intctrl.32
                0x00000000c001efd6                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001efe8       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001efe8       0x12 hal/intctrl.32
                0x00000000c001efe8                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001effa       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001effa       0x12 hal/intctrl.32
                0x00000000c001effa                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001f00c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f00c       0x23 hw/acpi.32
                0x00000000c001f00c                ACPI::~ACPI()
                0x00000000c001f00c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f030       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f030       0x2a hw/acpi.32
                0x00000000c001f030                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f05a       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f05a       0x23 hw/cpu.32
                0x00000000c001f05a                CPU::~CPU()
                0x00000000c001f05a                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f07e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f07e       0x2a hw/cpu.32
                0x00000000c001f07e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f0a8        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f0a8        0x9 hw/cpu.32
                0x00000000c001f0a8                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f0b1        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f0b1        0x9 hw/cpu.32
                0x00000000c001f0b1                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001f0ba       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f0ba       0x23 hw/bus/pci.32
                0x00000000c001f0ba                PCI::~PCI()
                0x00000000c001f0ba                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f0de       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f0de       0x2a hw/bus/pci.32
                0x00000000c001f0de                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f108       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f108       0x23 hw/diskctrl/ide.32
                0x00000000c001f108                IDE::~IDE()
                0x00000000c001f108                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f12c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f12c       0x2a hw/diskctrl/ide.32
                0x00000000c001f12c                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f156       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f156       0x23 hw/diskphys/ata.32
                0x00000000c001f156                ATA::~ATA()
                0x00000000c001f156                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f17a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f17a       0x2a hw/diskphys/ata.32
                0x00000000c001f17a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f1a4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f1a4       0x23 hw/diskphys/atapi.32
                0x00000000c001f1a4                ATAPI::~ATAPI()
                0x00000000c001f1a4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f1c8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f1c8       0x2a hw/diskphys/atapi.32
                0x00000000c001f1c8                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f1f2       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f1f2       0x23 hw/fpu/avx.32
                0x00000000c001f1f2                AVX::~AVX()
                0x00000000c001f1f2                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f216       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f216       0x2a hw/fpu/avx.32
                0x00000000c001f216                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f240       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f240       0x23 hw/fpu/mmx.32
                0x00000000c001f240                MMX::~MMX()
                0x00000000c001f240                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f264       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f264       0x2a hw/fpu/mmx.32
                0x00000000c001f264                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f28e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f28e       0x23 hw/fpu/sse.32
                0x00000000c001f28e                SSE::~SSE()
                0x00000000c001f28e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f2b2       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f2b2       0x2a hw/fpu/sse.32
                0x00000000c001f2b2                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f2dc       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f2dc       0x23 hw/fpu/x87.32
                0x00000000c001f2dc                x87::~x87()
                0x00000000c001f2dc                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f300       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f300       0x2a hw/fpu/x87.32
                0x00000000c001f300                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f32a       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f32a       0x23 hw/intctrl/apic.32
                0x00000000c001f32a                IOAPIC::~IOAPIC()
                0x00000000c001f32a                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f34e       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f34e       0x2a hw/intctrl/apic.32
                0x00000000c001f34e                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f378       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f378       0x23 hw/intctrl/apic.32
                0x00000000c001f378                APIC::~APIC()
                0x00000000c001f378                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f39c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f39c       0x2a hw/intctrl/apic.32
                0x00000000c001f39c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f3c6       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f3c6       0x23 hw/intctrl/pic.32
                0x00000000c001f3c6                PIC::~PIC()
                0x00000000c001f3c6                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f3ea       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f3ea       0x2a hw/intctrl/pic.32
                0x00000000c001f3ea                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f414       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f414       0x23 hw/timer/apictimer.32
                0x00000000c001f414                APICTimer::~APICTimer()
                0x00000000c001f414                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f438       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f438       0x2a hw/timer/apictimer.32
                0x00000000c001f438                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f462       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f462       0x23 hw/timer/pit.32
                0x00000000c001f462                PIT::~PIT()
                0x00000000c001f462                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f486       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f486       0x2a hw/timer/pit.32
                0x00000000c001f486                PIT::~PIT()

.rodata         0x00000000c001f4b0    0x1b878
                0x00000000c001f4b0                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f4b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f4b4        0x4 core/prcssthr.32
 .ctors         0x00000000c001f4b8        0x4 core/unixfile.32
 .ctors         0x00000000c001f4bc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f4c0                end_ctors = .
                0x00000000c001f4c0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f4c0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f4c4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f4c4                __DTOR_END__
                0x00000000c001f4c8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f4c8       0x18 
 .rodata        0x00000000c001f4e0      0x101 acpica/utclib.32
                0x00000000c001f4e0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f5e1        0x3 
 .rodata        0x00000000c001f5e4       0x18 core/malloc.32
 *fill*         0x00000000c001f5fc        0x4 
 .rodata        0x00000000c001f600      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f720       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f776        0xa 
 .rodata        0x00000000c001f780      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fb80       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fc36        0x2 
 .rodata.str1.4
                0x00000000c001fc38      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001ffdd        0x3 
 .rodata        0x00000000c001ffe0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020040       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020060       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020074       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c00200b6        0x2 
 .rodata.cst8   0x00000000c00200b8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c00200c0    0x185a4 hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0038664       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038728       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0038772        0x6 
 .rodata.cst8   0x00000000c0038778        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0038780       0x14 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038794       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c00387dc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c00387dc       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c003884f        0x1 
 .rodata._ZTV8Computer
                0x00000000c0038850       0x2c core/computer.32
                0x00000000c0038850                vtable for Computer
 .rodata.str1.1
                0x00000000c003887c      0x19e core/elf.32
                                        0x1a0 (size before relaxing)
 .rodata.str1.1
                0x00000000c0038a1a       0x1c core/gdt.32
 *fill*         0x00000000c0038a36        0x2 
 .rodata.str1.4
                0x00000000c0038a38      0x152 core/kconsole.32
 *fill*         0x00000000c0038b8a        0x2 
 .rodata        0x00000000c0038b8c      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c0038cdc       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0038d91        0x3 
 .rodata.str1.4
                0x00000000c0038d94       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0038dc4        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0038dd0       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038deb       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c0038e39       0x39 core/pipe.32
 *fill*         0x00000000c0038e72        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0038e74       0x1c core/pipe.32
                0x00000000c0038e74                vtable for Pipe
 .rodata.str1.1
                0x00000000c0038e90       0x53 core/prcssthr.32
 *fill*         0x00000000c0038ee3        0x1 
 .rodata.str1.4
                0x00000000c0038ee4      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0039164       0x19 core/prcssthr.32
 *fill*         0x00000000c003917d        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039180       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00391a2       0x15 core/prcssthr.32
 *fill*         0x00000000c00391b7        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00391b8       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039203        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c003920b       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c0039268       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c00392b4       0x9d core/terminal.32
 *fill*         0x00000000c0039351        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0039354       0x1c core/terminal.32
                0x00000000c0039354                vtable for VgaText
 .rodata        0x00000000c0039370       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c003938e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c00393a8       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00393a8       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00393a8        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00393a8       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00393d7       0x22 core/unixfile.32
 *fill*         0x00000000c00393d7        0x1 
 .rodata.str1.4
                0x00000000c00393d8       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00393f8       0x1c core/unixfile.32
                0x00000000c00393f8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0039414       0x1c core/unixfile.32
                0x00000000c0039414                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0039430      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c00395db      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c003975f       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0039792       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0039792        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c0039794       0x64 fs/vfs.32
                0x00000000c0039794                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00397f8       0x1c fs/vfs.32
                0x00000000c00397f8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0039814       0x1c fs/vfs.32
                0x00000000c0039814                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0039830       0x2c hal/bus.32
                0x00000000c0039830                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c003985c       0x30 hal/buzzer.32
                0x00000000c003985c                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c003988c       0x3c hal/clock.32
                0x00000000c003988c                vtable for Clock
 *fill*         0x00000000c00398c8       0x18 
 .rodata        0x00000000c00398e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0039910       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c003992e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c003992e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c003992e       0x19 hal/device.32
 *fill*         0x00000000c003992e        0x2 
 .rodata._ZTV6Device
                0x00000000c0039930       0x2c hal/device.32
                0x00000000c0039930                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c003995c       0x2c hal/device.32
                0x00000000c003995c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0039988       0x2c hal/diskctrl.32
                0x00000000c0039988                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c00399b4       0x34 hal/diskphys.32
                0x00000000c00399b4                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c00399e8        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c00399f0       0x38 hal/fpu.32
                0x00000000c00399f0                vtable for FPU
 .rodata.str1.4
                0x00000000c0039a28      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0039b58      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0039cc5        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0039cc8       0x48 hal/intctrl.32
                0x00000000c0039cc8                vtable for InterruptController
 .rodata        0x00000000c0039d10       0x4e hal/keybrd.32
 *fill*         0x00000000c0039d5e        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0039d60       0x34 hal/keybrd.32
                0x00000000c0039d60                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0039d94       0x7a hal/logidisk.32
 *fill*         0x00000000c0039e0e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0039e10       0x2c hal/logidisk.32
                0x00000000c0039e10                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0039e3c       0x2c hal/mouse.32
                0x00000000c0039e3c                vtable for Mouse
 .rodata.str1.1
                0x00000000c0039e68        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039e73       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039e73        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039e73       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039e73       0x22 hal/timer.32
 *fill*         0x00000000c0039e73        0x1 
 .rodata._ZTV5Timer
                0x00000000c0039e74       0x30 hal/timer.32
                0x00000000c0039e74                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0039ea4       0x10 hal/vcache.32
                0x00000000c0039ea4                vtable for VCache
 .rodata.str1.1
                0x00000000c0039eb4        0xf hal/video.32
 *fill*         0x00000000c0039ec3        0x1 
 .rodata._ZTV5Video
                0x00000000c0039ec4       0x40 hal/video.32
                0x00000000c0039ec4                vtable for Video
 .rodata.str1.1
                0x00000000c0039f04       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c0039fb8       0x82 hw/acpi.32
 *fill*         0x00000000c003a03a        0x2 
 .rodata._ZTV4ACPI
                0x00000000c003a03c       0x2c hw/acpi.32
                0x00000000c003a03c                vtable for ACPI
 .rodata.str1.1
                0x00000000c003a068      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c003a28c       0x2c hw/cpu.32
                0x00000000c003a28c                vtable for CPU
 .rodata.str1.1
                0x00000000c003a2b8       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c003a2fd       0x5f vm86/vm8086.32
 .rodata        0x00000000c003a35c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c003a38c       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c003a3df        0x1 
 .rodata.str1.4
                0x00000000c003a3e0       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c003a408       0x64 fs/fat/vfslink.32
                0x00000000c003a408                vtable for FAT
 .rodata.str1.1
                0x00000000c003a46c       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c003a4b5        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c003a4b8       0x64 fs/iso9660/vfslink.32
                0x00000000c003a4b8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c003a51c       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c003a536        0x2 
 .rodata.cst4   0x00000000c003a538        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c003a53c       0x38 hal/sound/sndhw.32
                0x00000000c003a53c                vtable for SoundDevice
 .rodata.cst4   0x00000000c003a574       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c003a584       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c003a628       0x2c hw/bus/pci.32
                0x00000000c003a628                vtable for PCI
 .rodata.str1.1
                0x00000000c003a654       0x2b hw/clock/rtc.32
 *fill*         0x00000000c003a67f        0x1 
 .rodata._ZTV3RTC
                0x00000000c003a680       0x3c hw/clock/rtc.32
                0x00000000c003a680                vtable for RTC
 .rodata.str1.1
                0x00000000c003a6bc      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c003a8f2        0x2 
 .rodata._ZTV3IDE
                0x00000000c003a8f4       0x2c hw/diskctrl/ide.32
                0x00000000c003a8f4                vtable for IDE
 .rodata.str1.1
                0x00000000c003a920       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c003a941        0x3 
 .rodata._ZTV3ATA
                0x00000000c003a944       0x34 hw/diskphys/ata.32
                0x00000000c003a944                vtable for ATA
 .rodata.str1.1
                0x00000000c003a978       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c003a9b0       0x34 hw/diskphys/atapi.32
                0x00000000c003a9b0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c003a9e4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c003a9ec       0x38 hw/fpu/avx.32
                0x00000000c003a9ec                vtable for AVX
 .rodata.str1.1
                0x00000000c003aa24        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c003aa2c       0x38 hw/fpu/mmx.32
                0x00000000c003aa2c                vtable for MMX
 .rodata.str1.1
                0x00000000c003aa64        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c003aa6c       0x38 hw/fpu/sse.32
                0x00000000c003aa6c                vtable for SSE
 .rodata.str1.1
                0x00000000c003aaa4        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c003aaac       0x38 hw/fpu/x87.32
                0x00000000c003aaac                vtable for x87
 .rodata        0x00000000c003aae4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c003abbc       0x48 hw/intctrl/apic.32
                0x00000000c003abbc                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c003ac04       0x2c hw/intctrl/apic.32
                0x00000000c003ac04                vtable for IOAPIC
 .rodata        0x00000000c003ac30       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c003ac52        0x2 
 .rodata._ZTV3PIC
                0x00000000c003ac54       0x48 hw/intctrl/pic.32
                0x00000000c003ac54                vtable for PIC
 .rodata.str1.1
                0x00000000c003ac9c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c003aca7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c003aca8       0x30 hw/timer/apictimer.32
                0x00000000c003aca8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c003acd8       0x1d hw/timer/pit.32
 *fill*         0x00000000c003acf5        0x3 
 .rodata._ZTV3PIT
                0x00000000c003acf8       0x30 hw/timer/pit.32
                0x00000000c003acf8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c003ad28      0x5fd
 *(.data)
 .data          0x00000000c003ad28        0x0 crti.32
 .data          0x00000000c003ad28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c003ad28                __dso_handle
 .data          0x00000000c003ad2c        0x0 acpica/utclib.32
 .data          0x00000000c003ad2c        0x0 core/malloc.32
 .data          0x00000000c003ad2c        0x0 libk/string.32
 .data          0x00000000c003ad2c        0x0 fs/fat/diskio.32
 .data          0x00000000c003ad2c        0x0 fs/fat/ff.32
 .data          0x00000000c003ad2c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c003ad2c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c003ad2c        0x0 hal/libresample/samplerate.32
 .data          0x00000000c003ad2c        0x0 hal/libresample/src_linear.32
 .data          0x00000000c003ad2c        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c003ad2c        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c003ad2c        0x0 core/computer.32
 .data          0x00000000c003ad2c        0x0 core/elf.32
 .data          0x00000000c003ad2c        0x0 core/gdt.32
 .data          0x00000000c003ad2c        0x0 core/idle.32
 .data          0x00000000c003ad2c        0x0 core/idt.32
 .data          0x00000000c003ad2c        0x0 core/kconsole.32
 .data          0x00000000c003ad2c        0x4 core/kheap.32
 .data          0x00000000c003ad30        0x0 core/main.32
 .data          0x00000000c003ad30        0x4 core/physmgr.32
                0x00000000c003ad30                Phys::bitmap
 .data          0x00000000c003ad34        0x0 core/pipe.32
 .data          0x00000000c003ad34        0x4 core/prcssthr.32
                0x00000000c003ad34                nextPID
 .data          0x00000000c003ad38        0x0 core/syscalls.32
 *fill*         0x00000000c003ad38        0x8 
 .data          0x00000000c003ad40       0x60 core/terminal.32
                0x00000000c003ad40                VgaText::hiddenOut
                0x00000000c003ad60                ansiToVGAMappings
 .data          0x00000000c003ada0        0x0 core/tss.32
 .data          0x00000000c003ada0        0x4 core/unixfile.32
                0x00000000c003ada0                UnixFile::nextFd
 .data          0x00000000c003ada4        0x8 core/virtmgr.32
                0x00000000c003ada4                Virt::pageAllocPtr
                0x00000000c003ada8                Virt::bitmap
 .data          0x00000000c003adac        0x4 coreobjs/c++.32
                0x00000000c003adac                __stack_chk_guard
 .data          0x00000000c003adb0        0x0 debugger/debug.32
 .data          0x00000000c003adb0        0x0 fs/vfs.32
 .data          0x00000000c003adb0        0x0 hal/bus.32
 .data          0x00000000c003adb0        0x0 hal/buzzer.32
 .data          0x00000000c003adb0        0x0 hal/clock.32
 .data          0x00000000c003adb0        0x0 hal/device.32
 .data          0x00000000c003adb0        0x0 hal/diskctrl.32
 .data          0x00000000c003adb0        0x0 hal/diskphys.32
 .data          0x00000000c003adb0        0x0 hal/fpu.32
 *fill*         0x00000000c003adb0       0x10 
 .data          0x00000000c003adc0      0x2a0 hal/intctrl.32
                0x00000000c003adc0                exceptionNames
 .data          0x00000000c003b060        0x0 hal/keybrd.32
 .data          0x00000000c003b060        0x0 hal/logidisk.32
 .data          0x00000000c003b060        0x0 hal/mouse.32
 .data          0x00000000c003b060        0x0 hal/partition.32
 .data          0x00000000c003b060        0x0 hal/timer.32
 .data          0x00000000c003b060        0x0 hal/vcache.32
 .data          0x00000000c003b060        0x0 hal/video.32
 .data          0x00000000c003b060       0x10 hw/acpi.32
                0x00000000c003b060                legacyIRQRemaps
 *fill*         0x00000000c003b070       0x10 
 .data          0x00000000c003b080      0x2a4 hw/cpu.32
                0x00000000c003b080                cpuNameList
                0x00000000c003b320                lastCode
 .data          0x00000000c003b324        0x0 hw/ports.32
 .data          0x00000000c003b324        0x0 registry/registry.32
 .data          0x00000000c003b324        0x0 syscalls/sc_exit.32
 .data          0x00000000c003b324        0x0 syscalls/sc_read.32
 .data          0x00000000c003b324        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c003b324        0x0 syscalls/sc_write.32
 .data          0x00000000c003b324        0x0 syscalls/sc_yield.32
 .data          0x00000000c003b324        0x0 vm86/vm8086.32
 .data          0x00000000c003b324        0x0 fs/fat/vfslink.32
 .data          0x00000000c003b324        0x1 fs/iso9660/vfslink.32
                0x00000000c003b324                recentDriveletter
 .data          0x00000000c003b325        0x0 hal/sound/sndchannel.32
 .data          0x00000000c003b325        0x0 hal/sound/sndhw.32
 .data          0x00000000c003b325        0x0 hw/bus/isa.32
 .data          0x00000000c003b325        0x0 hw/bus/pci.32
 .data          0x00000000c003b325        0x0 hw/clock/rtc.32
 .data          0x00000000c003b325        0x0 hw/diskctrl/ide.32
 .data          0x00000000c003b325        0x0 hw/diskphys/ata.32
 .data          0x00000000c003b325        0x0 hw/diskphys/atapi.32
 .data          0x00000000c003b325        0x0 hw/fpu/avx.32
 .data          0x00000000c003b325        0x0 hw/fpu/mmx.32
 .data          0x00000000c003b325        0x0 hw/fpu/sse.32
 .data          0x00000000c003b325        0x0 hw/fpu/x87.32
 .data          0x00000000c003b325        0x0 hw/intctrl/apic.32
 .data          0x00000000c003b325        0x0 hw/intctrl/pic.32
 .data          0x00000000c003b325        0x0 hw/timer/apictimer.32
 .data          0x00000000c003b325        0x0 hw/timer/pit.32
 .data          0x00000000c003b325        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c003b325        0x0 crtn.32
 .data          0x00000000c003b325        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c003b325        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c003b325        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c003b325        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c003b325        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c003b325        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c003b325        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c003b328        0x0
 .got           0x00000000c003b328        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c003b328        0x0
 .got.plt       0x00000000c003b328        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c003b328        0x0
 .igot.plt      0x00000000c003b328        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c003b328        0x0
 .tm_clone_table
                0x00000000c003b328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c003b328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c003b325      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c003b325        0x3 
 .eh_frame      0x00000000c003b328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c003b328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c003b328       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c003b380       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c003b3c0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c003b42c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c003b4b0       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c003b4c8        0x0
 .rel.got       0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c003b4c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c003b4c8     0x1b80
                0x00000000c003b4c8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c003b4c8        0x0 crti.32
 .bss           0x00000000c003b4c8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c003b4e8        0x4 acpica/utclib.32
 *fill*         0x00000000c003b4ec       0x14 
 .bss           0x00000000c003b500      0x378 core/malloc.32
 .bss           0x00000000c003b878        0x0 libk/string.32
 .bss           0x00000000c003b878        0x0 fs/fat/diskio.32
 *fill*         0x00000000c003b878        0x8 
 .bss           0x00000000c003b880       0x88 fs/fat/ff.32
 .bss           0x00000000c003b908        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c003b908        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c003b908        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c003b908        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c003b908        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c003b908        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c003b908        0x6 core/computer.32
                0x00000000c003b908                computer
                0x00000000c003b90c                preemptionOn
                0x00000000c003b90d                schedulingOn
 *fill*         0x00000000c003b90e       0x12 
 .bss           0x00000000c003b920      0x184 core/elf.32
                0x00000000c003b920                kernelSymbols
                0x00000000c003b9a0                kernelStringTable
                0x00000000c003ba20                kernelSymbolTable
                0x00000000c003baa0                nextDLLSymbolIndex
 .bss           0x00000000c003baa4        0x6 core/gdt.32
                0x00000000c003baa4                gdtDescr
 .bss           0x00000000c003baaa        0x0 core/idle.32
 *fill*         0x00000000c003baaa        0x2 
 .bss           0x00000000c003baac        0x6 core/idt.32
                0x00000000c003baac                idtDescr
 .bss           0x00000000c003bab2        0x1 core/kconsole.32
                0x00000000c003bab2                kernelInPanic
 .bss           0x00000000c003bab3        0x0 core/kheap.32
 *fill*         0x00000000c003bab3        0x1 
 .bss           0x00000000c003bab4        0x4 core/main.32
                0x00000000c003bab4                sysBootSettings
 *fill*         0x00000000c003bab8        0x8 
 .bss           0x00000000c003bac0       0x50 core/physmgr.32
                0x00000000c003bac0                Phys::currentPagePointer
                0x00000000c003bac4                Phys::highestMem
                0x00000000c003bac8                Phys::oldPercent
                0x00000000c003bacc                Phys::usedPages
                0x00000000c003bad0                Phys::usablePages
                0x00000000c003bae0                Phys::dmaUsage
 .bss           0x00000000c003bb10        0x0 core/pipe.32
 .bss           0x00000000c003bb10       0x68 core/prcssthr.32
                0x00000000c003bb10                cleanerThread
                0x00000000c003bb14                weNeedTheCleanerToNotBlock
                0x00000000c003bb18                xxxx
                0x00000000c003bb1c                retValLockStuff
                0x00000000c003bb20                retValSchedLock
                0x00000000c003bb24                lockStuffLock
                0x00000000c003bb28                schedulerLock
                0x00000000c003bb2c                taskSwitchesPostponedFlag
                0x00000000c003bb30                postponeTaskSwitchesCounter
                0x00000000c003bb34                irqDisableCounter
                0x00000000c003bb38                terminatedTaskList
                0x00000000c003bb44                sleepingTaskList
                0x00000000c003bb50                taskList
                0x00000000c003bb5c                kernelProcess
 *fill*         0x00000000c003bb78        0x8 
 .bss           0x00000000c003bb80      0x200 core/syscalls.32
                0x00000000c003bb80                systemCallHandlers
 .bss           0x00000000c003bd80       0x29 core/terminal.32
                0x00000000c003bd80                textModeImplementation
                0x00000000c003bda0                terminalCycle
                0x00000000c003bda4                activeTerminal
                0x00000000c003bda8                VgaText::graphicMode
 *fill*         0x00000000c003bda9        0x1 
 .bss           0x00000000c003bdaa        0x2 core/tss.32
                0x00000000c003bdaa                doubleFaultSelector
 .bss           0x00000000c003bdac       0x10 core/unixfile.32
                0x00000000c003bdac                initialFilesAdded
                0x00000000c003bdb0                unixFileLinkedList
 .bss           0x00000000c003bdbc        0x4 core/virtmgr.32
                0x00000000c003bdbc                firstVAS
 .bss           0x00000000c003bdc0        0x0 coreobjs/c++.32
 .bss           0x00000000c003bdc0        0x0 debugger/debug.32
 .bss           0x00000000c003bdc0        0x4 fs/vfs.32
                0x00000000c003bdc0                installedFilesystems
 .bss           0x00000000c003bdc4        0x0 hal/bus.32
 .bss           0x00000000c003bdc4        0x4 hal/buzzer.32
                0x00000000c003bdc4                systemBuzzer
 .bss           0x00000000c003bdc8        0x8 hal/clock.32
                0x00000000c003bdc8                dstOn
                0x00000000c003bdc9                timezoneHalfHourOffset
                0x00000000c003bdcc                timezoneHourOffset
 .bss           0x00000000c003bdd0        0x0 hal/device.32
 .bss           0x00000000c003bdd0        0x0 hal/diskctrl.32
 .bss           0x00000000c003bdd0        0x0 hal/diskphys.32
 .bss           0x00000000c003bdd0        0x0 hal/fpu.32
 .bss           0x00000000c003bdd0       0x1c hal/intctrl.32
                0x00000000c003bdd0                pf5
                0x00000000c003bdd4                pf4
                0x00000000c003bdd8                pf3
                0x00000000c003bddc                pf2
                0x00000000c003bde0                pf1
                0x00000000c003bde4                pf0
                0x00000000c003bde8                gpFaultIntercept
 *fill*         0x00000000c003bdec       0x14 
 .bss           0x00000000c003be00      0x429 hal/keybrd.32
                0x00000000c003be00                keyboardWaitingTaskList
                0x00000000c003be04                keyboardSetupYet
                0x00000000c003be20                keystates
 *fill*         0x00000000c003c229       0x17 
 .bss           0x00000000c003c240       0x88 hal/logidisk.32
                0x00000000c003c240                diskAssignments
                0x00000000c003c260                disks
 .bss           0x00000000c003c2c8        0x4 hal/mouse.32
                0x00000000c003c2c8                guiMouseHandler
 .bss           0x00000000c003c2cc        0x0 hal/partition.32
 *fill*         0x00000000c003c2cc        0x4 
 .bss           0x00000000c003c2d0        0x8 hal/timer.32
                0x00000000c003c2d0                nanoSinceBoot
 .bss           0x00000000c003c2d8        0x0 hal/vcache.32
 .bss           0x00000000c003c2d8        0x4 hal/video.32
                0x00000000c003c2d8                screen
 *fill*         0x00000000c003c2dc        0x4 
 .bss           0x00000000c003c2e0      0x3c0 hw/acpi.32
                0x00000000c003c2e0                systemSleepFunction
                0x00000000c003c2e4                systemResetFunction
                0x00000000c003c2e8                systemShutdownFunction
                0x00000000c003c2ec                nextACPITable
                0x00000000c003c300                acpiTables
                0x00000000c003c500                usingXSDT
                0x00000000c003c504                MADTpointer
                0x00000000c003c508                RSDTpointer
                0x00000000c003c50c                RSDPpointer
                0x00000000c003c510                ioapicDiscoveryNumber
                0x00000000c003c520                ioapicFoundInMADT
                0x00000000c003c540                ioapicAddresses
                0x00000000c003c5c0                ioapicGSIBase
                0x00000000c003c640                processorDiscoveryNumber
                0x00000000c003c660                matchingAPICID
                0x00000000c003c680                processorID
 .bss           0x00000000c003c6a0       0x10 hw/cpu.32
                0x00000000c003c6a0                lastD
                0x00000000c003c6a4                lastC
                0x00000000c003c6a8                lastB
                0x00000000c003c6ac                lastA
 .bss           0x00000000c003c6b0        0x0 hw/ports.32
 .bss           0x00000000c003c6b0        0x0 registry/registry.32
 .bss           0x00000000c003c6b0        0x0 syscalls/sc_exit.32
 .bss           0x00000000c003c6b0        0x0 syscalls/sc_read.32
 .bss           0x00000000c003c6b0        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c003c6b0        0x0 syscalls/sc_write.32
 .bss           0x00000000c003c6b0        0x0 syscalls/sc_yield.32
 .bss           0x00000000c003c6b0        0x0 vm86/vm8086.32
 *fill*         0x00000000c003c6b0       0x10 
 .bss           0x00000000c003c6c0       0xf0 fs/fat/vfslink.32
                0x00000000c003c6c0                FAT::fats
                0x00000000c003c6e0                FAT::vfsToFatRemaps
                0x00000000c003c760                fatToVFSRemaps
 *fill*         0x00000000c003c7b0       0x10 
 .bss           0x00000000c003c7c0      0x820 fs/iso9660/vfslink.32
                0x00000000c003c7c0                recentSector
                0x00000000c003c7e0                recentBuffer
 .bss           0x00000000c003cfe0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c003cfe0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c003cfe0        0x0 hw/bus/isa.32
 .bss           0x00000000c003cfe0        0x0 hw/bus/pci.32
 .bss           0x00000000c003cfe0        0x2 hw/clock/rtc.32
 .bss           0x00000000c003cfe2        0x0 hw/diskctrl/ide.32
 *fill*         0x00000000c003cfe2        0x2 
 .bss           0x00000000c003cfe4        0x8 hw/diskphys/ata.32
                0x00000000c003cfe4                ataSectorsWritten
                0x00000000c003cfe8                ataSectorsRead
 .bss           0x00000000c003cfec        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003cfec        0x0 hw/fpu/avx.32
 .bss           0x00000000c003cfec        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003cfec        0x0 hw/fpu/sse.32
 .bss           0x00000000c003cfec        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003cfec       0x14 
 .bss           0x00000000c003d000       0x41 hw/intctrl/apic.32
                0x00000000c003d000                noOfIOAPICs
                0x00000000c003d020                ioapics
                0x00000000c003d040                IOAPICsSetupYet
 .bss           0x00000000c003d041        0x0 hw/intctrl/pic.32
 .bss           0x00000000c003d041        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c003d041        0x3 
 .bss           0x00000000c003d044        0x4 hw/timer/pit.32
                0x00000000c003d044                pitFreq
 .bss           0x00000000c003d048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003d048        0x0 crtn.32
 .bss           0x00000000c003d048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c003d048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c003d048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c003d048        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c003d048        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c003d048        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c003d048        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003d048                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003ebc8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
