Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1ed88
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x9e1 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b50a                Computer::rdmsr(unsigned int)
                0x00000000c000b536                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b56e                Computer::nmiEnabled()
                0x00000000c000b57a                Computer::readCMOS(unsigned char)
                0x00000000c000b594                Computer::enableNMI(bool)
                0x00000000c000b5ac                Computer::open(int, int, void*)
                0x00000000c000b682                Computer::disableNMI()
                0x00000000c000b690                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b6ae                Computer::handleNMI()
                0x00000000c000b714                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b73f        0x1 
 .text          0x00000000c000b740      0x1b7 core/gdt.32
                0x00000000c000b740                GDTEntry::setBase(unsigned int)
                0x00000000c000b75c                GDTEntry::setLimit(unsigned int)
                0x00000000c000b77a                GDT::GDT()
                0x00000000c000b77a                GDT::GDT()
                0x00000000c000b790                GDT::addEntry(GDTEntry)
                0x00000000c000b7cc                GDT::getNumberOfEntries()
                0x00000000c000b7d4                GDT::flush()
                0x00000000c000b7f6                GDT::setup()
 .text          0x00000000c000b8f7       0x61 core/idle.32
                0x00000000c000b8f7                idleFunction(void*)
 .text          0x00000000c000b958      0x45f core/idt.32
                0x00000000c000b958                IDTEntry::IDTEntry(bool)
                0x00000000c000b958                IDTEntry::IDTEntry(bool)
                0x00000000c000b9c6                IDTEntry::setOffset(unsigned int)
                0x00000000c000b9da                IDT::IDT()
                0x00000000c000b9da                IDT::IDT()
                0x00000000c000b9dc                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b9e4                IDT::addEntry(IDTEntry, int)
                0x00000000c000b9fe                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ba36                IDT::flush()
                0x00000000c000ba50                IDT::setup()
 .text          0x00000000c000bdb7      0x20d core/kheap.32
                0x00000000c000bdb7                sbrk
                0x00000000c000becf                mmap
                0x00000000c000bee5                munmap
                0x00000000c000befb                liballoc_lock()
                0x00000000c000bf0c                liballoc_unlock()
                0x00000000c000bf1d                liballoc_alloc(int)
                0x00000000c000bf38                liballoc_free(void*, int)
                0x00000000c000bf56                realloc
                0x00000000c000bf6a                malloc
                0x00000000c000bf7a                free
                0x00000000c000bf8a                rfree
                0x00000000c000bf9a                calloc
 .text          0x00000000c000bfc4      0x38d core/main.32
                0x00000000c000bfc4                hwTextMode_loadInData(VgaText*)
                0x00000000c000c009                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000c04b                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000c09f                hwTextMode_update(VgaText*)
                0x00000000c000c0a0                hwTextMode_updateCursor(VgaText*)
                0x00000000c000c0e8                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000c124                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000c1aa                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000c208                setupTextMode()
                0x00000000c000c259                kernel_main
 .text          0x00000000c000c351      0x4f3 core/physmgr.32
                0x00000000c000c351                Phys::allocateDMA(unsigned long)
                0x00000000c000c3f4                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c43c                Phys::setPageState(unsigned long, bool)
                0x00000000c000c46e                Phys::getPageState(unsigned long)
                0x00000000c000c48a                Phys::freePage(unsigned long)
                0x00000000c000c514                Phys::allocatePage()
                0x00000000c000c5dc                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c614                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c844      0x273 core/pipe.32
                0x00000000c000c844                Pipe::isAtty()
                0x00000000c000c848                Pipe::~Pipe()
                0x00000000c000c848                Pipe::~Pipe()
                0x00000000c000c86c                Pipe::~Pipe()
                0x00000000c000c894                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c988                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000ca50                Pipe::Pipe(int)
                0x00000000c000ca50                Pipe::Pipe(int)
 *fill*         0x00000000c000cab7        0x1 
 .text          0x00000000c000cab8      0xf65 core/terminal.32
                0x00000000c000cab8                VgaText::isAtty()
                0x00000000c000cabc                VgaText::~VgaText()
                0x00000000c000cabc                VgaText::~VgaText()
                0x00000000c000cae0                VgaText::~VgaText()
                0x00000000c000cb0a                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000cb2a                setTerminalScrollLock(bool)
                0x00000000c000cb2b                addToTerminalCycle(VgaText*)
                0x00000000c000cb58                installVgaTextImplementation()
                0x00000000c000cb6d                scrollTerminalScrollLock(int)
                0x00000000c000cb6e                VgaText::load()
                0x00000000c000cbc2                VgaText::updateCursor()
                0x00000000c000cbdc                VgaText::showCursor(bool)
                0x00000000c000cbec                VgaText::disableBlink(bool)
                0x00000000c000cc26                VgaText::doANSI_SGR(int)
                0x00000000c000ccb2                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000ccc8                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000ccde                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000ccfe                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000cd10                VgaText::scrollScreen()
                0x00000000c000cda4                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000cdb6                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ce16                VgaText::getCursorX()
                0x00000000c000ce22                VgaText::getCursorY()
                0x00000000c000ce2e                VgaText::setCursor(int, int)
                0x00000000c000ce4c                VgaText::setCursorX(int)
                0x00000000c000ce68                VgaText::setCursorY(int)
                0x00000000c000ce84                VgaText::incrementCursor(bool)
                0x00000000c000ceec                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cf46                VgaText::updateDiskUsage()
                0x00000000c000d0ac                VgaText::updateTitle()
                0x00000000c000d0f2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000d102                VgaText::setTitleColour(VgaColour)
                0x00000000c000d112                VgaText::setTitle(char*)
                0x00000000c000d138                VgaText::decrementCursor(bool)
                0x00000000c000d160                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000d25c                VgaText::isShowingCursor()
                0x00000000c000d268                VgaText::isBlinkDisabled()
                0x00000000c000d276                VgaText::setCursorHeight(int)
                0x00000000c000d294                VgaText::getCursorHeight()
                0x00000000c000d29f                setActiveTerminal(VgaText*)
                0x00000000c000d351                doTerminalCycle()
                0x00000000c000d36e                VgaText::doUpdate()
                0x00000000c000d380                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d540                VgaText::clearScreen()
                0x00000000c000d5a4                VgaText::putchar(char)
                0x00000000c000d6be                VgaText::puts(char const*)
                0x00000000c000d6e4                VgaText::putx(unsigned int)
                0x00000000c000d72a                VgaText::VgaText(char const*)
                0x00000000c000d72a                VgaText::VgaText(char const*)
                0x00000000c000d8bc                VgaText::receiveKey(unsigned char)
                0x00000000c000d9a4                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d9f8                newTerminal(char*)
 *fill*         0x00000000c000da1d        0x1 
 .text          0x00000000c000da1e      0x18f core/tss.32
                0x00000000c000da1e                TSS::TSS()
                0x00000000c000da1e                TSS::TSS()
                0x00000000c000da2c                TSS::setESP(unsigned long)
                0x00000000c000da3e                TSS::flush()
                0x00000000c000da5e                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000dbad        0x1 
 .text          0x00000000c000dbae      0x545 core/unixfile.32
                0x00000000c000dbae                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000dc44                ReservedFilename::isAtty()
                0x00000000c000dc7a                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000dd14                UnixFile::getFileDescriptor()
                0x00000000c000dd1c                UnixFile::UnixFile(int)
                0x00000000c000dd1c                UnixFile::UnixFile(int)
                0x00000000c000de8c                ReservedFilename::ReservedFilename(int)
                0x00000000c000de8c                ReservedFilename::ReservedFilename(int)
                0x00000000c000debe                UnixFile::~UnixFile()
                0x00000000c000debe                UnixFile::~UnixFile()
                0x00000000c000df56                UnixFile::~UnixFile()
                0x00000000c000df7e                ReservedFilename::~ReservedFilename()
                0x00000000c000df7e                ReservedFilename::~ReservedFilename()
                0x00000000c000dfa2                ReservedFilename::~ReservedFilename()
                0x00000000c000dfc9                getFromFileDescriptor(int)
 *fill*         0x00000000c000e0f3        0x1 
 .text          0x00000000c000e0f4      0xec7 core/virtmgr.32
                0x00000000c000e0f4                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000e129                Virt::getPageState(unsigned long)
                0x00000000c000e14d                Virt::allocateKernelVirtualPages(int)
                0x00000000c000e25e                Virt::virtualMemorySetup()
                0x00000000c000e2dd                Virt::getAKernelVAS()
                0x00000000c000e2e3                Virt::setupPageSwapping(int)
                0x00000000c000e408                VAS::VAS()
                0x00000000c000e408                VAS::VAS()
                0x00000000c000e438                VAS::VAS(VAS*)
                0x00000000c000e438                VAS::VAS(VAS*)
                0x00000000c000e45c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e488                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e4a7                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e5ca                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e5ee                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e606                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e646                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e67e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e6b4                VAS::~VAS()
                0x00000000c000e6b4                VAS::~VAS()
                0x00000000c000e820                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e920                VAS::allocatePages(int, int)
                0x00000000c000eaf0                VAS::setCPUSpecific(unsigned long)
                0x00000000c000eb0c                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000ebd6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ecc4                VAS::VAS(bool)
                0x00000000c000ecc4                VAS::VAS(bool)
                0x00000000c000eef4                mapVASFirstTime
 .text          0x00000000c000efbb       0x93 coreobjs/c++.32
                0x00000000c000efbb                __cxa_atexit
                0x00000000c000efbe                __cxa_finalize
                0x00000000c000efbf                __stack_chk_fail
                0x00000000c000f01f                __cxa_pure_virtual
                0x00000000c000f030                operator new(unsigned long)
                0x00000000c000f035                operator new[](unsigned long)
                0x00000000c000f03a                operator delete(void*)
                0x00000000c000f03f                operator delete(void*, unsigned long)
                0x00000000c000f044                operator delete[](void*)
                0x00000000c000f049                operator delete[](void*, unsigned long)
 .text          0x00000000c000f04e      0x1ef dbg/kconsole.32
                0x00000000c000f04e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000f0af                Dbg::logc(char)
                0x00000000c000f0c6                Dbg::logs(char*)
                0x00000000c000f0e3                Dbg::logWriteInt(unsigned int)
                0x00000000c000f100                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000f11f                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000f23d        0x1 
 .text          0x00000000c000f23e      0xb68 fs/vfs.32
                0x00000000c000f23e                File::read(unsigned long long, void*, int*)
                0x00000000c000f296                File::write(unsigned long long, void*, int*)
                0x00000000c000f2ee                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f346                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f374                File::isAtty()
                0x00000000c000f378                Directory::isAtty()
                0x00000000c000f37c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f382                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f388                File::~File()
                0x00000000c000f388                File::~File()
                0x00000000c000f3ac                File::~File()
                0x00000000c000f3d6                Directory::~Directory()
                0x00000000c000f3d6                Directory::~Directory()
                0x00000000c000f3fa                Directory::~Directory()
                0x00000000c000f424                Filesystem::Filesystem()
                0x00000000c000f424                Filesystem::Filesystem()
                0x00000000c000f448                Filesystem::~Filesystem()
                0x00000000c000f448                Filesystem::~Filesystem()
                0x00000000c000f456                Filesystem::~Filesystem()
                0x00000000c000f47a                initVFS()
                0x00000000c000f4a4                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f64e                File::File(char const*, Process*)
                0x00000000c000f64e                File::File(char const*, Process*)
                0x00000000c000f6b2                File::open(FileOpenMode)
                0x00000000c000f710                File::close()
                0x00000000c000f770                File::seek(unsigned long long)
                0x00000000c000f7c6                File::tell(unsigned long long*)
                0x00000000c000f816                File::rewind()
                0x00000000c000f82a                File::unlink()
                0x00000000c000f876                File::rename(char const*)
                0x00000000c000f8c4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f920                File::exists()
                0x00000000c000f95e                File::stat(unsigned long long*, bool*)
                0x00000000c000f9bf                getcwd(Process*, char*, int)
                0x00000000c000f9e9                setcwd(Process*, char*)
                0x00000000c000fb10                Directory::Directory(char const*, Process*)
                0x00000000c000fb10                Directory::Directory(char const*, Process*)
                0x00000000c000fb74                Directory::open()
                0x00000000c000fbd0                Directory::close()
                0x00000000c000fc30                Directory::unlink()
                0x00000000c000fc7c                Directory::rename(char const*)
                0x00000000c000fcca                Directory::exists()
                0x00000000c000fd08                Directory::read(dirent*)
                0x00000000c000fd54                Directory::create()
                0x00000000c000fda0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fda6       0x84 hal/bus.32
                0x00000000c000fda6                Bus::Bus(char const*)
                0x00000000c000fda6                Bus::Bus(char const*)
                0x00000000c000fddc                Bus::~Bus()
                0x00000000c000fddc                Bus::~Bus()
                0x00000000c000fe00                Bus::~Bus()
 .text          0x00000000c000fe2a      0x14e hal/buzzer.32
                0x00000000c000fe2a                Buzzer::Buzzer(char const*)
                0x00000000c000fe2a                Buzzer::Buzzer(char const*)
                0x00000000c000fe6e                Buzzer::~Buzzer()
                0x00000000c000fe6e                Buzzer::~Buzzer()
                0x00000000c000fe92                Buzzer::~Buzzer()
                0x00000000c000febc                Buzzer::stop()
                0x00000000c000fecf                beepThread(void*)
                0x00000000c000ff0a                Buzzer::beep(int, int, bool)
 .text          0x00000000c000ff78      0x42f hal/clock.32
                0x00000000c000ff78                loadClockSettings()
                0x00000000c000ff92                Clock::Clock(char const*)
                0x00000000c000ff92                Clock::Clock(char const*)
                0x00000000c000ffc8                Clock::~Clock()
                0x00000000c000ffc8                Clock::~Clock()
                0x00000000c000ffec                Clock::~Clock()
                0x00000000c0010016                Clock::timeInSecondsLocal()
                0x00000000c001005e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00100b7                datetimeToSeconds(datetime_t)
                0x00000000c00101de                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c001023e                secondsToDatetime(unsigned long long)
                0x00000000c0010382                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00103a7        0x1 
 .text          0x00000000c00103a8      0x504 hal/device.32
                0x00000000c00103a8                Device::hibernate()
                0x00000000c00103aa                Device::wake()
                0x00000000c00103ac                Device::detect()
                0x00000000c00103ae                Device::disableLegacy()
                0x00000000c00103b0                Device::powerSaving(PowerSavingLevel)
                0x00000000c00103b2                DriverlessDevice::close(int, int, void*)
                0x00000000c00103b6                DriverlessDevice::detect()
                0x00000000c00103b8                DriverlessDevice::open(int, int, void*)
                0x00000000c00103cc                Device::~Device()
                0x00000000c00103cc                Device::~Device()
                0x00000000c00103da                Device::~Device()
                0x00000000c0010402                Device::findAndLoadDriver()
                0x00000000c0010404                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001042a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001047e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00104dc                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001052a                Device::addChild(Device*)
                0x00000000c001056e                Device::removeAllChildren()
                0x00000000c00105b4                Device::hibernateAll()
                0x00000000c00105e4                Device::wakeAll()
                0x00000000c0010614                Device::detectAll()
                0x00000000c0010644                Device::disableLegacyAll()
                0x00000000c0010674                Device::loadDriversForAll()
                0x00000000c00106a0                Device::closeAll()
                0x00000000c00106d6                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c001070c                Device::setName(char const*)
                0x00000000c001071a                Device::Device(char const*)
                0x00000000c001071a                Device::Device(char const*)
                0x00000000c001080c                Device::getName()
                0x00000000c0010816                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010816                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001083e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010882                getDevicesOfType(DeviceType)
 .text          0x00000000c00108ac       0x84 hal/diskctrl.32
                0x00000000c00108ac                HardDiskController::HardDiskController(char const*)
                0x00000000c00108ac                HardDiskController::HardDiskController(char const*)
                0x00000000c00108e2                HardDiskController::~HardDiskController()
                0x00000000c00108e2                HardDiskController::~HardDiskController()
                0x00000000c0010906                HardDiskController::~HardDiskController()
 .text          0x00000000c0010930       0xde hal/diskphys.32
                0x00000000c0010930                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010930                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010998                PhysicalDisk::startCache()
                0x00000000c00109c0                PhysicalDisk::~PhysicalDisk()
                0x00000000c00109c0                PhysicalDisk::~PhysicalDisk()
                0x00000000c00109e4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0010a0e      0x142 hal/fpu.32
                0x00000000c0010a0e                FPU::FPU(char const*)
                0x00000000c0010a0e                FPU::FPU(char const*)
                0x00000000c0010a44                FPU::~FPU()
                0x00000000c0010a44                FPU::~FPU()
                0x00000000c0010a68                FPU::~FPU()
                0x00000000c0010a92                setupFPU()
 .text          0x00000000c0010b50      0xc21 hal/intctrl.32
                0x00000000c0010b50                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010b88                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010bda                doubleFault(regs*, void*)
                0x00000000c0010be8                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010c84                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010d2c                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010db3                nmiHandler(regs*, void*)
                0x00000000c0010dc1                int_handler
                0x00000000c0010e5c                InterruptController::InterruptController(char const*)
                0x00000000c0010e5c                InterruptController::InterruptController(char const*)
                0x00000000c0010f02                InterruptController::~InterruptController()
                0x00000000c0010f02                InterruptController::~InterruptController()
                0x00000000c0010f26                InterruptController::~InterruptController()
                0x00000000c0010f50                displayDebugInfo(regs*)
                0x00000000c0011367                x87EmulHandler(regs*, void*)
                0x00000000c00113ca                gpFault(regs*, void*)
                0x00000000c0011403                pgFault(regs*, void*)
                0x00000000c001141a                otherISRHandler(regs*, void*)
                0x00000000c0011439                opcodeFault(regs*, void*)
                0x00000000c00114a3                displayProgramFault(char const*)
                0x00000000c00114cc                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0011516                setupInterruptController()
 *fill*         0x00000000c0011771        0x1 
 .text          0x00000000c0011772      0x608 hal/keybrd.32
                0x00000000c0011772                startGUI(void*)
                0x00000000c00117e4                sendKeyToTerminal(unsigned char)
                0x00000000c0011850                sendKeyboardToken(KeyboardToken)
                0x00000000c0011c2b                clearInternalKeybuffer(VgaText*)
                0x00000000c0011c60                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0011cf0                Keyboard::Keyboard(char const*)
                0x00000000c0011cf0                Keyboard::Keyboard(char const*)
                0x00000000c0011d2c                Keyboard::~Keyboard()
                0x00000000c0011d2c                Keyboard::~Keyboard()
                0x00000000c0011d50                Keyboard::~Keyboard()
 .text          0x00000000c0011d7a      0x400 hal/logidisk.32
                0x00000000c0011d7a                LogicalDisk::close(int, int, void*)
                0x00000000c0011d7e                LogicalDisk::~LogicalDisk()
                0x00000000c0011d7e                LogicalDisk::~LogicalDisk()
                0x00000000c0011da2                LogicalDisk::~LogicalDisk()
                0x00000000c0011dcc                LogicalDisk::open(int, int, void*)
                0x00000000c0011de0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011e18                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011e5e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011e5e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011f14                LogicalDisk::assignDriveLetter()
                0x00000000c0011fca                LogicalDisk::mount()
                0x00000000c001203c                LogicalDisk::unmount()
                0x00000000c001204c                LogicalDisk::unassignDriveLetter()
                0x00000000c00120a2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c001210e                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c001217a       0x84 hal/mouse.32
                0x00000000c001217a                Mouse::Mouse(char const*)
                0x00000000c001217a                Mouse::Mouse(char const*)
                0x00000000c00121b0                Mouse::~Mouse()
                0x00000000c00121b0                Mouse::~Mouse()
                0x00000000c00121d4                Mouse::~Mouse()
 .text          0x00000000c00121fe      0x339 hal/partition.32
                0x00000000c00121fe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00122a6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012537        0x1 
 .text          0x00000000c0012538      0x2e7 hal/timer.32
                0x00000000c0012538                Timer::Timer(char const*)
                0x00000000c0012538                Timer::Timer(char const*)
                0x00000000c001256e                Timer::~Timer()
                0x00000000c001256e                Timer::~Timer()
                0x00000000c0012592                Timer::~Timer()
                0x00000000c00125bc                Timer::read()
                0x00000000c00125c7                timerHandler(unsigned long long)
                0x00000000c00126fe                setupTimer(int)
 *fill*         0x00000000c001281f        0x1 
 .text          0x00000000c0012820      0x2d1 hal/vcache.32
                0x00000000c0012820                VCache::VCache(PhysicalDisk*)
                0x00000000c0012820                VCache::VCache(PhysicalDisk*)
                0x00000000c0012910                VCache::writeWriteBuffer()
                0x00000000c001294c                VCache::~VCache()
                0x00000000c001294c                VCache::~VCache()
                0x00000000c001298c                VCache::~VCache()
                0x00000000c00129b4                VCache::write(unsigned long long, int, void*)
                0x00000000c0012a98                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0012af1        0x1 
 .text          0x00000000c0012af2      0x26d hal/video.32
                0x00000000c0012af2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0012b3c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0012bba                Video::clearScreen(unsigned int)
                0x00000000c0012bee                Video::putpixel(int, int, unsigned int)
                0x00000000c0012bfc                Video::Video(char const*)
                0x00000000c0012bfc                Video::Video(char const*)
                0x00000000c0012c32                Video::~Video()
                0x00000000c0012c32                Video::~Video()
                0x00000000c0012c56                Video::~Video()
                0x00000000c0012c80                Video::isMonochrome()
                0x00000000c0012c8c                Video::getWidth()
                0x00000000c0012c98                Video::getHeight()
                0x00000000c0012ca4                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012d5f        0x1 
 .text          0x00000000c0012d60      0xd28 hw/acpi.32
                0x00000000c0012d60                ACPI::close(int, int, void*)
                0x00000000c0012e15                findRSDP()
                0x00000000c0012e9f                loadACPITables(unsigned char*)
                0x00000000c00130c6                findRSDT(unsigned char*)
                0x00000000c00131e4                findDataTable(unsigned char*, char*)
                0x00000000c0013280                scanMADT()
                0x00000000c0013614                ACPI::ACPI()
                0x00000000c0013614                ACPI::ACPI()
                0x00000000c0013674                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013756                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001385c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013862                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00138aa                ACPI::open(int, int, void*)
                0x00000000c0013a70                ACPI::sleep()
 .text          0x00000000c0013a88     0x1796 hw/cpu.32
                0x00000000c0013a88                CPU::close(int, int, void*)
                0x00000000c0013a8b                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0013c1f                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013ecd                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013ee9                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013f01                AMD_K6_writeback(int, int, int)
                0x00000000c0013f74                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013ff7                cpuidCheckEDX(unsigned int)
                0x00000000c0014024                cpuidCheckECX(unsigned int)
                0x00000000c0014051                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001407e                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00140ab                getCPUNumber()
                0x00000000c00140ae                thisCPU()
                0x00000000c00140c2                CPU::CPU()
                0x00000000c00140c2                CPU::CPU()
                0x00000000c0014150                CPU::displayFeatures()
                0x00000000c00143cc                CPU::detectFeatures()
                0x00000000c0014dbe                CPU::setupSMEP()
                0x00000000c0014dd8                CPU::setupUMIP()
                0x00000000c0014df0                CPU::setupTSC()
                0x00000000c0014e08                CPU::setupLargePages()
                0x00000000c0014e20                CPU::setupPAT()
                0x00000000c0014e5c                CPU::setupMTRR()
                0x00000000c0014e5e                CPU::setupGlobalPages()
                0x00000000c0014e74                CPU::allowUsermodeDataAccess()
                0x00000000c0014e86                CPU::prohibitUsermodeDataAccess()
                0x00000000c0014e98                CPU::setupSMAP()
                0x00000000c0014ebe                CPU::setupFeatures()
                0x00000000c0014f60                CPU::open(int, int, void*)
                0x00000000c0015036                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c001521e        0x0 hw/ports.32
 .text          0x00000000c001521e      0x338 krnl/panic.32
                0x00000000c001521e                Krnl::panic(char const*)
 .text          0x00000000c0015556      0x503 reg/registry.32
                0x00000000c0015556                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c00156ae                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001580d                Reg::getLine(char*, char*, char*)
                0x00000000c0015844                Reg::readInt(char*, char*, int*)
                0x00000000c001592f                Reg::readString(char*, char*, char*, int)
                0x00000000c00159b0                Reg::readBool(char*, char*, bool*)
                0x00000000c00159d5                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0015a01                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015a2d                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0015a59       0x18 sys/sc_exit.32
                0x00000000c0015a59                Sys::exit(regs*)
 .text          0x00000000c0015a71       0x95 sys/sc_loaddll.32
                0x00000000c0015a71                Sys::loadDLL(regs*)
 .text          0x00000000c0015b06       0x68 sys/sc_read.32
                0x00000000c0015b06                Sys::read(regs*)
 .text          0x00000000c0015b6e       0x55 sys/sc_sbrk.32
                0x00000000c0015b6e                Sys::sbrk(regs*)
 .text          0x00000000c0015bc3       0x83 sys/sc_write.32
                0x00000000c0015bc3                Sys::write(regs*)
 .text          0x00000000c0015c46       0x1a sys/sc_yield.32
                0x00000000c0015c46                Sys::yield(regs*)
 .text          0x00000000c0015c60      0xf85 sys/syscalls.32
                0x00000000c0015c60                sysCallGetPID(regs*)
                0x00000000c0015c6c                sysCallSeekDir(regs*)
                0x00000000c0015c71                sysCallTellDir(regs*)
                0x00000000c0015c76                sysCallVerify(regs*)
                0x00000000c0015c80                sysCallFork(regs*)
                0x00000000c0015c8b                sysCallExecve(regs*)
                0x00000000c0015c96                sysCallGetArgc(regs*)
                0x00000000c0015ca6                sysFormatDisk(regs*)
                0x00000000c0015d10                sysSetDiskVolumeLabel(regs*)
                0x00000000c0015d56                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015da7                sysShutdown(regs*)
                0x00000000c0015e05                sysCallGetCwd(regs*)
                0x00000000c0015e24                sysCallSetCwd(regs*)
                0x00000000c0015e40                sysCallRealpath(regs*)
                0x00000000c0015e83                sysCallReadDir(regs*)
                0x00000000c0015f11                sysCallIsATTY(regs*)
                0x00000000c0015f6b                sysCallSeek(regs*)
                0x00000000c0015fd4                sysCallTell(regs*)
                0x00000000c0016051                sysCallSizeFromFilename(regs*)
                0x00000000c0016102                sysCallSize(regs*)
                0x00000000c0016185                sysCallClose(regs*)
                0x00000000c001620d                sysCallOpenDir(regs*)
                0x00000000c001627a                sysCallMakeDir(regs*)
                0x00000000c00162d3                sysCallCloseDir(regs*)
                0x00000000c0016339                sysCallWait(regs*)
                0x00000000c0016353                sysCallRmdir(regs*)
                0x00000000c00163a5                sysCallUnlink(regs*)
                0x00000000c00163f7                sysCallGetArgv(regs*)
                0x00000000c0016443                sysCallTTYName(regs*)
                0x00000000c00164c6                sysCallGetEnv(regs*)
                0x00000000c0016518                sysCallUSleep(regs*)
                0x00000000c001653f                sysCallSpawn(regs*)
                0x00000000c0016597                sysAppSettings(regs*)
                0x00000000c00166b6                sysSetFatAttrib(regs*)
                0x00000000c0016716                sysPanic(regs*)
                0x00000000c001673c                sysPipe(regs*)
                0x00000000c0016781                sysGetUnixTime(regs*)
                0x00000000c0016795                string_ends_with(char const*, char const*)
                0x00000000c00167dd                sysCallOpen(regs*)
                0x00000000c00169ea                setupSystemCalls()
                0x00000000c0016ba3                systemCall(regs*, void*)
 .text          0x00000000c0016be5     0x11c7 thr/elf.32
                0x00000000c0016be5                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0016e62                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0017078                Thr::runtimeReferenceHelper()
                0x00000000c001708b                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00170da                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001739b                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0017b39                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0017b6b                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017ba2                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0017bbc                Thr::loadDLL(char const*, bool)
                0x00000000c0017d82                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0017dac      0xfce thr/prcssthr.32
                0x00000000c0017dac                changeTSS
                0x00000000c0017dda                Process::addArgs(char**)
                0x00000000c0017e34                Process::Process(char const*, Process*, char**)
                0x00000000c0017e34                Process::Process(char const*, Process*, char**)
                0x00000000c0017fec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017fec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001816f                disableIRQs()
                0x00000000c0018177                getIRQNestingLevel()
                0x00000000c001817d                enableIRQs()
                0x00000000c001818c                lockScheduler()
                0x00000000c001818e                unlockScheduler()
                0x00000000c0018190                userModeEntryPoint(void*)
                0x00000000c00181b3                lockStuff()
                0x00000000c00181bf                taskStartupFunction
                0x00000000c00181c8                updateTimeUsed()
                0x00000000c0018226                switchToThread(ThreadControlBlock*)
                0x00000000c0018276                Semaphore::Semaphore(int)
                0x00000000c0018276                Semaphore::Semaphore(int)
                0x00000000c00182a4                Mutex::Mutex()
                0x00000000c00182a4                Mutex::Mutex()
                0x00000000c00182b6                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001839a                Process::createUserThread()
                0x00000000c00183b6                setupMultitasking(void (*)())
                0x00000000c00184c0                schedule()
                0x00000000c0018545                unlockStuff()
                0x00000000c001857a                Semaphore::tryAcquire()
                0x00000000c00185a8                Semaphore::assertLocked(char const*)
                0x00000000c00185d8                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001861a                blockTask(TaskState)
                0x00000000c001863b                waitTask(int, int*, int)
                0x00000000c001867d                nanoSleepUntil(unsigned long long)
                0x00000000c00186d4                nanoSleep(unsigned long long)
                0x00000000c00186e9                sleep(unsigned long long)
                0x00000000c0018706                Semaphore::acquire()
                0x00000000c001876e                taskReturned
                0x00000000c001879c                unblockTask(ThreadControlBlock*)
                0x00000000c001884b                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0018aef                cleanerTaskFunction(void*)
                0x00000000c0018ba2                terminateTask(int)
                0x00000000c0018c82                Thr::terminateFromIRQ(int)
                0x00000000c0018c8e                Semaphore::release()
 .text          0x00000000c0018d7a      0x8bf vm86/vm8086.32
                0x00000000c0018d7a                Vm::vm8086EntryPoint(void*)
                0x00000000c0018da5                Vm::inbv(unsigned short)
                0x00000000c0018dab                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018db5                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018dc5                Vm::getSegment(unsigned int)
                0x00000000c0018dcd                Vm::getOffset(unsigned int)
                0x00000000c0018dd2                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018f01                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018f8b                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018f9c                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018fae                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018fbf                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018fd4                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018fea                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018fff                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019639        0x1 
 .text          0x00000000c001963a     0x10ed fs/fat/vfslink.32
                0x00000000c001963a                FAT::getName()
                0x00000000c0019640                FAT::tell(void*, unsigned long long*)
                0x00000000c0019674                FAT::stat(void*, unsigned long long*)
                0x00000000c00196a8                FAT::~FAT()
                0x00000000c00196a8                FAT::~FAT()
                0x00000000c00196cc                FAT::~FAT()
                0x00000000c00196f4                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019792                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001984c                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019a30                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019c36                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019d3c                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019d96                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019df0                FAT::close(void*)
                0x00000000c0019e3c                FAT::closeDir(void*)
                0x00000000c0019e88                FAT::seek(void*, unsigned long long)
                0x00000000c0019edc                fatWrapperReadDisk
                0x00000000c0019f23                fatWrapperWriteDisk
                0x00000000c0019f6a                fatWrapperIoctl
                0x00000000c001a06e                FAT::FAT()
                0x00000000c001a06e                FAT::FAT()
                0x00000000c001a0c0                FAT::fixFilepath(char*)
                0x00000000c001a0f8                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a220                FAT::openDir(char const*, void**)
                0x00000000c001a2c6                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a3b0                FAT::unlink(char const*)
                0x00000000c001a42a                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a57e                FAT::rename(char const*, char const*)
                0x00000000c001a642                FAT::mkdir(char const*)
                0x00000000c001a6bc                FAT::exists(char const*)
 *fill*         0x00000000c001a727        0x1 
 .text          0x00000000c001a728      0xbdf fs/iso9660/vfslink.32
                0x00000000c001a728                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a72e                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a75e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a782                ISO9660::getName()
                0x00000000c001a788                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a7ac                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a7b2                ISO9660::unlink(char const*)
                0x00000000c001a7b8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a7be                ISO9660::rename(char const*, char const*)
                0x00000000c001a7c4                ISO9660::mkdir(char const*)
                0x00000000c001a7ca                ISO9660::close(void*)
                0x00000000c001a7ec                ISO9660::closeDir(void*)
                0x00000000c001a80e                ISO9660::~ISO9660()
                0x00000000c001a80e                ISO9660::~ISO9660()
                0x00000000c001a832                ISO9660::~ISO9660()
                0x00000000c001a859                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a89b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a902                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a952                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001ab96                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001ae23                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001ae78                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b04b                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b0da                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b174                ISO9660::exists(char const*)
                0x00000000c001b198                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b22c                ISO9660::openDir(char const*, void**)
                0x00000000c001b2e4                ISO9660::ISO9660()
                0x00000000c001b2e4                ISO9660::ISO9660()
 *fill*         0x00000000c001b307        0x1 
 .text          0x00000000c001b308      0x244 hal/sound/sndchannel.32
                0x00000000c001b308                SoundChannel::~SoundChannel()
                0x00000000c001b308                SoundChannel::~SoundChannel()
                0x00000000c001b324                SoundChannel::setSpeed(float)
                0x00000000c001b330                SoundChannel::getSpeed()
                0x00000000c001b338                SoundChannel::setVolume(int)
                0x00000000c001b354                SoundChannel::getVolume()
                0x00000000c001b35c                SoundChannel::pause()
                0x00000000c001b366                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001b366                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001b45c                SoundChannel::play()
                0x00000000c001b466                SoundChannel::paused()
                0x00000000c001b46e                SoundChannel::getSampleRate()
                0x00000000c001b476                SoundChannel::getBits()
                0x00000000c001b47e                SoundChannel::getBufferUsed()
                0x00000000c001b486                SoundChannel::getBufferSize()
                0x00000000c001b48e                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001b500                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001b54c      0x317 hal/sound/sndhw.32
                0x00000000c001b54c                SoundDevice::SoundDevice(char const*)
                0x00000000c001b54c                SoundDevice::SoundDevice(char const*)
                0x00000000c001b5b8                SoundDevice::~SoundDevice()
                0x00000000c001b5b8                SoundDevice::~SoundDevice()
                0x00000000c001b632                SoundDevice::~SoundDevice()
                0x00000000c001b65c                SoundDevice::getFreeChannelNum()
                0x00000000c001b676                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001b6e6                SoundDevice::removeChannel(int)
                0x00000000c001b718                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001b784                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b863        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b863        0x1 
 .text          0x00000000c001b864      0x6e5 hw/bus/pci.32
                0x00000000c001b864                PCI::open(int, int, void*)
                0x00000000c001b878                PCI::close(int, int, void*)
                0x00000000c001b87c                PCI::PCI()
                0x00000000c001b87c                PCI::PCI()
                0x00000000c001b8fc                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b944                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b966                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b98a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b9ce                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b9f2                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba14                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba36                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001ba5a                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001baba                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001bb26                PCI::checkBus(unsigned char)
                0x00000000c001bb4a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001bcba                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001be8a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bef6                PCI::detect()
 *fill*         0x00000000c001bf49        0x1 
 .text          0x00000000c001bf4a      0xc70 hw/diskctrl/ide.32
                0x00000000c001bf4a                IDE::close(int, int, void*)
                0x00000000c001bf4e                IDE::IDE()
                0x00000000c001bf4e                IDE::IDE()
                0x00000000c001bf82                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bf94                selectDrive(unsigned char, unsigned char)
                0x00000000c001bf96                IDE::getBase(unsigned char)
                0x00000000c001bfa8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c068                IDE::read(unsigned char, unsigned char)
                0x00000000c001c116                IDE::waitInterrupt(unsigned char)
                0x00000000c001c17c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c198                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c1b4                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c1fa                IDE::open(int, int, void*)
                0x00000000c001c60a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c6d6                IDE::detect()
                0x00000000c001c9be                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001cb54                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001cbba      0x62b hw/diskphys/ata.32
                0x00000000c001cbba                ATA::close(int, int, void*)
                0x00000000c001cbde                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001cbe0                ATA::ATA()
                0x00000000c001cbe0                ATA::ATA()
                0x00000000c001cc0e                ATA::flush(bool)
                0x00000000c001cc58                ATA::readyForCommand()
                0x00000000c001cca8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d026                ATA::read(unsigned long long, int, void*)
                0x00000000c001d08e                ATA::write(unsigned long long, int, void*)
                0x00000000c001d0f6                ATA::detectCHS()
                0x00000000c001d120                ATA::open(int, int, void*)
 *fill*         0x00000000c001d1e5        0x1 
 .text          0x00000000c001d1e6      0x5b3 hw/diskphys/atapi.32
                0x00000000c001d1e6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d1ec                ATAPI::close(int, int, void*)
                0x00000000c001d210                ATAPI::ATAPI()
                0x00000000c001d210                ATAPI::ATAPI()
                0x00000000c001d23e                ATAPI::readyForCommand()
                0x00000000c001d28e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d54e                ATAPI::diskRemoved()
                0x00000000c001d56a                ATAPI::eject()
                0x00000000c001d5b0                ATAPI::diskInserted()
                0x00000000c001d5de                ATAPI::detectMedia()
                0x00000000c001d69a                ATAPI::open(int, int, void*)
                0x00000000c001d71a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d799        0x1 
 .text          0x00000000c001d79a       0x8e hw/fpu/avx.32
                0x00000000c001d79a                AVX::open(int, int, void*)
                0x00000000c001d7ac                AVX::close(int, int, void*)
                0x00000000c001d7be                AVX::available()
                0x00000000c001d7d0                AVX::save(void*)
                0x00000000c001d7e8                AVX::load(void*)
                0x00000000c001d800                AVX::AVX()
                0x00000000c001d800                AVX::AVX()
 .text          0x00000000c001d828       0x90 hw/fpu/mmx.32
                0x00000000c001d828                MMX::available()
                0x00000000c001d83c                MMX::open(int, int, void*)
                0x00000000c001d84e                MMX::close(int, int, void*)
                0x00000000c001d860                MMX::save(void*)
                0x00000000c001d878                MMX::load(void*)
                0x00000000c001d890                MMX::MMX()
                0x00000000c001d890                MMX::MMX()
 .text          0x00000000c001d8b8       0x96 hw/fpu/sse.32
                0x00000000c001d8b8                SSE::open(int, int, void*)
                0x00000000c001d8ca                SSE::close(int, int, void*)
                0x00000000c001d8dc                SSE::available()
                0x00000000c001d8f6                SSE::save(void*)
                0x00000000c001d90e                SSE::load(void*)
                0x00000000c001d926                SSE::SSE()
                0x00000000c001d926                SSE::SSE()
 .text          0x00000000c001d94e       0x8e hw/fpu/x87.32
                0x00000000c001d94e                x87::open(int, int, void*)
                0x00000000c001d960                x87::close(int, int, void*)
                0x00000000c001d972                x87::available()
                0x00000000c001d984                x87::save(void*)
                0x00000000c001d99c                x87::load(void*)
                0x00000000c001d9b4                x87::x87()
                0x00000000c001d9b4                x87::x87()
 .text          0x00000000c001d9dc      0x5f3 hw/intctrl/apic.32
                0x00000000c001d9dc                APIC::disable()
                0x00000000c001d9de                APIC::close(int, int, void*)
                0x00000000c001da00                IOAPIC::close(int, int, void*)
                0x00000000c001da06                APIC::io_wait()
                0x00000000c001da0c                APIC::getBase()
                0x00000000c001da4e                APIC::eoi(unsigned char)
                0x00000000c001da7c                APIC::open(int, int, void*)
                0x00000000c001db36                IOAPIC::IOAPIC()
                0x00000000c001db36                IOAPIC::IOAPIC()
                0x00000000c001db5e                APIC::APIC()
                0x00000000c001db5e                APIC::APIC()
                0x00000000c001dc2e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001dc60                IOAPIC::read(int)
                0x00000000c001dc88                IOAPIC::open(int, int, void*)
                0x00000000c001dd7e                IOAPIC::write(int, int)
                0x00000000c001ddaa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001de64                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001dfcf        0x1 
 .text          0x00000000c001dfd0      0x3d3 hw/intctrl/pic.32
                0x00000000c001dfd0                PIC::disable()
                0x00000000c001dffe                PIC::close(int, int, void*)
                0x00000000c001e020                PIC::PIC()
                0x00000000c001e020                PIC::PIC()
                0x00000000c001e0f6                PIC::ioWait()
                0x00000000c001e0fc                PIC::getIRQReg(int)
                0x00000000c001e166                PIC::eoi(unsigned char)
                0x00000000c001e1f8                PIC::remap()
                0x00000000c001e364                PIC::open(int, int, void*)
 *fill*         0x00000000c001e3a3        0x1 
 .text          0x00000000c001e3a4      0x252 hw/timer/apictimer.32
                0x00000000c001e3a4                APICTimer::close(int, int, void*)
                0x00000000c001e3aa                apicTimerHandler(regs*, void*)
                0x00000000c001e3d8                APICTimer::write(int)
                0x00000000c001e4d6                APICTimer::open(int, int, void*)
                0x00000000c001e5ce                APICTimer::APICTimer()
                0x00000000c001e5ce                APICTimer::APICTimer()
 .text          0x00000000c001e5f6      0x1a7 hw/timer/pit.32
                0x00000000c001e5f6                PIT::write(int)
                0x00000000c001e674                pitHandler(regs*, void*)
                0x00000000c001e6a0                PIT::open(int, int, void*)
                0x00000000c001e6ee                PIT::close(int, int, void*)
                0x00000000c001e71e                PIT::PIT()
                0x00000000c001e71e                PIT::PIT()
 *fill*         0x00000000c001e79d        0x3 
 .text          0x00000000c001e7a0        0xa hw/fpu/x86/avx.32
                0x00000000c001e7a0                avxDetect
                0x00000000c001e7a6                avxSave
                0x00000000c001e7a7                avxLoad
                0x00000000c001e7a8                avxInit
                0x00000000c001e7a9                avxClose
 *fill*         0x00000000c001e7aa        0x6 
 .text          0x00000000c001e7b0       0x38 hw/fpu/x86/sse.32
                0x00000000c001e7b0                sseDetect
                0x00000000c001e7cb                sseSave
                0x00000000c001e7d1                sseLoad
                0x00000000c001e7d7                sseInit
                0x00000000c001e7e7                sseClose
 *fill*         0x00000000c001e7e8        0x8 
 .text          0x00000000c001e7f0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e7f6                x87Detect
                0x00000000c001e811                x87Save
                0x00000000c001e817                x87Load
                0x00000000c001e81c                x87Init
                0x00000000c001e836                x87Close
 *fill*         0x00000000c001e837        0x1 
 .text          0x00000000c001e838       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e85d        0x0 crtn.32
 *fill*         0x00000000c001e85d        0x3 
 .text          0x00000000c001e860      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e860                __divdi3
 *fill*         0x00000000c001e9ab        0x1 
 .text          0x00000000c001e9ac      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e9ac                __moddi3
 *fill*         0x00000000c001eb2a        0x2 
 .text          0x00000000c001eb2c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001eb2c                __udivdi3
 *fill*         0x00000000c001ec2b        0x1 
 .text          0x00000000c001ec2c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001ec2c                __umoddi3
 *fill*         0x00000000c001ed46        0xa 
 .text          0x00000000c001ed50       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001ed50                fabs
 *fill*         0x00000000c001ed6e        0x2 
 .text          0x00000000c001ed70        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001ed70                lrint
 .text          0x00000000c001ed7c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001ed7c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ed88        0x0
 .iplt          0x00000000c001ed88        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001ed88        0xf
 .init          0x00000000c001ed88        0x3 crti.32
                0x00000000c001ed88                _init
 .init          0x00000000c001ed8b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ed90        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ed95        0x2 crtn.32

.fini           0x00000000c001ed97        0xa
 .fini          0x00000000c001ed97        0x3 crti.32
                0x00000000c001ed97                _fini
 .fini          0x00000000c001ed9a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ed9f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001eda2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001eda2       0x23 core/computer.32
                0x00000000c001eda2                Computer::~Computer()
                0x00000000c001eda2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001edc6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001edc6       0x2a core/computer.32
                0x00000000c001edc6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001edf0       0x15
 .text._Z10idleCommonv
                0x00000000c001edf0       0x15 core/idle.32
                0x00000000c001edf0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001ee05       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001ee05       0x12 core/kheap.32
                0x00000000c001ee05                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001ee17        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001ee17        0x9 core/kheap.32
                0x00000000c001ee17                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ee20        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ee20        0x2 core/unixfile.32
                0x00000000c001ee20                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ee20                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ee22       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ee22       0x58 core/unixfile.32
                0x00000000c001ee22                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ee22                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee7a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ee7a       0xd3 core/unixfile.32
                0x00000000c001ee7a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ef4e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ef4e        0x7 core/unixfile.32
                0x00000000c001ef4e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ef56       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ef56       0xa1 core/unixfile.32
                0x00000000c001ef56                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eff8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eff8        0x8 core/unixfile.32
                0x00000000c001eff8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f000       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f000       0x1a hal/device.32
                0x00000000c001f000                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f000                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f01a       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f01a       0x2a hal/device.32
                0x00000000c001f01a                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f044       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f044       0xdc hal/device.32
                0x00000000c001f044                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f120       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f120       0x58 hal/device.32
                0x00000000c001f120                LinkedList<Device>::LinkedList()
                0x00000000c001f120                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001f178       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001f178       0x12 hal/fpu.32
                0x00000000c001f178                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001f18a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001f18a        0x9 hal/fpu.32
                0x00000000c001f18a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001f193       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001f193       0x12 hal/intctrl.32
                0x00000000c001f193                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001f1a5       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001f1a5       0x12 hal/intctrl.32
                0x00000000c001f1a5                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f1b7       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f1b7       0x12 hal/intctrl.32
                0x00000000c001f1b7                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f1c9       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f1c9       0x12 hal/intctrl.32
                0x00000000c001f1c9                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f1db       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f1db       0x12 hal/intctrl.32
                0x00000000c001f1db                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f1ed       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f1ed       0x12 hal/intctrl.32
                0x00000000c001f1ed                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f200        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001f200        0x7 hal/timer.32
                0x00000000c001f200                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f208       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001f208       0x1c hal/timer.32
                0x00000000c001f208                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f224       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001f224       0xae hal/timer.32
                0x00000000c001f224                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f2d2       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001f2d2       0xd3 hal/timer.32
                0x00000000c001f2d2                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f3a6       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f3a6       0x23 hw/acpi.32
                0x00000000c001f3a6                ACPI::~ACPI()
                0x00000000c001f3a6                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f3ca       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f3ca       0x2a hw/acpi.32
                0x00000000c001f3ca                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f3f4       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f3f4       0x23 hw/cpu.32
                0x00000000c001f3f4                CPU::~CPU()
                0x00000000c001f3f4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f418       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f418       0x2a hw/cpu.32
                0x00000000c001f418                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001f442       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001f442       0x12 hw/cpu.32
                0x00000000c001f442                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f454        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f454        0x9 hw/cpu.32
                0x00000000c001f454                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f45d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f45d        0x9 hw/cpu.32
                0x00000000c001f45d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001f466       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001f466       0x12 krnl/panic.32
                0x00000000c001f466                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f478        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f478        0x2 thr/prcssthr.32
                0x00000000c001f478                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001f478                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f47a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f47a       0x3e thr/prcssthr.32
                0x00000000c001f47a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001f47a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f4b8       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f4b8       0x58 thr/prcssthr.32
                0x00000000c001f4b8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001f4b8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f510        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f510        0x8 thr/prcssthr.32
                0x00000000c001f510                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001f518       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f518       0x23 hw/bus/pci.32
                0x00000000c001f518                PCI::~PCI()
                0x00000000c001f518                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f53c       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f53c       0x2a hw/bus/pci.32
                0x00000000c001f53c                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f566       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f566       0x23 hw/diskctrl/ide.32
                0x00000000c001f566                IDE::~IDE()
                0x00000000c001f566                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f58a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f58a       0x2a hw/diskctrl/ide.32
                0x00000000c001f58a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f5b4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f5b4       0x23 hw/diskphys/ata.32
                0x00000000c001f5b4                ATA::~ATA()
                0x00000000c001f5b4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f5d8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f5d8       0x2a hw/diskphys/ata.32
                0x00000000c001f5d8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f602       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f602       0x23 hw/diskphys/atapi.32
                0x00000000c001f602                ATAPI::~ATAPI()
                0x00000000c001f602                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f626       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f626       0x2a hw/diskphys/atapi.32
                0x00000000c001f626                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f650       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f650       0x23 hw/fpu/avx.32
                0x00000000c001f650                AVX::~AVX()
                0x00000000c001f650                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f674       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f674       0x2a hw/fpu/avx.32
                0x00000000c001f674                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f69e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f69e       0x23 hw/fpu/mmx.32
                0x00000000c001f69e                MMX::~MMX()
                0x00000000c001f69e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f6c2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f6c2       0x2a hw/fpu/mmx.32
                0x00000000c001f6c2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f6ec       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f6ec       0x23 hw/fpu/sse.32
                0x00000000c001f6ec                SSE::~SSE()
                0x00000000c001f6ec                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f710       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f710       0x2a hw/fpu/sse.32
                0x00000000c001f710                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f73a       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f73a       0x23 hw/fpu/x87.32
                0x00000000c001f73a                x87::~x87()
                0x00000000c001f73a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f75e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f75e       0x2a hw/fpu/x87.32
                0x00000000c001f75e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f788       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f788       0x23 hw/intctrl/apic.32
                0x00000000c001f788                IOAPIC::~IOAPIC()
                0x00000000c001f788                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f7ac       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f7ac       0x2a hw/intctrl/apic.32
                0x00000000c001f7ac                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f7d6       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f7d6       0x23 hw/intctrl/apic.32
                0x00000000c001f7d6                APIC::~APIC()
                0x00000000c001f7d6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f7fa       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f7fa       0x2a hw/intctrl/apic.32
                0x00000000c001f7fa                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f824       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f824       0x23 hw/intctrl/pic.32
                0x00000000c001f824                PIC::~PIC()
                0x00000000c001f824                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f848       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f848       0x2a hw/intctrl/pic.32
                0x00000000c001f848                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f872       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f872       0x23 hw/timer/apictimer.32
                0x00000000c001f872                APICTimer::~APICTimer()
                0x00000000c001f872                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f896       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f896       0x2a hw/timer/apictimer.32
                0x00000000c001f896                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f8c0       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f8c0       0x23 hw/timer/pit.32
                0x00000000c001f8c0                PIT::~PIT()
                0x00000000c001f8c0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f8e4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f8e4       0x2a hw/timer/pit.32
                0x00000000c001f8e4                PIT::~PIT()

.rodata         0x00000000c001f90e     0x389a
                0x00000000c001f90e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f90e        0x2 
 .ctors         0x00000000c001f910        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f914        0x4 core/unixfile.32
 .ctors         0x00000000c001f918        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f91c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f920                end_ctors = .
                0x00000000c001f920                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f920        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f924        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f924                __DTOR_END__
                0x00000000c001f928                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f928       0x18 
 .rodata        0x00000000c001f940      0x101 acpica/utclib.32
                0x00000000c001f940                AcpiGbl_Ctypes
 *fill*         0x00000000c001fa41        0x3 
 .rodata        0x00000000c001fa44       0x18 core/malloc.32
 *fill*         0x00000000c001fa5c        0x4 
 .rodata        0x00000000c001fa60      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001fb80       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001fbd6        0xa 
 .rodata        0x00000000c001fbe0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001ffe0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0020096        0x2 
 .rodata.str1.4
                0x00000000c0020098      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c002043d        0x3 
 .rodata        0x00000000c0020440       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c00204a0       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c00204c0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c00204d4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020516        0x2 
 .rodata.cst8   0x00000000c0020518        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020520       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c002058c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020650       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c002069a        0x6 
 .rodata.cst8   0x00000000c00206a0        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c00206a8        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00206b4       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c00206fc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c00206fc      0x1bf core/computer.32
                                        0x1c8 (size before relaxing)
 *fill*         0x00000000c00208bb        0x1 
 .rodata._ZTV8Computer
                0x00000000c00208bc       0x2c core/computer.32
                0x00000000c00208bc                vtable for Computer
 .rodata.str1.1
                0x00000000c00208e8       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020904       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020934        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020940       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c002095b       0x5f core/physmgr.32
 *fill*         0x00000000c00209ba        0x2 
 .rodata.str1.4
                0x00000000c00209bc       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c0020a09       0x39 core/pipe.32
 *fill*         0x00000000c0020a42        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020a44       0x1c core/pipe.32
                0x00000000c0020a44                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020a60       0x9d core/terminal.32
 *fill*         0x00000000c0020afd        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020b00       0x1c core/terminal.32
                0x00000000c0020b00                vtable for VgaText
 .rodata        0x00000000c0020b1c       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c0020b3a       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020bbd       0x19 core/unixfile.32
 *fill*         0x00000000c0020bd6        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020bd8       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020bfa       0x15 core/unixfile.32
 *fill*         0x00000000c0020c0f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020c10       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020c5b        0x8 core/unixfile.32
 *fill*         0x00000000c0020c63        0x1 
 .rodata.str1.4
                0x00000000c0020c64       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020c84       0x1c core/unixfile.32
                0x00000000c0020c84                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020ca0       0x1c core/unixfile.32
                0x00000000c0020ca0                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020cbc      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020e43      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020f46       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020f79        0x3 
 .rodata.str1.4
                0x00000000c0020f7c       0x3f dbg/kconsole.32
 *fill*         0x00000000c0020fbb        0x1 
 .rodata        0x00000000c0020fbc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002110c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002110c       0x64 fs/vfs.32
                0x00000000c002110c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0021170       0x1c fs/vfs.32
                0x00000000c0021170                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002118c       0x1c fs/vfs.32
                0x00000000c002118c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00211a8       0x2c hal/bus.32
                0x00000000c00211a8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00211d4       0x30 hal/buzzer.32
                0x00000000c00211d4                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0021204       0x3c hal/clock.32
                0x00000000c0021204                vtable for Clock
 .rodata        0x00000000c0021240       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021270       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c002128e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c002128e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c002128e       0x19 hal/device.32
 *fill*         0x00000000c002128e        0x2 
 .rodata._ZTV6Device
                0x00000000c0021290       0x2c hal/device.32
                0x00000000c0021290                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00212bc       0x2c hal/device.32
                0x00000000c00212bc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c00212e8       0x2c hal/diskctrl.32
                0x00000000c00212e8                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021314       0x34 hal/diskphys.32
                0x00000000c0021314                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021348        0x9 hal/fpu.32
 *fill*         0x00000000c0021351        0x3 
 .rodata._ZTV3FPU
                0x00000000c0021354       0x38 hal/fpu.32
                0x00000000c0021354                vtable for FPU
 .rodata.str1.4
                0x00000000c002138c      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c00214bc      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c002164f        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c0021650       0x48 hal/intctrl.32
                0x00000000c0021650                vtable for InterruptController
 .rodata        0x00000000c0021698       0x4e hal/keybrd.32
 *fill*         0x00000000c00216e6        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c00216e8       0x34 hal/keybrd.32
                0x00000000c00216e8                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002171c       0x7a hal/logidisk.32
 *fill*         0x00000000c0021796        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0021798       0x2c hal/logidisk.32
                0x00000000c0021798                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00217c4       0x2c hal/mouse.32
                0x00000000c00217c4                vtable for Mouse
 .rodata.str1.1
                0x00000000c00217f0        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00217fb       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00217fb        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00217fb       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00217fb       0x15 hal/timer.32
 *fill*         0x00000000c00217fb        0x1 
 .rodata._ZTV5Timer
                0x00000000c00217fc       0x30 hal/timer.32
                0x00000000c00217fc                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002182c       0x10 hal/vcache.32
                0x00000000c002182c                vtable for VCache
 .rodata.str1.1
                0x00000000c002183c        0xf hal/video.32
 *fill*         0x00000000c002184b        0x1 
 .rodata._ZTV5Video
                0x00000000c002184c       0x40 hal/video.32
                0x00000000c002184c                vtable for Video
 .rodata.str1.1
                0x00000000c002188c       0xd1 hw/acpi.32
 *fill*         0x00000000c002195d        0x3 
 .rodata.str1.4
                0x00000000c0021960       0xe5 hw/acpi.32
 *fill*         0x00000000c0021a45        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021a48       0x2c hw/acpi.32
                0x00000000c0021a48                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021a74      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c0021e35        0x3 
 .rodata._ZTV3CPU
                0x00000000c0021e38       0x2c hw/cpu.32
                0x00000000c0021e38                vtable for CPU
 .rodata.str1.1
                0x00000000c0021e64       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021f19        0x3 
 .rodata.str1.4
                0x00000000c0021f1c      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c002202e       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0022073       0x3e sys/sc_write.32
 *fill*         0x00000000c00220b1        0x3 
 .rodata.str1.4
                0x00000000c00220b4       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c0022170       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0022232      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c002243e       0xfb thr/prcssthr.32
 *fill*         0x00000000c0022539        0x3 
 .rodata.str1.4
                0x00000000c002253c      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c00227e3       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c00227e3       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00227e3       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00227e3       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00227e3        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c00227e3       0x5f vm86/vm8086.32
 *fill*         0x00000000c0022842        0x2 
 .rodata        0x00000000c0022844       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0022874       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c00228c7        0x1 
 .rodata.str1.4
                0x00000000c00228c8       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c00228f0       0x64 fs/fat/vfslink.32
                0x00000000c00228f0                vtable for FAT
 .rodata.str1.1
                0x00000000c0022954       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c002299d        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c00229a0       0x64 fs/iso9660/vfslink.32
                0x00000000c00229a0                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022a04       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0022a1e        0x2 
 .rodata.cst4   0x00000000c0022a20        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0022a24       0x38 hal/sound/sndhw.32
                0x00000000c0022a24                vtable for SoundDevice
 .rodata.cst4   0x00000000c0022a5c       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0022a6c       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022b10       0x2c hw/bus/pci.32
                0x00000000c0022b10                vtable for PCI
 .rodata.str1.1
                0x00000000c0022b3c      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0022d72        0x2 
 .rodata._ZTV3IDE
                0x00000000c0022d74       0x2c hw/diskctrl/ide.32
                0x00000000c0022d74                vtable for IDE
 .rodata.str1.1
                0x00000000c0022da0       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0022dc1        0x3 
 .rodata._ZTV3ATA
                0x00000000c0022dc4       0x34 hw/diskphys/ata.32
                0x00000000c0022dc4                vtable for ATA
 .rodata.str1.1
                0x00000000c0022df8       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0022e30       0x34 hw/diskphys/atapi.32
                0x00000000c0022e30                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022e64        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0022e6c       0x38 hw/fpu/avx.32
                0x00000000c0022e6c                vtable for AVX
 .rodata.str1.1
                0x00000000c0022ea4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022eac       0x38 hw/fpu/mmx.32
                0x00000000c0022eac                vtable for MMX
 .rodata.str1.1
                0x00000000c0022ee4        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022eec       0x38 hw/fpu/sse.32
                0x00000000c0022eec                vtable for SSE
 .rodata.str1.1
                0x00000000c0022f24        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0022f2c       0x38 hw/fpu/x87.32
                0x00000000c0022f2c                vtable for x87
 .rodata        0x00000000c0022f64       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c002303c       0x48 hw/intctrl/apic.32
                0x00000000c002303c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0023084       0x2c hw/intctrl/apic.32
                0x00000000c0023084                vtable for IOAPIC
 .rodata        0x00000000c00230b0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c00230d2        0x2 
 .rodata._ZTV3PIC
                0x00000000c00230d4       0x48 hw/intctrl/pic.32
                0x00000000c00230d4                vtable for PIC
 .rodata.str1.1
                0x00000000c002311c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0023127        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0023128       0x30 hw/timer/apictimer.32
                0x00000000c0023128                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0023158       0x1d hw/timer/pit.32
 *fill*         0x00000000c0023175        0x3 
 .rodata._ZTV3PIT
                0x00000000c0023178       0x30 hw/timer/pit.32
                0x00000000c0023178                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00231a8      0x601
 *(.data)
 .data          0x00000000c00231a8        0x0 crti.32
 .data          0x00000000c00231a8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00231a8                __dso_handle
 .data          0x00000000c00231ac        0x0 acpica/utclib.32
 .data          0x00000000c00231ac        0x0 core/malloc.32
 .data          0x00000000c00231ac        0x0 libk/string.32
 .data          0x00000000c00231ac        0x0 fs/fat/diskio.32
 .data          0x00000000c00231ac        0x0 fs/fat/ff.32
 .data          0x00000000c00231ac        0x0 fs/fat/ffsystem.32
 .data          0x00000000c00231ac        0x0 fs/fat/ffunicode.32
 .data          0x00000000c00231ac        0x0 hal/libresample/samplerate.32
 .data          0x00000000c00231ac        0x0 hal/libresample/src_linear.32
 .data          0x00000000c00231ac        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c00231ac        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c00231ac        0x0 core/computer.32
 .data          0x00000000c00231ac        0x0 core/gdt.32
 .data          0x00000000c00231ac        0x0 core/idle.32
 .data          0x00000000c00231ac        0x0 core/idt.32
 .data          0x00000000c00231ac        0x4 core/kheap.32
 .data          0x00000000c00231b0        0x0 core/main.32
 .data          0x00000000c00231b0        0x4 core/physmgr.32
                0x00000000c00231b0                Phys::bitmap
 .data          0x00000000c00231b4        0x0 core/pipe.32
 *fill*         0x00000000c00231b4        0xc 
 .data          0x00000000c00231c0       0x60 core/terminal.32
                0x00000000c00231c0                VgaText::hiddenOut
                0x00000000c00231e0                ansiToVGAMappings
 .data          0x00000000c0023220        0x0 core/tss.32
 .data          0x00000000c0023220        0x4 core/unixfile.32
                0x00000000c0023220                UnixFile::nextFd
 .data          0x00000000c0023224        0x8 core/virtmgr.32
                0x00000000c0023224                Virt::pageAllocPtr
                0x00000000c0023228                Virt::bitmap
 .data          0x00000000c002322c        0x4 coreobjs/c++.32
                0x00000000c002322c                __stack_chk_guard
 .data          0x00000000c0023230        0x0 dbg/kconsole.32
 .data          0x00000000c0023230        0x0 fs/vfs.32
 .data          0x00000000c0023230        0x0 hal/bus.32
 .data          0x00000000c0023230        0x0 hal/buzzer.32
 .data          0x00000000c0023230        0x0 hal/clock.32
 .data          0x00000000c0023230        0x0 hal/device.32
 .data          0x00000000c0023230        0x0 hal/diskctrl.32
 .data          0x00000000c0023230        0x0 hal/diskphys.32
 .data          0x00000000c0023230        0x0 hal/fpu.32
 *fill*         0x00000000c0023230       0x10 
 .data          0x00000000c0023240      0x2a0 hal/intctrl.32
                0x00000000c0023240                exceptionNames
 .data          0x00000000c00234e0        0x0 hal/keybrd.32
 .data          0x00000000c00234e0        0x0 hal/logidisk.32
 .data          0x00000000c00234e0        0x0 hal/mouse.32
 .data          0x00000000c00234e0        0x0 hal/partition.32
 .data          0x00000000c00234e0        0x0 hal/timer.32
 .data          0x00000000c00234e0        0x0 hal/vcache.32
 .data          0x00000000c00234e0        0x0 hal/video.32
 .data          0x00000000c00234e0       0x10 hw/acpi.32
                0x00000000c00234e0                legacyIRQRemaps
 *fill*         0x00000000c00234f0       0x10 
 .data          0x00000000c0023500      0x2a4 hw/cpu.32
                0x00000000c0023500                cpuNameList
                0x00000000c00237a0                lastCode
 .data          0x00000000c00237a4        0x0 hw/ports.32
 .data          0x00000000c00237a4        0x0 krnl/panic.32
 .data          0x00000000c00237a4        0x0 reg/registry.32
 .data          0x00000000c00237a4        0x0 sys/sc_exit.32
 .data          0x00000000c00237a4        0x0 sys/sc_loaddll.32
 .data          0x00000000c00237a4        0x0 sys/sc_read.32
 .data          0x00000000c00237a4        0x0 sys/sc_sbrk.32
 .data          0x00000000c00237a4        0x0 sys/sc_write.32
 .data          0x00000000c00237a4        0x0 sys/sc_yield.32
 .data          0x00000000c00237a4        0x0 sys/syscalls.32
 .data          0x00000000c00237a4        0x0 thr/elf.32
 .data          0x00000000c00237a4        0x4 thr/prcssthr.32
                0x00000000c00237a4                nextPID
 .data          0x00000000c00237a8        0x0 vm86/vm8086.32
 .data          0x00000000c00237a8        0x0 fs/fat/vfslink.32
 .data          0x00000000c00237a8        0x1 fs/iso9660/vfslink.32
                0x00000000c00237a8                recentDriveletter
 .data          0x00000000c00237a9        0x0 hal/sound/sndchannel.32
 .data          0x00000000c00237a9        0x0 hal/sound/sndhw.32
 .data          0x00000000c00237a9        0x0 hw/bus/isa.32
 .data          0x00000000c00237a9        0x0 hw/bus/pci.32
 .data          0x00000000c00237a9        0x0 hw/diskctrl/ide.32
 .data          0x00000000c00237a9        0x0 hw/diskphys/ata.32
 .data          0x00000000c00237a9        0x0 hw/diskphys/atapi.32
 .data          0x00000000c00237a9        0x0 hw/fpu/avx.32
 .data          0x00000000c00237a9        0x0 hw/fpu/mmx.32
 .data          0x00000000c00237a9        0x0 hw/fpu/sse.32
 .data          0x00000000c00237a9        0x0 hw/fpu/x87.32
 .data          0x00000000c00237a9        0x0 hw/intctrl/apic.32
 .data          0x00000000c00237a9        0x0 hw/intctrl/pic.32
 .data          0x00000000c00237a9        0x0 hw/timer/apictimer.32
 .data          0x00000000c00237a9        0x0 hw/timer/pit.32
 .data          0x00000000c00237a9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c00237a9        0x0 crtn.32
 .data          0x00000000c00237a9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c00237a9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c00237a9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c00237a9        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c00237a9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c00237a9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c00237a9        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c00237ac        0x0
 .got           0x00000000c00237ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c00237ac        0x0
 .got.plt       0x00000000c00237ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c00237ac        0x0
 .igot.plt      0x00000000c00237ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c00237ac        0x0
 .tm_clone_table
                0x00000000c00237ac        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c00237ac        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c00237a9      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c00237a9        0x3 
 .eh_frame      0x00000000c00237ac        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c00237ac        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c00237ac       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023804       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0023844       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c00238b0       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0023934       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c002394c        0x0
 .rel.got       0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c002394c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c002394c     0x223c
                0x00000000c002394c                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c002394c        0x0 crti.32
 .bss           0x00000000c002394c       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c002396c        0x4 acpica/utclib.32
 *fill*         0x00000000c0023970       0x10 
 .bss           0x00000000c0023980      0x378 core/malloc.32
 .bss           0x00000000c0023cf8        0x0 libk/string.32
 .bss           0x00000000c0023cf8        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023cf8        0x8 
 .bss           0x00000000c0023d00       0x88 fs/fat/ff.32
 .bss           0x00000000c0023d88        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023d88        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0023d88        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0023d88        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0023d88        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0023d88        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0023d88        0x6 core/computer.32
                0x00000000c0023d88                computer
                0x00000000c0023d8c                preemptionOn
                0x00000000c0023d8d                schedulingOn
 *fill*         0x00000000c0023d8e        0x2 
 .bss           0x00000000c0023d90        0x6 core/gdt.32
                0x00000000c0023d90                gdtDescr
 .bss           0x00000000c0023d96        0x0 core/idle.32
 *fill*         0x00000000c0023d96        0x2 
 .bss           0x00000000c0023d98        0x6 core/idt.32
                0x00000000c0023d98                idtDescr
 .bss           0x00000000c0023d9e        0x0 core/kheap.32
 *fill*         0x00000000c0023d9e        0x2 
 .bss           0x00000000c0023da0        0x4 core/main.32
                0x00000000c0023da0                sysBootSettings
 *fill*         0x00000000c0023da4       0x1c 
 .bss           0x00000000c0023dc0       0x50 core/physmgr.32
                0x00000000c0023dc0                Phys::currentPagePointer
                0x00000000c0023dc4                Phys::highestMem
                0x00000000c0023dc8                Phys::oldPercent
                0x00000000c0023dcc                Phys::usedPages
                0x00000000c0023dd0                Phys::usablePages
                0x00000000c0023de0                Phys::dmaUsage
 .bss           0x00000000c0023e10        0x0 core/pipe.32
 *fill*         0x00000000c0023e10       0x10 
 .bss           0x00000000c0023e20       0x29 core/terminal.32
                0x00000000c0023e20                textModeImplementation
                0x00000000c0023e40                terminalCycle
                0x00000000c0023e44                activeTerminal
                0x00000000c0023e48                VgaText::graphicMode
 *fill*         0x00000000c0023e49        0x1 
 .bss           0x00000000c0023e4a        0x2 core/tss.32
                0x00000000c0023e4a                doubleFaultSelector
 *fill*         0x00000000c0023e4c       0x14 
 .bss           0x00000000c0023e60       0x84 core/unixfile.32
                0x00000000c0023e60                sfileLpt
                0x00000000c0023ea0                sfileCom
                0x00000000c0023ec4                sfileNul
                0x00000000c0023ec8                sfilePnt
                0x00000000c0023ecc                sfileAux
                0x00000000c0023ed0                sfileCon
                0x00000000c0023ed4                initialFilesAdded
                0x00000000c0023ed8                unixFileLinkedList
 .bss           0x00000000c0023ee4        0x4 core/virtmgr.32
                0x00000000c0023ee4                firstVAS
 .bss           0x00000000c0023ee8        0x0 coreobjs/c++.32
 .bss           0x00000000c0023ee8        0x0 dbg/kconsole.32
 .bss           0x00000000c0023ee8        0x4 fs/vfs.32
                0x00000000c0023ee8                installedFilesystems
 .bss           0x00000000c0023eec        0x0 hal/bus.32
 .bss           0x00000000c0023eec        0x4 hal/buzzer.32
                0x00000000c0023eec                systemBuzzer
 .bss           0x00000000c0023ef0        0x8 hal/clock.32
                0x00000000c0023ef0                dstOn
                0x00000000c0023ef1                timezoneHalfHourOffset
                0x00000000c0023ef4                timezoneHourOffset
 .bss           0x00000000c0023ef8        0x0 hal/device.32
 .bss           0x00000000c0023ef8        0x0 hal/diskctrl.32
 .bss           0x00000000c0023ef8        0x0 hal/diskphys.32
 .bss           0x00000000c0023ef8        0x0 hal/fpu.32
 .bss           0x00000000c0023ef8       0x20 hal/intctrl.32
                0x00000000c0023ef8                pf5
                0x00000000c0023efc                pf4
                0x00000000c0023f00                pf3
                0x00000000c0023f04                pf2
                0x00000000c0023f08                pf1
                0x00000000c0023f0c                pf0
                0x00000000c0023f10                gpFaultIntercept
                0x00000000c0023f14                x87FaultIntercept
 *fill*         0x00000000c0023f18        0x8 
 .bss           0x00000000c0023f20      0x429 hal/keybrd.32
                0x00000000c0023f20                keyboardWaitingTaskList
                0x00000000c0023f24                keyboardSetupYet
                0x00000000c0023f40                keystates
 *fill*         0x00000000c0024349       0x17 
 .bss           0x00000000c0024360       0x88 hal/logidisk.32
                0x00000000c0024360                diskAssignments
                0x00000000c0024380                disks
 .bss           0x00000000c00243e8        0x4 hal/mouse.32
                0x00000000c00243e8                guiMouseHandler
 .bss           0x00000000c00243ec        0x0 hal/partition.32
 *fill*         0x00000000c00243ec        0x4 
 .bss           0x00000000c00243f0        0x8 hal/timer.32
                0x00000000c00243f0                nanoSinceBoot
 .bss           0x00000000c00243f8        0x0 hal/vcache.32
 .bss           0x00000000c00243f8        0x4 hal/video.32
                0x00000000c00243f8                screen
 *fill*         0x00000000c00243fc        0x4 
 .bss           0x00000000c0024400      0x3c0 hw/acpi.32
                0x00000000c0024400                systemSleepFunction
                0x00000000c0024404                systemResetFunction
                0x00000000c0024408                systemShutdownFunction
                0x00000000c002440c                nextACPITable
                0x00000000c0024420                acpiTables
                0x00000000c0024620                usingXSDT
                0x00000000c0024624                MADTpointer
                0x00000000c0024628                RSDTpointer
                0x00000000c002462c                RSDPpointer
                0x00000000c0024630                ioapicDiscoveryNumber
                0x00000000c0024640                ioapicFoundInMADT
                0x00000000c0024660                ioapicAddresses
                0x00000000c00246e0                ioapicGSIBase
                0x00000000c0024760                processorDiscoveryNumber
                0x00000000c0024780                matchingAPICID
                0x00000000c00247a0                processorID
 .bss           0x00000000c00247c0       0x10 hw/cpu.32
                0x00000000c00247c0                lastD
                0x00000000c00247c4                lastC
                0x00000000c00247c8                lastB
                0x00000000c00247cc                lastA
 .bss           0x00000000c00247d0        0x0 hw/ports.32
 .bss           0x00000000c00247d0        0x5 krnl/panic.32
                0x00000000c00247d0                Krnl::guiPanicHandler
                0x00000000c00247d4                Krnl::kernelInPanic
 .bss           0x00000000c00247d5        0x0 reg/registry.32
 .bss           0x00000000c00247d5        0x0 sys/sc_exit.32
 .bss           0x00000000c00247d5        0x0 sys/sc_loaddll.32
 .bss           0x00000000c00247d5        0x0 sys/sc_read.32
 .bss           0x00000000c00247d5        0x0 sys/sc_sbrk.32
 .bss           0x00000000c00247d5        0x0 sys/sc_write.32
 .bss           0x00000000c00247d5        0x0 sys/sc_yield.32
 *fill*         0x00000000c00247d5        0xb 
 .bss           0x00000000c00247e0      0x200 sys/syscalls.32
                0x00000000c00247e0                systemCallHandlers
 .bss           0x00000000c00249e0      0x7a4 thr/elf.32
                0x00000000c00249e0                Thr::driverLookupNext
                0x00000000c0024a00                Thr::driverLookupLen
                0x00000000c0024c00                Thr::driverLookupAddr
                0x00000000c0024e00                Thr::driverNameLookup
                0x00000000c0025000                Thr::kernelSymbols
                0x00000000c0025080                Thr::kernelStringTable
                0x00000000c0025100                Thr::kernelSymbolTable
                0x00000000c0025180                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025184        0x4 
 .bss           0x00000000c0025188       0x68 thr/prcssthr.32
                0x00000000c0025188                cleanerThread
                0x00000000c002518c                weNeedTheCleanerToNotBlock
                0x00000000c0025190                xxxx
                0x00000000c0025194                retValLockStuff
                0x00000000c0025198                retValSchedLock
                0x00000000c002519c                lockStuffLock
                0x00000000c00251a0                schedulerLock
                0x00000000c00251a4                taskSwitchesPostponedFlag
                0x00000000c00251a8                postponeTaskSwitchesCounter
                0x00000000c00251ac                irqDisableCounter
                0x00000000c00251b0                terminatedTaskList
                0x00000000c00251bc                sleepingTaskList
                0x00000000c00251c8                taskList
                0x00000000c00251d4                kernelProcess
 .bss           0x00000000c00251f0        0x0 vm86/vm8086.32
 *fill*         0x00000000c00251f0       0x10 
 .bss           0x00000000c0025200       0xf0 fs/fat/vfslink.32
                0x00000000c0025200                FAT::fats
                0x00000000c0025220                FAT::vfsToFatRemaps
                0x00000000c00252a0                fatToVFSRemaps
 *fill*         0x00000000c00252f0       0x10 
 .bss           0x00000000c0025300      0x820 fs/iso9660/vfslink.32
                0x00000000c0025300                recentSector
                0x00000000c0025320                recentBuffer
 .bss           0x00000000c0025b20        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0025b20        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0025b20        0x0 hw/bus/isa.32
 .bss           0x00000000c0025b20        0x0 hw/bus/pci.32
 .bss           0x00000000c0025b20        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025b20        0x8 hw/diskphys/ata.32
                0x00000000c0025b20                ataSectorsWritten
                0x00000000c0025b24                ataSectorsRead
 .bss           0x00000000c0025b28        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025b28        0x0 hw/fpu/avx.32
 .bss           0x00000000c0025b28        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0025b28        0x0 hw/fpu/sse.32
 .bss           0x00000000c0025b28        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0025b28       0x18 
 .bss           0x00000000c0025b40       0x41 hw/intctrl/apic.32
                0x00000000c0025b40                noOfIOAPICs
                0x00000000c0025b60                ioapics
                0x00000000c0025b80                IOAPICsSetupYet
 .bss           0x00000000c0025b81        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0025b81        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025b81        0x3 
 .bss           0x00000000c0025b84        0x4 hw/timer/pit.32
                0x00000000c0025b84                pitFreq
 .bss           0x00000000c0025b88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025b88        0x0 crtn.32
 .bss           0x00000000c0025b88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0025b88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0025b88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0025b88        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0025b88        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0025b88        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0025b88        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025b88                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027dc4                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
