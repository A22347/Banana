Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e428
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x68f core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b330                Computer::disableNMI()
                0x00000000c000b33e                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b35c                Computer::handleNMI()
                0x00000000c000b3c2                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3ed        0x1 
 .text          0x00000000c000b3ee      0x1b7 core/gdt.32
                0x00000000c000b3ee                GDTEntry::setBase(unsigned int)
                0x00000000c000b40a                GDTEntry::setLimit(unsigned int)
                0x00000000c000b428                GDT::GDT()
                0x00000000c000b428                GDT::GDT()
                0x00000000c000b43e                GDT::addEntry(GDTEntry)
                0x00000000c000b47a                GDT::getNumberOfEntries()
                0x00000000c000b482                GDT::flush()
                0x00000000c000b4a4                GDT::setup()
 .text          0x00000000c000b5a5       0x61 core/idle.32
                0x00000000c000b5a5                idleFunction(void*)
 .text          0x00000000c000b606      0x45f core/idt.32
                0x00000000c000b606                IDTEntry::IDTEntry(bool)
                0x00000000c000b606                IDTEntry::IDTEntry(bool)
                0x00000000c000b674                IDTEntry::setOffset(unsigned int)
                0x00000000c000b688                IDT::IDT()
                0x00000000c000b688                IDT::IDT()
                0x00000000c000b68a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b692                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6ac                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6e4                IDT::flush()
                0x00000000c000b6fe                IDT::setup()
 .text          0x00000000c000ba65      0x20d core/kheap.32
                0x00000000c000ba65                sbrk
                0x00000000c000bb7d                mmap
                0x00000000c000bb93                munmap
                0x00000000c000bba9                liballoc_lock()
                0x00000000c000bbba                liballoc_unlock()
                0x00000000c000bbcb                liballoc_alloc(int)
                0x00000000c000bbe6                liballoc_free(void*, int)
                0x00000000c000bc04                realloc
                0x00000000c000bc18                malloc
                0x00000000c000bc28                free
                0x00000000c000bc38                rfree
                0x00000000c000bc48                calloc
 .text          0x00000000c000bc72      0x38d core/main.32
                0x00000000c000bc72                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcb7                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcf9                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd4d                hwTextMode_update(VgaText*)
                0x00000000c000bd4e                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd96                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd2                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be58                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000beb6                setupTextMode()
                0x00000000c000bf07                kernel_main
 .text          0x00000000c000bfff      0x46c core/physmgr.32
                0x00000000c000bfff                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a2                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0ea                Phys::setPageState(unsigned long, bool)
                0x00000000c000c11c                Phys::getPageState(unsigned long)
                0x00000000c000c138                Phys::freePage(unsigned long)
                0x00000000c000c1c2                Phys::allocatePage()
                0x00000000c000c27e                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2b6                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000c46b        0x1 
 .text          0x00000000c000c46c      0x273 core/pipe.32
                0x00000000c000c46c                Pipe::isAtty()
                0x00000000c000c470                Pipe::~Pipe()
                0x00000000c000c470                Pipe::~Pipe()
                0x00000000c000c494                Pipe::~Pipe()
                0x00000000c000c4bc                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c5b0                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c678                Pipe::Pipe(int)
                0x00000000c000c678                Pipe::Pipe(int)
 *fill*         0x00000000c000c6df        0x1 
 .text          0x00000000c000c6e0      0xf65 core/terminal.32
                0x00000000c000c6e0                VgaText::isAtty()
                0x00000000c000c6e4                VgaText::~VgaText()
                0x00000000c000c6e4                VgaText::~VgaText()
                0x00000000c000c708                VgaText::~VgaText()
                0x00000000c000c732                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c752                setTerminalScrollLock(bool)
                0x00000000c000c753                addToTerminalCycle(VgaText*)
                0x00000000c000c780                installVgaTextImplementation()
                0x00000000c000c795                scrollTerminalScrollLock(int)
                0x00000000c000c796                VgaText::load()
                0x00000000c000c7ea                VgaText::updateCursor()
                0x00000000c000c804                VgaText::showCursor(bool)
                0x00000000c000c814                VgaText::disableBlink(bool)
                0x00000000c000c84e                VgaText::doANSI_SGR(int)
                0x00000000c000c8da                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c8f0                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c906                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c926                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c938                VgaText::scrollScreen()
                0x00000000c000c9cc                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000c9de                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ca3e                VgaText::getCursorX()
                0x00000000c000ca4a                VgaText::getCursorY()
                0x00000000c000ca56                VgaText::setCursor(int, int)
                0x00000000c000ca74                VgaText::setCursorX(int)
                0x00000000c000ca90                VgaText::setCursorY(int)
                0x00000000c000caac                VgaText::incrementCursor(bool)
                0x00000000c000cb14                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cb6e                VgaText::updateDiskUsage()
                0x00000000c000ccd4                VgaText::updateTitle()
                0x00000000c000cd1a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cd2a                VgaText::setTitleColour(VgaColour)
                0x00000000c000cd3a                VgaText::setTitle(char*)
                0x00000000c000cd60                VgaText::decrementCursor(bool)
                0x00000000c000cd88                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000ce84                VgaText::isShowingCursor()
                0x00000000c000ce90                VgaText::isBlinkDisabled()
                0x00000000c000ce9e                VgaText::setCursorHeight(int)
                0x00000000c000cebc                VgaText::getCursorHeight()
                0x00000000c000cec7                setActiveTerminal(VgaText*)
                0x00000000c000cf79                doTerminalCycle()
                0x00000000c000cf96                VgaText::doUpdate()
                0x00000000c000cfa8                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d168                VgaText::clearScreen()
                0x00000000c000d1cc                VgaText::putchar(char)
                0x00000000c000d2e6                VgaText::puts(char const*)
                0x00000000c000d30c                VgaText::putx(unsigned int)
                0x00000000c000d352                VgaText::VgaText(char const*)
                0x00000000c000d352                VgaText::VgaText(char const*)
                0x00000000c000d4e4                VgaText::receiveKey(unsigned char)
                0x00000000c000d5cc                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d620                newTerminal(char*)
 *fill*         0x00000000c000d645        0x1 
 .text          0x00000000c000d646      0x18f core/tss.32
                0x00000000c000d646                TSS::TSS()
                0x00000000c000d646                TSS::TSS()
                0x00000000c000d654                TSS::setESP(unsigned long)
                0x00000000c000d666                TSS::flush()
                0x00000000c000d686                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d7d5        0x1 
 .text          0x00000000c000d7d6      0x32f core/unixfile.32
                0x00000000c000d7d6                ReservedFilename::isAtty()
                0x00000000c000d7ec                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d87e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d914                UnixFile::getFileDescriptor()
                0x00000000c000d91c                UnixFile::UnixFile(int)
                0x00000000c000d91c                UnixFile::UnixFile(int)
                0x00000000c000d958                ReservedFilename::ReservedFilename(int)
                0x00000000c000d958                ReservedFilename::ReservedFilename(int)
                0x00000000c000d980                UnixFile::~UnixFile()
                0x00000000c000d980                UnixFile::~UnixFile()
                0x00000000c000da06                UnixFile::~UnixFile()
                0x00000000c000da2e                ReservedFilename::~ReservedFilename()
                0x00000000c000da2e                ReservedFilename::~ReservedFilename()
                0x00000000c000da52                ReservedFilename::~ReservedFilename()
                0x00000000c000da79                getFromFileDescriptor(int)
 *fill*         0x00000000c000db05        0x1 
 .text          0x00000000c000db06     0x1175 core/virtmgr.32
                0x00000000c000db06                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000db3b                Virt::getPageState(unsigned long)
                0x00000000c000db5f                Virt::allocateKernelVirtualPages(int)
                0x00000000c000dc70                Virt::virtualMemorySetup()
                0x00000000c000dcef                Virt::getAKernelVAS()
                0x00000000c000dcf5                Virt::setupPageSwapping(int)
                0x00000000c000de1a                VAS::VAS()
                0x00000000c000de1a                VAS::VAS()
                0x00000000c000de4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000de76                VAS::getPageTableEntry(unsigned long)
                0x00000000c000de95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000dfb8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000dfdc                VAS::virtualToPhysical(unsigned long)
                0x00000000c000dff4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e02a                VAS::~VAS()
                0x00000000c000e02a                VAS::~VAS()
                0x00000000c000e196                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e296                VAS::allocatePages(int, int)
                0x00000000c000e466                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e482                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e54c                VAS::VAS(VAS*)
                0x00000000c000e54c                VAS::VAS(VAS*)
                0x00000000c000e896                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000e984                VAS::VAS(bool)
                0x00000000c000e984                VAS::VAS(bool)
                0x00000000c000ebb4                mapVASFirstTime
 .text          0x00000000c000ec7b       0x93 coreobjs/c++.32
                0x00000000c000ec7b                __cxa_atexit
                0x00000000c000ec7e                __cxa_finalize
                0x00000000c000ec7f                __stack_chk_fail
                0x00000000c000ecdf                __cxa_pure_virtual
                0x00000000c000ecf0                operator new(unsigned long)
                0x00000000c000ecf5                operator new[](unsigned long)
                0x00000000c000ecfa                operator delete(void*)
                0x00000000c000ecff                operator delete(void*, unsigned long)
                0x00000000c000ed04                operator delete[](void*)
                0x00000000c000ed09                operator delete[](void*, unsigned long)
 .text          0x00000000c000ed0e      0x1ef dbg/kconsole.32
                0x00000000c000ed0e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ed6f                Dbg::logc(char)
                0x00000000c000ed86                Dbg::logs(char*)
                0x00000000c000eda3                Dbg::logWriteInt(unsigned int)
                0x00000000c000edc0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000eddf                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000eefd        0x1 
 .text          0x00000000c000eefe      0xb68 fs/vfs.32
                0x00000000c000eefe                File::read(unsigned long long, void*, int*)
                0x00000000c000ef56                File::write(unsigned long long, void*, int*)
                0x00000000c000efae                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f006                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f034                File::isAtty()
                0x00000000c000f038                Directory::isAtty()
                0x00000000c000f03c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f042                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f048                File::~File()
                0x00000000c000f048                File::~File()
                0x00000000c000f06c                File::~File()
                0x00000000c000f096                Directory::~Directory()
                0x00000000c000f096                Directory::~Directory()
                0x00000000c000f0ba                Directory::~Directory()
                0x00000000c000f0e4                Filesystem::Filesystem()
                0x00000000c000f0e4                Filesystem::Filesystem()
                0x00000000c000f108                Filesystem::~Filesystem()
                0x00000000c000f108                Filesystem::~Filesystem()
                0x00000000c000f116                Filesystem::~Filesystem()
                0x00000000c000f13a                initVFS()
                0x00000000c000f164                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f30e                File::File(char const*, Process*)
                0x00000000c000f30e                File::File(char const*, Process*)
                0x00000000c000f372                File::open(FileOpenMode)
                0x00000000c000f3d0                File::close()
                0x00000000c000f430                File::seek(unsigned long long)
                0x00000000c000f486                File::tell(unsigned long long*)
                0x00000000c000f4d6                File::rewind()
                0x00000000c000f4ea                File::unlink()
                0x00000000c000f536                File::rename(char const*)
                0x00000000c000f584                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f5e0                File::exists()
                0x00000000c000f61e                File::stat(unsigned long long*, bool*)
                0x00000000c000f67f                getcwd(Process*, char*, int)
                0x00000000c000f6a9                setcwd(Process*, char*)
                0x00000000c000f7d0                Directory::Directory(char const*, Process*)
                0x00000000c000f7d0                Directory::Directory(char const*, Process*)
                0x00000000c000f834                Directory::open()
                0x00000000c000f890                Directory::close()
                0x00000000c000f8f0                Directory::unlink()
                0x00000000c000f93c                Directory::rename(char const*)
                0x00000000c000f98a                Directory::exists()
                0x00000000c000f9c8                Directory::read(dirent*)
                0x00000000c000fa14                Directory::create()
                0x00000000c000fa60                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fa66       0x84 hal/bus.32
                0x00000000c000fa66                Bus::Bus(char const*)
                0x00000000c000fa66                Bus::Bus(char const*)
                0x00000000c000fa9c                Bus::~Bus()
                0x00000000c000fa9c                Bus::~Bus()
                0x00000000c000fac0                Bus::~Bus()
 .text          0x00000000c000faea      0x14e hal/buzzer.32
                0x00000000c000faea                Buzzer::Buzzer(char const*)
                0x00000000c000faea                Buzzer::Buzzer(char const*)
                0x00000000c000fb2e                Buzzer::~Buzzer()
                0x00000000c000fb2e                Buzzer::~Buzzer()
                0x00000000c000fb52                Buzzer::~Buzzer()
                0x00000000c000fb7c                Buzzer::stop()
                0x00000000c000fb8f                beepThread(void*)
                0x00000000c000fbca                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fc38      0x42f hal/clock.32
                0x00000000c000fc38                loadClockSettings()
                0x00000000c000fc52                Clock::Clock(char const*)
                0x00000000c000fc52                Clock::Clock(char const*)
                0x00000000c000fc88                Clock::~Clock()
                0x00000000c000fc88                Clock::~Clock()
                0x00000000c000fcac                Clock::~Clock()
                0x00000000c000fcd6                Clock::timeInSecondsLocal()
                0x00000000c000fd1e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fd77                datetimeToSeconds(datetime_t)
                0x00000000c000fe9e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fefe                secondsToDatetime(unsigned long long)
                0x00000000c0010042                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0010067        0x1 
 .text          0x00000000c0010068      0x504 hal/device.32
                0x00000000c0010068                Device::hibernate()
                0x00000000c001006a                Device::wake()
                0x00000000c001006c                Device::detect()
                0x00000000c001006e                Device::disableLegacy()
                0x00000000c0010070                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010072                DriverlessDevice::close(int, int, void*)
                0x00000000c0010076                DriverlessDevice::detect()
                0x00000000c0010078                DriverlessDevice::open(int, int, void*)
                0x00000000c001008c                Device::~Device()
                0x00000000c001008c                Device::~Device()
                0x00000000c001009a                Device::~Device()
                0x00000000c00100c2                Device::findAndLoadDriver()
                0x00000000c00100c4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00100ea                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001013e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001019c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00101ea                Device::addChild(Device*)
                0x00000000c001022e                Device::removeAllChildren()
                0x00000000c0010274                Device::hibernateAll()
                0x00000000c00102a4                Device::wakeAll()
                0x00000000c00102d4                Device::detectAll()
                0x00000000c0010304                Device::disableLegacyAll()
                0x00000000c0010334                Device::loadDriversForAll()
                0x00000000c0010360                Device::closeAll()
                0x00000000c0010396                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00103cc                Device::setName(char const*)
                0x00000000c00103da                Device::Device(char const*)
                0x00000000c00103da                Device::Device(char const*)
                0x00000000c00104cc                Device::getName()
                0x00000000c00104d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104fe                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010542                getDevicesOfType(DeviceType)
 .text          0x00000000c001056c       0x84 hal/diskctrl.32
                0x00000000c001056c                HardDiskController::HardDiskController(char const*)
                0x00000000c001056c                HardDiskController::HardDiskController(char const*)
                0x00000000c00105a2                HardDiskController::~HardDiskController()
                0x00000000c00105a2                HardDiskController::~HardDiskController()
                0x00000000c00105c6                HardDiskController::~HardDiskController()
 .text          0x00000000c00105f0       0xde hal/diskphys.32
                0x00000000c00105f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00105f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010658                PhysicalDisk::startCache()
                0x00000000c0010680                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010680                PhysicalDisk::~PhysicalDisk()
                0x00000000c00106a4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00106ce      0x128 hal/fpu.32
                0x00000000c00106ce                FPU::FPU(char const*)
                0x00000000c00106ce                FPU::FPU(char const*)
                0x00000000c0010704                FPU::~FPU()
                0x00000000c0010704                FPU::~FPU()
                0x00000000c0010728                FPU::~FPU()
                0x00000000c0010752                setupFPU()
 .text          0x00000000c00107f6      0xb89 hal/intctrl.32
                0x00000000c00107f6                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001082e                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010880                doubleFault(regs*, void*)
                0x00000000c001088e                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001092a                InterruptController::clearAllHandlers(int, bool)
                0x00000000c00109d2                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010a59                nmiHandler(regs*, void*)
                0x00000000c0010a67                int_handler
                0x00000000c0010b02                InterruptController::InterruptController(char const*)
                0x00000000c0010b02                InterruptController::InterruptController(char const*)
                0x00000000c0010ba8                InterruptController::~InterruptController()
                0x00000000c0010ba8                InterruptController::~InterruptController()
                0x00000000c0010bcc                InterruptController::~InterruptController()
                0x00000000c0010bf6                displayDebugInfo(regs*)
                0x00000000c0010fd8                gpFault(regs*, void*)
                0x00000000c0011011                pgFault(regs*, void*)
                0x00000000c0011028                otherISRHandler(regs*, void*)
                0x00000000c0011047                opcodeFault(regs*, void*)
                0x00000000c00110b1                displayProgramFault(char const*)
                0x00000000c00110da                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0011124                setupInterruptController()
 *fill*         0x00000000c001137f        0x1 
 .text          0x00000000c0011380      0x608 hal/keybrd.32
                0x00000000c0011380                startGUI(void*)
                0x00000000c00113f2                sendKeyToTerminal(unsigned char)
                0x00000000c001145e                sendKeyboardToken(KeyboardToken)
                0x00000000c0011839                clearInternalKeybuffer(VgaText*)
                0x00000000c001186e                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00118fe                Keyboard::Keyboard(char const*)
                0x00000000c00118fe                Keyboard::Keyboard(char const*)
                0x00000000c001193a                Keyboard::~Keyboard()
                0x00000000c001193a                Keyboard::~Keyboard()
                0x00000000c001195e                Keyboard::~Keyboard()
 .text          0x00000000c0011988      0x400 hal/logidisk.32
                0x00000000c0011988                LogicalDisk::close(int, int, void*)
                0x00000000c001198c                LogicalDisk::~LogicalDisk()
                0x00000000c001198c                LogicalDisk::~LogicalDisk()
                0x00000000c00119b0                LogicalDisk::~LogicalDisk()
                0x00000000c00119da                LogicalDisk::open(int, int, void*)
                0x00000000c00119ee                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011a26                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011a6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011a6c                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011b22                LogicalDisk::assignDriveLetter()
                0x00000000c0011bd8                LogicalDisk::mount()
                0x00000000c0011c4a                LogicalDisk::unmount()
                0x00000000c0011c5a                LogicalDisk::unassignDriveLetter()
                0x00000000c0011cb0                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011d1c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011d88       0x84 hal/mouse.32
                0x00000000c0011d88                Mouse::Mouse(char const*)
                0x00000000c0011d88                Mouse::Mouse(char const*)
                0x00000000c0011dbe                Mouse::~Mouse()
                0x00000000c0011dbe                Mouse::~Mouse()
                0x00000000c0011de2                Mouse::~Mouse()
 .text          0x00000000c0011e0c      0x339 hal/partition.32
                0x00000000c0011e0c                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011eb4                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012145        0x1 
 .text          0x00000000c0012146      0x2e7 hal/timer.32
                0x00000000c0012146                Timer::Timer(char const*)
                0x00000000c0012146                Timer::Timer(char const*)
                0x00000000c001217c                Timer::~Timer()
                0x00000000c001217c                Timer::~Timer()
                0x00000000c00121a0                Timer::~Timer()
                0x00000000c00121ca                Timer::read()
                0x00000000c00121d5                timerHandler(unsigned long long)
                0x00000000c001230c                setupTimer(int)
 *fill*         0x00000000c001242d        0x1 
 .text          0x00000000c001242e      0x2d1 hal/vcache.32
                0x00000000c001242e                VCache::VCache(PhysicalDisk*)
                0x00000000c001242e                VCache::VCache(PhysicalDisk*)
                0x00000000c001251e                VCache::writeWriteBuffer()
                0x00000000c001255a                VCache::~VCache()
                0x00000000c001255a                VCache::~VCache()
                0x00000000c001259a                VCache::~VCache()
                0x00000000c00125c2                VCache::write(unsigned long long, int, void*)
                0x00000000c00126a6                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00126ff        0x1 
 .text          0x00000000c0012700      0x26d hal/video.32
                0x00000000c0012700                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001274a                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00127c8                Video::clearScreen(unsigned int)
                0x00000000c00127fc                Video::putpixel(int, int, unsigned int)
                0x00000000c001280a                Video::Video(char const*)
                0x00000000c001280a                Video::Video(char const*)
                0x00000000c0012840                Video::~Video()
                0x00000000c0012840                Video::~Video()
                0x00000000c0012864                Video::~Video()
                0x00000000c001288e                Video::isMonochrome()
                0x00000000c001289a                Video::getWidth()
                0x00000000c00128a6                Video::getHeight()
                0x00000000c00128b2                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c001296d        0x1 
 .text          0x00000000c001296e      0xd28 hw/acpi.32
                0x00000000c001296e                ACPI::close(int, int, void*)
                0x00000000c0012a23                findRSDP()
                0x00000000c0012aad                loadACPITables(unsigned char*)
                0x00000000c0012cd4                findRSDT(unsigned char*)
                0x00000000c0012df2                findDataTable(unsigned char*, char*)
                0x00000000c0012e8e                scanMADT()
                0x00000000c0013222                ACPI::ACPI()
                0x00000000c0013222                ACPI::ACPI()
                0x00000000c0013282                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013364                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001346a                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013470                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00134b8                ACPI::open(int, int, void*)
                0x00000000c001367e                ACPI::sleep()
 .text          0x00000000c0013696     0x132c hw/cpu.32
                0x00000000c0013696                CPU::close(int, int, void*)
                0x00000000c0013699                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c001382d                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013adb                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013af7                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013b0f                AMD_K6_writeback(int, int, int)
                0x00000000c0013b82                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013c05                cpuidCheckEDX(unsigned int)
                0x00000000c0013c32                cpuidCheckECX(unsigned int)
                0x00000000c0013c5f                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013c8c                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013cb9                getCPUNumber()
                0x00000000c0013cbc                thisCPU()
                0x00000000c0013cd0                CPU::CPU()
                0x00000000c0013cd0                CPU::CPU()
                0x00000000c0013d5e                CPU::displayFeatures()
                0x00000000c0013d60                CPU::detectFeatures()
                0x00000000c0014752                CPU::setupSMEP()
                0x00000000c001476c                CPU::setupUMIP()
                0x00000000c0014784                CPU::setupTSC()
                0x00000000c001479c                CPU::setupLargePages()
                0x00000000c00147b4                CPU::setupPAT()
                0x00000000c00147f0                CPU::setupMTRR()
                0x00000000c00147f2                CPU::setupGlobalPages()
                0x00000000c0014808                CPU::allowUsermodeDataAccess()
                0x00000000c001481a                CPU::prohibitUsermodeDataAccess()
                0x00000000c001482c                CPU::setupSMAP()
                0x00000000c0014852                CPU::setupFeatures()
                0x00000000c00148f4                CPU::open(int, int, void*)
 .text          0x00000000c00149c2        0x0 hw/ports.32
 .text          0x00000000c00149c2      0x32c krnl/panic.32
                0x00000000c00149c2                Krnl::panic(char const*)
 .text          0x00000000c0014cee      0x503 reg/registry.32
                0x00000000c0014cee                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014e46                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0014fa5                Reg::getLine(char*, char*, char*)
                0x00000000c0014fdc                Reg::readInt(char*, char*, int*)
                0x00000000c00150c7                Reg::readString(char*, char*, char*, int)
                0x00000000c0015148                Reg::readBool(char*, char*, bool*)
                0x00000000c001516d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0015199                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00151c5                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00151f1       0x18 sys/sc_exit.32
                0x00000000c00151f1                Sys::exit(regs*)
 .text          0x00000000c0015209       0x95 sys/sc_loaddll.32
                0x00000000c0015209                Sys::loadDLL(regs*)
 .text          0x00000000c001529e       0x68 sys/sc_read.32
                0x00000000c001529e                Sys::read(regs*)
 .text          0x00000000c0015306       0x55 sys/sc_sbrk.32
                0x00000000c0015306                Sys::sbrk(regs*)
 .text          0x00000000c001535b       0x68 sys/sc_write.32
                0x00000000c001535b                Sys::write(regs*)
 .text          0x00000000c00153c3       0x1a sys/sc_yield.32
                0x00000000c00153c3                Sys::yield(regs*)
 .text          0x00000000c00153dd      0xdaa sys/syscalls.32
                0x00000000c00153dd                sysCallGetPID(regs*)
                0x00000000c00153e9                sysCallSeekDir(regs*)
                0x00000000c00153ee                sysCallTellDir(regs*)
                0x00000000c00153f3                sysCallVerify(regs*)
                0x00000000c00153fd                sysCallGetArgc(regs*)
                0x00000000c001540d                sysFormatDisk(regs*)
                0x00000000c0015477                sysSetDiskVolumeLabel(regs*)
                0x00000000c00154bd                sysGetDiskVolumeLabel(regs*)
                0x00000000c001550e                sysShutdown(regs*)
                0x00000000c001556c                sysCallGetCwd(regs*)
                0x00000000c001558b                sysCallSetCwd(regs*)
                0x00000000c00155a7                sysCallRealpath(regs*)
                0x00000000c00155ea                sysCallOpen(regs*)
                0x00000000c00156da                sysCallReadDir(regs*)
                0x00000000c0015749                sysCallIsATTY(regs*)
                0x00000000c001579c                sysCallSeek(regs*)
                0x00000000c00157ed                sysCallTell(regs*)
                0x00000000c0015839                sysCallSizeFromFilename(regs*)
                0x00000000c00158b2                sysCallSize(regs*)
                0x00000000c0015904                sysCallClose(regs*)
                0x00000000c0015952                sysCallOpenDir(regs*)
                0x00000000c00159bf                sysCallMakeDir(regs*)
                0x00000000c0015a18                sysCallCloseDir(regs*)
                0x00000000c0015a66                sysCallWait(regs*)
                0x00000000c0015a80                sysCallFork(regs*)
                0x00000000c0015a9c                sysCallExecve(regs*)
                0x00000000c0015af1                sysCallRmdir(regs*)
                0x00000000c0015b43                sysCallUnlink(regs*)
                0x00000000c0015b95                sysCallGetArgv(regs*)
                0x00000000c0015be1                sysCallTTYName(regs*)
                0x00000000c0015c5d                sysCallGetEnv(regs*)
                0x00000000c0015caf                sysCallUSleep(regs*)
                0x00000000c0015cd6                sysCallSpawn(regs*)
                0x00000000c0015d46                sysAppSettings(regs*)
                0x00000000c0015e65                sysSetFatAttrib(regs*)
                0x00000000c0015ec5                sysPanic(regs*)
                0x00000000c0015eeb                sysPipe(regs*)
                0x00000000c0015f30                sysGetUnixTime(regs*)
                0x00000000c0015f44                string_ends_with(char const*, char const*)
                0x00000000c0015f8c                setupSystemCalls()
                0x00000000c0016145                systemCall(regs*, void*)
 .text          0x00000000c0016187     0x1134 thr/elf.32
                0x00000000c0016187                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0016404                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001661a                Thr::runtimeReferenceHelper()
                0x00000000c001662d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001667c                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001693d                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00170bb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00170ed                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017124                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001713e                Thr::loadDLL(char const*, bool)
                0x00000000c0017291                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00172bb        0x1 
 .text          0x00000000c00172bc     0x1140 thr/prcssthr.32
                0x00000000c00172bc                changeTSS
                0x00000000c00172ea                Process::addArgs(char**)
                0x00000000c0017344                Process::Process(char const*, Process*, char**)
                0x00000000c0017344                Process::Process(char const*, Process*, char**)
                0x00000000c00174fc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00174fc                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001767f                disableIRQs()
                0x00000000c0017687                getIRQNestingLevel()
                0x00000000c001768d                enableIRQs()
                0x00000000c001769c                lockScheduler()
                0x00000000c001769e                unlockScheduler()
                0x00000000c00176a0                userModeEntryPoint(void*)
                0x00000000c00176c3                lockStuff()
                0x00000000c00176cf                taskStartupFunction
                0x00000000c00176d8                updateTimeUsed()
                0x00000000c0017736                switchToThread(ThreadControlBlock*)
                0x00000000c0017786                Semaphore::Semaphore(int)
                0x00000000c0017786                Semaphore::Semaphore(int)
                0x00000000c00177b4                Mutex::Mutex()
                0x00000000c00177b4                Mutex::Mutex()
                0x00000000c00177c6                Process::createThread(void (*)(void*), void*, int)
                0x00000000c00178aa                Process::createUserThread()
                0x00000000c00178c6                setupMultitasking(void (*)())
                0x00000000c00179d0                schedule()
                0x00000000c0017a55                unlockStuff()
                0x00000000c0017a8a                forkProcess(regs*)
                0x00000000c0017bf8                Semaphore::tryAcquire()
                0x00000000c0017c26                Semaphore::assertLocked(char const*)
                0x00000000c0017c59                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017c9b                blockTask(TaskState)
                0x00000000c0017cbc                waitTask(int, int*, int)
                0x00000000c0017cfe                nanoSleepUntil(unsigned long long)
                0x00000000c0017d55                nanoSleep(unsigned long long)
                0x00000000c0017d6a                sleep(unsigned long long)
                0x00000000c0017d88                Semaphore::acquire()
                0x00000000c0017df0                execveProcess(char const*, char* const*, char* const*)
                0x00000000c0017e7e                taskReturned
                0x00000000c0017eac                unblockTask(ThreadControlBlock*)
                0x00000000c0017f5b                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00181f8                cleanerTaskFunction(void*)
                0x00000000c0018288                terminateTask(int)
                0x00000000c0018310                Semaphore::release()
 .text          0x00000000c00183fc      0x8de vm86/vm8086.32
                0x00000000c00183fc                Vm::vm8086EntryPoint(void*)
                0x00000000c0018427                Vm::inbv(unsigned short)
                0x00000000c001842d                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018437                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018447                Vm::getSegment(unsigned int)
                0x00000000c001844f                Vm::getOffset(unsigned int)
                0x00000000c0018454                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018583                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c001860d                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c001861e                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018630                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018641                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018656                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001866c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018681                Vm::faultHandler(regs*)
 .text          0x00000000c0018cda     0x10ed fs/fat/vfslink.32
                0x00000000c0018cda                FAT::getName()
                0x00000000c0018ce0                FAT::tell(void*, unsigned long long*)
                0x00000000c0018d14                FAT::stat(void*, unsigned long long*)
                0x00000000c0018d48                FAT::~FAT()
                0x00000000c0018d48                FAT::~FAT()
                0x00000000c0018d6c                FAT::~FAT()
                0x00000000c0018d94                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018e32                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018eec                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00190d0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00192d6                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00193dc                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019436                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019490                FAT::close(void*)
                0x00000000c00194dc                FAT::closeDir(void*)
                0x00000000c0019528                FAT::seek(void*, unsigned long long)
                0x00000000c001957c                fatWrapperReadDisk
                0x00000000c00195c3                fatWrapperWriteDisk
                0x00000000c001960a                fatWrapperIoctl
                0x00000000c001970e                FAT::FAT()
                0x00000000c001970e                FAT::FAT()
                0x00000000c0019760                FAT::fixFilepath(char*)
                0x00000000c0019798                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00198c0                FAT::openDir(char const*, void**)
                0x00000000c0019966                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019a50                FAT::unlink(char const*)
                0x00000000c0019aca                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019c1e                FAT::rename(char const*, char const*)
                0x00000000c0019ce2                FAT::mkdir(char const*)
                0x00000000c0019d5c                FAT::exists(char const*)
 *fill*         0x00000000c0019dc7        0x1 
 .text          0x00000000c0019dc8      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019dc8                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019dce                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019dfe                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019e22                ISO9660::getName()
                0x00000000c0019e28                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019e4c                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e52                ISO9660::unlink(char const*)
                0x00000000c0019e58                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e5e                ISO9660::rename(char const*, char const*)
                0x00000000c0019e64                ISO9660::mkdir(char const*)
                0x00000000c0019e6a                ISO9660::close(void*)
                0x00000000c0019e8c                ISO9660::closeDir(void*)
                0x00000000c0019eae                ISO9660::~ISO9660()
                0x00000000c0019eae                ISO9660::~ISO9660()
                0x00000000c0019ed2                ISO9660::~ISO9660()
                0x00000000c0019ef9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019f3b                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019fa2                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019ff2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a236                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4c3                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a518                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a6eb                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a77a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a814                ISO9660::exists(char const*)
                0x00000000c001a838                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8cc                ISO9660::openDir(char const*, void**)
                0x00000000c001a984                ISO9660::ISO9660()
                0x00000000c001a984                ISO9660::ISO9660()
 *fill*         0x00000000c001a9a7        0x1 
 .text          0x00000000c001a9a8      0x244 hal/sound/sndchannel.32
                0x00000000c001a9a8                SoundChannel::~SoundChannel()
                0x00000000c001a9a8                SoundChannel::~SoundChannel()
                0x00000000c001a9c4                SoundChannel::setSpeed(float)
                0x00000000c001a9d0                SoundChannel::getSpeed()
                0x00000000c001a9d8                SoundChannel::setVolume(int)
                0x00000000c001a9f4                SoundChannel::getVolume()
                0x00000000c001a9fc                SoundChannel::pause()
                0x00000000c001aa06                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aa06                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aafc                SoundChannel::play()
                0x00000000c001ab06                SoundChannel::paused()
                0x00000000c001ab0e                SoundChannel::getSampleRate()
                0x00000000c001ab16                SoundChannel::getBits()
                0x00000000c001ab1e                SoundChannel::getBufferUsed()
                0x00000000c001ab26                SoundChannel::getBufferSize()
                0x00000000c001ab2e                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001aba0                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001abec      0x317 hal/sound/sndhw.32
                0x00000000c001abec                SoundDevice::SoundDevice(char const*)
                0x00000000c001abec                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac58                SoundDevice::~SoundDevice()
                0x00000000c001ac58                SoundDevice::~SoundDevice()
                0x00000000c001acd2                SoundDevice::~SoundDevice()
                0x00000000c001acfc                SoundDevice::getFreeChannelNum()
                0x00000000c001ad16                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001ad86                SoundDevice::removeChannel(int)
                0x00000000c001adb8                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001ae24                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001af03        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af03        0x1 
 .text          0x00000000c001af04      0x6e5 hw/bus/pci.32
                0x00000000c001af04                PCI::open(int, int, void*)
                0x00000000c001af18                PCI::close(int, int, void*)
                0x00000000c001af1c                PCI::PCI()
                0x00000000c001af1c                PCI::PCI()
                0x00000000c001af9c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001afe4                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b006                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b02a                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b06e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b092                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0b4                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0d6                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0fa                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b15a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b1c6                PCI::checkBus(unsigned char)
                0x00000000c001b1ea                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b35a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b52a                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b596                PCI::detect()
 *fill*         0x00000000c001b5e9        0x1 
 .text          0x00000000c001b5ea      0xc70 hw/diskctrl/ide.32
                0x00000000c001b5ea                IDE::close(int, int, void*)
                0x00000000c001b5ee                IDE::IDE()
                0x00000000c001b5ee                IDE::IDE()
                0x00000000c001b622                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b634                selectDrive(unsigned char, unsigned char)
                0x00000000c001b636                IDE::getBase(unsigned char)
                0x00000000c001b648                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b708                IDE::read(unsigned char, unsigned char)
                0x00000000c001b7b6                IDE::waitInterrupt(unsigned char)
                0x00000000c001b81c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b838                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b854                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b89a                IDE::open(int, int, void*)
                0x00000000c001bcaa                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bd76                IDE::detect()
                0x00000000c001c05e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1f4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c25a      0x62b hw/diskphys/ata.32
                0x00000000c001c25a                ATA::close(int, int, void*)
                0x00000000c001c27e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c280                ATA::ATA()
                0x00000000c001c280                ATA::ATA()
                0x00000000c001c2ae                ATA::flush(bool)
                0x00000000c001c2f8                ATA::readyForCommand()
                0x00000000c001c348                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c6c6                ATA::read(unsigned long long, int, void*)
                0x00000000c001c72e                ATA::write(unsigned long long, int, void*)
                0x00000000c001c796                ATA::detectCHS()
                0x00000000c001c7c0                ATA::open(int, int, void*)
 *fill*         0x00000000c001c885        0x1 
 .text          0x00000000c001c886      0x5b3 hw/diskphys/atapi.32
                0x00000000c001c886                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c88c                ATAPI::close(int, int, void*)
                0x00000000c001c8b0                ATAPI::ATAPI()
                0x00000000c001c8b0                ATAPI::ATAPI()
                0x00000000c001c8de                ATAPI::readyForCommand()
                0x00000000c001c92e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cbee                ATAPI::diskRemoved()
                0x00000000c001cc0a                ATAPI::eject()
                0x00000000c001cc50                ATAPI::diskInserted()
                0x00000000c001cc7e                ATAPI::detectMedia()
                0x00000000c001cd3a                ATAPI::open(int, int, void*)
                0x00000000c001cdba                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001ce39        0x1 
 .text          0x00000000c001ce3a       0x8e hw/fpu/avx.32
                0x00000000c001ce3a                AVX::open(int, int, void*)
                0x00000000c001ce4c                AVX::close(int, int, void*)
                0x00000000c001ce5e                AVX::available()
                0x00000000c001ce70                AVX::save(void*)
                0x00000000c001ce88                AVX::load(void*)
                0x00000000c001cea0                AVX::AVX()
                0x00000000c001cea0                AVX::AVX()
 .text          0x00000000c001cec8       0x90 hw/fpu/mmx.32
                0x00000000c001cec8                MMX::available()
                0x00000000c001cedc                MMX::open(int, int, void*)
                0x00000000c001ceee                MMX::close(int, int, void*)
                0x00000000c001cf00                MMX::save(void*)
                0x00000000c001cf18                MMX::load(void*)
                0x00000000c001cf30                MMX::MMX()
                0x00000000c001cf30                MMX::MMX()
 .text          0x00000000c001cf58       0x96 hw/fpu/sse.32
                0x00000000c001cf58                SSE::open(int, int, void*)
                0x00000000c001cf6a                SSE::close(int, int, void*)
                0x00000000c001cf7c                SSE::available()
                0x00000000c001cf96                SSE::save(void*)
                0x00000000c001cfae                SSE::load(void*)
                0x00000000c001cfc6                SSE::SSE()
                0x00000000c001cfc6                SSE::SSE()
 .text          0x00000000c001cfee       0x8e hw/fpu/x87.32
                0x00000000c001cfee                x87::open(int, int, void*)
                0x00000000c001d000                x87::close(int, int, void*)
                0x00000000c001d012                x87::available()
                0x00000000c001d024                x87::save(void*)
                0x00000000c001d03c                x87::load(void*)
                0x00000000c001d054                x87::x87()
                0x00000000c001d054                x87::x87()
 .text          0x00000000c001d07c      0x5f3 hw/intctrl/apic.32
                0x00000000c001d07c                APIC::disable()
                0x00000000c001d07e                APIC::close(int, int, void*)
                0x00000000c001d0a0                IOAPIC::close(int, int, void*)
                0x00000000c001d0a6                APIC::io_wait()
                0x00000000c001d0ac                APIC::getBase()
                0x00000000c001d0ee                APIC::eoi(unsigned char)
                0x00000000c001d11c                APIC::open(int, int, void*)
                0x00000000c001d1d6                IOAPIC::IOAPIC()
                0x00000000c001d1d6                IOAPIC::IOAPIC()
                0x00000000c001d1fe                APIC::APIC()
                0x00000000c001d1fe                APIC::APIC()
                0x00000000c001d2ce                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d300                IOAPIC::read(int)
                0x00000000c001d328                IOAPIC::open(int, int, void*)
                0x00000000c001d41e                IOAPIC::write(int, int)
                0x00000000c001d44a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d504                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d66f        0x1 
 .text          0x00000000c001d670      0x3d3 hw/intctrl/pic.32
                0x00000000c001d670                PIC::disable()
                0x00000000c001d69e                PIC::close(int, int, void*)
                0x00000000c001d6c0                PIC::PIC()
                0x00000000c001d6c0                PIC::PIC()
                0x00000000c001d796                PIC::ioWait()
                0x00000000c001d79c                PIC::getIRQReg(int)
                0x00000000c001d806                PIC::eoi(unsigned char)
                0x00000000c001d898                PIC::remap()
                0x00000000c001da04                PIC::open(int, int, void*)
 *fill*         0x00000000c001da43        0x1 
 .text          0x00000000c001da44      0x252 hw/timer/apictimer.32
                0x00000000c001da44                APICTimer::close(int, int, void*)
                0x00000000c001da4a                apicTimerHandler(regs*, void*)
                0x00000000c001da78                APICTimer::write(int)
                0x00000000c001db76                APICTimer::open(int, int, void*)
                0x00000000c001dc6e                APICTimer::APICTimer()
                0x00000000c001dc6e                APICTimer::APICTimer()
 .text          0x00000000c001dc96      0x1a7 hw/timer/pit.32
                0x00000000c001dc96                PIT::write(int)
                0x00000000c001dd14                pitHandler(regs*, void*)
                0x00000000c001dd40                PIT::open(int, int, void*)
                0x00000000c001dd8e                PIT::close(int, int, void*)
                0x00000000c001ddbe                PIT::PIT()
                0x00000000c001ddbe                PIT::PIT()
 *fill*         0x00000000c001de3d        0x3 
 .text          0x00000000c001de40        0xa hw/fpu/x86/avx.32
                0x00000000c001de40                avxDetect
                0x00000000c001de46                avxSave
                0x00000000c001de47                avxLoad
                0x00000000c001de48                avxInit
                0x00000000c001de49                avxClose
 *fill*         0x00000000c001de4a        0x6 
 .text          0x00000000c001de50       0x38 hw/fpu/x86/sse.32
                0x00000000c001de50                sseDetect
                0x00000000c001de6b                sseSave
                0x00000000c001de71                sseLoad
                0x00000000c001de77                sseInit
                0x00000000c001de87                sseClose
 *fill*         0x00000000c001de88        0x8 
 .text          0x00000000c001de90       0x47 hw/fpu/x86/x87.32
                0x00000000c001de96                x87Detect
                0x00000000c001deb1                x87Save
                0x00000000c001deb7                x87Load
                0x00000000c001debc                x87Init
                0x00000000c001ded6                x87Close
 *fill*         0x00000000c001ded7        0x1 
 .text          0x00000000c001ded8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001defd        0x0 crtn.32
 *fill*         0x00000000c001defd        0x3 
 .text          0x00000000c001df00      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001df00                __divdi3
 *fill*         0x00000000c001e04b        0x1 
 .text          0x00000000c001e04c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e04c                __moddi3
 *fill*         0x00000000c001e1ca        0x2 
 .text          0x00000000c001e1cc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e1cc                __udivdi3
 *fill*         0x00000000c001e2cb        0x1 
 .text          0x00000000c001e2cc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e2cc                __umoddi3
 *fill*         0x00000000c001e3e6        0xa 
 .text          0x00000000c001e3f0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e3f0                fabs
 *fill*         0x00000000c001e40e        0x2 
 .text          0x00000000c001e410        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e410                lrint
 .text          0x00000000c001e41c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e41c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e428        0x0
 .iplt          0x00000000c001e428        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e428        0xf
 .init          0x00000000c001e428        0x3 crti.32
                0x00000000c001e428                _init
 .init          0x00000000c001e42b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e430        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e435        0x2 crtn.32

.fini           0x00000000c001e437        0xa
 .fini          0x00000000c001e437        0x3 crti.32
                0x00000000c001e437                _fini
 .fini          0x00000000c001e43a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e43f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e442       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e442       0x23 core/computer.32
                0x00000000c001e442                Computer::~Computer()
                0x00000000c001e442                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e466       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e466       0x2a core/computer.32
                0x00000000c001e466                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e490       0x15
 .text._Z10idleCommonv
                0x00000000c001e490       0x15 core/idle.32
                0x00000000c001e490                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e4a5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e4a5       0x12 core/kheap.32
                0x00000000c001e4a5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e4b7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e4b7        0x9 core/kheap.32
                0x00000000c001e4b7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e4c0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e4c0        0x2 core/unixfile.32
                0x00000000c001e4c0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e4c0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e4c2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e4c2       0x58 core/unixfile.32
                0x00000000c001e4c2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e4c2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e51a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e51a       0xd3 core/unixfile.32
                0x00000000c001e51a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e5ee        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e5ee        0x7 core/unixfile.32
                0x00000000c001e5ee                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e5f6       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e5f6       0xa1 core/unixfile.32
                0x00000000c001e5f6                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e698        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e698        0x8 core/unixfile.32
                0x00000000c001e698                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e6a0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e6a0       0x1a hal/device.32
                0x00000000c001e6a0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e6a0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e6ba       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e6ba       0x2a hal/device.32
                0x00000000c001e6ba                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e6e4       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e6e4       0xdc hal/device.32
                0x00000000c001e6e4                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e7c0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e7c0       0x58 hal/device.32
                0x00000000c001e7c0                LinkedList<Device>::LinkedList()
                0x00000000c001e7c0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001e818       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001e818       0x12 hal/intctrl.32
                0x00000000c001e818                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001e82a       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001e82a       0x12 hal/intctrl.32
                0x00000000c001e82a                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001e83c       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001e83c       0x12 hal/intctrl.32
                0x00000000c001e83c                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001e84e       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001e84e       0x12 hal/intctrl.32
                0x00000000c001e84e                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001e860       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001e860       0x12 hal/intctrl.32
                0x00000000c001e860                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001e872       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001e872       0x12 hal/intctrl.32
                0x00000000c001e872                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e884        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e884        0x7 hal/timer.32
                0x00000000c001e884                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e88c       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e88c       0x1c hal/timer.32
                0x00000000c001e88c                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e8a8       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e8a8       0xae hal/timer.32
                0x00000000c001e8a8                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e956       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e956       0xd3 hal/timer.32
                0x00000000c001e956                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ea2a       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ea2a       0x23 hw/acpi.32
                0x00000000c001ea2a                ACPI::~ACPI()
                0x00000000c001ea2a                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ea4e       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ea4e       0x2a hw/acpi.32
                0x00000000c001ea4e                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001ea78       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ea78       0x23 hw/cpu.32
                0x00000000c001ea78                CPU::~CPU()
                0x00000000c001ea78                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ea9c       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ea9c       0x2a hw/cpu.32
                0x00000000c001ea9c                CPU::~CPU()

.text._ZN3CPU7readCR0Ev
                0x00000000c001eac6       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001eac6       0x12 hw/cpu.32
                0x00000000c001eac6                CPU::readCR0()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ead8       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ead8       0x12 hw/cpu.32
                0x00000000c001ead8                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001eaea        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001eaea        0x9 hw/cpu.32
                0x00000000c001eaea                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001eaf3        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001eaf3        0x9 hw/cpu.32
                0x00000000c001eaf3                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001eafc       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001eafc       0x12 krnl/panic.32
                0x00000000c001eafc                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eb0e        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001eb0e        0x2 thr/prcssthr.32
                0x00000000c001eb0e                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001eb0e                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eb10       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001eb10       0x3e thr/prcssthr.32
                0x00000000c001eb10                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001eb10                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eb4e       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001eb4e       0x58 thr/prcssthr.32
                0x00000000c001eb4e                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001eb4e                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001eba6        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001eba6        0x8 thr/prcssthr.32
                0x00000000c001eba6                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ebae       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ebae       0x23 hw/bus/pci.32
                0x00000000c001ebae                PCI::~PCI()
                0x00000000c001ebae                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ebd2       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ebd2       0x2a hw/bus/pci.32
                0x00000000c001ebd2                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ebfc       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ebfc       0x23 hw/diskctrl/ide.32
                0x00000000c001ebfc                IDE::~IDE()
                0x00000000c001ebfc                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ec20       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ec20       0x2a hw/diskctrl/ide.32
                0x00000000c001ec20                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001ec4a       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ec4a       0x23 hw/diskphys/ata.32
                0x00000000c001ec4a                ATA::~ATA()
                0x00000000c001ec4a                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ec6e       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ec6e       0x2a hw/diskphys/ata.32
                0x00000000c001ec6e                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ec98       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ec98       0x23 hw/diskphys/atapi.32
                0x00000000c001ec98                ATAPI::~ATAPI()
                0x00000000c001ec98                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ecbc       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ecbc       0x2a hw/diskphys/atapi.32
                0x00000000c001ecbc                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001ece6       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001ece6       0x23 hw/fpu/avx.32
                0x00000000c001ece6                AVX::~AVX()
                0x00000000c001ece6                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ed0a       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ed0a       0x2a hw/fpu/avx.32
                0x00000000c001ed0a                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ed34       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ed34       0x23 hw/fpu/mmx.32
                0x00000000c001ed34                MMX::~MMX()
                0x00000000c001ed34                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ed58       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ed58       0x2a hw/fpu/mmx.32
                0x00000000c001ed58                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ed82       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ed82       0x23 hw/fpu/sse.32
                0x00000000c001ed82                SSE::~SSE()
                0x00000000c001ed82                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001eda6       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001eda6       0x2a hw/fpu/sse.32
                0x00000000c001eda6                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001edd0       0x23
 .text._ZN3x87D2Ev
                0x00000000c001edd0       0x23 hw/fpu/x87.32
                0x00000000c001edd0                x87::~x87()
                0x00000000c001edd0                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001edf4       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001edf4       0x2a hw/fpu/x87.32
                0x00000000c001edf4                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001ee1e       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001ee1e       0x23 hw/intctrl/apic.32
                0x00000000c001ee1e                IOAPIC::~IOAPIC()
                0x00000000c001ee1e                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001ee42       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001ee42       0x2a hw/intctrl/apic.32
                0x00000000c001ee42                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001ee6c       0x23
 .text._ZN4APICD2Ev
                0x00000000c001ee6c       0x23 hw/intctrl/apic.32
                0x00000000c001ee6c                APIC::~APIC()
                0x00000000c001ee6c                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001ee90       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001ee90       0x2a hw/intctrl/apic.32
                0x00000000c001ee90                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001eeba       0x23
 .text._ZN3PICD2Ev
                0x00000000c001eeba       0x23 hw/intctrl/pic.32
                0x00000000c001eeba                PIC::~PIC()
                0x00000000c001eeba                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001eede       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001eede       0x2a hw/intctrl/pic.32
                0x00000000c001eede                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ef08       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ef08       0x23 hw/timer/apictimer.32
                0x00000000c001ef08                APICTimer::~APICTimer()
                0x00000000c001ef08                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ef2c       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ef2c       0x2a hw/timer/apictimer.32
                0x00000000c001ef2c                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ef56       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ef56       0x23 hw/timer/pit.32
                0x00000000c001ef56                PIT::~PIT()
                0x00000000c001ef56                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ef7a       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ef7a       0x2a hw/timer/pit.32
                0x00000000c001ef7a                PIT::~PIT()

.rodata         0x00000000c001efa4     0x33a8
                0x00000000c001efa4                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001efa4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001efa8        0x4 core/unixfile.32
 .ctors         0x00000000c001efac        0x4 thr/prcssthr.32
 .ctors         0x00000000c001efb0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001efb4                end_ctors = .
                0x00000000c001efb4                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001efb4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001efb8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001efb8                __DTOR_END__
                0x00000000c001efbc                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001efbc        0x4 
 .rodata        0x00000000c001efc0      0x101 acpica/utclib.32
                0x00000000c001efc0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f0c1        0x3 
 .rodata        0x00000000c001f0c4       0x18 core/malloc.32
 *fill*         0x00000000c001f0dc        0x4 
 .rodata        0x00000000c001f0e0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f200       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f256        0xa 
 .rodata        0x00000000c001f260      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f660       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f716        0x2 
 .rodata.str1.4
                0x00000000c001f718      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001fabd        0x3 
 .rodata        0x00000000c001fac0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001fb20       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001fb40       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001fb54       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001fb96        0x2 
 .rodata.cst8   0x00000000c001fb98        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001fba0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001fc0c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fcd0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001fd1a        0x6 
 .rodata.cst8   0x00000000c001fd20        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001fd28        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fd34       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001fd7c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001fd7c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c001fdef        0x1 
 .rodata._ZTV8Computer
                0x00000000c001fdf0       0x2c core/computer.32
                0x00000000c001fdf0                vtable for Computer
 .rodata.str1.1
                0x00000000c001fe1c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c001fe38       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c001fe68        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c001fe74       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c001fe8f       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c001fedd       0x39 core/pipe.32
 *fill*         0x00000000c001ff16        0x2 
 .rodata._ZTV4Pipe
                0x00000000c001ff18       0x1c core/pipe.32
                0x00000000c001ff18                vtable for Pipe
 .rodata.str1.1
                0x00000000c001ff34       0x9d core/terminal.32
 *fill*         0x00000000c001ffd1        0x3 
 .rodata._ZTV7VgaText
                0x00000000c001ffd4       0x1c core/terminal.32
                0x00000000c001ffd4                vtable for VgaText
 .rodata        0x00000000c001fff0       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002000e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020028       0x19 core/unixfile.32
 *fill*         0x00000000c0020041        0x3 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020044       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020066       0x15 core/unixfile.32
 *fill*         0x00000000c002007b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002007c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00200c7        0x8 core/unixfile.32
 *fill*         0x00000000c00200cf        0x1 
 .rodata.str1.4
                0x00000000c00200d0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00200f0       0x1c core/unixfile.32
                0x00000000c00200f0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002010c       0x1c core/unixfile.32
                0x00000000c002010c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020128      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c00202d3      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020457       0x33 coreobjs/c++.32
 *fill*         0x00000000c002048a        0x2 
 .rodata.str1.4
                0x00000000c002048c       0x3f dbg/kconsole.32
 *fill*         0x00000000c00204cb        0x1 
 .rodata        0x00000000c00204cc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002061c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002061c       0x64 fs/vfs.32
                0x00000000c002061c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020680       0x1c fs/vfs.32
                0x00000000c0020680                vtable for File
 .rodata._ZTV9Directory
                0x00000000c002069c       0x1c fs/vfs.32
                0x00000000c002069c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00206b8       0x2c hal/bus.32
                0x00000000c00206b8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00206e4       0x30 hal/buzzer.32
                0x00000000c00206e4                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020714       0x3c hal/clock.32
                0x00000000c0020714                vtable for Clock
 *fill*         0x00000000c0020750       0x10 
 .rodata        0x00000000c0020760       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020790       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00207ae       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00207ae       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00207ae       0x19 hal/device.32
 *fill*         0x00000000c00207ae        0x2 
 .rodata._ZTV6Device
                0x00000000c00207b0       0x2c hal/device.32
                0x00000000c00207b0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00207dc       0x2c hal/device.32
                0x00000000c00207dc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020808       0x2c hal/diskctrl.32
                0x00000000c0020808                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020834       0x34 hal/diskphys.32
                0x00000000c0020834                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020868        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0020870       0x38 hal/fpu.32
                0x00000000c0020870                vtable for FPU
 .rodata.str1.4
                0x00000000c00208a8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c00209d8      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0020b45        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0020b48       0x48 hal/intctrl.32
                0x00000000c0020b48                vtable for InterruptController
 .rodata        0x00000000c0020b90       0x4e hal/keybrd.32
 *fill*         0x00000000c0020bde        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0020be0       0x34 hal/keybrd.32
                0x00000000c0020be0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020c14       0x7a hal/logidisk.32
 *fill*         0x00000000c0020c8e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0020c90       0x2c hal/logidisk.32
                0x00000000c0020c90                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020cbc       0x2c hal/mouse.32
                0x00000000c0020cbc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0020ce8        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020cf3       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020cf3        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020cf3       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020cf3       0x15 hal/timer.32
 *fill*         0x00000000c0020cf3        0x1 
 .rodata._ZTV5Timer
                0x00000000c0020cf4       0x30 hal/timer.32
                0x00000000c0020cf4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020d24       0x10 hal/vcache.32
                0x00000000c0020d24                vtable for VCache
 .rodata.str1.1
                0x00000000c0020d34        0xf hal/video.32
 *fill*         0x00000000c0020d43        0x1 
 .rodata._ZTV5Video
                0x00000000c0020d44       0x40 hal/video.32
                0x00000000c0020d44                vtable for Video
 .rodata.str1.1
                0x00000000c0020d84       0xd1 hw/acpi.32
 *fill*         0x00000000c0020e55        0x3 
 .rodata.str1.4
                0x00000000c0020e58       0xe5 hw/acpi.32
 *fill*         0x00000000c0020f3d        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0020f40       0x2c hw/acpi.32
                0x00000000c0020f40                vtable for ACPI
 .rodata.str1.1
                0x00000000c0020f6c      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c0021190       0x2c hw/cpu.32
                0x00000000c0021190                vtable for CPU
 .rodata.str1.1
                0x00000000c00211bc       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021271        0x3 
 .rodata.str1.4
                0x00000000c0021274      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c0021386       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00213cb       0x5d sys/syscalls.32
 .rodata.str1.4
                0x00000000c0021428       0x4c sys/syscalls.32
 .rodata.str1.1
                0x00000000c0021474      0x1ea thr/elf.32
                                        0x1ec (size before relaxing)
 .rodata.str1.1
                0x00000000c002165e       0x37 thr/prcssthr.32
 *fill*         0x00000000c0021695        0x3 
 .rodata.str1.4
                0x00000000c0021698      0x2b4 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c002194c       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002194c       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002194c       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002194c       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002194c        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c002194c       0x9b vm86/vm8086.32
 *fill*         0x00000000c00219e7        0x1 
 .rodata        0x00000000c00219e8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021a18       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0021a6b        0x1 
 .rodata.str1.4
                0x00000000c0021a6c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0021a94       0x64 fs/fat/vfslink.32
                0x00000000c0021a94                vtable for FAT
 .rodata.str1.1
                0x00000000c0021af8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0021b41        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0021b44       0x64 fs/iso9660/vfslink.32
                0x00000000c0021b44                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021ba8       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0021bc2        0x2 
 .rodata.cst4   0x00000000c0021bc4        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0021bc8       0x38 hal/sound/sndhw.32
                0x00000000c0021bc8                vtable for SoundDevice
 .rodata.cst4   0x00000000c0021c00       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0021c10       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021cb4       0x2c hw/bus/pci.32
                0x00000000c0021cb4                vtable for PCI
 .rodata.str1.1
                0x00000000c0021ce0      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0021f16        0x2 
 .rodata._ZTV3IDE
                0x00000000c0021f18       0x2c hw/diskctrl/ide.32
                0x00000000c0021f18                vtable for IDE
 .rodata.str1.1
                0x00000000c0021f44       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0021f65        0x3 
 .rodata._ZTV3ATA
                0x00000000c0021f68       0x34 hw/diskphys/ata.32
                0x00000000c0021f68                vtable for ATA
 .rodata.str1.1
                0x00000000c0021f9c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0021fd4       0x34 hw/diskphys/atapi.32
                0x00000000c0021fd4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022008        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0022010       0x38 hw/fpu/avx.32
                0x00000000c0022010                vtable for AVX
 .rodata.str1.1
                0x00000000c0022048        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022050       0x38 hw/fpu/mmx.32
                0x00000000c0022050                vtable for MMX
 .rodata.str1.1
                0x00000000c0022088        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022090       0x38 hw/fpu/sse.32
                0x00000000c0022090                vtable for SSE
 .rodata.str1.1
                0x00000000c00220c8        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c00220d0       0x38 hw/fpu/x87.32
                0x00000000c00220d0                vtable for x87
 .rodata        0x00000000c0022108       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c00221e0       0x48 hw/intctrl/apic.32
                0x00000000c00221e0                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0022228       0x2c hw/intctrl/apic.32
                0x00000000c0022228                vtable for IOAPIC
 .rodata        0x00000000c0022254       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0022276        0x2 
 .rodata._ZTV3PIC
                0x00000000c0022278       0x48 hw/intctrl/pic.32
                0x00000000c0022278                vtable for PIC
 .rodata.str1.1
                0x00000000c00222c0        0xb hw/timer/apictimer.32
 *fill*         0x00000000c00222cb        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00222cc       0x30 hw/timer/apictimer.32
                0x00000000c00222cc                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00222fc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022319        0x3 
 .rodata._ZTV3PIT
                0x00000000c002231c       0x30 hw/timer/pit.32
                0x00000000c002231c                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c002234c      0x5fd
 *(.data)
 .data          0x00000000c002234c        0x0 crti.32
 .data          0x00000000c002234c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c002234c                __dso_handle
 .data          0x00000000c0022350        0x0 acpica/utclib.32
 .data          0x00000000c0022350        0x0 core/malloc.32
 .data          0x00000000c0022350        0x0 libk/string.32
 .data          0x00000000c0022350        0x0 fs/fat/diskio.32
 .data          0x00000000c0022350        0x0 fs/fat/ff.32
 .data          0x00000000c0022350        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022350        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022350        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022350        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022350        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022350        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022350        0x0 core/computer.32
 .data          0x00000000c0022350        0x0 core/gdt.32
 .data          0x00000000c0022350        0x0 core/idle.32
 .data          0x00000000c0022350        0x0 core/idt.32
 .data          0x00000000c0022350        0x4 core/kheap.32
 .data          0x00000000c0022354        0x0 core/main.32
 .data          0x00000000c0022354        0x4 core/physmgr.32
                0x00000000c0022354                Phys::bitmap
 .data          0x00000000c0022358        0x0 core/pipe.32
 *fill*         0x00000000c0022358        0x8 
 .data          0x00000000c0022360       0x60 core/terminal.32
                0x00000000c0022360                VgaText::hiddenOut
                0x00000000c0022380                ansiToVGAMappings
 .data          0x00000000c00223c0        0x0 core/tss.32
 .data          0x00000000c00223c0        0x4 core/unixfile.32
                0x00000000c00223c0                UnixFile::nextFd
 .data          0x00000000c00223c4        0x8 core/virtmgr.32
                0x00000000c00223c4                Virt::pageAllocPtr
                0x00000000c00223c8                Virt::bitmap
 .data          0x00000000c00223cc        0x4 coreobjs/c++.32
                0x00000000c00223cc                __stack_chk_guard
 .data          0x00000000c00223d0        0x0 dbg/kconsole.32
 .data          0x00000000c00223d0        0x0 fs/vfs.32
 .data          0x00000000c00223d0        0x0 hal/bus.32
 .data          0x00000000c00223d0        0x0 hal/buzzer.32
 .data          0x00000000c00223d0        0x0 hal/clock.32
 .data          0x00000000c00223d0        0x0 hal/device.32
 .data          0x00000000c00223d0        0x0 hal/diskctrl.32
 .data          0x00000000c00223d0        0x0 hal/diskphys.32
 .data          0x00000000c00223d0        0x0 hal/fpu.32
 *fill*         0x00000000c00223d0       0x10 
 .data          0x00000000c00223e0      0x2a0 hal/intctrl.32
                0x00000000c00223e0                exceptionNames
 .data          0x00000000c0022680        0x0 hal/keybrd.32
 .data          0x00000000c0022680        0x0 hal/logidisk.32
 .data          0x00000000c0022680        0x0 hal/mouse.32
 .data          0x00000000c0022680        0x0 hal/partition.32
 .data          0x00000000c0022680        0x0 hal/timer.32
 .data          0x00000000c0022680        0x0 hal/vcache.32
 .data          0x00000000c0022680        0x0 hal/video.32
 .data          0x00000000c0022680       0x10 hw/acpi.32
                0x00000000c0022680                legacyIRQRemaps
 *fill*         0x00000000c0022690       0x10 
 .data          0x00000000c00226a0      0x2a4 hw/cpu.32
                0x00000000c00226a0                cpuNameList
                0x00000000c0022940                lastCode
 .data          0x00000000c0022944        0x0 hw/ports.32
 .data          0x00000000c0022944        0x0 krnl/panic.32
 .data          0x00000000c0022944        0x0 reg/registry.32
 .data          0x00000000c0022944        0x0 sys/sc_exit.32
 .data          0x00000000c0022944        0x0 sys/sc_loaddll.32
 .data          0x00000000c0022944        0x0 sys/sc_read.32
 .data          0x00000000c0022944        0x0 sys/sc_sbrk.32
 .data          0x00000000c0022944        0x0 sys/sc_write.32
 .data          0x00000000c0022944        0x0 sys/sc_yield.32
 .data          0x00000000c0022944        0x0 sys/syscalls.32
 .data          0x00000000c0022944        0x0 thr/elf.32
 .data          0x00000000c0022944        0x4 thr/prcssthr.32
                0x00000000c0022944                nextPID
 .data          0x00000000c0022948        0x0 vm86/vm8086.32
 .data          0x00000000c0022948        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022948        0x1 fs/iso9660/vfslink.32
                0x00000000c0022948                recentDriveletter
 .data          0x00000000c0022949        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022949        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022949        0x0 hw/bus/isa.32
 .data          0x00000000c0022949        0x0 hw/bus/pci.32
 .data          0x00000000c0022949        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022949        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022949        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022949        0x0 hw/fpu/avx.32
 .data          0x00000000c0022949        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022949        0x0 hw/fpu/sse.32
 .data          0x00000000c0022949        0x0 hw/fpu/x87.32
 .data          0x00000000c0022949        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022949        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022949        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022949        0x0 hw/timer/pit.32
 .data          0x00000000c0022949        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022949        0x0 crtn.32
 .data          0x00000000c0022949        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022949        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022949        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022949        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022949        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022949        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022949        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002294c        0x0
 .got           0x00000000c002294c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002294c        0x0
 .got.plt       0x00000000c002294c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002294c        0x0
 .igot.plt      0x00000000c002294c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002294c        0x0
 .tm_clone_table
                0x00000000c002294c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002294c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022949      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022949        0x3 
 .eh_frame      0x00000000c002294c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002294c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002294c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c00229a4       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00229e4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0022a50       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022ad4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0022aec        0x0
 .rel.got       0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0022aec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0022aec     0x21bc
                0x00000000c0022aec                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0022aec        0x0 crti.32
 .bss           0x00000000c0022aec       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0022b0c        0x4 acpica/utclib.32
 *fill*         0x00000000c0022b10       0x10 
 .bss           0x00000000c0022b20      0x378 core/malloc.32
 .bss           0x00000000c0022e98        0x0 libk/string.32
 .bss           0x00000000c0022e98        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0022e98        0x8 
 .bss           0x00000000c0022ea0       0x88 fs/fat/ff.32
 .bss           0x00000000c0022f28        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0022f28        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0022f28        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0022f28        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0022f28        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0022f28        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0022f28        0x6 core/computer.32
                0x00000000c0022f28                computer
                0x00000000c0022f2c                preemptionOn
                0x00000000c0022f2d                schedulingOn
 *fill*         0x00000000c0022f2e        0x2 
 .bss           0x00000000c0022f30        0x6 core/gdt.32
                0x00000000c0022f30                gdtDescr
 .bss           0x00000000c0022f36        0x0 core/idle.32
 *fill*         0x00000000c0022f36        0x2 
 .bss           0x00000000c0022f38        0x6 core/idt.32
                0x00000000c0022f38                idtDescr
 .bss           0x00000000c0022f3e        0x0 core/kheap.32
 *fill*         0x00000000c0022f3e        0x2 
 .bss           0x00000000c0022f40        0x4 core/main.32
                0x00000000c0022f40                sysBootSettings
 *fill*         0x00000000c0022f44       0x1c 
 .bss           0x00000000c0022f60       0x50 core/physmgr.32
                0x00000000c0022f60                Phys::currentPagePointer
                0x00000000c0022f64                Phys::highestMem
                0x00000000c0022f68                Phys::oldPercent
                0x00000000c0022f6c                Phys::usedPages
                0x00000000c0022f70                Phys::usablePages
                0x00000000c0022f80                Phys::dmaUsage
 .bss           0x00000000c0022fb0        0x0 core/pipe.32
 *fill*         0x00000000c0022fb0       0x10 
 .bss           0x00000000c0022fc0       0x29 core/terminal.32
                0x00000000c0022fc0                textModeImplementation
                0x00000000c0022fe0                terminalCycle
                0x00000000c0022fe4                activeTerminal
                0x00000000c0022fe8                VgaText::graphicMode
 *fill*         0x00000000c0022fe9        0x1 
 .bss           0x00000000c0022fea        0x2 core/tss.32
                0x00000000c0022fea                doubleFaultSelector
 .bss           0x00000000c0022fec       0x10 core/unixfile.32
                0x00000000c0022fec                initialFilesAdded
                0x00000000c0022ff0                unixFileLinkedList
 .bss           0x00000000c0022ffc        0x4 core/virtmgr.32
                0x00000000c0022ffc                firstVAS
 .bss           0x00000000c0023000        0x0 coreobjs/c++.32
 .bss           0x00000000c0023000        0x0 dbg/kconsole.32
 .bss           0x00000000c0023000        0x4 fs/vfs.32
                0x00000000c0023000                installedFilesystems
 .bss           0x00000000c0023004        0x0 hal/bus.32
 .bss           0x00000000c0023004        0x4 hal/buzzer.32
                0x00000000c0023004                systemBuzzer
 .bss           0x00000000c0023008        0x8 hal/clock.32
                0x00000000c0023008                dstOn
                0x00000000c0023009                timezoneHalfHourOffset
                0x00000000c002300c                timezoneHourOffset
 .bss           0x00000000c0023010        0x0 hal/device.32
 .bss           0x00000000c0023010        0x0 hal/diskctrl.32
 .bss           0x00000000c0023010        0x0 hal/diskphys.32
 .bss           0x00000000c0023010        0x0 hal/fpu.32
 .bss           0x00000000c0023010       0x1c hal/intctrl.32
                0x00000000c0023010                pf5
                0x00000000c0023014                pf4
                0x00000000c0023018                pf3
                0x00000000c002301c                pf2
                0x00000000c0023020                pf1
                0x00000000c0023024                pf0
                0x00000000c0023028                gpFaultIntercept
 *fill*         0x00000000c002302c       0x14 
 .bss           0x00000000c0023040      0x429 hal/keybrd.32
                0x00000000c0023040                keyboardWaitingTaskList
                0x00000000c0023044                keyboardSetupYet
                0x00000000c0023060                keystates
 *fill*         0x00000000c0023469       0x17 
 .bss           0x00000000c0023480       0x88 hal/logidisk.32
                0x00000000c0023480                diskAssignments
                0x00000000c00234a0                disks
 .bss           0x00000000c0023508        0x4 hal/mouse.32
                0x00000000c0023508                guiMouseHandler
 .bss           0x00000000c002350c        0x0 hal/partition.32
 *fill*         0x00000000c002350c        0x4 
 .bss           0x00000000c0023510        0x8 hal/timer.32
                0x00000000c0023510                nanoSinceBoot
 .bss           0x00000000c0023518        0x0 hal/vcache.32
 .bss           0x00000000c0023518        0x4 hal/video.32
                0x00000000c0023518                screen
 *fill*         0x00000000c002351c        0x4 
 .bss           0x00000000c0023520      0x3c0 hw/acpi.32
                0x00000000c0023520                systemSleepFunction
                0x00000000c0023524                systemResetFunction
                0x00000000c0023528                systemShutdownFunction
                0x00000000c002352c                nextACPITable
                0x00000000c0023540                acpiTables
                0x00000000c0023740                usingXSDT
                0x00000000c0023744                MADTpointer
                0x00000000c0023748                RSDTpointer
                0x00000000c002374c                RSDPpointer
                0x00000000c0023750                ioapicDiscoveryNumber
                0x00000000c0023760                ioapicFoundInMADT
                0x00000000c0023780                ioapicAddresses
                0x00000000c0023800                ioapicGSIBase
                0x00000000c0023880                processorDiscoveryNumber
                0x00000000c00238a0                matchingAPICID
                0x00000000c00238c0                processorID
 .bss           0x00000000c00238e0       0x10 hw/cpu.32
                0x00000000c00238e0                lastD
                0x00000000c00238e4                lastC
                0x00000000c00238e8                lastB
                0x00000000c00238ec                lastA
 .bss           0x00000000c00238f0        0x0 hw/ports.32
 .bss           0x00000000c00238f0        0x1 krnl/panic.32
                0x00000000c00238f0                Krnl::kernelInPanic
 .bss           0x00000000c00238f1        0x0 reg/registry.32
 .bss           0x00000000c00238f1        0x0 sys/sc_exit.32
 .bss           0x00000000c00238f1        0x0 sys/sc_loaddll.32
 .bss           0x00000000c00238f1        0x0 sys/sc_read.32
 .bss           0x00000000c00238f1        0x0 sys/sc_sbrk.32
 .bss           0x00000000c00238f1        0x0 sys/sc_write.32
 .bss           0x00000000c00238f1        0x0 sys/sc_yield.32
 *fill*         0x00000000c00238f1        0xf 
 .bss           0x00000000c0023900      0x200 sys/syscalls.32
                0x00000000c0023900                systemCallHandlers
 .bss           0x00000000c0023b00      0x7a4 thr/elf.32
                0x00000000c0023b00                Thr::driverLookupNext
                0x00000000c0023b20                Thr::driverLookupLen
                0x00000000c0023d20                Thr::driverLookupAddr
                0x00000000c0023f20                Thr::driverNameLookup
                0x00000000c0024120                Thr::kernelSymbols
                0x00000000c00241a0                Thr::kernelStringTable
                0x00000000c0024220                Thr::kernelSymbolTable
                0x00000000c00242a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00242a4        0x4 
 .bss           0x00000000c00242a8       0x68 thr/prcssthr.32
                0x00000000c00242a8                cleanerThread
                0x00000000c00242ac                weNeedTheCleanerToNotBlock
                0x00000000c00242b0                xxxx
                0x00000000c00242b4                retValLockStuff
                0x00000000c00242b8                retValSchedLock
                0x00000000c00242bc                lockStuffLock
                0x00000000c00242c0                schedulerLock
                0x00000000c00242c4                taskSwitchesPostponedFlag
                0x00000000c00242c8                postponeTaskSwitchesCounter
                0x00000000c00242cc                irqDisableCounter
                0x00000000c00242d0                terminatedTaskList
                0x00000000c00242dc                sleepingTaskList
                0x00000000c00242e8                taskList
                0x00000000c00242f4                kernelProcess
 .bss           0x00000000c0024310        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024310       0x10 
 .bss           0x00000000c0024320       0xf0 fs/fat/vfslink.32
                0x00000000c0024320                FAT::fats
                0x00000000c0024340                FAT::vfsToFatRemaps
                0x00000000c00243c0                fatToVFSRemaps
 *fill*         0x00000000c0024410       0x10 
 .bss           0x00000000c0024420      0x820 fs/iso9660/vfslink.32
                0x00000000c0024420                recentSector
                0x00000000c0024440                recentBuffer
 .bss           0x00000000c0024c40        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0024c40        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0024c40        0x0 hw/bus/isa.32
 .bss           0x00000000c0024c40        0x0 hw/bus/pci.32
 .bss           0x00000000c0024c40        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0024c40        0x8 hw/diskphys/ata.32
                0x00000000c0024c40                ataSectorsWritten
                0x00000000c0024c44                ataSectorsRead
 .bss           0x00000000c0024c48        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024c48        0x0 hw/fpu/avx.32
 .bss           0x00000000c0024c48        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0024c48        0x0 hw/fpu/sse.32
 .bss           0x00000000c0024c48        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0024c48       0x18 
 .bss           0x00000000c0024c60       0x41 hw/intctrl/apic.32
                0x00000000c0024c60                noOfIOAPICs
                0x00000000c0024c80                ioapics
                0x00000000c0024ca0                IOAPICsSetupYet
 .bss           0x00000000c0024ca1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0024ca1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024ca1        0x3 
 .bss           0x00000000c0024ca4        0x4 hw/timer/pit.32
                0x00000000c0024ca4                pitFreq
 .bss           0x00000000c0024ca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024ca8        0x0 crtn.32
 .bss           0x00000000c0024ca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0024ca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0024ca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0024ca8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0024ca8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0024ca8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0024ca8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024ca8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0026e64                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
