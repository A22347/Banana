Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e858
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x695 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b336                Computer::disableNMI()
                0x00000000c000b344                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b362                Computer::handleNMI()
                0x00000000c000b3c8                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3f3        0x1 
 .text          0x00000000c000b3f4      0x1b7 core/gdt.32
                0x00000000c000b3f4                GDTEntry::setBase(unsigned int)
                0x00000000c000b410                GDTEntry::setLimit(unsigned int)
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b444                GDT::addEntry(GDTEntry)
                0x00000000c000b480                GDT::getNumberOfEntries()
                0x00000000c000b488                GDT::flush()
                0x00000000c000b4aa                GDT::setup()
 .text          0x00000000c000b5ab       0x61 core/idle.32
                0x00000000c000b5ab                idleFunction(void*)
 .text          0x00000000c000b60c      0x45f core/idt.32
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b67a                IDTEntry::setOffset(unsigned int)
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b690                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b698                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6b2                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6ea                IDT::flush()
                0x00000000c000b704                IDT::setup()
 .text          0x00000000c000ba6b      0x20d core/kheap.32
                0x00000000c000ba6b                sbrk
                0x00000000c000bb83                mmap
                0x00000000c000bb99                munmap
                0x00000000c000bbaf                liballoc_lock()
                0x00000000c000bbc0                liballoc_unlock()
                0x00000000c000bbd1                liballoc_alloc(int)
                0x00000000c000bbec                liballoc_free(void*, int)
                0x00000000c000bc0a                realloc
                0x00000000c000bc1e                malloc
                0x00000000c000bc2e                free
                0x00000000c000bc3e                rfree
                0x00000000c000bc4e                calloc
 .text          0x00000000c000bc78      0x38d core/main.32
                0x00000000c000bc78                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcbd                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcff                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd53                hwTextMode_update(VgaText*)
                0x00000000c000bd54                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd9c                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd8                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be5e                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000bebc                setupTextMode()
                0x00000000c000bf0d                kernel_main
 .text          0x00000000c000c005      0x4f3 core/physmgr.32
                0x00000000c000c005                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0f0                Phys::setPageState(unsigned long, bool)
                0x00000000c000c122                Phys::getPageState(unsigned long)
                0x00000000c000c13e                Phys::freePage(unsigned long)
                0x00000000c000c1c8                Phys::allocatePage()
                0x00000000c000c290                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2c8                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c4f8      0x273 core/pipe.32
                0x00000000c000c4f8                Pipe::isAtty()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c520                Pipe::~Pipe()
                0x00000000c000c548                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c63c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c704                Pipe::Pipe(int)
                0x00000000c000c704                Pipe::Pipe(int)
 *fill*         0x00000000c000c76b        0x1 
 .text          0x00000000c000c76c      0xf65 core/terminal.32
                0x00000000c000c76c                VgaText::isAtty()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c794                VgaText::~VgaText()
                0x00000000c000c7be                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c7de                setTerminalScrollLock(bool)
                0x00000000c000c7df                addToTerminalCycle(VgaText*)
                0x00000000c000c80c                installVgaTextImplementation()
                0x00000000c000c821                scrollTerminalScrollLock(int)
                0x00000000c000c822                VgaText::load()
                0x00000000c000c876                VgaText::updateCursor()
                0x00000000c000c890                VgaText::showCursor(bool)
                0x00000000c000c8a0                VgaText::disableBlink(bool)
                0x00000000c000c8da                VgaText::doANSI_SGR(int)
                0x00000000c000c966                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c97c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c992                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c9b2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c9c4                VgaText::scrollScreen()
                0x00000000c000ca58                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ca6a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000caca                VgaText::getCursorX()
                0x00000000c000cad6                VgaText::getCursorY()
                0x00000000c000cae2                VgaText::setCursor(int, int)
                0x00000000c000cb00                VgaText::setCursorX(int)
                0x00000000c000cb1c                VgaText::setCursorY(int)
                0x00000000c000cb38                VgaText::incrementCursor(bool)
                0x00000000c000cba0                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cbfa                VgaText::updateDiskUsage()
                0x00000000c000cd60                VgaText::updateTitle()
                0x00000000c000cda6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cdb6                VgaText::setTitleColour(VgaColour)
                0x00000000c000cdc6                VgaText::setTitle(char*)
                0x00000000c000cdec                VgaText::decrementCursor(bool)
                0x00000000c000ce14                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000cf10                VgaText::isShowingCursor()
                0x00000000c000cf1c                VgaText::isBlinkDisabled()
                0x00000000c000cf2a                VgaText::setCursorHeight(int)
                0x00000000c000cf48                VgaText::getCursorHeight()
                0x00000000c000cf53                setActiveTerminal(VgaText*)
                0x00000000c000d005                doTerminalCycle()
                0x00000000c000d022                VgaText::doUpdate()
                0x00000000c000d034                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d1f4                VgaText::clearScreen()
                0x00000000c000d258                VgaText::putchar(char)
                0x00000000c000d372                VgaText::puts(char const*)
                0x00000000c000d398                VgaText::putx(unsigned int)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d570                VgaText::receiveKey(unsigned char)
                0x00000000c000d658                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d6ac                newTerminal(char*)
 *fill*         0x00000000c000d6d1        0x1 
 .text          0x00000000c000d6d2      0x18f core/tss.32
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6e0                TSS::setESP(unsigned long)
                0x00000000c000d6f2                TSS::flush()
                0x00000000c000d712                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d861        0x1 
 .text          0x00000000c000d862      0x545 core/unixfile.32
                0x00000000c000d862                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d8f8                ReservedFilename::isAtty()
                0x00000000c000d92e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d9c8                UnixFile::getFileDescriptor()
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000dc0a                UnixFile::~UnixFile()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc56                ReservedFilename::~ReservedFilename()
                0x00000000c000dc7d                getFromFileDescriptor(int)
 *fill*         0x00000000c000dda7        0x1 
 .text          0x00000000c000dda8      0xec7 core/virtmgr.32
                0x00000000c000dda8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000dddd                Virt::getPageState(unsigned long)
                0x00000000c000de01                Virt::allocateKernelVirtualPages(int)
                0x00000000c000df12                Virt::virtualMemorySetup()
                0x00000000c000df91                Virt::getAKernelVAS()
                0x00000000c000df97                Virt::setupPageSwapping(int)
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e110                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e13c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e15b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e27e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e2a2                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e2ba                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e2fa                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e332                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e368                VAS::~VAS()
                0x00000000c000e368                VAS::~VAS()
                0x00000000c000e4d4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e5d4                VAS::allocatePages(int, int)
                0x00000000c000e7a4                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e7c0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e88a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000e978                VAS::VAS(bool)
                0x00000000c000e978                VAS::VAS(bool)
                0x00000000c000eba8                mapVASFirstTime
 .text          0x00000000c000ec6f       0x93 coreobjs/c++.32
                0x00000000c000ec6f                __cxa_atexit
                0x00000000c000ec72                __cxa_finalize
                0x00000000c000ec73                __stack_chk_fail
                0x00000000c000ecd3                __cxa_pure_virtual
                0x00000000c000ece4                operator new(unsigned long)
                0x00000000c000ece9                operator new[](unsigned long)
                0x00000000c000ecee                operator delete(void*)
                0x00000000c000ecf3                operator delete(void*, unsigned long)
                0x00000000c000ecf8                operator delete[](void*)
                0x00000000c000ecfd                operator delete[](void*, unsigned long)
 .text          0x00000000c000ed02      0x1ef dbg/kconsole.32
                0x00000000c000ed02                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ed63                Dbg::logc(char)
                0x00000000c000ed7a                Dbg::logs(char*)
                0x00000000c000ed97                Dbg::logWriteInt(unsigned int)
                0x00000000c000edb4                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000edd3                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000eef1        0x1 
 .text          0x00000000c000eef2      0xb68 fs/vfs.32
                0x00000000c000eef2                File::read(unsigned long long, void*, int*)
                0x00000000c000ef4a                File::write(unsigned long long, void*, int*)
                0x00000000c000efa2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000effa                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f028                File::isAtty()
                0x00000000c000f02c                Directory::isAtty()
                0x00000000c000f030                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f036                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f03c                File::~File()
                0x00000000c000f03c                File::~File()
                0x00000000c000f060                File::~File()
                0x00000000c000f08a                Directory::~Directory()
                0x00000000c000f08a                Directory::~Directory()
                0x00000000c000f0ae                Directory::~Directory()
                0x00000000c000f0d8                Filesystem::Filesystem()
                0x00000000c000f0d8                Filesystem::Filesystem()
                0x00000000c000f0fc                Filesystem::~Filesystem()
                0x00000000c000f0fc                Filesystem::~Filesystem()
                0x00000000c000f10a                Filesystem::~Filesystem()
                0x00000000c000f12e                initVFS()
                0x00000000c000f158                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f302                File::File(char const*, Process*)
                0x00000000c000f302                File::File(char const*, Process*)
                0x00000000c000f366                File::open(FileOpenMode)
                0x00000000c000f3c4                File::close()
                0x00000000c000f424                File::seek(unsigned long long)
                0x00000000c000f47a                File::tell(unsigned long long*)
                0x00000000c000f4ca                File::rewind()
                0x00000000c000f4de                File::unlink()
                0x00000000c000f52a                File::rename(char const*)
                0x00000000c000f578                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f5d4                File::exists()
                0x00000000c000f612                File::stat(unsigned long long*, bool*)
                0x00000000c000f673                getcwd(Process*, char*, int)
                0x00000000c000f69d                setcwd(Process*, char*)
                0x00000000c000f7c4                Directory::Directory(char const*, Process*)
                0x00000000c000f7c4                Directory::Directory(char const*, Process*)
                0x00000000c000f828                Directory::open()
                0x00000000c000f884                Directory::close()
                0x00000000c000f8e4                Directory::unlink()
                0x00000000c000f930                Directory::rename(char const*)
                0x00000000c000f97e                Directory::exists()
                0x00000000c000f9bc                Directory::read(dirent*)
                0x00000000c000fa08                Directory::create()
                0x00000000c000fa54                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fa5a       0x84 hal/bus.32
                0x00000000c000fa5a                Bus::Bus(char const*)
                0x00000000c000fa5a                Bus::Bus(char const*)
                0x00000000c000fa90                Bus::~Bus()
                0x00000000c000fa90                Bus::~Bus()
                0x00000000c000fab4                Bus::~Bus()
 .text          0x00000000c000fade      0x14e hal/buzzer.32
                0x00000000c000fade                Buzzer::Buzzer(char const*)
                0x00000000c000fade                Buzzer::Buzzer(char const*)
                0x00000000c000fb22                Buzzer::~Buzzer()
                0x00000000c000fb22                Buzzer::~Buzzer()
                0x00000000c000fb46                Buzzer::~Buzzer()
                0x00000000c000fb70                Buzzer::stop()
                0x00000000c000fb83                beepThread(void*)
                0x00000000c000fbbe                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fc2c      0x42f hal/clock.32
                0x00000000c000fc2c                loadClockSettings()
                0x00000000c000fc46                Clock::Clock(char const*)
                0x00000000c000fc46                Clock::Clock(char const*)
                0x00000000c000fc7c                Clock::~Clock()
                0x00000000c000fc7c                Clock::~Clock()
                0x00000000c000fca0                Clock::~Clock()
                0x00000000c000fcca                Clock::timeInSecondsLocal()
                0x00000000c000fd12                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fd6b                datetimeToSeconds(datetime_t)
                0x00000000c000fe92                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fef2                secondsToDatetime(unsigned long long)
                0x00000000c0010036                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c001005b        0x1 
 .text          0x00000000c001005c      0x504 hal/device.32
                0x00000000c001005c                Device::hibernate()
                0x00000000c001005e                Device::wake()
                0x00000000c0010060                Device::detect()
                0x00000000c0010062                Device::disableLegacy()
                0x00000000c0010064                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010066                DriverlessDevice::close(int, int, void*)
                0x00000000c001006a                DriverlessDevice::detect()
                0x00000000c001006c                DriverlessDevice::open(int, int, void*)
                0x00000000c0010080                Device::~Device()
                0x00000000c0010080                Device::~Device()
                0x00000000c001008e                Device::~Device()
                0x00000000c00100b6                Device::findAndLoadDriver()
                0x00000000c00100b8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00100de                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0010132                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010190                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00101de                Device::addChild(Device*)
                0x00000000c0010222                Device::removeAllChildren()
                0x00000000c0010268                Device::hibernateAll()
                0x00000000c0010298                Device::wakeAll()
                0x00000000c00102c8                Device::detectAll()
                0x00000000c00102f8                Device::disableLegacyAll()
                0x00000000c0010328                Device::loadDriversForAll()
                0x00000000c0010354                Device::closeAll()
                0x00000000c001038a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00103c0                Device::setName(char const*)
                0x00000000c00103ce                Device::Device(char const*)
                0x00000000c00103ce                Device::Device(char const*)
                0x00000000c00104c0                Device::getName()
                0x00000000c00104ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104f2                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010536                getDevicesOfType(DeviceType)
 .text          0x00000000c0010560       0x84 hal/diskctrl.32
                0x00000000c0010560                HardDiskController::HardDiskController(char const*)
                0x00000000c0010560                HardDiskController::HardDiskController(char const*)
                0x00000000c0010596                HardDiskController::~HardDiskController()
                0x00000000c0010596                HardDiskController::~HardDiskController()
                0x00000000c00105ba                HardDiskController::~HardDiskController()
 .text          0x00000000c00105e4       0xde hal/diskphys.32
                0x00000000c00105e4                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00105e4                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001064c                PhysicalDisk::startCache()
                0x00000000c0010674                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010674                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010698                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00106c2      0x142 hal/fpu.32
                0x00000000c00106c2                FPU::FPU(char const*)
                0x00000000c00106c2                FPU::FPU(char const*)
                0x00000000c00106f8                FPU::~FPU()
                0x00000000c00106f8                FPU::~FPU()
                0x00000000c001071c                FPU::~FPU()
                0x00000000c0010746                setupFPU()
 .text          0x00000000c0010804      0xc21 hal/intctrl.32
                0x00000000c0010804                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001083c                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001088e                doubleFault(regs*, void*)
                0x00000000c001089c                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010938                InterruptController::clearAllHandlers(int, bool)
                0x00000000c00109e0                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010a67                nmiHandler(regs*, void*)
                0x00000000c0010a75                int_handler
                0x00000000c0010b10                InterruptController::InterruptController(char const*)
                0x00000000c0010b10                InterruptController::InterruptController(char const*)
                0x00000000c0010bb6                InterruptController::~InterruptController()
                0x00000000c0010bb6                InterruptController::~InterruptController()
                0x00000000c0010bda                InterruptController::~InterruptController()
                0x00000000c0010c04                displayDebugInfo(regs*)
                0x00000000c001101b                x87EmulHandler(regs*, void*)
                0x00000000c001107e                gpFault(regs*, void*)
                0x00000000c00110b7                pgFault(regs*, void*)
                0x00000000c00110ce                otherISRHandler(regs*, void*)
                0x00000000c00110ed                opcodeFault(regs*, void*)
                0x00000000c0011157                displayProgramFault(char const*)
                0x00000000c0011180                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00111ca                setupInterruptController()
 *fill*         0x00000000c0011425        0x1 
 .text          0x00000000c0011426      0x608 hal/keybrd.32
                0x00000000c0011426                startGUI(void*)
                0x00000000c0011498                sendKeyToTerminal(unsigned char)
                0x00000000c0011504                sendKeyboardToken(KeyboardToken)
                0x00000000c00118df                clearInternalKeybuffer(VgaText*)
                0x00000000c0011914                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00119a4                Keyboard::Keyboard(char const*)
                0x00000000c00119a4                Keyboard::Keyboard(char const*)
                0x00000000c00119e0                Keyboard::~Keyboard()
                0x00000000c00119e0                Keyboard::~Keyboard()
                0x00000000c0011a04                Keyboard::~Keyboard()
 .text          0x00000000c0011a2e      0x400 hal/logidisk.32
                0x00000000c0011a2e                LogicalDisk::close(int, int, void*)
                0x00000000c0011a32                LogicalDisk::~LogicalDisk()
                0x00000000c0011a32                LogicalDisk::~LogicalDisk()
                0x00000000c0011a56                LogicalDisk::~LogicalDisk()
                0x00000000c0011a80                LogicalDisk::open(int, int, void*)
                0x00000000c0011a94                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011acc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011b12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011b12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011bc8                LogicalDisk::assignDriveLetter()
                0x00000000c0011c7e                LogicalDisk::mount()
                0x00000000c0011cf0                LogicalDisk::unmount()
                0x00000000c0011d00                LogicalDisk::unassignDriveLetter()
                0x00000000c0011d56                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011dc2                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011e2e       0x84 hal/mouse.32
                0x00000000c0011e2e                Mouse::Mouse(char const*)
                0x00000000c0011e2e                Mouse::Mouse(char const*)
                0x00000000c0011e64                Mouse::~Mouse()
                0x00000000c0011e64                Mouse::~Mouse()
                0x00000000c0011e88                Mouse::~Mouse()
 .text          0x00000000c0011eb2      0x339 hal/partition.32
                0x00000000c0011eb2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011f5a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00121eb        0x1 
 .text          0x00000000c00121ec      0x2e7 hal/timer.32
                0x00000000c00121ec                Timer::Timer(char const*)
                0x00000000c00121ec                Timer::Timer(char const*)
                0x00000000c0012222                Timer::~Timer()
                0x00000000c0012222                Timer::~Timer()
                0x00000000c0012246                Timer::~Timer()
                0x00000000c0012270                Timer::read()
                0x00000000c001227b                timerHandler(unsigned long long)
                0x00000000c00123b2                setupTimer(int)
 *fill*         0x00000000c00124d3        0x1 
 .text          0x00000000c00124d4      0x2d1 hal/vcache.32
                0x00000000c00124d4                VCache::VCache(PhysicalDisk*)
                0x00000000c00124d4                VCache::VCache(PhysicalDisk*)
                0x00000000c00125c4                VCache::writeWriteBuffer()
                0x00000000c0012600                VCache::~VCache()
                0x00000000c0012600                VCache::~VCache()
                0x00000000c0012640                VCache::~VCache()
                0x00000000c0012668                VCache::write(unsigned long long, int, void*)
                0x00000000c001274c                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00127a5        0x1 
 .text          0x00000000c00127a6      0x26d hal/video.32
                0x00000000c00127a6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00127f0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001286e                Video::clearScreen(unsigned int)
                0x00000000c00128a2                Video::putpixel(int, int, unsigned int)
                0x00000000c00128b0                Video::Video(char const*)
                0x00000000c00128b0                Video::Video(char const*)
                0x00000000c00128e6                Video::~Video()
                0x00000000c00128e6                Video::~Video()
                0x00000000c001290a                Video::~Video()
                0x00000000c0012934                Video::isMonochrome()
                0x00000000c0012940                Video::getWidth()
                0x00000000c001294c                Video::getHeight()
                0x00000000c0012958                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012a13        0x1 
 .text          0x00000000c0012a14      0xd28 hw/acpi.32
                0x00000000c0012a14                ACPI::close(int, int, void*)
                0x00000000c0012ac9                findRSDP()
                0x00000000c0012b53                loadACPITables(unsigned char*)
                0x00000000c0012d7a                findRSDT(unsigned char*)
                0x00000000c0012e98                findDataTable(unsigned char*, char*)
                0x00000000c0012f34                scanMADT()
                0x00000000c00132c8                ACPI::ACPI()
                0x00000000c00132c8                ACPI::ACPI()
                0x00000000c0013328                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c001340a                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013510                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013516                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001355e                ACPI::open(int, int, void*)
                0x00000000c0013724                ACPI::sleep()
 .text          0x00000000c001373c     0x15ae hw/cpu.32
                0x00000000c001373c                CPU::close(int, int, void*)
                0x00000000c001373f                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c00138d3                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013b81                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013b9d                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013bb5                AMD_K6_writeback(int, int, int)
                0x00000000c0013c28                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013cab                cpuidCheckEDX(unsigned int)
                0x00000000c0013cd8                cpuidCheckECX(unsigned int)
                0x00000000c0013d05                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013d32                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013d5f                getCPUNumber()
                0x00000000c0013d62                thisCPU()
                0x00000000c0013d76                CPU::CPU()
                0x00000000c0013d76                CPU::CPU()
                0x00000000c0013e04                CPU::displayFeatures()
                0x00000000c0014080                CPU::detectFeatures()
                0x00000000c0014a72                CPU::setupSMEP()
                0x00000000c0014a8c                CPU::setupUMIP()
                0x00000000c0014aa4                CPU::setupTSC()
                0x00000000c0014abc                CPU::setupLargePages()
                0x00000000c0014ad4                CPU::setupPAT()
                0x00000000c0014b10                CPU::setupMTRR()
                0x00000000c0014b12                CPU::setupGlobalPages()
                0x00000000c0014b28                CPU::allowUsermodeDataAccess()
                0x00000000c0014b3a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0014b4c                CPU::setupSMAP()
                0x00000000c0014b72                CPU::setupFeatures()
                0x00000000c0014c14                CPU::open(int, int, void*)
 .text          0x00000000c0014cea        0x0 hw/ports.32
 .text          0x00000000c0014cea      0x338 krnl/panic.32
                0x00000000c0014cea                Krnl::panic(char const*)
 .text          0x00000000c0015022      0x503 reg/registry.32
                0x00000000c0015022                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c001517a                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00152d9                Reg::getLine(char*, char*, char*)
                0x00000000c0015310                Reg::readInt(char*, char*, int*)
                0x00000000c00153fb                Reg::readString(char*, char*, char*, int)
                0x00000000c001547c                Reg::readBool(char*, char*, bool*)
                0x00000000c00154a1                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00154cd                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00154f9                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0015525       0x18 sys/sc_exit.32
                0x00000000c0015525                Sys::exit(regs*)
 .text          0x00000000c001553d       0x95 sys/sc_loaddll.32
                0x00000000c001553d                Sys::loadDLL(regs*)
 .text          0x00000000c00155d2       0x68 sys/sc_read.32
                0x00000000c00155d2                Sys::read(regs*)
 .text          0x00000000c001563a       0x55 sys/sc_sbrk.32
                0x00000000c001563a                Sys::sbrk(regs*)
 .text          0x00000000c001568f       0x83 sys/sc_write.32
                0x00000000c001568f                Sys::write(regs*)
 .text          0x00000000c0015712       0x1a sys/sc_yield.32
                0x00000000c0015712                Sys::yield(regs*)
 .text          0x00000000c001572c      0xf85 sys/syscalls.32
                0x00000000c001572c                sysCallGetPID(regs*)
                0x00000000c0015738                sysCallSeekDir(regs*)
                0x00000000c001573d                sysCallTellDir(regs*)
                0x00000000c0015742                sysCallVerify(regs*)
                0x00000000c001574c                sysCallFork(regs*)
                0x00000000c0015757                sysCallExecve(regs*)
                0x00000000c0015762                sysCallGetArgc(regs*)
                0x00000000c0015772                sysFormatDisk(regs*)
                0x00000000c00157dc                sysSetDiskVolumeLabel(regs*)
                0x00000000c0015822                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015873                sysShutdown(regs*)
                0x00000000c00158d1                sysCallGetCwd(regs*)
                0x00000000c00158f0                sysCallSetCwd(regs*)
                0x00000000c001590c                sysCallRealpath(regs*)
                0x00000000c001594f                sysCallReadDir(regs*)
                0x00000000c00159dd                sysCallIsATTY(regs*)
                0x00000000c0015a37                sysCallSeek(regs*)
                0x00000000c0015aa0                sysCallTell(regs*)
                0x00000000c0015b1d                sysCallSizeFromFilename(regs*)
                0x00000000c0015bce                sysCallSize(regs*)
                0x00000000c0015c51                sysCallClose(regs*)
                0x00000000c0015cd9                sysCallOpenDir(regs*)
                0x00000000c0015d46                sysCallMakeDir(regs*)
                0x00000000c0015d9f                sysCallCloseDir(regs*)
                0x00000000c0015e05                sysCallWait(regs*)
                0x00000000c0015e1f                sysCallRmdir(regs*)
                0x00000000c0015e71                sysCallUnlink(regs*)
                0x00000000c0015ec3                sysCallGetArgv(regs*)
                0x00000000c0015f0f                sysCallTTYName(regs*)
                0x00000000c0015f92                sysCallGetEnv(regs*)
                0x00000000c0015fe4                sysCallUSleep(regs*)
                0x00000000c001600b                sysCallSpawn(regs*)
                0x00000000c0016063                sysAppSettings(regs*)
                0x00000000c0016182                sysSetFatAttrib(regs*)
                0x00000000c00161e2                sysPanic(regs*)
                0x00000000c0016208                sysPipe(regs*)
                0x00000000c001624d                sysGetUnixTime(regs*)
                0x00000000c0016261                string_ends_with(char const*, char const*)
                0x00000000c00162a9                sysCallOpen(regs*)
                0x00000000c00164b6                setupSystemCalls()
                0x00000000c001666f                systemCall(regs*, void*)
 .text          0x00000000c00166b1     0x11c7 thr/elf.32
                0x00000000c00166b1                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c001692e                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0016b44                Thr::runtimeReferenceHelper()
                0x00000000c0016b57                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0016ba6                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016e67                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0017605                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c0017637                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c001766e                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0017688                Thr::loadDLL(char const*, bool)
                0x00000000c001784e                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0017878      0xfce thr/prcssthr.32
                0x00000000c0017878                changeTSS
                0x00000000c00178a6                Process::addArgs(char**)
                0x00000000c0017900                Process::Process(char const*, Process*, char**)
                0x00000000c0017900                Process::Process(char const*, Process*, char**)
                0x00000000c0017ab8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017ab8                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017c3b                disableIRQs()
                0x00000000c0017c43                getIRQNestingLevel()
                0x00000000c0017c49                enableIRQs()
                0x00000000c0017c58                lockScheduler()
                0x00000000c0017c5a                unlockScheduler()
                0x00000000c0017c5c                userModeEntryPoint(void*)
                0x00000000c0017c7f                lockStuff()
                0x00000000c0017c8b                taskStartupFunction
                0x00000000c0017c94                updateTimeUsed()
                0x00000000c0017cf2                switchToThread(ThreadControlBlock*)
                0x00000000c0017d42                Semaphore::Semaphore(int)
                0x00000000c0017d42                Semaphore::Semaphore(int)
                0x00000000c0017d70                Mutex::Mutex()
                0x00000000c0017d70                Mutex::Mutex()
                0x00000000c0017d82                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017e66                Process::createUserThread()
                0x00000000c0017e82                setupMultitasking(void (*)())
                0x00000000c0017f8c                schedule()
                0x00000000c0018011                unlockStuff()
                0x00000000c0018046                Semaphore::tryAcquire()
                0x00000000c0018074                Semaphore::assertLocked(char const*)
                0x00000000c00180a4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00180e6                blockTask(TaskState)
                0x00000000c0018107                waitTask(int, int*, int)
                0x00000000c0018149                nanoSleepUntil(unsigned long long)
                0x00000000c00181a0                nanoSleep(unsigned long long)
                0x00000000c00181b5                sleep(unsigned long long)
                0x00000000c00181d2                Semaphore::acquire()
                0x00000000c001823a                taskReturned
                0x00000000c0018268                unblockTask(ThreadControlBlock*)
                0x00000000c0018317                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00185bb                cleanerTaskFunction(void*)
                0x00000000c001866e                terminateTask(int)
                0x00000000c001874e                Thr::terminateFromIRQ(int)
                0x00000000c001875a                Semaphore::release()
 .text          0x00000000c0018846      0x8bf vm86/vm8086.32
                0x00000000c0018846                Vm::vm8086EntryPoint(void*)
                0x00000000c0018871                Vm::inbv(unsigned short)
                0x00000000c0018877                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018881                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018891                Vm::getSegment(unsigned int)
                0x00000000c0018899                Vm::getOffset(unsigned int)
                0x00000000c001889e                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00189cd                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018a57                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018a68                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018a7a                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018a8b                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018aa0                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018ab6                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018acb                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019105        0x1 
 .text          0x00000000c0019106     0x10ed fs/fat/vfslink.32
                0x00000000c0019106                FAT::getName()
                0x00000000c001910c                FAT::tell(void*, unsigned long long*)
                0x00000000c0019140                FAT::stat(void*, unsigned long long*)
                0x00000000c0019174                FAT::~FAT()
                0x00000000c0019174                FAT::~FAT()
                0x00000000c0019198                FAT::~FAT()
                0x00000000c00191c0                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001925e                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019318                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00194fc                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019702                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019808                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019862                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00198bc                FAT::close(void*)
                0x00000000c0019908                FAT::closeDir(void*)
                0x00000000c0019954                FAT::seek(void*, unsigned long long)
                0x00000000c00199a8                fatWrapperReadDisk
                0x00000000c00199ef                fatWrapperWriteDisk
                0x00000000c0019a36                fatWrapperIoctl
                0x00000000c0019b3a                FAT::FAT()
                0x00000000c0019b3a                FAT::FAT()
                0x00000000c0019b8c                FAT::fixFilepath(char*)
                0x00000000c0019bc4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019cec                FAT::openDir(char const*, void**)
                0x00000000c0019d92                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019e7c                FAT::unlink(char const*)
                0x00000000c0019ef6                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a04a                FAT::rename(char const*, char const*)
                0x00000000c001a10e                FAT::mkdir(char const*)
                0x00000000c001a188                FAT::exists(char const*)
 *fill*         0x00000000c001a1f3        0x1 
 .text          0x00000000c001a1f4      0xbdf fs/iso9660/vfslink.32
                0x00000000c001a1f4                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a1fa                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a22a                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a24e                ISO9660::getName()
                0x00000000c001a254                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a278                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a27e                ISO9660::unlink(char const*)
                0x00000000c001a284                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a28a                ISO9660::rename(char const*, char const*)
                0x00000000c001a290                ISO9660::mkdir(char const*)
                0x00000000c001a296                ISO9660::close(void*)
                0x00000000c001a2b8                ISO9660::closeDir(void*)
                0x00000000c001a2da                ISO9660::~ISO9660()
                0x00000000c001a2da                ISO9660::~ISO9660()
                0x00000000c001a2fe                ISO9660::~ISO9660()
                0x00000000c001a325                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a367                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a3ce                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a41e                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a662                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a8ef                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a944                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001ab17                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001aba6                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001ac40                ISO9660::exists(char const*)
                0x00000000c001ac64                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001acf8                ISO9660::openDir(char const*, void**)
                0x00000000c001adb0                ISO9660::ISO9660()
                0x00000000c001adb0                ISO9660::ISO9660()
 *fill*         0x00000000c001add3        0x1 
 .text          0x00000000c001add4      0x244 hal/sound/sndchannel.32
                0x00000000c001add4                SoundChannel::~SoundChannel()
                0x00000000c001add4                SoundChannel::~SoundChannel()
                0x00000000c001adf0                SoundChannel::setSpeed(float)
                0x00000000c001adfc                SoundChannel::getSpeed()
                0x00000000c001ae04                SoundChannel::setVolume(int)
                0x00000000c001ae20                SoundChannel::getVolume()
                0x00000000c001ae28                SoundChannel::pause()
                0x00000000c001ae32                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ae32                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001af28                SoundChannel::play()
                0x00000000c001af32                SoundChannel::paused()
                0x00000000c001af3a                SoundChannel::getSampleRate()
                0x00000000c001af42                SoundChannel::getBits()
                0x00000000c001af4a                SoundChannel::getBufferUsed()
                0x00000000c001af52                SoundChannel::getBufferSize()
                0x00000000c001af5a                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001afcc                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001b018      0x317 hal/sound/sndhw.32
                0x00000000c001b018                SoundDevice::SoundDevice(char const*)
                0x00000000c001b018                SoundDevice::SoundDevice(char const*)
                0x00000000c001b084                SoundDevice::~SoundDevice()
                0x00000000c001b084                SoundDevice::~SoundDevice()
                0x00000000c001b0fe                SoundDevice::~SoundDevice()
                0x00000000c001b128                SoundDevice::getFreeChannelNum()
                0x00000000c001b142                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001b1b2                SoundDevice::removeChannel(int)
                0x00000000c001b1e4                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001b250                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b32f        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b32f        0x1 
 .text          0x00000000c001b330      0x6e5 hw/bus/pci.32
                0x00000000c001b330                PCI::open(int, int, void*)
                0x00000000c001b344                PCI::close(int, int, void*)
                0x00000000c001b348                PCI::PCI()
                0x00000000c001b348                PCI::PCI()
                0x00000000c001b3c8                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b410                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b432                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b456                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b49a                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4be                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4e0                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b502                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b526                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b586                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b5f2                PCI::checkBus(unsigned char)
                0x00000000c001b616                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b786                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b956                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b9c2                PCI::detect()
 *fill*         0x00000000c001ba15        0x1 
 .text          0x00000000c001ba16      0xc70 hw/diskctrl/ide.32
                0x00000000c001ba16                IDE::close(int, int, void*)
                0x00000000c001ba1a                IDE::IDE()
                0x00000000c001ba1a                IDE::IDE()
                0x00000000c001ba4e                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ba60                selectDrive(unsigned char, unsigned char)
                0x00000000c001ba62                IDE::getBase(unsigned char)
                0x00000000c001ba74                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bb34                IDE::read(unsigned char, unsigned char)
                0x00000000c001bbe2                IDE::waitInterrupt(unsigned char)
                0x00000000c001bc48                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bc64                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bc80                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bcc6                IDE::open(int, int, void*)
                0x00000000c001c0d6                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c1a2                IDE::detect()
                0x00000000c001c48a                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c620                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c686      0x62b hw/diskphys/ata.32
                0x00000000c001c686                ATA::close(int, int, void*)
                0x00000000c001c6aa                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c6ac                ATA::ATA()
                0x00000000c001c6ac                ATA::ATA()
                0x00000000c001c6da                ATA::flush(bool)
                0x00000000c001c724                ATA::readyForCommand()
                0x00000000c001c774                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001caf2                ATA::read(unsigned long long, int, void*)
                0x00000000c001cb5a                ATA::write(unsigned long long, int, void*)
                0x00000000c001cbc2                ATA::detectCHS()
                0x00000000c001cbec                ATA::open(int, int, void*)
 *fill*         0x00000000c001ccb1        0x1 
 .text          0x00000000c001ccb2      0x5b3 hw/diskphys/atapi.32
                0x00000000c001ccb2                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ccb8                ATAPI::close(int, int, void*)
                0x00000000c001ccdc                ATAPI::ATAPI()
                0x00000000c001ccdc                ATAPI::ATAPI()
                0x00000000c001cd0a                ATAPI::readyForCommand()
                0x00000000c001cd5a                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d01a                ATAPI::diskRemoved()
                0x00000000c001d036                ATAPI::eject()
                0x00000000c001d07c                ATAPI::diskInserted()
                0x00000000c001d0aa                ATAPI::detectMedia()
                0x00000000c001d166                ATAPI::open(int, int, void*)
                0x00000000c001d1e6                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d265        0x1 
 .text          0x00000000c001d266       0x8e hw/fpu/avx.32
                0x00000000c001d266                AVX::open(int, int, void*)
                0x00000000c001d278                AVX::close(int, int, void*)
                0x00000000c001d28a                AVX::available()
                0x00000000c001d29c                AVX::save(void*)
                0x00000000c001d2b4                AVX::load(void*)
                0x00000000c001d2cc                AVX::AVX()
                0x00000000c001d2cc                AVX::AVX()
 .text          0x00000000c001d2f4       0x90 hw/fpu/mmx.32
                0x00000000c001d2f4                MMX::available()
                0x00000000c001d308                MMX::open(int, int, void*)
                0x00000000c001d31a                MMX::close(int, int, void*)
                0x00000000c001d32c                MMX::save(void*)
                0x00000000c001d344                MMX::load(void*)
                0x00000000c001d35c                MMX::MMX()
                0x00000000c001d35c                MMX::MMX()
 .text          0x00000000c001d384       0x96 hw/fpu/sse.32
                0x00000000c001d384                SSE::open(int, int, void*)
                0x00000000c001d396                SSE::close(int, int, void*)
                0x00000000c001d3a8                SSE::available()
                0x00000000c001d3c2                SSE::save(void*)
                0x00000000c001d3da                SSE::load(void*)
                0x00000000c001d3f2                SSE::SSE()
                0x00000000c001d3f2                SSE::SSE()
 .text          0x00000000c001d41a       0x8e hw/fpu/x87.32
                0x00000000c001d41a                x87::open(int, int, void*)
                0x00000000c001d42c                x87::close(int, int, void*)
                0x00000000c001d43e                x87::available()
                0x00000000c001d450                x87::save(void*)
                0x00000000c001d468                x87::load(void*)
                0x00000000c001d480                x87::x87()
                0x00000000c001d480                x87::x87()
 .text          0x00000000c001d4a8      0x5f3 hw/intctrl/apic.32
                0x00000000c001d4a8                APIC::disable()
                0x00000000c001d4aa                APIC::close(int, int, void*)
                0x00000000c001d4cc                IOAPIC::close(int, int, void*)
                0x00000000c001d4d2                APIC::io_wait()
                0x00000000c001d4d8                APIC::getBase()
                0x00000000c001d51a                APIC::eoi(unsigned char)
                0x00000000c001d548                APIC::open(int, int, void*)
                0x00000000c001d602                IOAPIC::IOAPIC()
                0x00000000c001d602                IOAPIC::IOAPIC()
                0x00000000c001d62a                APIC::APIC()
                0x00000000c001d62a                APIC::APIC()
                0x00000000c001d6fa                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d72c                IOAPIC::read(int)
                0x00000000c001d754                IOAPIC::open(int, int, void*)
                0x00000000c001d84a                IOAPIC::write(int, int)
                0x00000000c001d876                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d930                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001da9b        0x1 
 .text          0x00000000c001da9c      0x3d3 hw/intctrl/pic.32
                0x00000000c001da9c                PIC::disable()
                0x00000000c001daca                PIC::close(int, int, void*)
                0x00000000c001daec                PIC::PIC()
                0x00000000c001daec                PIC::PIC()
                0x00000000c001dbc2                PIC::ioWait()
                0x00000000c001dbc8                PIC::getIRQReg(int)
                0x00000000c001dc32                PIC::eoi(unsigned char)
                0x00000000c001dcc4                PIC::remap()
                0x00000000c001de30                PIC::open(int, int, void*)
 *fill*         0x00000000c001de6f        0x1 
 .text          0x00000000c001de70      0x252 hw/timer/apictimer.32
                0x00000000c001de70                APICTimer::close(int, int, void*)
                0x00000000c001de76                apicTimerHandler(regs*, void*)
                0x00000000c001dea4                APICTimer::write(int)
                0x00000000c001dfa2                APICTimer::open(int, int, void*)
                0x00000000c001e09a                APICTimer::APICTimer()
                0x00000000c001e09a                APICTimer::APICTimer()
 .text          0x00000000c001e0c2      0x1a7 hw/timer/pit.32
                0x00000000c001e0c2                PIT::write(int)
                0x00000000c001e140                pitHandler(regs*, void*)
                0x00000000c001e16c                PIT::open(int, int, void*)
                0x00000000c001e1ba                PIT::close(int, int, void*)
                0x00000000c001e1ea                PIT::PIT()
                0x00000000c001e1ea                PIT::PIT()
 *fill*         0x00000000c001e269        0x7 
 .text          0x00000000c001e270        0xa hw/fpu/x86/avx.32
                0x00000000c001e270                avxDetect
                0x00000000c001e276                avxSave
                0x00000000c001e277                avxLoad
                0x00000000c001e278                avxInit
                0x00000000c001e279                avxClose
 *fill*         0x00000000c001e27a        0x6 
 .text          0x00000000c001e280       0x38 hw/fpu/x86/sse.32
                0x00000000c001e280                sseDetect
                0x00000000c001e29b                sseSave
                0x00000000c001e2a1                sseLoad
                0x00000000c001e2a7                sseInit
                0x00000000c001e2b7                sseClose
 *fill*         0x00000000c001e2b8        0x8 
 .text          0x00000000c001e2c0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e2c6                x87Detect
                0x00000000c001e2e1                x87Save
                0x00000000c001e2e7                x87Load
                0x00000000c001e2ec                x87Init
                0x00000000c001e306                x87Close
 *fill*         0x00000000c001e307        0x1 
 .text          0x00000000c001e308       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e32d        0x0 crtn.32
 *fill*         0x00000000c001e32d        0x3 
 .text          0x00000000c001e330      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e330                __divdi3
 *fill*         0x00000000c001e47b        0x1 
 .text          0x00000000c001e47c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e47c                __moddi3
 *fill*         0x00000000c001e5fa        0x2 
 .text          0x00000000c001e5fc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e5fc                __udivdi3
 *fill*         0x00000000c001e6fb        0x1 
 .text          0x00000000c001e6fc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e6fc                __umoddi3
 *fill*         0x00000000c001e816        0xa 
 .text          0x00000000c001e820       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e820                fabs
 *fill*         0x00000000c001e83e        0x2 
 .text          0x00000000c001e840        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e840                lrint
 .text          0x00000000c001e84c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e84c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e858        0x0
 .iplt          0x00000000c001e858        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e858        0xf
 .init          0x00000000c001e858        0x3 crti.32
                0x00000000c001e858                _init
 .init          0x00000000c001e85b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e860        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e865        0x2 crtn.32

.fini           0x00000000c001e867        0xa
 .fini          0x00000000c001e867        0x3 crti.32
                0x00000000c001e867                _fini
 .fini          0x00000000c001e86a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e86f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e872       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e872       0x23 core/computer.32
                0x00000000c001e872                Computer::~Computer()
                0x00000000c001e872                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e896       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e896       0x2a core/computer.32
                0x00000000c001e896                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e8c0       0x15
 .text._Z10idleCommonv
                0x00000000c001e8c0       0x15 core/idle.32
                0x00000000c001e8c0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e8d5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e8d5       0x12 core/kheap.32
                0x00000000c001e8d5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e8e7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e8e7        0x9 core/kheap.32
                0x00000000c001e8e7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8f0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8f0        0x2 core/unixfile.32
                0x00000000c001e8f0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8f0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8f2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8f2       0x58 core/unixfile.32
                0x00000000c001e8f2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8f2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e94a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e94a       0xd3 core/unixfile.32
                0x00000000c001e94a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ea1e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ea1e        0x7 core/unixfile.32
                0x00000000c001ea1e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea26       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ea26       0xa1 core/unixfile.32
                0x00000000c001ea26                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eac8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001eac8        0x8 core/unixfile.32
                0x00000000c001eac8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ead0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ead0       0x1a hal/device.32
                0x00000000c001ead0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ead0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaea       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaea       0x2a hal/device.32
                0x00000000c001eaea                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eb14       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eb14       0xdc hal/device.32
                0x00000000c001eb14                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebf0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebf0       0x58 hal/device.32
                0x00000000c001ebf0                LinkedList<Device>::LinkedList()
                0x00000000c001ebf0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001ec48       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001ec48       0x12 hal/fpu.32
                0x00000000c001ec48                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001ec5a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001ec5a        0x9 hal/fpu.32
                0x00000000c001ec5a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001ec63       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001ec63       0x12 hal/intctrl.32
                0x00000000c001ec63                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001ec75       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001ec75       0x12 hal/intctrl.32
                0x00000000c001ec75                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001ec87       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001ec87       0x12 hal/intctrl.32
                0x00000000c001ec87                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001ec99       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001ec99       0x12 hal/intctrl.32
                0x00000000c001ec99                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001ecab       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001ecab       0x12 hal/intctrl.32
                0x00000000c001ecab                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001ecbd       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001ecbd       0x12 hal/intctrl.32
                0x00000000c001ecbd                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ecd0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ecd0        0x7 hal/timer.32
                0x00000000c001ecd0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ecd8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ecd8       0x1c hal/timer.32
                0x00000000c001ecd8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ecf4       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ecf4       0xae hal/timer.32
                0x00000000c001ecf4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eda2       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eda2       0xd3 hal/timer.32
                0x00000000c001eda2                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ee76       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ee76       0x23 hw/acpi.32
                0x00000000c001ee76                ACPI::~ACPI()
                0x00000000c001ee76                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ee9a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ee9a       0x2a hw/acpi.32
                0x00000000c001ee9a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001eec4       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001eec4       0x23 hw/cpu.32
                0x00000000c001eec4                CPU::~CPU()
                0x00000000c001eec4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001eee8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001eee8       0x2a hw/cpu.32
                0x00000000c001eee8                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ef12       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ef12       0x12 hw/cpu.32
                0x00000000c001ef12                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001ef24        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001ef24        0x9 hw/cpu.32
                0x00000000c001ef24                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001ef2d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001ef2d        0x9 hw/cpu.32
                0x00000000c001ef2d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001ef36       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001ef36       0x12 krnl/panic.32
                0x00000000c001ef36                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef48        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef48        0x2 thr/prcssthr.32
                0x00000000c001ef48                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef48                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef4a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef4a       0x3e thr/prcssthr.32
                0x00000000c001ef4a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef4a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef88       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef88       0x58 thr/prcssthr.32
                0x00000000c001ef88                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef88                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001efe0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001efe0        0x8 thr/prcssthr.32
                0x00000000c001efe0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001efe8       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efe8       0x23 hw/bus/pci.32
                0x00000000c001efe8                PCI::~PCI()
                0x00000000c001efe8                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f00c       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f00c       0x2a hw/bus/pci.32
                0x00000000c001f00c                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f036       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f036       0x23 hw/diskctrl/ide.32
                0x00000000c001f036                IDE::~IDE()
                0x00000000c001f036                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f05a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f05a       0x2a hw/diskctrl/ide.32
                0x00000000c001f05a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f084       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f084       0x23 hw/diskphys/ata.32
                0x00000000c001f084                ATA::~ATA()
                0x00000000c001f084                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f0a8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f0a8       0x2a hw/diskphys/ata.32
                0x00000000c001f0a8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f0d2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f0d2       0x23 hw/diskphys/atapi.32
                0x00000000c001f0d2                ATAPI::~ATAPI()
                0x00000000c001f0d2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f0f6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f0f6       0x2a hw/diskphys/atapi.32
                0x00000000c001f0f6                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f120       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f120       0x23 hw/fpu/avx.32
                0x00000000c001f120                AVX::~AVX()
                0x00000000c001f120                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f144       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f144       0x2a hw/fpu/avx.32
                0x00000000c001f144                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f16e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f16e       0x23 hw/fpu/mmx.32
                0x00000000c001f16e                MMX::~MMX()
                0x00000000c001f16e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f192       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f192       0x2a hw/fpu/mmx.32
                0x00000000c001f192                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f1bc       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f1bc       0x23 hw/fpu/sse.32
                0x00000000c001f1bc                SSE::~SSE()
                0x00000000c001f1bc                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f1e0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f1e0       0x2a hw/fpu/sse.32
                0x00000000c001f1e0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f20a       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f20a       0x23 hw/fpu/x87.32
                0x00000000c001f20a                x87::~x87()
                0x00000000c001f20a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f22e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f22e       0x2a hw/fpu/x87.32
                0x00000000c001f22e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f258       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f258       0x23 hw/intctrl/apic.32
                0x00000000c001f258                IOAPIC::~IOAPIC()
                0x00000000c001f258                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f27c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f27c       0x2a hw/intctrl/apic.32
                0x00000000c001f27c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f2a6       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f2a6       0x23 hw/intctrl/apic.32
                0x00000000c001f2a6                APIC::~APIC()
                0x00000000c001f2a6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f2ca       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f2ca       0x2a hw/intctrl/apic.32
                0x00000000c001f2ca                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f2f4       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f2f4       0x23 hw/intctrl/pic.32
                0x00000000c001f2f4                PIC::~PIC()
                0x00000000c001f2f4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f318       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f318       0x2a hw/intctrl/pic.32
                0x00000000c001f318                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f342       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f342       0x23 hw/timer/apictimer.32
                0x00000000c001f342                APICTimer::~APICTimer()
                0x00000000c001f342                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f366       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f366       0x2a hw/timer/apictimer.32
                0x00000000c001f366                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f390       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f390       0x23 hw/timer/pit.32
                0x00000000c001f390                PIT::~PIT()
                0x00000000c001f390                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f3b4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f3b4       0x2a hw/timer/pit.32
                0x00000000c001f3b4                PIT::~PIT()

.rodata         0x00000000c001f3de     0x374e
                0x00000000c001f3de                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f3de        0x2 
 .ctors         0x00000000c001f3e0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f3e4        0x4 core/unixfile.32
 .ctors         0x00000000c001f3e8        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f3ec        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f3f0                end_ctors = .
                0x00000000c001f3f0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f3f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f3f4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f3f4                __DTOR_END__
                0x00000000c001f3f8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f3f8        0x8 
 .rodata        0x00000000c001f400      0x101 acpica/utclib.32
                0x00000000c001f400                AcpiGbl_Ctypes
 *fill*         0x00000000c001f501        0x3 
 .rodata        0x00000000c001f504       0x18 core/malloc.32
 *fill*         0x00000000c001f51c        0x4 
 .rodata        0x00000000c001f520      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f640       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f696        0xa 
 .rodata        0x00000000c001f6a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001faa0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fb56        0x2 
 .rodata.str1.4
                0x00000000c001fb58      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001fefd        0x3 
 .rodata        0x00000000c001ff00       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001ff60       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001ff80       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001ff94       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001ffd6        0x2 
 .rodata.cst8   0x00000000c001ffd8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001ffe0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c002004c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020110       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c002015a        0x6 
 .rodata.cst8   0x00000000c0020160        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020168        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020174       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c00201bc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c00201bc       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c002022f        0x1 
 .rodata._ZTV8Computer
                0x00000000c0020230       0x2c core/computer.32
                0x00000000c0020230                vtable for Computer
 .rodata.str1.1
                0x00000000c002025c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020278       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00202a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00202b4       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00202cf       0x5f core/physmgr.32
 *fill*         0x00000000c002032e        0x2 
 .rodata.str1.4
                0x00000000c0020330       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002037d       0x39 core/pipe.32
 *fill*         0x00000000c00203b6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00203b8       0x1c core/pipe.32
                0x00000000c00203b8                vtable for Pipe
 .rodata.str1.1
                0x00000000c00203d4       0x9d core/terminal.32
 *fill*         0x00000000c0020471        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020474       0x1c core/terminal.32
                0x00000000c0020474                vtable for VgaText
 .rodata        0x00000000c0020490       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c00204ae       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020531       0x19 core/unixfile.32
 *fill*         0x00000000c002054a        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002054c       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002056e       0x15 core/unixfile.32
 *fill*         0x00000000c0020583        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020584       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00205cf        0x8 core/unixfile.32
 *fill*         0x00000000c00205d7        0x1 
 .rodata.str1.4
                0x00000000c00205d8       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00205f8       0x1c core/unixfile.32
                0x00000000c00205f8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020614       0x1c core/unixfile.32
                0x00000000c0020614                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020630      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00207b7      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00208ba       0x33 coreobjs/c++.32
 *fill*         0x00000000c00208ed        0x3 
 .rodata.str1.4
                0x00000000c00208f0       0x3f dbg/kconsole.32
 *fill*         0x00000000c002092f        0x1 
 .rodata        0x00000000c0020930      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020a80       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020a80       0x64 fs/vfs.32
                0x00000000c0020a80                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020ae4       0x1c fs/vfs.32
                0x00000000c0020ae4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020b00       0x1c fs/vfs.32
                0x00000000c0020b00                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020b1c       0x2c hal/bus.32
                0x00000000c0020b1c                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020b48       0x30 hal/buzzer.32
                0x00000000c0020b48                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020b78       0x3c hal/clock.32
                0x00000000c0020b78                vtable for Clock
 *fill*         0x00000000c0020bb4        0xc 
 .rodata        0x00000000c0020bc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020bf0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020c0e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020c0e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0020c0e       0x19 hal/device.32
 *fill*         0x00000000c0020c0e        0x2 
 .rodata._ZTV6Device
                0x00000000c0020c10       0x2c hal/device.32
                0x00000000c0020c10                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020c3c       0x2c hal/device.32
                0x00000000c0020c3c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020c68       0x2c hal/diskctrl.32
                0x00000000c0020c68                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020c94       0x34 hal/diskphys.32
                0x00000000c0020c94                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020cc8        0x9 hal/fpu.32
 *fill*         0x00000000c0020cd1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0020cd4       0x38 hal/fpu.32
                0x00000000c0020cd4                vtable for FPU
 .rodata.str1.4
                0x00000000c0020d0c      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020e3c      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c0020fcf        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c0020fd0       0x48 hal/intctrl.32
                0x00000000c0020fd0                vtable for InterruptController
 .rodata        0x00000000c0021018       0x4e hal/keybrd.32
 *fill*         0x00000000c0021066        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021068       0x34 hal/keybrd.32
                0x00000000c0021068                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002109c       0x7a hal/logidisk.32
 *fill*         0x00000000c0021116        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0021118       0x2c hal/logidisk.32
                0x00000000c0021118                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021144       0x2c hal/mouse.32
                0x00000000c0021144                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021170        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002117b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002117b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002117b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002117b       0x15 hal/timer.32
 *fill*         0x00000000c002117b        0x1 
 .rodata._ZTV5Timer
                0x00000000c002117c       0x30 hal/timer.32
                0x00000000c002117c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00211ac       0x10 hal/vcache.32
                0x00000000c00211ac                vtable for VCache
 .rodata.str1.1
                0x00000000c00211bc        0xf hal/video.32
 *fill*         0x00000000c00211cb        0x1 
 .rodata._ZTV5Video
                0x00000000c00211cc       0x40 hal/video.32
                0x00000000c00211cc                vtable for Video
 .rodata.str1.1
                0x00000000c002120c       0xd1 hw/acpi.32
 *fill*         0x00000000c00212dd        0x3 
 .rodata.str1.4
                0x00000000c00212e0       0xe5 hw/acpi.32
 *fill*         0x00000000c00213c5        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00213c8       0x2c hw/acpi.32
                0x00000000c00213c8                vtable for ACPI
 .rodata.str1.1
                0x00000000c00213f4      0x3c8 hw/cpu.32
                                        0x3ce (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00217bc       0x2c hw/cpu.32
                0x00000000c00217bc                vtable for CPU
 .rodata.str1.1
                0x00000000c00217e8       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c002189d        0x3 
 .rodata.str1.4
                0x00000000c00218a0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00219b2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00219f7       0x3e sys/sc_write.32
 *fill*         0x00000000c0021a35        0x3 
 .rodata.str1.4
                0x00000000c0021a38       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c0021af4       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0021bb6      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c0021dc2       0xfb thr/prcssthr.32
 *fill*         0x00000000c0021ebd        0x3 
 .rodata.str1.4
                0x00000000c0021ec0      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0022167       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022167       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022167       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022167       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022167        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022167       0x5f vm86/vm8086.32
 *fill*         0x00000000c00221c6        0x2 
 .rodata        0x00000000c00221c8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00221f8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002224b        0x1 
 .rodata.str1.4
                0x00000000c002224c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0022274       0x64 fs/fat/vfslink.32
                0x00000000c0022274                vtable for FAT
 .rodata.str1.1
                0x00000000c00222d8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0022321        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0022324       0x64 fs/iso9660/vfslink.32
                0x00000000c0022324                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022388       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c00223a2        0x2 
 .rodata.cst4   0x00000000c00223a4        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c00223a8       0x38 hal/sound/sndhw.32
                0x00000000c00223a8                vtable for SoundDevice
 .rodata.cst4   0x00000000c00223e0       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00223f0       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022494       0x2c hw/bus/pci.32
                0x00000000c0022494                vtable for PCI
 .rodata.str1.1
                0x00000000c00224c0      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00226f6        0x2 
 .rodata._ZTV3IDE
                0x00000000c00226f8       0x2c hw/diskctrl/ide.32
                0x00000000c00226f8                vtable for IDE
 .rodata.str1.1
                0x00000000c0022724       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0022745        0x3 
 .rodata._ZTV3ATA
                0x00000000c0022748       0x34 hw/diskphys/ata.32
                0x00000000c0022748                vtable for ATA
 .rodata.str1.1
                0x00000000c002277c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c00227b4       0x34 hw/diskphys/atapi.32
                0x00000000c00227b4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00227e8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00227f0       0x38 hw/fpu/avx.32
                0x00000000c00227f0                vtable for AVX
 .rodata.str1.1
                0x00000000c0022828        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022830       0x38 hw/fpu/mmx.32
                0x00000000c0022830                vtable for MMX
 .rodata.str1.1
                0x00000000c0022868        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022870       0x38 hw/fpu/sse.32
                0x00000000c0022870                vtable for SSE
 .rodata.str1.1
                0x00000000c00228a8        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c00228b0       0x38 hw/fpu/x87.32
                0x00000000c00228b0                vtable for x87
 .rodata        0x00000000c00228e8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c00229c0       0x48 hw/intctrl/apic.32
                0x00000000c00229c0                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0022a08       0x2c hw/intctrl/apic.32
                0x00000000c0022a08                vtable for IOAPIC
 .rodata        0x00000000c0022a34       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0022a56        0x2 
 .rodata._ZTV3PIC
                0x00000000c0022a58       0x48 hw/intctrl/pic.32
                0x00000000c0022a58                vtable for PIC
 .rodata.str1.1
                0x00000000c0022aa0        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0022aab        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022aac       0x30 hw/timer/apictimer.32
                0x00000000c0022aac                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022adc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022af9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022afc       0x30 hw/timer/pit.32
                0x00000000c0022afc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022b2c      0x5fd
 *(.data)
 .data          0x00000000c0022b2c        0x0 crti.32
 .data          0x00000000c0022b2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022b2c                __dso_handle
 .data          0x00000000c0022b30        0x0 acpica/utclib.32
 .data          0x00000000c0022b30        0x0 core/malloc.32
 .data          0x00000000c0022b30        0x0 libk/string.32
 .data          0x00000000c0022b30        0x0 fs/fat/diskio.32
 .data          0x00000000c0022b30        0x0 fs/fat/ff.32
 .data          0x00000000c0022b30        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022b30        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022b30        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022b30        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022b30        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022b30        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022b30        0x0 core/computer.32
 .data          0x00000000c0022b30        0x0 core/gdt.32
 .data          0x00000000c0022b30        0x0 core/idle.32
 .data          0x00000000c0022b30        0x0 core/idt.32
 .data          0x00000000c0022b30        0x4 core/kheap.32
 .data          0x00000000c0022b34        0x0 core/main.32
 .data          0x00000000c0022b34        0x4 core/physmgr.32
                0x00000000c0022b34                Phys::bitmap
 .data          0x00000000c0022b38        0x0 core/pipe.32
 *fill*         0x00000000c0022b38        0x8 
 .data          0x00000000c0022b40       0x60 core/terminal.32
                0x00000000c0022b40                VgaText::hiddenOut
                0x00000000c0022b60                ansiToVGAMappings
 .data          0x00000000c0022ba0        0x0 core/tss.32
 .data          0x00000000c0022ba0        0x4 core/unixfile.32
                0x00000000c0022ba0                UnixFile::nextFd
 .data          0x00000000c0022ba4        0x8 core/virtmgr.32
                0x00000000c0022ba4                Virt::pageAllocPtr
                0x00000000c0022ba8                Virt::bitmap
 .data          0x00000000c0022bac        0x4 coreobjs/c++.32
                0x00000000c0022bac                __stack_chk_guard
 .data          0x00000000c0022bb0        0x0 dbg/kconsole.32
 .data          0x00000000c0022bb0        0x0 fs/vfs.32
 .data          0x00000000c0022bb0        0x0 hal/bus.32
 .data          0x00000000c0022bb0        0x0 hal/buzzer.32
 .data          0x00000000c0022bb0        0x0 hal/clock.32
 .data          0x00000000c0022bb0        0x0 hal/device.32
 .data          0x00000000c0022bb0        0x0 hal/diskctrl.32
 .data          0x00000000c0022bb0        0x0 hal/diskphys.32
 .data          0x00000000c0022bb0        0x0 hal/fpu.32
 *fill*         0x00000000c0022bb0       0x10 
 .data          0x00000000c0022bc0      0x2a0 hal/intctrl.32
                0x00000000c0022bc0                exceptionNames
 .data          0x00000000c0022e60        0x0 hal/keybrd.32
 .data          0x00000000c0022e60        0x0 hal/logidisk.32
 .data          0x00000000c0022e60        0x0 hal/mouse.32
 .data          0x00000000c0022e60        0x0 hal/partition.32
 .data          0x00000000c0022e60        0x0 hal/timer.32
 .data          0x00000000c0022e60        0x0 hal/vcache.32
 .data          0x00000000c0022e60        0x0 hal/video.32
 .data          0x00000000c0022e60       0x10 hw/acpi.32
                0x00000000c0022e60                legacyIRQRemaps
 *fill*         0x00000000c0022e70       0x10 
 .data          0x00000000c0022e80      0x2a4 hw/cpu.32
                0x00000000c0022e80                cpuNameList
                0x00000000c0023120                lastCode
 .data          0x00000000c0023124        0x0 hw/ports.32
 .data          0x00000000c0023124        0x0 krnl/panic.32
 .data          0x00000000c0023124        0x0 reg/registry.32
 .data          0x00000000c0023124        0x0 sys/sc_exit.32
 .data          0x00000000c0023124        0x0 sys/sc_loaddll.32
 .data          0x00000000c0023124        0x0 sys/sc_read.32
 .data          0x00000000c0023124        0x0 sys/sc_sbrk.32
 .data          0x00000000c0023124        0x0 sys/sc_write.32
 .data          0x00000000c0023124        0x0 sys/sc_yield.32
 .data          0x00000000c0023124        0x0 sys/syscalls.32
 .data          0x00000000c0023124        0x0 thr/elf.32
 .data          0x00000000c0023124        0x4 thr/prcssthr.32
                0x00000000c0023124                nextPID
 .data          0x00000000c0023128        0x0 vm86/vm8086.32
 .data          0x00000000c0023128        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023128        0x1 fs/iso9660/vfslink.32
                0x00000000c0023128                recentDriveletter
 .data          0x00000000c0023129        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0023129        0x0 hal/sound/sndhw.32
 .data          0x00000000c0023129        0x0 hw/bus/isa.32
 .data          0x00000000c0023129        0x0 hw/bus/pci.32
 .data          0x00000000c0023129        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023129        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023129        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023129        0x0 hw/fpu/avx.32
 .data          0x00000000c0023129        0x0 hw/fpu/mmx.32
 .data          0x00000000c0023129        0x0 hw/fpu/sse.32
 .data          0x00000000c0023129        0x0 hw/fpu/x87.32
 .data          0x00000000c0023129        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023129        0x0 hw/intctrl/pic.32
 .data          0x00000000c0023129        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023129        0x0 hw/timer/pit.32
 .data          0x00000000c0023129        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023129        0x0 crtn.32
 .data          0x00000000c0023129        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0023129        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0023129        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0023129        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0023129        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0023129        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0023129        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002312c        0x0
 .got           0x00000000c002312c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002312c        0x0
 .got.plt       0x00000000c002312c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002312c        0x0
 .igot.plt      0x00000000c002312c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002312c        0x0
 .tm_clone_table
                0x00000000c002312c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002312c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023129      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0023129        0x3 
 .eh_frame      0x00000000c002312c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002312c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002312c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023184       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00231c4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023230       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c00232b4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00232cc        0x0
 .rel.got       0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00232cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00232cc     0x223c
                0x00000000c00232cc                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00232cc        0x0 crti.32
 .bss           0x00000000c00232cc       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00232ec        0x4 acpica/utclib.32
 *fill*         0x00000000c00232f0       0x10 
 .bss           0x00000000c0023300      0x378 core/malloc.32
 .bss           0x00000000c0023678        0x0 libk/string.32
 .bss           0x00000000c0023678        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023678        0x8 
 .bss           0x00000000c0023680       0x88 fs/fat/ff.32
 .bss           0x00000000c0023708        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023708        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0023708        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0023708        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0023708        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0023708        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0023708        0x6 core/computer.32
                0x00000000c0023708                computer
                0x00000000c002370c                preemptionOn
                0x00000000c002370d                schedulingOn
 *fill*         0x00000000c002370e        0x2 
 .bss           0x00000000c0023710        0x6 core/gdt.32
                0x00000000c0023710                gdtDescr
 .bss           0x00000000c0023716        0x0 core/idle.32
 *fill*         0x00000000c0023716        0x2 
 .bss           0x00000000c0023718        0x6 core/idt.32
                0x00000000c0023718                idtDescr
 .bss           0x00000000c002371e        0x0 core/kheap.32
 *fill*         0x00000000c002371e        0x2 
 .bss           0x00000000c0023720        0x4 core/main.32
                0x00000000c0023720                sysBootSettings
 *fill*         0x00000000c0023724       0x1c 
 .bss           0x00000000c0023740       0x50 core/physmgr.32
                0x00000000c0023740                Phys::currentPagePointer
                0x00000000c0023744                Phys::highestMem
                0x00000000c0023748                Phys::oldPercent
                0x00000000c002374c                Phys::usedPages
                0x00000000c0023750                Phys::usablePages
                0x00000000c0023760                Phys::dmaUsage
 .bss           0x00000000c0023790        0x0 core/pipe.32
 *fill*         0x00000000c0023790       0x10 
 .bss           0x00000000c00237a0       0x29 core/terminal.32
                0x00000000c00237a0                textModeImplementation
                0x00000000c00237c0                terminalCycle
                0x00000000c00237c4                activeTerminal
                0x00000000c00237c8                VgaText::graphicMode
 *fill*         0x00000000c00237c9        0x1 
 .bss           0x00000000c00237ca        0x2 core/tss.32
                0x00000000c00237ca                doubleFaultSelector
 *fill*         0x00000000c00237cc       0x14 
 .bss           0x00000000c00237e0       0x84 core/unixfile.32
                0x00000000c00237e0                sfileLpt
                0x00000000c0023820                sfileCom
                0x00000000c0023844                sfileNul
                0x00000000c0023848                sfilePnt
                0x00000000c002384c                sfileAux
                0x00000000c0023850                sfileCon
                0x00000000c0023854                initialFilesAdded
                0x00000000c0023858                unixFileLinkedList
 .bss           0x00000000c0023864        0x4 core/virtmgr.32
                0x00000000c0023864                firstVAS
 .bss           0x00000000c0023868        0x0 coreobjs/c++.32
 .bss           0x00000000c0023868        0x0 dbg/kconsole.32
 .bss           0x00000000c0023868        0x4 fs/vfs.32
                0x00000000c0023868                installedFilesystems
 .bss           0x00000000c002386c        0x0 hal/bus.32
 .bss           0x00000000c002386c        0x4 hal/buzzer.32
                0x00000000c002386c                systemBuzzer
 .bss           0x00000000c0023870        0x8 hal/clock.32
                0x00000000c0023870                dstOn
                0x00000000c0023871                timezoneHalfHourOffset
                0x00000000c0023874                timezoneHourOffset
 .bss           0x00000000c0023878        0x0 hal/device.32
 .bss           0x00000000c0023878        0x0 hal/diskctrl.32
 .bss           0x00000000c0023878        0x0 hal/diskphys.32
 .bss           0x00000000c0023878        0x0 hal/fpu.32
 .bss           0x00000000c0023878       0x20 hal/intctrl.32
                0x00000000c0023878                pf5
                0x00000000c002387c                pf4
                0x00000000c0023880                pf3
                0x00000000c0023884                pf2
                0x00000000c0023888                pf1
                0x00000000c002388c                pf0
                0x00000000c0023890                gpFaultIntercept
                0x00000000c0023894                x87FaultIntercept
 *fill*         0x00000000c0023898        0x8 
 .bss           0x00000000c00238a0      0x429 hal/keybrd.32
                0x00000000c00238a0                keyboardWaitingTaskList
                0x00000000c00238a4                keyboardSetupYet
                0x00000000c00238c0                keystates
 *fill*         0x00000000c0023cc9       0x17 
 .bss           0x00000000c0023ce0       0x88 hal/logidisk.32
                0x00000000c0023ce0                diskAssignments
                0x00000000c0023d00                disks
 .bss           0x00000000c0023d68        0x4 hal/mouse.32
                0x00000000c0023d68                guiMouseHandler
 .bss           0x00000000c0023d6c        0x0 hal/partition.32
 *fill*         0x00000000c0023d6c        0x4 
 .bss           0x00000000c0023d70        0x8 hal/timer.32
                0x00000000c0023d70                nanoSinceBoot
 .bss           0x00000000c0023d78        0x0 hal/vcache.32
 .bss           0x00000000c0023d78        0x4 hal/video.32
                0x00000000c0023d78                screen
 *fill*         0x00000000c0023d7c        0x4 
 .bss           0x00000000c0023d80      0x3c0 hw/acpi.32
                0x00000000c0023d80                systemSleepFunction
                0x00000000c0023d84                systemResetFunction
                0x00000000c0023d88                systemShutdownFunction
                0x00000000c0023d8c                nextACPITable
                0x00000000c0023da0                acpiTables
                0x00000000c0023fa0                usingXSDT
                0x00000000c0023fa4                MADTpointer
                0x00000000c0023fa8                RSDTpointer
                0x00000000c0023fac                RSDPpointer
                0x00000000c0023fb0                ioapicDiscoveryNumber
                0x00000000c0023fc0                ioapicFoundInMADT
                0x00000000c0023fe0                ioapicAddresses
                0x00000000c0024060                ioapicGSIBase
                0x00000000c00240e0                processorDiscoveryNumber
                0x00000000c0024100                matchingAPICID
                0x00000000c0024120                processorID
 .bss           0x00000000c0024140       0x10 hw/cpu.32
                0x00000000c0024140                lastD
                0x00000000c0024144                lastC
                0x00000000c0024148                lastB
                0x00000000c002414c                lastA
 .bss           0x00000000c0024150        0x0 hw/ports.32
 .bss           0x00000000c0024150        0x5 krnl/panic.32
                0x00000000c0024150                Krnl::guiPanicHandler
                0x00000000c0024154                Krnl::kernelInPanic
 .bss           0x00000000c0024155        0x0 reg/registry.32
 .bss           0x00000000c0024155        0x0 sys/sc_exit.32
 .bss           0x00000000c0024155        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0024155        0x0 sys/sc_read.32
 .bss           0x00000000c0024155        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0024155        0x0 sys/sc_write.32
 .bss           0x00000000c0024155        0x0 sys/sc_yield.32
 *fill*         0x00000000c0024155        0xb 
 .bss           0x00000000c0024160      0x200 sys/syscalls.32
                0x00000000c0024160                systemCallHandlers
 .bss           0x00000000c0024360      0x7a4 thr/elf.32
                0x00000000c0024360                Thr::driverLookupNext
                0x00000000c0024380                Thr::driverLookupLen
                0x00000000c0024580                Thr::driverLookupAddr
                0x00000000c0024780                Thr::driverNameLookup
                0x00000000c0024980                Thr::kernelSymbols
                0x00000000c0024a00                Thr::kernelStringTable
                0x00000000c0024a80                Thr::kernelSymbolTable
                0x00000000c0024b00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0024b04        0x4 
 .bss           0x00000000c0024b08       0x68 thr/prcssthr.32
                0x00000000c0024b08                cleanerThread
                0x00000000c0024b0c                weNeedTheCleanerToNotBlock
                0x00000000c0024b10                xxxx
                0x00000000c0024b14                retValLockStuff
                0x00000000c0024b18                retValSchedLock
                0x00000000c0024b1c                lockStuffLock
                0x00000000c0024b20                schedulerLock
                0x00000000c0024b24                taskSwitchesPostponedFlag
                0x00000000c0024b28                postponeTaskSwitchesCounter
                0x00000000c0024b2c                irqDisableCounter
                0x00000000c0024b30                terminatedTaskList
                0x00000000c0024b3c                sleepingTaskList
                0x00000000c0024b48                taskList
                0x00000000c0024b54                kernelProcess
 .bss           0x00000000c0024b70        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024b70       0x10 
 .bss           0x00000000c0024b80       0xf0 fs/fat/vfslink.32
                0x00000000c0024b80                FAT::fats
                0x00000000c0024ba0                FAT::vfsToFatRemaps
                0x00000000c0024c20                fatToVFSRemaps
 *fill*         0x00000000c0024c70       0x10 
 .bss           0x00000000c0024c80      0x820 fs/iso9660/vfslink.32
                0x00000000c0024c80                recentSector
                0x00000000c0024ca0                recentBuffer
 .bss           0x00000000c00254a0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c00254a0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00254a0        0x0 hw/bus/isa.32
 .bss           0x00000000c00254a0        0x0 hw/bus/pci.32
 .bss           0x00000000c00254a0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00254a0        0x8 hw/diskphys/ata.32
                0x00000000c00254a0                ataSectorsWritten
                0x00000000c00254a4                ataSectorsRead
 .bss           0x00000000c00254a8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00254a8        0x0 hw/fpu/avx.32
 .bss           0x00000000c00254a8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00254a8        0x0 hw/fpu/sse.32
 .bss           0x00000000c00254a8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00254a8       0x18 
 .bss           0x00000000c00254c0       0x41 hw/intctrl/apic.32
                0x00000000c00254c0                noOfIOAPICs
                0x00000000c00254e0                ioapics
                0x00000000c0025500                IOAPICsSetupYet
 .bss           0x00000000c0025501        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0025501        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025501        0x3 
 .bss           0x00000000c0025504        0x4 hw/timer/pit.32
                0x00000000c0025504                pitFreq
 .bss           0x00000000c0025508        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025508        0x0 crtn.32
 .bss           0x00000000c0025508        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0025508        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0025508        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0025508        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0025508        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0025508        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0025508        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025508                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027744                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
