Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f678
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x4d1 D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                voodooXADD
                0x00000000c0000202                doTPAUSE
                0x00000000c000020c                hasLegacyFPU
                0x00000000c0000231                is486
                0x00000000c0000267                goToVM86
                0x00000000c0000298                goToUsermode
                0x00000000c00002c3                switchToThreadASMFirstTime
                0x00000000c00002d1                switchToThreadASM
                0x00000000c0000371                detectCPUID
                0x00000000c0000387                asmQuickAcquireLock
                0x00000000c00003a5                asmQuickReleaseLock
                0x00000000c00003b1                asmAcquireLock
                0x00000000c00003d2                asmReleaseLock
                0x00000000c00003e5                loadGDT
                0x00000000c0000405                isr0
                0x00000000c0000415                isr1
                0x00000000c000041f                isr2
                0x00000000c0000429                isr3
                0x00000000c0000433                isr4
                0x00000000c000043d                isr5
                0x00000000c0000447                isr6
                0x00000000c0000451                isr7
                0x00000000c000045b                isr8
                0x00000000c0000463                isr9
                0x00000000c000046d                isr10
                0x00000000c0000475                isr11
                0x00000000c000047d                isr12
                0x00000000c0000485                isr13
                0x00000000c000048d                isr14
                0x00000000c0000495                isr15
                0x00000000c000049f                isr16
                0x00000000c00004a9                isr17
                0x00000000c00004b3                isr18
                0x00000000c00004bd                isr96
                0x00000000c00004c7                irq0
                0x00000000c00004d1                irq1
                0x00000000c00004db                irq2
                0x00000000c00004e5                irq3
                0x00000000c00004ef                irq4
                0x00000000c00004f9                irq5
                0x00000000c0000503                irq6
                0x00000000c000050d                irq7
                0x00000000c0000517                irq8
                0x00000000c0000521                irq9
                0x00000000c000052b                irq10
                0x00000000c0000535                irq11
                0x00000000c000053f                irq12
                0x00000000c0000549                irq13
                0x00000000c0000553                irq14
                0x00000000c000055d                irq15
                0x00000000c0000567                irq16
                0x00000000c0000571                irq17
                0x00000000c000057b                irq18
                0x00000000c0000585                irq19
                0x00000000c000058f                irq20
                0x00000000c0000599                irq21
                0x00000000c00005a3                irq22
                0x00000000c00005ad                irq23
                0x00000000c00005b7                int_common_stub
                0x00000000c00005e7                syscall_common_stub
 .text          0x00000000c0000621      0x411 acpica/utclib.32
                0x00000000c0000621                memcmp
                0x00000000c000064c                memmove
                0x00000000c0000684                memcpy
                0x00000000c00006ba                memset
                0x00000000c00006d7                strlen
                0x00000000c00006e7                strpbrk
                0x00000000c000070a                strtok
                0x00000000c0000759                strcpy
                0x00000000c0000779                strncpy
                0x00000000c00007aa                strcmp
                0x00000000c00007cb                strchr
                0x00000000c00007e1                strncmp
                0x00000000c0000810                strcat
                0x00000000c0000837                strncat
                0x00000000c0000871                strstr
                0x00000000c00008ae                toupper
                0x00000000c00008c2                tolower
                0x00000000c00008d6                simple_strtoul
 .text          0x00000000c0000a32      0xfc2 core/malloc.32
                0x00000000c0000b9d                dlfree
                0x00000000c0000efb                dlmalloc
                0x00000000c0001438                dlrealloc
                0x00000000c00015ed                dlmemalign
                0x00000000c0001710                dlcalloc
                0x00000000c00017aa                dlcfree
                0x00000000c00017af                dlindependent_calloc
                0x00000000c00017d4                dlindependent_comalloc
                0x00000000c00017eb                dlvalloc
                0x00000000c0001816                dlpvalloc
                0x00000000c000184c                dlmalloc_trim
                0x00000000c0001859                dlmalloc_usable_size
                0x00000000c000188a                dlmallinfo
                0x00000000c0001959                dlmalloc_stats
                0x00000000c000196a                dlmallopt
 .text          0x00000000c00019f4        0x0 libk/string.32
 .text          0x00000000c00019f4       0x51 fs/fat/diskio.32
                0x00000000c00019f4                disk_status
                0x00000000c00019f7                disk_initialize
                0x00000000c00019fa                disk_read
                0x00000000c0001a10                disk_write
                0x00000000c0001a26                disk_ioctl
 .text          0x00000000c0001a45     0x67e6 fs/fat/ff.32
                0x00000000c0004cfb                f_mount
                0x00000000c0004d5d                f_open
                0x00000000c0005199                f_read
                0x00000000c0005419                f_write
                0x00000000c00056d3                f_sync
                0x00000000c00058af                f_close
                0x00000000c00058de                f_lseek
                0x00000000c0005d43                f_opendir
                0x00000000c0005e45                f_closedir
                0x00000000c0005e67                f_readdir
                0x00000000c0005f02                f_stat
                0x00000000c0005f91                f_getfree
                0x00000000c0006179                f_truncate
                0x00000000c0006271                f_unlink
                0x00000000c00063f2                f_mkdir
                0x00000000c000661e                f_rename
                0x00000000c0006911                f_chmod
                0x00000000c00069ef                f_utime
                0x00000000c0006acd                f_getlabel
                0x00000000c0006cc1                f_setlabel
                0x00000000c0006f2e                f_forward
                0x00000000c000710c                f_mkfs
 .text          0x00000000c000822b       0x2d fs/fat/ffsystem.32
                0x00000000c000822b                ff_memalloc
                0x00000000c0008241                ff_memfree
 .text          0x00000000c0008258      0x280 fs/fat/ffunicode.32
                0x00000000c0008258                ff_uni2oem
                0x00000000c00082ee                ff_oem2uni
                0x00000000c000835d                ff_wtoupper
 .text          0x00000000c00084d8      0x70e hal/libresample/samplerate.32
                0x00000000c0008560                src_delete
                0x00000000c000859c                src_process
                0x00000000c00086c4                src_callback_read
                0x00000000c0008825                src_set_ratio
                0x00000000c000887c                src_get_channels
                0x00000000c000889e                src_reset
                0x00000000c00088e2                src_new
                0x00000000c0008970                src_callback_new
                0x00000000c00089d2                src_get_name
                0x00000000c0008a09                src_get_description
                0x00000000c0008a40                src_get_version
                0x00000000c0008a46                src_is_valid_ratio
                0x00000000c0008a60                src_error
                0x00000000c0008a6e                src_strerror
                0x00000000c0008a81                src_simple
                0x00000000c0008ad4                src_short_to_float_array
                0x00000000c0008afa                src_float_to_short_array
                0x00000000c0008b5e                src_int_to_float_array
                0x00000000c0008b84                src_float_to_int_array
 .text          0x00000000c0008be6      0x3f9 hal/libresample/src_linear.32
                0x00000000c0008f3a                linear_get_name
                0x00000000c0008f49                linear_get_description
                0x00000000c0008f58                linear_set_converter
 .text          0x00000000c0008fdf     0x1a31 hal/libresample/src_sinc.32
                0x00000000c000a927                sinc_get_name
                0x00000000c000a93a                sinc_get_description
                0x00000000c000a94d                sinc_set_converter
 .text          0x00000000c000aa10      0x3cf hal/libresample/src_zoh.32
                0x00000000c000ad3a                zoh_get_name
                0x00000000c000ad49                zoh_get_description
                0x00000000c000ad58                zoh_set_converter
 *fill*         0x00000000c000addf        0x1 
 .text          0x00000000c000ade0      0x9d0 core/computer.32
                0x00000000c000ade0                Computer::close(int, int, void*)
                0x00000000c000ae26                Computer::Computer()
                0x00000000c000ae26                Computer::Computer()
                0x00000000c000af8c                Computer::setBootMessage(char const*)
                0x00000000c000af8e                Computer::start()
                0x00000000c000b091                firstTask()
                0x00000000c000b0a0                Computer::detectFeatures()
                0x00000000c000b29a                Computer::displayFeatures()
                0x00000000c000b576                Computer::rdmsr(unsigned int)
                0x00000000c000b5a2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b5da                Computer::nmiEnabled()
                0x00000000c000b5e6                Computer::readCMOS(unsigned char)
                0x00000000c000b602                Computer::enableNMI(bool)
                0x00000000c000b61a                Computer::open(int, int, void*)
                0x00000000c000b6ee                Computer::disableNMI()
                0x00000000c000b6fe                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b71e                Computer::handleNMI()
                0x00000000c000b784                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b7b0      0x1b7 core/gdt.32
                0x00000000c000b7b0                GDTEntry::setBase(unsigned int)
                0x00000000c000b7cc                GDTEntry::setLimit(unsigned int)
                0x00000000c000b7ea                GDT::GDT()
                0x00000000c000b7ea                GDT::GDT()
                0x00000000c000b800                GDT::addEntry(GDTEntry)
                0x00000000c000b83c                GDT::getNumberOfEntries()
                0x00000000c000b844                GDT::flush()
                0x00000000c000b866                GDT::setup()
 .text          0x00000000c000b967       0x61 core/idle.32
                0x00000000c000b967                idleFunction(void*)
 .text          0x00000000c000b9c8      0x45f core/idt.32
                0x00000000c000b9c8                IDTEntry::IDTEntry(bool)
                0x00000000c000b9c8                IDTEntry::IDTEntry(bool)
                0x00000000c000ba36                IDTEntry::setOffset(unsigned int)
                0x00000000c000ba4a                IDT::IDT()
                0x00000000c000ba4a                IDT::IDT()
                0x00000000c000ba4c                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ba54                IDT::addEntry(IDTEntry, int)
                0x00000000c000ba6e                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000baa6                IDT::flush()
                0x00000000c000bac0                IDT::setup()
 .text          0x00000000c000be27      0x20c core/kheap.32
                0x00000000c000be27                sbrk
                0x00000000c000bf3e                mmap
                0x00000000c000bf54                munmap
                0x00000000c000bf6a                liballoc_lock()
                0x00000000c000bf7b                liballoc_unlock()
                0x00000000c000bf8c                liballoc_alloc(int)
                0x00000000c000bfa7                liballoc_free(void*, int)
                0x00000000c000bfc5                realloc
                0x00000000c000bfd9                malloc
                0x00000000c000bfe9                free
                0x00000000c000bff9                rfree
                0x00000000c000c009                calloc
 .text          0x00000000c000c033      0x3a9 core/main.32
                0x00000000c000c033                hwTextMode_loadInData(VgaText*)
                0x00000000c000c078                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000c0c2                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000c116                hwTextMode_update(VgaText*)
                0x00000000c000c117                hwTextMode_updateCursor(VgaText*)
                0x00000000c000c165                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000c1a1                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000c22d                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000c293                setupTextMode()
                0x00000000c000c2e4                kernel_main
 .text          0x00000000c000c3dc      0x504 core/physmgr.32
                0x00000000c000c3dc                Phys::allocateDMA(unsigned long)
                0x00000000c000c480                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c4c8                Phys::setPageState(unsigned long, bool)
                0x00000000c000c501                Phys::getPageState(unsigned long)
                0x00000000c000c522                Phys::freePage(unsigned long)
                0x00000000c000c5af                Phys::allocatePage()
                0x00000000c000c67b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c6b3                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c8e0      0x273 core/pipe.32
                0x00000000c000c8e0                Pipe::isAtty()
                0x00000000c000c8e4                Pipe::~Pipe()
                0x00000000c000c8e4                Pipe::~Pipe()
                0x00000000c000c908                Pipe::~Pipe()
                0x00000000c000c930                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000ca24                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000caec                Pipe::Pipe(int)
                0x00000000c000caec                Pipe::Pipe(int)
 *fill*         0x00000000c000cb53        0x1 
 .text          0x00000000c000cb54      0xf67 core/terminal.32
                0x00000000c000cb54                VgaText::isAtty()
                0x00000000c000cb58                VgaText::~VgaText()
                0x00000000c000cb58                VgaText::~VgaText()
                0x00000000c000cb7c                VgaText::~VgaText()
                0x00000000c000cba6                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000cbc6                setTerminalScrollLock(bool)
                0x00000000c000cbc7                addToTerminalCycle(VgaText*)
                0x00000000c000cbf4                installVgaTextImplementation()
                0x00000000c000cc09                scrollTerminalScrollLock(int)
                0x00000000c000cc0a                VgaText::load()
                0x00000000c000cc5e                VgaText::updateCursor()
                0x00000000c000cc78                VgaText::showCursor(bool)
                0x00000000c000cc88                VgaText::disableBlink(bool)
                0x00000000c000ccc2                VgaText::doANSI_SGR(int)
                0x00000000c000cd4e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000cd64                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000cd7a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000cd9a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000cdac                VgaText::scrollScreen()
                0x00000000c000ce40                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ce52                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ceb2                VgaText::getCursorX()
                0x00000000c000cebe                VgaText::getCursorY()
                0x00000000c000ceca                VgaText::setCursor(int, int)
                0x00000000c000cee8                VgaText::setCursorX(int)
                0x00000000c000cf04                VgaText::setCursorY(int)
                0x00000000c000cf20                VgaText::incrementCursor(bool)
                0x00000000c000cf88                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cfe2                VgaText::updateDiskUsage()
                0x00000000c000d148                VgaText::updateTitle()
                0x00000000c000d18e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000d19e                VgaText::setTitleColour(VgaColour)
                0x00000000c000d1ae                VgaText::setTitle(char*)
                0x00000000c000d1d4                VgaText::decrementCursor(bool)
                0x00000000c000d1fc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000d2f8                VgaText::isShowingCursor()
                0x00000000c000d304                VgaText::isBlinkDisabled()
                0x00000000c000d312                VgaText::setCursorHeight(int)
                0x00000000c000d330                VgaText::getCursorHeight()
                0x00000000c000d33b                setActiveTerminal(VgaText*)
                0x00000000c000d3ed                doTerminalCycle()
                0x00000000c000d40a                VgaText::doUpdate()
                0x00000000c000d41c                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d5de                VgaText::clearScreen()
                0x00000000c000d642                VgaText::putchar(char)
                0x00000000c000d75c                VgaText::puts(char const*)
                0x00000000c000d782                VgaText::putx(unsigned int)
                0x00000000c000d7c8                VgaText::VgaText(char const*)
                0x00000000c000d7c8                VgaText::VgaText(char const*)
                0x00000000c000d95a                VgaText::receiveKey(unsigned char)
                0x00000000c000da42                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000da96                newTerminal(char*)
 *fill*         0x00000000c000dabb        0x1 
 .text          0x00000000c000dabc      0x18f core/tss.32
                0x00000000c000dabc                TSS::TSS()
                0x00000000c000dabc                TSS::TSS()
                0x00000000c000daca                TSS::setESP(unsigned long)
                0x00000000c000dadc                TSS::flush()
                0x00000000c000dafc                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000dc4b        0x1 
 .text          0x00000000c000dc4c      0x482 core/unixfile.32
                0x00000000c000dc4c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000dca2                ReservedFilename::isAtty()
                0x00000000c000dcbe                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000dd1c                UnixFile::getFileDescriptor()
                0x00000000c000dd24                UnixFile::UnixFile(int)
                0x00000000c000dd24                UnixFile::UnixFile(int)
                0x00000000c000de94                ReservedFilename::ReservedFilename(int)
                0x00000000c000de94                ReservedFilename::ReservedFilename(int)
                0x00000000c000dec6                UnixFile::~UnixFile()
                0x00000000c000dec6                UnixFile::~UnixFile()
                0x00000000c000df5e                UnixFile::~UnixFile()
                0x00000000c000df86                ReservedFilename::~ReservedFilename()
                0x00000000c000df86                ReservedFilename::~ReservedFilename()
                0x00000000c000dfaa                ReservedFilename::~ReservedFilename()
                0x00000000c000dfd1                getFromFileDescriptor(int)
 .text          0x00000000c000e0ce      0xecf core/virtmgr.32
                0x00000000c000e0ce                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000e105                Virt::getPageState(unsigned long)
                0x00000000c000e12c                Virt::allocateKernelVirtualPages(int)
                0x00000000c000e23d                Virt::virtualMemorySetup()
                0x00000000c000e2b9                Virt::getAKernelVAS()
                0x00000000c000e2bf                Virt::setupPageSwapping(int)
                0x00000000c000e3da                VAS::VAS()
                0x00000000c000e3da                VAS::VAS()
                0x00000000c000e40a                VAS::VAS(VAS*)
                0x00000000c000e40a                VAS::VAS(VAS*)
                0x00000000c000e42e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e45a                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e479                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e59a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e5be                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e5d8                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e61c                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e656                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e68c                VAS::~VAS()
                0x00000000c000e68c                VAS::~VAS()
                0x00000000c000e7f8                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e8fa                VAS::allocatePages(int, int)
                0x00000000c000eacc                VAS::setCPUSpecific(unsigned long)
                0x00000000c000eaea                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000ebb4                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000eca6                VAS::VAS(bool)
                0x00000000c000eca6                VAS::VAS(bool)
                0x00000000c000eed6                mapVASFirstTime
 .text          0x00000000c000ef9d       0x93 coreobjs/c++.32
                0x00000000c000ef9d                __cxa_atexit
                0x00000000c000efa0                __cxa_finalize
                0x00000000c000efa1                __stack_chk_fail
                0x00000000c000f001                __cxa_pure_virtual
                0x00000000c000f012                operator new(unsigned long)
                0x00000000c000f017                operator new[](unsigned long)
                0x00000000c000f01c                operator delete(void*)
                0x00000000c000f021                operator delete(void*, unsigned long)
                0x00000000c000f026                operator delete[](void*)
                0x00000000c000f02b                operator delete[](void*, unsigned long)
 .text          0x00000000c000f030      0x23d dbg/kconsole.32
                0x00000000c000f030                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000f0d4                Dbg::logc(char)
                0x00000000c000f0eb                Dbg::logs(char*)
                0x00000000c000f108                Dbg::logWriteInt(unsigned int)
                0x00000000c000f126                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000f147                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000f26d        0x1 
 .text          0x00000000c000f26e      0xb68 fs/vfs.32
                0x00000000c000f26e                File::read(unsigned long long, void*, int*)
                0x00000000c000f2c6                File::write(unsigned long long, void*, int*)
                0x00000000c000f31e                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f376                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f3a4                File::isAtty()
                0x00000000c000f3a8                Directory::isAtty()
                0x00000000c000f3ac                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f3b2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f3b8                File::~File()
                0x00000000c000f3b8                File::~File()
                0x00000000c000f3dc                File::~File()
                0x00000000c000f406                Directory::~Directory()
                0x00000000c000f406                Directory::~Directory()
                0x00000000c000f42a                Directory::~Directory()
                0x00000000c000f454                Filesystem::Filesystem()
                0x00000000c000f454                Filesystem::Filesystem()
                0x00000000c000f478                Filesystem::~Filesystem()
                0x00000000c000f478                Filesystem::~Filesystem()
                0x00000000c000f486                Filesystem::~Filesystem()
                0x00000000c000f4aa                initVFS()
                0x00000000c000f4d4                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f67e                File::File(char const*, Process*)
                0x00000000c000f67e                File::File(char const*, Process*)
                0x00000000c000f6e2                File::open(FileOpenMode)
                0x00000000c000f740                File::close()
                0x00000000c000f7a0                File::seek(unsigned long long)
                0x00000000c000f7f6                File::tell(unsigned long long*)
                0x00000000c000f846                File::rewind()
                0x00000000c000f85a                File::unlink()
                0x00000000c000f8a6                File::rename(char const*)
                0x00000000c000f8f4                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f950                File::exists()
                0x00000000c000f98e                File::stat(unsigned long long*, bool*)
                0x00000000c000f9ef                getcwd(Process*, char*, int)
                0x00000000c000fa19                setcwd(Process*, char*)
                0x00000000c000fb40                Directory::Directory(char const*, Process*)
                0x00000000c000fb40                Directory::Directory(char const*, Process*)
                0x00000000c000fba4                Directory::open()
                0x00000000c000fc00                Directory::close()
                0x00000000c000fc60                Directory::unlink()
                0x00000000c000fcac                Directory::rename(char const*)
                0x00000000c000fcfa                Directory::exists()
                0x00000000c000fd38                Directory::read(dirent*)
                0x00000000c000fd84                Directory::create()
                0x00000000c000fdd0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fdd6       0x84 hal/bus.32
                0x00000000c000fdd6                Bus::Bus(char const*)
                0x00000000c000fdd6                Bus::Bus(char const*)
                0x00000000c000fe0c                Bus::~Bus()
                0x00000000c000fe0c                Bus::~Bus()
                0x00000000c000fe30                Bus::~Bus()
 .text          0x00000000c000fe5a      0x14e hal/buzzer.32
                0x00000000c000fe5a                Buzzer::Buzzer(char const*)
                0x00000000c000fe5a                Buzzer::Buzzer(char const*)
                0x00000000c000fe9e                Buzzer::~Buzzer()
                0x00000000c000fe9e                Buzzer::~Buzzer()
                0x00000000c000fec2                Buzzer::~Buzzer()
                0x00000000c000feec                Buzzer::stop()
                0x00000000c000feff                beepThread(void*)
                0x00000000c000ff3a                Buzzer::beep(int, int, bool)
 .text          0x00000000c000ffa8      0x435 hal/clock.32
                0x00000000c000ffa8                loadClockSettings()
                0x00000000c000ffc2                Clock::Clock(char const*)
                0x00000000c000ffc2                Clock::Clock(char const*)
                0x00000000c000fff8                Clock::~Clock()
                0x00000000c000fff8                Clock::~Clock()
                0x00000000c001001c                Clock::~Clock()
                0x00000000c0010046                Clock::timeInSecondsLocal()
                0x00000000c001008e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00100e7                datetimeToSeconds(datetime_t)
                0x00000000c0010214                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0010274                secondsToDatetime(unsigned long long)
                0x00000000c00103b8                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00103dd        0x1 
 .text          0x00000000c00103de      0x500 hal/device.32
                0x00000000c00103de                Device::hibernate()
                0x00000000c00103e0                Device::wake()
                0x00000000c00103e2                Device::detect()
                0x00000000c00103e4                Device::disableLegacy()
                0x00000000c00103e6                Device::powerSaving(PowerSavingLevel)
                0x00000000c00103e8                DriverlessDevice::close(int, int, void*)
                0x00000000c00103ec                DriverlessDevice::detect()
                0x00000000c00103ee                DriverlessDevice::open(int, int, void*)
                0x00000000c0010402                Device::~Device()
                0x00000000c0010402                Device::~Device()
                0x00000000c0010410                Device::~Device()
                0x00000000c0010438                Device::findAndLoadDriver()
                0x00000000c001043a                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001045c                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00104b0                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001050e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001055c                Device::addChild(Device*)
                0x00000000c00105a0                Device::removeAllChildren()
                0x00000000c00105e6                Device::hibernateAll()
                0x00000000c0010616                Device::wakeAll()
                0x00000000c0010646                Device::detectAll()
                0x00000000c0010676                Device::disableLegacyAll()
                0x00000000c00106a6                Device::loadDriversForAll()
                0x00000000c00106d2                Device::closeAll()
                0x00000000c0010708                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c001073e                Device::setName(char const*)
                0x00000000c001074c                Device::Device(char const*)
                0x00000000c001074c                Device::Device(char const*)
                0x00000000c001083e                Device::getName()
                0x00000000c0010848                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010848                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010870                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00108b4                getDevicesOfType(DeviceType)
 .text          0x00000000c00108de       0x84 hal/diskctrl.32
                0x00000000c00108de                HardDiskController::HardDiskController(char const*)
                0x00000000c00108de                HardDiskController::HardDiskController(char const*)
                0x00000000c0010914                HardDiskController::~HardDiskController()
                0x00000000c0010914                HardDiskController::~HardDiskController()
                0x00000000c0010938                HardDiskController::~HardDiskController()
 .text          0x00000000c0010962       0xde hal/diskphys.32
                0x00000000c0010962                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010962                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00109ca                PhysicalDisk::startCache()
                0x00000000c00109f2                PhysicalDisk::~PhysicalDisk()
                0x00000000c00109f2                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010a16                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0010a40      0x142 hal/fpu.32
                0x00000000c0010a40                FPU::FPU(char const*)
                0x00000000c0010a40                FPU::FPU(char const*)
                0x00000000c0010a76                FPU::~FPU()
                0x00000000c0010a76                FPU::~FPU()
                0x00000000c0010a9a                FPU::~FPU()
                0x00000000c0010ac4                setupFPU()
 .text          0x00000000c0010b82     0x12db hal/intctrl.32
                0x00000000c0010b82                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010bba                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010c0c                doubleFault(regs*, void*)
                0x00000000c0010c26                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010cc2                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010d6a                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010df1                nmiHandler(regs*, void*)
                0x00000000c0010dff                int_handler
                0x00000000c0010e9a                InterruptController::InterruptController(char const*)
                0x00000000c0010e9a                InterruptController::InterruptController(char const*)
                0x00000000c0010f40                InterruptController::~InterruptController()
                0x00000000c0010f40                InterruptController::~InterruptController()
                0x00000000c0010f64                InterruptController::~InterruptController()
                0x00000000c0010f8e                displayDebugInfo(regs*)
                0x00000000c00113a5                x87EmulHandler(regs*, void*)
                0x00000000c0011408                gpFault(regs*, void*)
                0x00000000c0011441                pgFault(regs*, void*)
                0x00000000c0011458                otherISRHandler(regs*, void*)
                0x00000000c0011477                opcodeFault(regs*, void*)
                0x00000000c0011a30                displayProgramFault(char const*)
                0x00000000c0011a58                setupInterruptController()
                0x00000000c0011e10                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0011e5d        0x1 
 .text          0x00000000c0011e5e      0x61c hal/keybrd.32
                0x00000000c0011e5e                startGUI(void*)
                0x00000000c0011ed0                sendKeyToTerminal(unsigned char)
                0x00000000c0011f41                sendKeyboardToken(KeyboardToken)
                0x00000000c001232a                clearInternalKeybuffer(VgaText*)
                0x00000000c001235f                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00123f0                Keyboard::Keyboard(char const*)
                0x00000000c00123f0                Keyboard::Keyboard(char const*)
                0x00000000c001242c                Keyboard::~Keyboard()
                0x00000000c001242c                Keyboard::~Keyboard()
                0x00000000c0012450                Keyboard::~Keyboard()
 .text          0x00000000c001247a      0x400 hal/logidisk.32
                0x00000000c001247a                LogicalDisk::close(int, int, void*)
                0x00000000c001247e                LogicalDisk::~LogicalDisk()
                0x00000000c001247e                LogicalDisk::~LogicalDisk()
                0x00000000c00124a2                LogicalDisk::~LogicalDisk()
                0x00000000c00124cc                LogicalDisk::open(int, int, void*)
                0x00000000c00124e0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0012518                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c001255e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001255e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012614                LogicalDisk::assignDriveLetter()
                0x00000000c00126ca                LogicalDisk::mount()
                0x00000000c001273c                LogicalDisk::unmount()
                0x00000000c001274c                LogicalDisk::unassignDriveLetter()
                0x00000000c00127a2                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c001280e                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c001287a       0x84 hal/mouse.32
                0x00000000c001287a                Mouse::Mouse(char const*)
                0x00000000c001287a                Mouse::Mouse(char const*)
                0x00000000c00128b0                Mouse::~Mouse()
                0x00000000c00128b0                Mouse::~Mouse()
                0x00000000c00128d4                Mouse::~Mouse()
 .text          0x00000000c00128fe      0x339 hal/partition.32
                0x00000000c00128fe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00129a6                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012c37        0x1 
 .text          0x00000000c0012c38      0x2e7 hal/timer.32
                0x00000000c0012c38                Timer::Timer(char const*)
                0x00000000c0012c38                Timer::Timer(char const*)
                0x00000000c0012c6e                Timer::~Timer()
                0x00000000c0012c6e                Timer::~Timer()
                0x00000000c0012c92                Timer::~Timer()
                0x00000000c0012cbc                Timer::read()
                0x00000000c0012cc7                timerHandler(unsigned long long)
                0x00000000c0012dfe                setupTimer(int)
 *fill*         0x00000000c0012f1f        0x1 
 .text          0x00000000c0012f20      0x2d1 hal/vcache.32
                0x00000000c0012f20                VCache::VCache(PhysicalDisk*)
                0x00000000c0012f20                VCache::VCache(PhysicalDisk*)
                0x00000000c0013010                VCache::writeWriteBuffer()
                0x00000000c001304c                VCache::~VCache()
                0x00000000c001304c                VCache::~VCache()
                0x00000000c001308c                VCache::~VCache()
                0x00000000c00130b4                VCache::write(unsigned long long, int, void*)
                0x00000000c0013198                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00131f1        0x1 
 .text          0x00000000c00131f2      0x26d hal/video.32
                0x00000000c00131f2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c001323c                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00132ba                Video::clearScreen(unsigned int)
                0x00000000c00132ee                Video::putpixel(int, int, unsigned int)
                0x00000000c00132fc                Video::Video(char const*)
                0x00000000c00132fc                Video::Video(char const*)
                0x00000000c0013332                Video::~Video()
                0x00000000c0013332                Video::~Video()
                0x00000000c0013356                Video::~Video()
                0x00000000c0013380                Video::isMonochrome()
                0x00000000c001338c                Video::getWidth()
                0x00000000c0013398                Video::getHeight()
                0x00000000c00133a4                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c001345f        0x1 
 .text          0x00000000c0013460      0xd68 hw/acpi.32
                0x00000000c0013460                ACPI::close(int, int, void*)
                0x00000000c0013519                findRSDP()
                0x00000000c00135a3                loadACPITables(unsigned char*)
                0x00000000c00137ca                findRSDT(unsigned char*)
                0x00000000c00138e8                findDataTable(unsigned char*, char*)
                0x00000000c0013984                scanMADT()
                0x00000000c0013d40                ACPI::ACPI()
                0x00000000c0013d40                ACPI::ACPI()
                0x00000000c0013da0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013e82                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013f92                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013f98                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0013fea                ACPI::open(int, int, void*)
                0x00000000c00141b0                ACPI::sleep()
 .text          0x00000000c00141c8     0x17ae hw/cpu.32
                0x00000000c00141c8                CPU::close(int, int, void*)
                0x00000000c00141cb                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0014370                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0014629                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0014645                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c001465d                AMD_K6_writeback(int, int, int)
                0x00000000c00146d0                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0014753                cpuidCheckEDX(unsigned int)
                0x00000000c0014780                cpuidCheckECX(unsigned int)
                0x00000000c00147ad                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c00147da                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0014807                getCPUNumber()
                0x00000000c001480a                thisCPU()
                0x00000000c001481e                CPU::CPU()
                0x00000000c001481e                CPU::CPU()
                0x00000000c00148ac                CPU::displayFeatures()
                0x00000000c0014b28                CPU::detectFeatures()
                0x00000000c00154fe                CPU::setupSMEP()
                0x00000000c0015518                CPU::setupUMIP()
                0x00000000c0015530                CPU::setupTSC()
                0x00000000c0015548                CPU::setupLargePages()
                0x00000000c0015560                CPU::setupPAT()
                0x00000000c001559c                CPU::setupMTRR()
                0x00000000c001559e                CPU::setupGlobalPages()
                0x00000000c00155b4                CPU::allowUsermodeDataAccess()
                0x00000000c00155c6                CPU::prohibitUsermodeDataAccess()
                0x00000000c00155d8                CPU::setupSMAP()
                0x00000000c00155fe                CPU::setupFeatures()
                0x00000000c00156a0                CPU::open(int, int, void*)
                0x00000000c0015776                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0015976        0x0 hw/ports.32
 .text          0x00000000c0015976      0x354 krnl/panic.32
                0x00000000c0015976                Krnl::panic(char const*)
 .text          0x00000000c0015cca      0x511 reg/registry.32
                0x00000000c0015cca                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015e31                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015f90                Reg::getLine(char*, char*, char*)
                0x00000000c0015fc7                Reg::readInt(char*, char*, int*)
                0x00000000c00160b1                Reg::readString(char*, char*, char*, int)
                0x00000000c0016132                Reg::readBool(char*, char*, bool*)
                0x00000000c0016157                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0016183                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00161af                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00161db       0x18 sys/sc_exit.32
                0x00000000c00161db                Sys::exit(regs*)
 .text          0x00000000c00161f3       0x95 sys/sc_loaddll.32
                0x00000000c00161f3                Sys::loadDLL(regs*)
 .text          0x00000000c0016288       0x68 sys/sc_read.32
                0x00000000c0016288                Sys::read(regs*)
 .text          0x00000000c00162f0       0x55 sys/sc_sbrk.32
                0x00000000c00162f0                Sys::sbrk(regs*)
 .text          0x00000000c0016345       0x68 sys/sc_write.32
                0x00000000c0016345                Sys::write(regs*)
 .text          0x00000000c00163ad       0x1a sys/sc_yield.32
                0x00000000c00163ad                Sys::yield(regs*)
 .text          0x00000000c00163c7      0xfe6 sys/syscalls.32
                0x00000000c00163c7                sysCallGetPID(regs*)
                0x00000000c00163d7                sysCallSeekDir(regs*)
                0x00000000c00163dc                sysCallTellDir(regs*)
                0x00000000c00163e1                sysCallVerify(regs*)
                0x00000000c00163eb                sysCallFork(regs*)
                0x00000000c00163f2                sysCallExecve(regs*)
                0x00000000c00163f9                sysCallGetArgc(regs*)
                0x00000000c001640d                sysFormatDisk(regs*)
                0x00000000c0016470                sysSetDiskVolumeLabel(regs*)
                0x00000000c00164b8                sysGetDiskVolumeLabel(regs*)
                0x00000000c001650b                sysShutdown(regs*)
                0x00000000c0016586                sysCallGetCwd(regs*)
                0x00000000c00165ac                sysCallSetCwd(regs*)
                0x00000000c00165ce                sysCallRealpath(regs*)
                0x00000000c001661b                sysCallReadDir(regs*)
                0x00000000c00166ae                sysCallIsATTY(regs*)
                0x00000000c0016706                sysCallSeek(regs*)
                0x00000000c001676c                sysCallTell(regs*)
                0x00000000c00167e7                sysCallSizeFromFilename(regs*)
                0x00000000c0016895                sysCallSize(regs*)
                0x00000000c0016916                sysCallClose(regs*)
                0x00000000c0016999                sysCallOpenDir(regs*)
                0x00000000c0016a04                sysCallMakeDir(regs*)
                0x00000000c0016a5f                sysCallCloseDir(regs*)
                0x00000000c0016ac0                sysCallWait(regs*)
                0x00000000c0016ae1                sysCallRmdir(regs*)
                0x00000000c0016b34                sysCallUnlink(regs*)
                0x00000000c0016b87                sysCallGetArgv(regs*)
                0x00000000c0016bd3                sysCallTTYName(regs*)
                0x00000000c0016c54                sysCallGetEnv(regs*)
                0x00000000c0016cab                sysCallUSleep(regs*)
                0x00000000c0016ced                sysCallSpawn(regs*)
                0x00000000c0016d4c                sysAppSettings(regs*)
                0x00000000c0016e71                sysSetFatAttrib(regs*)
                0x00000000c0016ed4                sysPanic(regs*)
                0x00000000c0016efb                sysPipe(regs*)
                0x00000000c0016f40                sysGetUnixTime(regs*)
                0x00000000c0016f54                string_ends_with(char const*, char const*)
                0x00000000c0016f9e                sysCallOpen(regs*)
                0x00000000c00171b2                setupSystemCalls()
                0x00000000c001736b                systemCall(regs*, void*)
 .text          0x00000000c00173ad     0x11c1 thr/elf.32
                0x00000000c00173ad                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0017624                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c001783a                Thr::runtimeReferenceHelper()
                0x00000000c001784d                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001789c                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017b5d                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00182fb                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001832d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0018364                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c001837e                Thr::loadDLL(char const*, bool)
                0x00000000c0018544                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001856e     0x1002 thr/prcssthr.32
                0x00000000c001856e                changeTSS
                0x00000000c001859c                Process::addArgs(char**)
                0x00000000c00185fe                Process::Process(char const*, Process*, char**)
                0x00000000c00185fe                Process::Process(char const*, Process*, char**)
                0x00000000c00187ba                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00187ba                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0018941                disableIRQs()
                0x00000000c001894e                getIRQNestingLevel()
                0x00000000c0018954                enableIRQs()
                0x00000000c0018963                lockScheduler()
                0x00000000c0018965                unlockScheduler()
                0x00000000c0018967                userModeEntryPoint(void*)
                0x00000000c001898a                lockStuff()
                0x00000000c001899b                taskStartupFunction
                0x00000000c00189a4                updateTimeUsed()
                0x00000000c0018a02                switchToThread(ThreadControlBlock*)
                0x00000000c0018a58                Semaphore::Semaphore(int)
                0x00000000c0018a58                Semaphore::Semaphore(int)
                0x00000000c0018a86                Mutex::Mutex()
                0x00000000c0018a86                Mutex::Mutex()
                0x00000000c0018a98                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018b7a                Process::createUserThread()
                0x00000000c0018b97                setupMultitasking(void (*)())
                0x00000000c0018cac                schedule()
                0x00000000c0018d31                unlockStuff()
                0x00000000c0018d66                Semaphore::tryAcquire()
                0x00000000c0018d94                Semaphore::assertLocked(char const*)
                0x00000000c0018dc4                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0018e05                blockTask(TaskState)
                0x00000000c0018e26                waitTask(int, int*, int)
                0x00000000c0018e68                nanoSleepUntil(unsigned long long)
                0x00000000c0018ec1                nanoSleep(unsigned long long)
                0x00000000c0018ed6                sleep(unsigned long long)
                0x00000000c0018ef4                Semaphore::acquire()
                0x00000000c0018f59                taskReturned
                0x00000000c0018f87                unblockTask(ThreadControlBlock*)
                0x00000000c0019034                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00192dd                cleanerTaskFunction(void*)
                0x00000000c0019390                terminateTask(int)
                0x00000000c0019472                Thr::terminateFromIRQ(int)
                0x00000000c0019480                Semaphore::release()
 .text          0x00000000c0019570      0x8bf vm86/vm8086.32
                0x00000000c0019570                Vm::vm8086EntryPoint(void*)
                0x00000000c001959b                Vm::inbv(unsigned short)
                0x00000000c00195a1                Vm::outbv(unsigned short, unsigned char)
                0x00000000c00195ab                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c00195bb                Vm::getSegment(unsigned int)
                0x00000000c00195c3                Vm::getOffset(unsigned int)
                0x00000000c00195c8                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00196f7                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019781                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019792                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c00197a4                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00197b5                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c00197ca                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00197e0                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00197f5                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019e2f        0x1 
 .text          0x00000000c0019e30     0x112f fs/fat/vfslink.32
                0x00000000c0019e30                FAT::getName()
                0x00000000c0019e36                FAT::tell(void*, unsigned long long*)
                0x00000000c0019e6a                FAT::stat(void*, unsigned long long*)
                0x00000000c0019e9e                FAT::~FAT()
                0x00000000c0019e9e                FAT::~FAT()
                0x00000000c0019ec2                FAT::~FAT()
                0x00000000c0019eea                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019f88                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c001a042                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a226                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a42c                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a534                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a58e                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a5e8                FAT::close(void*)
                0x00000000c001a634                FAT::closeDir(void*)
                0x00000000c001a680                FAT::seek(void*, unsigned long long)
                0x00000000c001a6d4                fatWrapperReadDisk
                0x00000000c001a71f                fatWrapperWriteDisk
                0x00000000c001a76a                fatWrapperIoctl
                0x00000000c001a87a                FAT::FAT()
                0x00000000c001a87a                FAT::FAT()
                0x00000000c001a8cc                FAT::fixFilepath(char*)
                0x00000000c001a904                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001aa30                FAT::openDir(char const*, void**)
                0x00000000c001aad6                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001abc2                FAT::unlink(char const*)
                0x00000000c001ac3c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001adb6                FAT::rename(char const*, char const*)
                0x00000000c001ae7a                FAT::mkdir(char const*)
                0x00000000c001aef4                FAT::exists(char const*)
 *fill*         0x00000000c001af5f        0x1 
 .text          0x00000000c001af60      0xbdd fs/iso9660/vfslink.32
                0x00000000c001af60                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001af66                ISO9660::seek(void*, unsigned long long)
                0x00000000c001af96                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001afba                ISO9660::getName()
                0x00000000c001afc0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001afe4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001afea                ISO9660::unlink(char const*)
                0x00000000c001aff0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001aff6                ISO9660::rename(char const*, char const*)
                0x00000000c001affc                ISO9660::mkdir(char const*)
                0x00000000c001b002                ISO9660::close(void*)
                0x00000000c001b024                ISO9660::closeDir(void*)
                0x00000000c001b046                ISO9660::~ISO9660()
                0x00000000c001b046                ISO9660::~ISO9660()
                0x00000000c001b06a                ISO9660::~ISO9660()
                0x00000000c001b091                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b0d3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b13a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b18a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b3ce                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b659                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001b6ae                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b881                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b910                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b9aa                ISO9660::exists(char const*)
                0x00000000c001b9ce                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ba62                ISO9660::openDir(char const*, void**)
                0x00000000c001bb1a                ISO9660::ISO9660()
                0x00000000c001bb1a                ISO9660::ISO9660()
 *fill*         0x00000000c001bb3d        0x1 
 .text          0x00000000c001bb3e      0x248 hal/sound/sndchannel.32
                0x00000000c001bb3e                SoundChannel::~SoundChannel()
                0x00000000c001bb3e                SoundChannel::~SoundChannel()
                0x00000000c001bb5a                SoundChannel::setSpeed(float)
                0x00000000c001bb66                SoundChannel::getSpeed()
                0x00000000c001bb6e                SoundChannel::setVolume(int)
                0x00000000c001bb8a                SoundChannel::getVolume()
                0x00000000c001bb92                SoundChannel::pause()
                0x00000000c001bb9c                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bb9c                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bc96                SoundChannel::play()
                0x00000000c001bca0                SoundChannel::paused()
                0x00000000c001bca8                SoundChannel::getSampleRate()
                0x00000000c001bcb0                SoundChannel::getBits()
                0x00000000c001bcb8                SoundChannel::getBufferUsed()
                0x00000000c001bcc0                SoundChannel::getBufferSize()
                0x00000000c001bcc8                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001bd3a                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001bd86      0x30f hal/sound/sndhw.32
                0x00000000c001bd86                SoundDevice::SoundDevice(char const*)
                0x00000000c001bd86                SoundDevice::SoundDevice(char const*)
                0x00000000c001bdf2                SoundDevice::~SoundDevice()
                0x00000000c001bdf2                SoundDevice::~SoundDevice()
                0x00000000c001be6c                SoundDevice::~SoundDevice()
                0x00000000c001be96                SoundDevice::getFreeChannelNum()
                0x00000000c001beb0                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001bf20                SoundDevice::removeChannel(int)
                0x00000000c001bf52                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001bfbe                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001c095        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c095        0x1 
 .text          0x00000000c001c096      0x6e9 hw/bus/pci.32
                0x00000000c001c096                PCI::open(int, int, void*)
                0x00000000c001c0aa                PCI::close(int, int, void*)
                0x00000000c001c0ae                PCI::PCI()
                0x00000000c001c0ae                PCI::PCI()
                0x00000000c001c130                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c178                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c19a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1be                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c202                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c226                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c248                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c26a                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c28e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c2ee                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c35a                PCI::checkBus(unsigned char)
                0x00000000c001c380                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c4f0                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c6c0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c72c                PCI::detect()
 *fill*         0x00000000c001c77f        0x1 
 .text          0x00000000c001c780      0xc84 hw/diskctrl/ide.32
                0x00000000c001c780                IDE::close(int, int, void*)
                0x00000000c001c784                IDE::IDE()
                0x00000000c001c784                IDE::IDE()
                0x00000000c001c7b8                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c7ca                selectDrive(unsigned char, unsigned char)
                0x00000000c001c7cc                IDE::getBase(unsigned char)
                0x00000000c001c7de                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c89e                IDE::read(unsigned char, unsigned char)
                0x00000000c001c94c                IDE::waitInterrupt(unsigned char)
                0x00000000c001c9b8                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c9d4                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c9f0                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ca36                IDE::open(int, int, void*)
                0x00000000c001ce48                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001cf14                IDE::detect()
                0x00000000c001d1fe                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d394                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d404      0x64f hw/diskphys/ata.32
                0x00000000c001d404                ATA::close(int, int, void*)
                0x00000000c001d428                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d42a                ATA::ATA()
                0x00000000c001d42a                ATA::ATA()
                0x00000000c001d458                ATA::flush(bool)
                0x00000000c001d4a2                ATA::readyForCommand()
                0x00000000c001d4f2                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d894                ATA::read(unsigned long long, int, void*)
                0x00000000c001d8fc                ATA::write(unsigned long long, int, void*)
                0x00000000c001d964                ATA::detectCHS()
                0x00000000c001d98e                ATA::open(int, int, void*)
 *fill*         0x00000000c001da53        0x1 
 .text          0x00000000c001da54      0x5ae hw/diskphys/atapi.32
                0x00000000c001da54                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001da5a                ATAPI::close(int, int, void*)
                0x00000000c001da7e                ATAPI::ATAPI()
                0x00000000c001da7e                ATAPI::ATAPI()
                0x00000000c001daac                ATAPI::readyForCommand()
                0x00000000c001dafc                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ddbc                ATAPI::diskRemoved()
                0x00000000c001ddd8                ATAPI::eject()
                0x00000000c001de1e                ATAPI::diskInserted()
                0x00000000c001de4c                ATAPI::detectMedia()
                0x00000000c001df08                ATAPI::open(int, int, void*)
                0x00000000c001df88                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001e002       0x8e hw/fpu/avx.32
                0x00000000c001e002                AVX::open(int, int, void*)
                0x00000000c001e014                AVX::close(int, int, void*)
                0x00000000c001e026                AVX::available()
                0x00000000c001e038                AVX::save(void*)
                0x00000000c001e050                AVX::load(void*)
                0x00000000c001e068                AVX::AVX()
                0x00000000c001e068                AVX::AVX()
 .text          0x00000000c001e090       0x90 hw/fpu/mmx.32
                0x00000000c001e090                MMX::available()
                0x00000000c001e0a4                MMX::open(int, int, void*)
                0x00000000c001e0b6                MMX::close(int, int, void*)
                0x00000000c001e0c8                MMX::save(void*)
                0x00000000c001e0e0                MMX::load(void*)
                0x00000000c001e0f8                MMX::MMX()
                0x00000000c001e0f8                MMX::MMX()
 .text          0x00000000c001e120       0x96 hw/fpu/sse.32
                0x00000000c001e120                SSE::open(int, int, void*)
                0x00000000c001e132                SSE::close(int, int, void*)
                0x00000000c001e144                SSE::available()
                0x00000000c001e15e                SSE::save(void*)
                0x00000000c001e176                SSE::load(void*)
                0x00000000c001e18e                SSE::SSE()
                0x00000000c001e18e                SSE::SSE()
 .text          0x00000000c001e1b6       0x8e hw/fpu/x87.32
                0x00000000c001e1b6                x87::open(int, int, void*)
                0x00000000c001e1c8                x87::close(int, int, void*)
                0x00000000c001e1da                x87::available()
                0x00000000c001e1ec                x87::save(void*)
                0x00000000c001e204                x87::load(void*)
                0x00000000c001e21c                x87::x87()
                0x00000000c001e21c                x87::x87()
 .text          0x00000000c001e244      0x63b hw/intctrl/apic.32
                0x00000000c001e244                APIC::disable()
                0x00000000c001e246                APIC::close(int, int, void*)
                0x00000000c001e268                IOAPIC::close(int, int, void*)
                0x00000000c001e26e                APIC::io_wait()
                0x00000000c001e274                APIC::getBase()
                0x00000000c001e2b6                APIC::eoi(unsigned char)
                0x00000000c001e2e4                APIC::open(int, int, void*)
                0x00000000c001e3ae                IOAPIC::IOAPIC()
                0x00000000c001e3ae                IOAPIC::IOAPIC()
                0x00000000c001e3d6                APIC::APIC()
                0x00000000c001e3d6                APIC::APIC()
                0x00000000c001e4b2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e4e4                IOAPIC::read(int)
                0x00000000c001e50c                IOAPIC::open(int, int, void*)
                0x00000000c001e614                IOAPIC::write(int, int)
                0x00000000c001e640                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001e706                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001e87f        0x1 
 .text          0x00000000c001e880      0x3f3 hw/intctrl/pic.32
                0x00000000c001e880                PIC::disable()
                0x00000000c001e8ae                PIC::close(int, int, void*)
                0x00000000c001e8d0                PIC::PIC()
                0x00000000c001e8d0                PIC::PIC()
                0x00000000c001e9ac                PIC::ioWait()
                0x00000000c001e9b2                PIC::getIRQReg(int)
                0x00000000c001ea24                PIC::eoi(unsigned char)
                0x00000000c001eabc                PIC::remap()
                0x00000000c001ec34                PIC::open(int, int, void*)
 *fill*         0x00000000c001ec73        0x1 
 .text          0x00000000c001ec74      0x264 hw/timer/apictimer.32
                0x00000000c001ec74                APICTimer::close(int, int, void*)
                0x00000000c001ec7a                apicTimerHandler(regs*, void*)
                0x00000000c001ecac                APICTimer::write(int)
                0x00000000c001edaa                APICTimer::open(int, int, void*)
                0x00000000c001eeb0                APICTimer::APICTimer()
                0x00000000c001eeb0                APICTimer::APICTimer()
 .text          0x00000000c001eed8      0x1b6 hw/timer/pit.32
                0x00000000c001eed8                PIT::write(int)
                0x00000000c001ef5e                pitHandler(regs*, void*)
                0x00000000c001ef8e                PIT::open(int, int, void*)
                0x00000000c001efdc                PIT::close(int, int, void*)
                0x00000000c001f00c                PIT::PIT()
                0x00000000c001f00c                PIT::PIT()
 *fill*         0x00000000c001f08e        0x2 
 .text          0x00000000c001f090        0xa hw/fpu/x86/avx.32
                0x00000000c001f090                avxDetect
                0x00000000c001f096                avxSave
                0x00000000c001f097                avxLoad
                0x00000000c001f098                avxInit
                0x00000000c001f099                avxClose
 *fill*         0x00000000c001f09a        0x6 
 .text          0x00000000c001f0a0       0x38 hw/fpu/x86/sse.32
                0x00000000c001f0a0                sseDetect
                0x00000000c001f0bb                sseSave
                0x00000000c001f0c1                sseLoad
                0x00000000c001f0c7                sseInit
                0x00000000c001f0d7                sseClose
 *fill*         0x00000000c001f0d8        0x8 
 .text          0x00000000c001f0e0       0x47 hw/fpu/x86/x87.32
                0x00000000c001f0e6                x87Detect
                0x00000000c001f101                x87Save
                0x00000000c001f107                x87Load
                0x00000000c001f10c                x87Init
                0x00000000c001f126                x87Close
 *fill*         0x00000000c001f127        0x1 
 .text          0x00000000c001f128       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f14d        0x0 crtn.32
 *fill*         0x00000000c001f14d        0x3 
 .text          0x00000000c001f150      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001f150                __divdi3
 *fill*         0x00000000c001f29b        0x1 
 .text          0x00000000c001f29c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001f29c                __moddi3
 *fill*         0x00000000c001f41a        0x2 
 .text          0x00000000c001f41c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001f41c                __udivdi3
 *fill*         0x00000000c001f51b        0x1 
 .text          0x00000000c001f51c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001f51c                __umoddi3
 *fill*         0x00000000c001f636        0xa 
 .text          0x00000000c001f640       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001f640                fabs
 *fill*         0x00000000c001f65e        0x2 
 .text          0x00000000c001f660        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001f660                lrint
 .text          0x00000000c001f66c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001f66c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f678        0x0
 .iplt          0x00000000c001f678        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f678        0xf
 .init          0x00000000c001f678        0x3 crti.32
                0x00000000c001f678                _init
 .init          0x00000000c001f67b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f680        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f685        0x2 crtn.32

.fini           0x00000000c001f687        0xa
 .fini          0x00000000c001f687        0x3 crti.32
                0x00000000c001f687                _fini
 .fini          0x00000000c001f68a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f68f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f692       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f692       0x23 core/computer.32
                0x00000000c001f692                Computer::~Computer()
                0x00000000c001f692                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f6b6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f6b6       0x2a core/computer.32
                0x00000000c001f6b6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f6e0       0x15
 .text._Z10idleCommonv
                0x00000000c001f6e0       0x15 core/idle.32
                0x00000000c001f6e0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001f6f5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001f6f5       0x12 core/kheap.32
                0x00000000c001f6f5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001f707        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001f707        0x9 core/kheap.32
                0x00000000c001f707                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f710        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f710        0x2 core/unixfile.32
                0x00000000c001f710                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f710                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f712       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f712       0x58 core/unixfile.32
                0x00000000c001f712                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f712                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f76a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f76a       0xd3 core/unixfile.32
                0x00000000c001f76a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f83e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f83e        0x7 core/unixfile.32
                0x00000000c001f83e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f846       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f846       0xa1 core/unixfile.32
                0x00000000c001f846                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f8e8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f8e8        0x8 core/unixfile.32
                0x00000000c001f8e8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f8f0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f8f0       0x1a hal/device.32
                0x00000000c001f8f0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f8f0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f90a       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f90a       0x2a hal/device.32
                0x00000000c001f90a                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f934       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f934       0xdc hal/device.32
                0x00000000c001f934                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fa10       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001fa10       0x58 hal/device.32
                0x00000000c001fa10                LinkedList<Device>::LinkedList()
                0x00000000c001fa10                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001fa68       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001fa68       0x12 hal/fpu.32
                0x00000000c001fa68                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001fa7a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001fa7a        0x9 hal/fpu.32
                0x00000000c001fa7a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001fa83       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001fa83       0x12 hal/intctrl.32
                0x00000000c001fa83                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001fa95       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001fa95       0x12 hal/intctrl.32
                0x00000000c001fa95                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001faa7       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001faa7       0x12 hal/intctrl.32
                0x00000000c001faa7                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001fab9       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001fab9       0x12 hal/intctrl.32
                0x00000000c001fab9                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001facb       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001facb       0x12 hal/intctrl.32
                0x00000000c001facb                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001fadd       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001fadd       0x12 hal/intctrl.32
                0x00000000c001fadd                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001faf0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001faf0        0x7 hal/timer.32
                0x00000000c001faf0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faf8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001faf8       0x1c hal/timer.32
                0x00000000c001faf8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb14       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fb14       0xae hal/timer.32
                0x00000000c001fb14                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbc2       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fbc2       0xd3 hal/timer.32
                0x00000000c001fbc2                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fc96       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fc96       0x23 hw/acpi.32
                0x00000000c001fc96                ACPI::~ACPI()
                0x00000000c001fc96                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fcba       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fcba       0x2a hw/acpi.32
                0x00000000c001fcba                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001fce4       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fce4       0x23 hw/cpu.32
                0x00000000c001fce4                CPU::~CPU()
                0x00000000c001fce4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fd08       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fd08       0x2a hw/cpu.32
                0x00000000c001fd08                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001fd32       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001fd32       0x12 hw/cpu.32
                0x00000000c001fd32                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001fd44        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001fd44        0x9 hw/cpu.32
                0x00000000c001fd44                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001fd4d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001fd4d        0x9 hw/cpu.32
                0x00000000c001fd4d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001fd56       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001fd56       0x12 krnl/panic.32
                0x00000000c001fd56                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fd68        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fd68        0x2 thr/prcssthr.32
                0x00000000c001fd68                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fd68                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fd6a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fd6a       0x3e thr/prcssthr.32
                0x00000000c001fd6a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fd6a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fda8       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fda8       0x58 thr/prcssthr.32
                0x00000000c001fda8                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fda8                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe00        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fe00        0x8 thr/prcssthr.32
                0x00000000c001fe00                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001fe08       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fe08       0x23 hw/bus/pci.32
                0x00000000c001fe08                PCI::~PCI()
                0x00000000c001fe08                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fe2c       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fe2c       0x2a hw/bus/pci.32
                0x00000000c001fe2c                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fe56       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fe56       0x23 hw/diskctrl/ide.32
                0x00000000c001fe56                IDE::~IDE()
                0x00000000c001fe56                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fe7a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fe7a       0x2a hw/diskctrl/ide.32
                0x00000000c001fe7a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001fea4       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fea4       0x23 hw/diskphys/ata.32
                0x00000000c001fea4                ATA::~ATA()
                0x00000000c001fea4                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fec8       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fec8       0x2a hw/diskphys/ata.32
                0x00000000c001fec8                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fef2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fef2       0x23 hw/diskphys/atapi.32
                0x00000000c001fef2                ATAPI::~ATAPI()
                0x00000000c001fef2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ff16       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ff16       0x2a hw/diskphys/atapi.32
                0x00000000c001ff16                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001ff40       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001ff40       0x23 hw/fpu/avx.32
                0x00000000c001ff40                AVX::~AVX()
                0x00000000c001ff40                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ff64       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ff64       0x2a hw/fpu/avx.32
                0x00000000c001ff64                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ff8e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ff8e       0x23 hw/fpu/mmx.32
                0x00000000c001ff8e                MMX::~MMX()
                0x00000000c001ff8e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ffb2       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ffb2       0x2a hw/fpu/mmx.32
                0x00000000c001ffb2                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ffdc       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ffdc       0x23 hw/fpu/sse.32
                0x00000000c001ffdc                SSE::~SSE()
                0x00000000c001ffdc                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c0020000       0x2a
 .text._ZN3SSED0Ev
                0x00000000c0020000       0x2a hw/fpu/sse.32
                0x00000000c0020000                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c002002a       0x23
 .text._ZN3x87D2Ev
                0x00000000c002002a       0x23 hw/fpu/x87.32
                0x00000000c002002a                x87::~x87()
                0x00000000c002002a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c002004e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c002004e       0x2a hw/fpu/x87.32
                0x00000000c002004e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c0020078       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c0020078       0x23 hw/intctrl/apic.32
                0x00000000c0020078                IOAPIC::~IOAPIC()
                0x00000000c0020078                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002009c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002009c       0x2a hw/intctrl/apic.32
                0x00000000c002009c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c00200c6       0x23
 .text._ZN4APICD2Ev
                0x00000000c00200c6       0x23 hw/intctrl/apic.32
                0x00000000c00200c6                APIC::~APIC()
                0x00000000c00200c6                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c00200ea       0x2a
 .text._ZN4APICD0Ev
                0x00000000c00200ea       0x2a hw/intctrl/apic.32
                0x00000000c00200ea                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0020114       0x23
 .text._ZN3PICD2Ev
                0x00000000c0020114       0x23 hw/intctrl/pic.32
                0x00000000c0020114                PIC::~PIC()
                0x00000000c0020114                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c0020138       0x2a
 .text._ZN3PICD0Ev
                0x00000000c0020138       0x2a hw/intctrl/pic.32
                0x00000000c0020138                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c0020162       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c0020162       0x23 hw/timer/apictimer.32
                0x00000000c0020162                APICTimer::~APICTimer()
                0x00000000c0020162                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020186       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020186       0x2a hw/timer/apictimer.32
                0x00000000c0020186                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c00201b0       0x23
 .text._ZN3PITD2Ev
                0x00000000c00201b0       0x23 hw/timer/pit.32
                0x00000000c00201b0                PIT::~PIT()
                0x00000000c00201b0                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c00201d4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c00201d4       0x2a hw/timer/pit.32
                0x00000000c00201d4                PIT::~PIT()

.rodata         0x00000000c00201fe     0x37fe
                0x00000000c00201fe                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c00201fe        0x2 
 .ctors         0x00000000c0020200        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020204        0x4 core/unixfile.32
 .ctors         0x00000000c0020208        0x4 thr/prcssthr.32
 .ctors         0x00000000c002020c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020210                end_ctors = .
                0x00000000c0020210                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020210        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020214        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020214                __DTOR_END__
                0x00000000c0020218                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020218        0x8 
 .rodata        0x00000000c0020220      0x101 acpica/utclib.32
                0x00000000c0020220                AcpiGbl_Ctypes
 *fill*         0x00000000c0020321        0x3 
 .rodata        0x00000000c0020324       0x18 core/malloc.32
 *fill*         0x00000000c002033c        0x4 
 .rodata        0x00000000c0020340      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c0020460       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c00204b6        0xa 
 .rodata        0x00000000c00204c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c00208c0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c0020976        0x2 
 .rodata.str1.4
                0x00000000c0020978      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0020d1d        0x3 
 .rodata        0x00000000c0020d20       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020d80       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020da0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020db4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020df6        0x2 
 .rodata.cst8   0x00000000c0020df8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020e00       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0020e6c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020f30       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0020f7a        0x6 
 .rodata.cst8   0x00000000c0020f80        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020f88        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020f94       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c0020fdc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0020fdc      0x1bf core/computer.32
                                        0x1c8 (size before relaxing)
 *fill*         0x00000000c002119b        0x1 
 .rodata._ZTV8Computer
                0x00000000c002119c       0x2c core/computer.32
                0x00000000c002119c                vtable for Computer
 .rodata.str1.1
                0x00000000c00211c8       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c00211e4       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0021214        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0021220       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c002123b       0x5f core/physmgr.32
 *fill*         0x00000000c002129a        0x2 
 .rodata.str1.4
                0x00000000c002129c       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c00212e9       0x39 core/pipe.32
 *fill*         0x00000000c0021322        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0021324       0x1c core/pipe.32
                0x00000000c0021324                vtable for Pipe
 .rodata.str1.1
                0x00000000c0021340       0x9d core/terminal.32
 *fill*         0x00000000c00213dd        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00213e0       0x1c core/terminal.32
                0x00000000c00213e0                vtable for VgaText
 .rodata        0x00000000c00213fc       0x1e core/tss.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002141a       0x19 core/unixfile.32
 *fill*         0x00000000c0021433        0x1 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021434       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0021456       0x15 core/unixfile.32
 *fill*         0x00000000c002146b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002146c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00214b7        0x8 core/unixfile.32
 *fill*         0x00000000c00214bf        0x1 
 .rodata.str1.4
                0x00000000c00214c0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00214e0       0x1c core/unixfile.32
                0x00000000c00214e0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00214fc       0x1c core/unixfile.32
                0x00000000c00214fc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0021518      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002169f      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00217a2       0x33 coreobjs/c++.32
 *fill*         0x00000000c00217d5        0x3 
 .rodata.str1.4
                0x00000000c00217d8       0x3f dbg/kconsole.32
 *fill*         0x00000000c0021817        0x1 
 .rodata        0x00000000c0021818      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0021968       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0021968       0x64 fs/vfs.32
                0x00000000c0021968                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00219cc       0x1c fs/vfs.32
                0x00000000c00219cc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00219e8       0x1c fs/vfs.32
                0x00000000c00219e8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a04       0x2c hal/bus.32
                0x00000000c0021a04                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0021a30       0x30 hal/buzzer.32
                0x00000000c0021a30                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0021a60       0x3c hal/clock.32
                0x00000000c0021a60                vtable for Clock
 *fill*         0x00000000c0021a9c        0x4 
 .rodata        0x00000000c0021aa0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021ad0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021aee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021aee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0021aee       0x19 hal/device.32
 *fill*         0x00000000c0021aee        0x2 
 .rodata._ZTV6Device
                0x00000000c0021af0       0x2c hal/device.32
                0x00000000c0021af0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021b1c       0x2c hal/device.32
                0x00000000c0021b1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b48       0x2c hal/diskctrl.32
                0x00000000c0021b48                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b74       0x34 hal/diskphys.32
                0x00000000c0021b74                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021ba8        0x9 hal/fpu.32
 *fill*         0x00000000c0021bb1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0021bb4       0x38 hal/fpu.32
                0x00000000c0021bb4                vtable for FPU
 .rodata        0x00000000c0021bec      0x2f0 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0021edc       0x48 hal/intctrl.32
                0x00000000c0021edc                vtable for InterruptController
 .rodata        0x00000000c0021f24       0x4e hal/keybrd.32
 *fill*         0x00000000c0021f72        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021f74       0x34 hal/keybrd.32
                0x00000000c0021f74                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021fa8       0x7a hal/logidisk.32
 *fill*         0x00000000c0022022        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0022024       0x2c hal/logidisk.32
                0x00000000c0022024                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022050       0x2c hal/mouse.32
                0x00000000c0022050                vtable for Mouse
 .rodata.str1.1
                0x00000000c002207c        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022087       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022087        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022087       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022087       0x15 hal/timer.32
 *fill*         0x00000000c0022087        0x1 
 .rodata._ZTV5Timer
                0x00000000c0022088       0x30 hal/timer.32
                0x00000000c0022088                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00220b8       0x10 hal/vcache.32
                0x00000000c00220b8                vtable for VCache
 .rodata.str1.1
                0x00000000c00220c8        0xf hal/video.32
 *fill*         0x00000000c00220d7        0x1 
 .rodata._ZTV5Video
                0x00000000c00220d8       0x40 hal/video.32
                0x00000000c00220d8                vtable for Video
 .rodata.str1.1
                0x00000000c0022118       0xd1 hw/acpi.32
 *fill*         0x00000000c00221e9        0x3 
 .rodata.str1.4
                0x00000000c00221ec       0xe5 hw/acpi.32
 *fill*         0x00000000c00222d1        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00222d4       0x2c hw/acpi.32
                0x00000000c00222d4                vtable for ACPI
 .rodata.str1.1
                0x00000000c0022300      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c00226c1        0x3 
 .rodata._ZTV3CPU
                0x00000000c00226c4       0x2c hw/cpu.32
                0x00000000c00226c4                vtable for CPU
 .rodata.str1.1
                0x00000000c00226f0       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c00227ae        0x2 
 .rodata.str1.4
                0x00000000c00227b0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00228c2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 *fill*         0x00000000c0022907        0x1 
 .rodata.str1.4
                0x00000000c0022908       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c00229c4       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0022a86      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c0022c92       0xfb thr/prcssthr.32
 *fill*         0x00000000c0022d8d        0x3 
 .rodata.str1.4
                0x00000000c0022d90      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0023037       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023037       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023037       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023037       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023037        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0023037       0x5f vm86/vm8086.32
 *fill*         0x00000000c0023096        0x2 
 .rodata        0x00000000c0023098       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00230c8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002311b        0x1 
 .rodata.str1.4
                0x00000000c002311c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0023144       0x64 fs/fat/vfslink.32
                0x00000000c0023144                vtable for FAT
 .rodata.str1.1
                0x00000000c00231a8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c00231f1        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c00231f4       0x64 fs/iso9660/vfslink.32
                0x00000000c00231f4                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023258       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0023272        0x2 
 .rodata.cst4   0x00000000c0023274        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0023278       0x38 hal/sound/sndhw.32
                0x00000000c0023278                vtable for SoundDevice
 .rodata.cst4   0x00000000c00232b0       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00232c0       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023364       0x2c hw/bus/pci.32
                0x00000000c0023364                vtable for PCI
 .rodata.str1.1
                0x00000000c0023390      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00235c6        0x2 
 .rodata._ZTV3IDE
                0x00000000c00235c8       0x2c hw/diskctrl/ide.32
                0x00000000c00235c8                vtable for IDE
 .rodata.str1.1
                0x00000000c00235f4       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0023615        0x3 
 .rodata._ZTV3ATA
                0x00000000c0023618       0x34 hw/diskphys/ata.32
                0x00000000c0023618                vtable for ATA
 .rodata.str1.1
                0x00000000c002364c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0023684       0x34 hw/diskphys/atapi.32
                0x00000000c0023684                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00236b8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00236c0       0x38 hw/fpu/avx.32
                0x00000000c00236c0                vtable for AVX
 .rodata.str1.1
                0x00000000c00236f8        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0023700       0x38 hw/fpu/mmx.32
                0x00000000c0023700                vtable for MMX
 .rodata.str1.1
                0x00000000c0023738        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0023740       0x38 hw/fpu/sse.32
                0x00000000c0023740                vtable for SSE
 .rodata.str1.1
                0x00000000c0023778        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0023780       0x38 hw/fpu/x87.32
                0x00000000c0023780                vtable for x87
 .rodata        0x00000000c00237b8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0023890       0x48 hw/intctrl/apic.32
                0x00000000c0023890                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00238d8       0x2c hw/intctrl/apic.32
                0x00000000c00238d8                vtable for IOAPIC
 .rodata        0x00000000c0023904       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0023926        0x2 
 .rodata._ZTV3PIC
                0x00000000c0023928       0x48 hw/intctrl/pic.32
                0x00000000c0023928                vtable for PIC
 .rodata.str1.1
                0x00000000c0023970        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002397b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c002397c       0x30 hw/timer/apictimer.32
                0x00000000c002397c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00239ac       0x1d hw/timer/pit.32
 *fill*         0x00000000c00239c9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00239cc       0x30 hw/timer/pit.32
                0x00000000c00239cc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c00239fc      0x60d
 *(.data)
 .data          0x00000000c00239fc        0x0 crti.32
 .data          0x00000000c00239fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c00239fc                __dso_handle
 .data          0x00000000c0023a00        0x0 acpica/utclib.32
 .data          0x00000000c0023a00        0x0 core/malloc.32
 .data          0x00000000c0023a00        0x0 libk/string.32
 .data          0x00000000c0023a00        0x0 fs/fat/diskio.32
 .data          0x00000000c0023a00        0x0 fs/fat/ff.32
 .data          0x00000000c0023a00        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023a00        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023a00        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0023a00        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0023a00        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0023a00        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0023a00        0x0 core/computer.32
 .data          0x00000000c0023a00        0x0 core/gdt.32
 .data          0x00000000c0023a00        0x0 core/idle.32
 .data          0x00000000c0023a00        0x0 core/idt.32
 .data          0x00000000c0023a00        0x4 core/kheap.32
 .data          0x00000000c0023a04        0x0 core/main.32
 .data          0x00000000c0023a04        0x4 core/physmgr.32
                0x00000000c0023a04                Phys::bitmap
 .data          0x00000000c0023a08        0x0 core/pipe.32
 *fill*         0x00000000c0023a08       0x18 
 .data          0x00000000c0023a20       0x60 core/terminal.32
                0x00000000c0023a20                VgaText::hiddenOut
                0x00000000c0023a40                ansiToVGAMappings
 .data          0x00000000c0023a80        0x0 core/tss.32
 .data          0x00000000c0023a80        0x4 core/unixfile.32
                0x00000000c0023a80                UnixFile::nextFd
 .data          0x00000000c0023a84        0x8 core/virtmgr.32
                0x00000000c0023a84                Virt::pageAllocPtr
                0x00000000c0023a88                Virt::bitmap
 .data          0x00000000c0023a8c        0x4 coreobjs/c++.32
                0x00000000c0023a8c                __stack_chk_guard
 .data          0x00000000c0023a90        0x0 dbg/kconsole.32
 .data          0x00000000c0023a90        0x0 fs/vfs.32
 .data          0x00000000c0023a90        0x0 hal/bus.32
 .data          0x00000000c0023a90        0x0 hal/buzzer.32
 .data          0x00000000c0023a90        0x0 hal/clock.32
 .data          0x00000000c0023a90        0x0 hal/device.32
 .data          0x00000000c0023a90        0x0 hal/diskctrl.32
 .data          0x00000000c0023a90        0x0 hal/diskphys.32
 .data          0x00000000c0023a90        0x0 hal/fpu.32
 *fill*         0x00000000c0023a90       0x10 
 .data          0x00000000c0023aa0      0x2a0 hal/intctrl.32
                0x00000000c0023aa0                exceptionNames
 .data          0x00000000c0023d40        0x0 hal/keybrd.32
 .data          0x00000000c0023d40        0x0 hal/logidisk.32
 .data          0x00000000c0023d40        0x0 hal/mouse.32
 .data          0x00000000c0023d40        0x0 hal/partition.32
 .data          0x00000000c0023d40        0x0 hal/timer.32
 .data          0x00000000c0023d40        0x0 hal/vcache.32
 .data          0x00000000c0023d40        0x0 hal/video.32
 .data          0x00000000c0023d40       0x10 hw/acpi.32
                0x00000000c0023d40                legacyIRQRemaps
 *fill*         0x00000000c0023d50       0x10 
 .data          0x00000000c0023d60      0x2a4 hw/cpu.32
                0x00000000c0023d60                cpuNameList
                0x00000000c0024000                lastCode
 .data          0x00000000c0024004        0x0 hw/ports.32
 .data          0x00000000c0024004        0x0 krnl/panic.32
 .data          0x00000000c0024004        0x0 reg/registry.32
 .data          0x00000000c0024004        0x0 sys/sc_exit.32
 .data          0x00000000c0024004        0x0 sys/sc_loaddll.32
 .data          0x00000000c0024004        0x0 sys/sc_read.32
 .data          0x00000000c0024004        0x0 sys/sc_sbrk.32
 .data          0x00000000c0024004        0x0 sys/sc_write.32
 .data          0x00000000c0024004        0x0 sys/sc_yield.32
 .data          0x00000000c0024004        0x0 sys/syscalls.32
 .data          0x00000000c0024004        0x0 thr/elf.32
 .data          0x00000000c0024004        0x4 thr/prcssthr.32
                0x00000000c0024004                nextPID
 .data          0x00000000c0024008        0x0 vm86/vm8086.32
 .data          0x00000000c0024008        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024008        0x1 fs/iso9660/vfslink.32
                0x00000000c0024008                recentDriveletter
 .data          0x00000000c0024009        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0024009        0x0 hal/sound/sndhw.32
 .data          0x00000000c0024009        0x0 hw/bus/isa.32
 .data          0x00000000c0024009        0x0 hw/bus/pci.32
 .data          0x00000000c0024009        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024009        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024009        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024009        0x0 hw/fpu/avx.32
 .data          0x00000000c0024009        0x0 hw/fpu/mmx.32
 .data          0x00000000c0024009        0x0 hw/fpu/sse.32
 .data          0x00000000c0024009        0x0 hw/fpu/x87.32
 .data          0x00000000c0024009        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024009        0x0 hw/intctrl/pic.32
 .data          0x00000000c0024009        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024009        0x0 hw/timer/pit.32
 .data          0x00000000c0024009        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024009        0x0 crtn.32
 .data          0x00000000c0024009        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0024009        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0024009        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0024009        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0024009        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0024009        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0024009        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002400c        0x0
 .got           0x00000000c002400c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002400c        0x0
 .got.plt       0x00000000c002400c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002400c        0x0
 .igot.plt      0x00000000c002400c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002400c        0x0
 .tm_clone_table
                0x00000000c002400c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002400c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024009      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0024009        0x3 
 .eh_frame      0x00000000c002400c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002400c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002400c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024064       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00240a4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024110       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0024194       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00241ac        0x0
 .rel.got       0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00241ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00241ac     0x223c
                0x00000000c00241ac                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00241ac        0x0 crti.32
 .bss           0x00000000c00241ac       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00241cc        0x4 acpica/utclib.32
 *fill*         0x00000000c00241d0       0x10 
 .bss           0x00000000c00241e0      0x378 core/malloc.32
 .bss           0x00000000c0024558        0x0 libk/string.32
 .bss           0x00000000c0024558        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024558        0x8 
 .bss           0x00000000c0024560       0x88 fs/fat/ff.32
 .bss           0x00000000c00245e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00245e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00245e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c00245e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c00245e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c00245e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c00245e8        0x6 core/computer.32
                0x00000000c00245e8                computer
                0x00000000c00245ec                preemptionOn
                0x00000000c00245ed                schedulingOn
 *fill*         0x00000000c00245ee        0x2 
 .bss           0x00000000c00245f0        0x6 core/gdt.32
                0x00000000c00245f0                gdtDescr
 .bss           0x00000000c00245f6        0x0 core/idle.32
 *fill*         0x00000000c00245f6        0x2 
 .bss           0x00000000c00245f8        0x6 core/idt.32
                0x00000000c00245f8                idtDescr
 .bss           0x00000000c00245fe        0x0 core/kheap.32
 *fill*         0x00000000c00245fe        0x2 
 .bss           0x00000000c0024600        0x4 core/main.32
                0x00000000c0024600                sysBootSettings
 *fill*         0x00000000c0024604       0x1c 
 .bss           0x00000000c0024620       0x50 core/physmgr.32
                0x00000000c0024620                Phys::currentPagePointer
                0x00000000c0024624                Phys::highestMem
                0x00000000c0024628                Phys::oldPercent
                0x00000000c002462c                Phys::usedPages
                0x00000000c0024630                Phys::usablePages
                0x00000000c0024640                Phys::dmaUsage
 .bss           0x00000000c0024670        0x0 core/pipe.32
 *fill*         0x00000000c0024670       0x10 
 .bss           0x00000000c0024680       0x29 core/terminal.32
                0x00000000c0024680                textModeImplementation
                0x00000000c00246a0                terminalCycle
                0x00000000c00246a4                activeTerminal
                0x00000000c00246a8                VgaText::graphicMode
 *fill*         0x00000000c00246a9        0x1 
 .bss           0x00000000c00246aa        0x2 core/tss.32
                0x00000000c00246aa                doubleFaultSelector
 *fill*         0x00000000c00246ac       0x14 
 .bss           0x00000000c00246c0       0x84 core/unixfile.32
                0x00000000c00246c0                sfileLpt
                0x00000000c0024700                sfileCom
                0x00000000c0024724                sfileNul
                0x00000000c0024728                sfilePnt
                0x00000000c002472c                sfileAux
                0x00000000c0024730                sfileCon
                0x00000000c0024734                initialFilesAdded
                0x00000000c0024738                unixFileLinkedList
 .bss           0x00000000c0024744        0x4 core/virtmgr.32
                0x00000000c0024744                firstVAS
 .bss           0x00000000c0024748        0x0 coreobjs/c++.32
 .bss           0x00000000c0024748        0x0 dbg/kconsole.32
 .bss           0x00000000c0024748        0x4 fs/vfs.32
                0x00000000c0024748                installedFilesystems
 .bss           0x00000000c002474c        0x0 hal/bus.32
 .bss           0x00000000c002474c        0x4 hal/buzzer.32
                0x00000000c002474c                systemBuzzer
 .bss           0x00000000c0024750        0x8 hal/clock.32
                0x00000000c0024750                dstOn
                0x00000000c0024751                timezoneHalfHourOffset
                0x00000000c0024754                timezoneHourOffset
 .bss           0x00000000c0024758        0x0 hal/device.32
 .bss           0x00000000c0024758        0x0 hal/diskctrl.32
 .bss           0x00000000c0024758        0x0 hal/diskphys.32
 .bss           0x00000000c0024758        0x0 hal/fpu.32
 .bss           0x00000000c0024758       0x20 hal/intctrl.32
                0x00000000c0024758                pf5
                0x00000000c002475c                pf4
                0x00000000c0024760                pf3
                0x00000000c0024764                pf2
                0x00000000c0024768                pf1
                0x00000000c002476c                pf0
                0x00000000c0024770                gpFaultIntercept
                0x00000000c0024774                x87FaultIntercept
 *fill*         0x00000000c0024778        0x8 
 .bss           0x00000000c0024780      0x429 hal/keybrd.32
                0x00000000c0024780                keyboardWaitingTaskList
                0x00000000c0024784                keyboardSetupYet
                0x00000000c00247a0                keystates
 *fill*         0x00000000c0024ba9       0x17 
 .bss           0x00000000c0024bc0       0x88 hal/logidisk.32
                0x00000000c0024bc0                diskAssignments
                0x00000000c0024be0                disks
 .bss           0x00000000c0024c48        0x4 hal/mouse.32
                0x00000000c0024c48                guiMouseHandler
 .bss           0x00000000c0024c4c        0x0 hal/partition.32
 *fill*         0x00000000c0024c4c        0x4 
 .bss           0x00000000c0024c50        0x8 hal/timer.32
                0x00000000c0024c50                nanoSinceBoot
 .bss           0x00000000c0024c58        0x0 hal/vcache.32
 .bss           0x00000000c0024c58        0x4 hal/video.32
                0x00000000c0024c58                screen
 *fill*         0x00000000c0024c5c        0x4 
 .bss           0x00000000c0024c60      0x3c0 hw/acpi.32
                0x00000000c0024c60                systemSleepFunction
                0x00000000c0024c64                systemResetFunction
                0x00000000c0024c68                systemShutdownFunction
                0x00000000c0024c6c                nextACPITable
                0x00000000c0024c80                acpiTables
                0x00000000c0024e80                usingXSDT
                0x00000000c0024e84                MADTpointer
                0x00000000c0024e88                RSDTpointer
                0x00000000c0024e8c                RSDPpointer
                0x00000000c0024e90                ioapicDiscoveryNumber
                0x00000000c0024ea0                ioapicFoundInMADT
                0x00000000c0024ec0                ioapicAddresses
                0x00000000c0024f40                ioapicGSIBase
                0x00000000c0024fc0                processorDiscoveryNumber
                0x00000000c0024fe0                matchingAPICID
                0x00000000c0025000                processorID
 .bss           0x00000000c0025020       0x10 hw/cpu.32
                0x00000000c0025020                lastD
                0x00000000c0025024                lastC
                0x00000000c0025028                lastB
                0x00000000c002502c                lastA
 .bss           0x00000000c0025030        0x0 hw/ports.32
 .bss           0x00000000c0025030        0x5 krnl/panic.32
                0x00000000c0025030                Krnl::guiPanicHandler
                0x00000000c0025034                Krnl::kernelInPanic
 .bss           0x00000000c0025035        0x0 reg/registry.32
 .bss           0x00000000c0025035        0x0 sys/sc_exit.32
 .bss           0x00000000c0025035        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0025035        0x0 sys/sc_read.32
 .bss           0x00000000c0025035        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0025035        0x0 sys/sc_write.32
 .bss           0x00000000c0025035        0x0 sys/sc_yield.32
 *fill*         0x00000000c0025035        0xb 
 .bss           0x00000000c0025040      0x200 sys/syscalls.32
                0x00000000c0025040                systemCallHandlers
 .bss           0x00000000c0025240      0x7a4 thr/elf.32
                0x00000000c0025240                Thr::driverLookupNext
                0x00000000c0025260                Thr::driverLookupLen
                0x00000000c0025460                Thr::driverLookupAddr
                0x00000000c0025660                Thr::driverNameLookup
                0x00000000c0025860                Thr::kernelSymbols
                0x00000000c00258e0                Thr::kernelStringTable
                0x00000000c0025960                Thr::kernelSymbolTable
                0x00000000c00259e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00259e4        0x4 
 .bss           0x00000000c00259e8       0x68 thr/prcssthr.32
                0x00000000c00259e8                cleanerThread
                0x00000000c00259ec                weNeedTheCleanerToNotBlock
                0x00000000c00259f0                xxxx
                0x00000000c00259f4                retValLockStuff
                0x00000000c00259f8                retValSchedLock
                0x00000000c00259fc                lockStuffLock
                0x00000000c0025a00                schedulerLock
                0x00000000c0025a04                taskSwitchesPostponedFlag
                0x00000000c0025a08                postponeTaskSwitchesCounter
                0x00000000c0025a0c                irqDisableCounter
                0x00000000c0025a10                terminatedTaskList
                0x00000000c0025a1c                sleepingTaskList
                0x00000000c0025a28                taskList
                0x00000000c0025a34                kernelProcess
 .bss           0x00000000c0025a50        0x0 vm86/vm8086.32
 *fill*         0x00000000c0025a50       0x10 
 .bss           0x00000000c0025a60       0xf0 fs/fat/vfslink.32
                0x00000000c0025a60                FAT::fats
                0x00000000c0025a80                FAT::vfsToFatRemaps
                0x00000000c0025b00                fatToVFSRemaps
 *fill*         0x00000000c0025b50       0x10 
 .bss           0x00000000c0025b60      0x820 fs/iso9660/vfslink.32
                0x00000000c0025b60                recentSector
                0x00000000c0025b80                recentBuffer
 .bss           0x00000000c0026380        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0026380        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0026380        0x0 hw/bus/isa.32
 .bss           0x00000000c0026380        0x0 hw/bus/pci.32
 .bss           0x00000000c0026380        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0026380        0x8 hw/diskphys/ata.32
                0x00000000c0026380                ataSectorsWritten
                0x00000000c0026384                ataSectorsRead
 .bss           0x00000000c0026388        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0026388        0x0 hw/fpu/avx.32
 .bss           0x00000000c0026388        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0026388        0x0 hw/fpu/sse.32
 .bss           0x00000000c0026388        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0026388       0x18 
 .bss           0x00000000c00263a0       0x41 hw/intctrl/apic.32
                0x00000000c00263a0                noOfIOAPICs
                0x00000000c00263c0                ioapics
                0x00000000c00263e0                IOAPICsSetupYet
 .bss           0x00000000c00263e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00263e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00263e1        0x3 
 .bss           0x00000000c00263e4        0x4 hw/timer/pit.32
                0x00000000c00263e4                pitFreq
 .bss           0x00000000c00263e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00263e8        0x0 crtn.32
 .bss           0x00000000c00263e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c00263e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c00263e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c00263e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c00263e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00263e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00263e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00263e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0028624                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
