Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/clock/rtc.32
 .comment       0x0000000000000000       0x12 hw/clock/rtc.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/clock/rtc.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e968
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x6ff acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c00005c7                memmove
                0x00000000c0000634                memcpy
                0x00000000c00006ab                memset
                0x00000000c00006d4                strlen
                0x00000000c00006f7                strpbrk
                0x00000000c0000739                strtok
                0x00000000c00007c7                strcpy
                0x00000000c00007f9                strncpy
                0x00000000c000084d                strcmp
                0x00000000c000088f                strchr
                0x00000000c00008b8                strncmp
                0x00000000c0000914                strcat
                0x00000000c0000955                strncat
                0x00000000c00009b1                strstr
                0x00000000c0000a04                toupper
                0x00000000c0000a2a                tolower
                0x00000000c0000a50                simple_strtoul
 .text          0x00000000c0000c6e      0xfbf core/malloc.32
                0x00000000c0000dd9                dlfree
                0x00000000c0001134                dlmalloc
                0x00000000c0001671                dlrealloc
                0x00000000c0001826                dlmemalign
                0x00000000c0001949                dlcalloc
                0x00000000c00019e3                dlcfree
                0x00000000c00019e8                dlindependent_calloc
                0x00000000c0001a0d                dlindependent_comalloc
                0x00000000c0001a24                dlvalloc
                0x00000000c0001a4f                dlpvalloc
                0x00000000c0001a85                dlmalloc_trim
                0x00000000c0001a92                dlmalloc_usable_size
                0x00000000c0001ac3                dlmallinfo
                0x00000000c0001b92                dlmalloc_stats
                0x00000000c0001ba3                dlmallopt
 .text          0x00000000c0001c2d        0x0 libk/string.32
 .text          0x00000000c0001c2d       0x51 fs/fat/diskio.32
                0x00000000c0001c2d                disk_status
                0x00000000c0001c30                disk_initialize
                0x00000000c0001c33                disk_read
                0x00000000c0001c49                disk_write
                0x00000000c0001c5f                disk_ioctl
 .text          0x00000000c0001c7e     0x6833 fs/fat/ff.32
                0x00000000c0004f4c                f_mount
                0x00000000c0004fae                f_open
                0x00000000c00053ea                f_read
                0x00000000c000566a                f_write
                0x00000000c0005924                f_sync
                0x00000000c0005b00                f_close
                0x00000000c0005b2f                f_lseek
                0x00000000c0005fe6                f_opendir
                0x00000000c00060e8                f_closedir
                0x00000000c000610a                f_readdir
                0x00000000c00061a5                f_stat
                0x00000000c0006234                f_getfree
                0x00000000c00063ff                f_truncate
                0x00000000c00064f7                f_unlink
                0x00000000c000667a                f_mkdir
                0x00000000c00068a6                f_rename
                0x00000000c0006b99                f_chmod
                0x00000000c0006c77                f_utime
                0x00000000c0006d55                f_getlabel
                0x00000000c0006f43                f_setlabel
                0x00000000c00071b0                f_forward
                0x00000000c000738e                f_mkfs
 .text          0x00000000c00084b1       0x2d fs/fat/ffsystem.32
                0x00000000c00084b1                ff_memalloc
                0x00000000c00084c7                ff_memfree
 .text          0x00000000c00084de      0x253 fs/fat/ffunicode.32
                0x00000000c00084de                ff_uni2oem
                0x00000000c000856e                ff_oem2uni
                0x00000000c00085da                ff_wtoupper
 .text          0x00000000c0008731      0x70e hal/libresample/samplerate.32
                0x00000000c00087b9                src_delete
                0x00000000c00087f5                src_process
                0x00000000c000891d                src_callback_read
                0x00000000c0008a7e                src_set_ratio
                0x00000000c0008ad5                src_get_channels
                0x00000000c0008af7                src_reset
                0x00000000c0008b3b                src_new
                0x00000000c0008bc9                src_callback_new
                0x00000000c0008c2b                src_get_name
                0x00000000c0008c62                src_get_description
                0x00000000c0008c99                src_get_version
                0x00000000c0008c9f                src_is_valid_ratio
                0x00000000c0008cb9                src_error
                0x00000000c0008cc7                src_strerror
                0x00000000c0008cda                src_simple
                0x00000000c0008d2d                src_short_to_float_array
                0x00000000c0008d53                src_float_to_short_array
                0x00000000c0008db7                src_int_to_float_array
                0x00000000c0008ddd                src_float_to_int_array
 .text          0x00000000c0008e3f      0x3fd hal/libresample/src_linear.32
                0x00000000c0009197                linear_get_name
                0x00000000c00091a6                linear_get_description
                0x00000000c00091b5                linear_set_converter
 .text          0x00000000c000923c     0x1b46 hal/libresample/src_sinc.32
                0x00000000c000ab92                sinc_get_name
                0x00000000c000aba5                sinc_get_description
                0x00000000c000abb8                sinc_set_converter
 .text          0x00000000c000ad82      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000b0b0                zoh_get_name
                0x00000000c000b0bf                zoh_get_description
                0x00000000c000b0ce                zoh_set_converter
 *fill*         0x00000000c000b155        0x1 
 .text          0x00000000c000b156      0x68d core/computer.32
                0x00000000c000b156                Computer::close(int, int, void*)
                0x00000000c000b19a                Computer::Computer()
                0x00000000c000b19a                Computer::Computer()
                0x00000000c000b2f6                Computer::setBootMessage(char const*)
                0x00000000c000b2f8                Computer::start()
                0x00000000c000b3d2                firstTask()
                0x00000000c000b3e0                Computer::detectFeatures()
                0x00000000c000b5ba                Computer::displayFeatures()
                0x00000000c000b5bc                Computer::rdmsr(unsigned int)
                0x00000000c000b5e8                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b620                Computer::nmiEnabled()
                0x00000000c000b62c                Computer::readCMOS(unsigned char)
                0x00000000c000b646                Computer::enableNMI(bool)
                0x00000000c000b65e                Computer::open(int, int, void*)
                0x00000000c000b726                Computer::disableNMI()
                0x00000000c000b734                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b752                Computer::handleNMI()
                0x00000000c000b7b8                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b7e3      0xf95 core/elf.32
                0x00000000c000b7e3                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000ba60                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000bc76                runtimeReferenceHelper()
                0x00000000c000bc89                getAddressOfKernelSymbol(char const*)
                0x00000000c000bcd8                loadKernelSymbolTable(char const*)
                0x00000000c000bf99                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c6a1                loadDLL(char const*)
                0x00000000c000c76a                executeDLL(unsigned long, void*)
 .text          0x00000000c000c778      0x1b7 core/gdt.32
                0x00000000c000c778                GDTEntry::setBase(unsigned int)
                0x00000000c000c794                GDTEntry::setLimit(unsigned int)
                0x00000000c000c7b2                GDT::GDT()
                0x00000000c000c7b2                GDT::GDT()
                0x00000000c000c7c8                GDT::addEntry(GDTEntry)
                0x00000000c000c804                GDT::getNumberOfEntries()
                0x00000000c000c80c                GDT::flush()
                0x00000000c000c82e                GDT::setup()
 .text          0x00000000c000c92f       0x61 core/idle.32
                0x00000000c000c92f                idleFunction(void*)
 .text          0x00000000c000c990      0x45f core/idt.32
                0x00000000c000c990                IDTEntry::IDTEntry(bool)
                0x00000000c000c990                IDTEntry::IDTEntry(bool)
                0x00000000c000c9fe                IDTEntry::setOffset(unsigned int)
                0x00000000c000ca12                IDT::IDT()
                0x00000000c000ca12                IDT::IDT()
                0x00000000c000ca14                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ca1c                IDT::addEntry(IDTEntry, int)
                0x00000000c000ca36                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ca6e                IDT::flush()
                0x00000000c000ca88                IDT::setup()
 .text          0x00000000c000cdef      0x519 core/kconsole.32
                0x00000000c000cdef                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ce50                logc(char)
                0x00000000c000ce67                logs(char*)
                0x00000000c000ce84                logWriteInt(unsigned int)
                0x00000000c000cea1                logWriteIntBase(unsigned int, int)
                0x00000000c000cec0                kprintf(char const*, ...)
                0x00000000c000cfde                panic(char const*)
 .text          0x00000000c000d308      0x20d core/kheap.32
                0x00000000c000d308                sbrk
                0x00000000c000d420                mmap
                0x00000000c000d436                munmap
                0x00000000c000d44c                liballoc_lock()
                0x00000000c000d45d                liballoc_unlock()
                0x00000000c000d46e                liballoc_alloc(int)
                0x00000000c000d489                liballoc_free(void*, int)
                0x00000000c000d4a7                realloc
                0x00000000c000d4bb                malloc
                0x00000000c000d4cb                free
                0x00000000c000d4db                rfree
                0x00000000c000d4eb                calloc
 .text          0x00000000c000d515      0x38d core/main.32
                0x00000000c000d515                hwTextMode_loadInData(VgaText*)
                0x00000000c000d55a                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d59c                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d5f0                hwTextMode_update(VgaText*)
                0x00000000c000d5f1                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d639                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d675                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d6fb                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d759                setupTextMode()
                0x00000000c000d7aa                kernel_main
 .text          0x00000000c000d8a2      0x46c core/physmgr.32
                0x00000000c000d8a2                Phys::allocateDMA(unsigned long)
                0x00000000c000d945                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d98d                Phys::setPageState(unsigned long, bool)
                0x00000000c000d9bf                Phys::getPageState(unsigned long)
                0x00000000c000d9db                Phys::freePage(unsigned long)
                0x00000000c000da65                Phys::allocatePage()
                0x00000000c000db21                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000db59                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000dd0e      0x273 core/pipe.32
                0x00000000c000dd0e                Pipe::isAtty()
                0x00000000c000dd12                Pipe::~Pipe()
                0x00000000c000dd12                Pipe::~Pipe()
                0x00000000c000dd36                Pipe::~Pipe()
                0x00000000c000dd5e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000de52                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000df1a                Pipe::Pipe(int)
                0x00000000c000df1a                Pipe::Pipe(int)
 *fill*         0x00000000c000df81        0x1 
 .text          0x00000000c000df82     0x1154 core/prcssthr.32
                0x00000000c000df82                changeTSS
                0x00000000c000dfb0                Process::addArgs(char**)
                0x00000000c000e00a                Process::Process(char const*, Process*, char**)
                0x00000000c000e00a                Process::Process(char const*, Process*, char**)
                0x00000000c000e1c2                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e1c2                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e345                disableIRQs()
                0x00000000c000e34d                getIRQNestingLevel()
                0x00000000c000e353                enableIRQs()
                0x00000000c000e362                lockScheduler()
                0x00000000c000e364                unlockScheduler()
                0x00000000c000e366                userModeEntryPoint(void*)
                0x00000000c000e389                lockStuff()
                0x00000000c000e395                taskStartupFunction
                0x00000000c000e39e                updateTimeUsed()
                0x00000000c000e3fc                switchToThread(ThreadControlBlock*)
                0x00000000c000e44c                Semaphore::Semaphore(int)
                0x00000000c000e44c                Semaphore::Semaphore(int)
                0x00000000c000e47a                Mutex::Mutex()
                0x00000000c000e47a                Mutex::Mutex()
                0x00000000c000e48c                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e570                Process::createUserThread()
                0x00000000c000e58c                setupMultitasking(void (*)())
                0x00000000c000e696                schedule()
                0x00000000c000e71b                unlockStuff()
                0x00000000c000e750                forkProcess(regs*)
                0x00000000c000e8be                Semaphore::tryAcquire()
                0x00000000c000e8ec                Semaphore::assertLocked(char const*)
                0x00000000c000e91f                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e961                blockTask(TaskState)
                0x00000000c000e982                waitTask(int, int*, int)
                0x00000000c000e9c4                nanoSleepUntil(unsigned long long)
                0x00000000c000ea1b                nanoSleep(unsigned long long)
                0x00000000c000ea30                sleep(unsigned long long)
                0x00000000c000ea4e                Semaphore::acquire()
                0x00000000c000eab6                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000eb44                taskReturned
                0x00000000c000eb86                unblockTask(ThreadControlBlock*)
                0x00000000c000ec35                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000eed2                cleanerTaskFunction(void*)
                0x00000000c000ef62                terminateTask(int)
                0x00000000c000efea                Semaphore::release()
 .text          0x00000000c000f0d6      0xd8a core/syscalls.32
                0x00000000c000f0d6                sysCallGetPID(regs*)
                0x00000000c000f0e2                sysCallSeekDir(regs*)
                0x00000000c000f0e7                sysCallTellDir(regs*)
                0x00000000c000f0ec                sysCallVerify(regs*)
                0x00000000c000f0f6                sysCallGetArgc(regs*)
                0x00000000c000f106                sysFormatDisk(regs*)
                0x00000000c000f170                sysSetDiskVolumeLabel(regs*)
                0x00000000c000f1b6                sysGetDiskVolumeLabel(regs*)
                0x00000000c000f207                sysShutdown(regs*)
                0x00000000c000f24f                sysCallGetCwd(regs*)
                0x00000000c000f26e                sysCallSetCwd(regs*)
                0x00000000c000f28a                sysCallRealpath(regs*)
                0x00000000c000f2cd                sysCallOpen(regs*)
                0x00000000c000f3bd                sysCallReadDir(regs*)
                0x00000000c000f42c                sysCallIsATTY(regs*)
                0x00000000c000f47f                sysCallSeek(regs*)
                0x00000000c000f4d0                sysCallTell(regs*)
                0x00000000c000f51c                sysCallSizeFromFilename(regs*)
                0x00000000c000f595                sysCallSize(regs*)
                0x00000000c000f5e7                sysCallClose(regs*)
                0x00000000c000f635                sysCallOpenDir(regs*)
                0x00000000c000f6a2                sysCallMakeDir(regs*)
                0x00000000c000f6fb                sysCallCloseDir(regs*)
                0x00000000c000f749                sysCallWait(regs*)
                0x00000000c000f763                sysCallFork(regs*)
                0x00000000c000f77f                sysCallExecve(regs*)
                0x00000000c000f7d4                sysCallRmdir(regs*)
                0x00000000c000f826                sysCallUnlink(regs*)
                0x00000000c000f878                sysCallGetArgv(regs*)
                0x00000000c000f8c4                sysCallTTYName(regs*)
                0x00000000c000f940                sysCallGetEnv(regs*)
                0x00000000c000f992                sysCallUSleep(regs*)
                0x00000000c000f9b9                sysCallSpawn(regs*)
                0x00000000c000fa29                sysAppSettings(regs*)
                0x00000000c000fb48                sysSetFatAttrib(regs*)
                0x00000000c000fba8                sysPanic(regs*)
                0x00000000c000fbce                sysPipe(regs*)
                0x00000000c000fc13                sysGetUnixTime(regs*)
                0x00000000c000fc27                string_ends_with(char const*, char const*)
                0x00000000c000fc6f                setupSystemCalls()
                0x00000000c000fe1e                systemCall(regs*, void*)
 .text          0x00000000c000fe60      0xf65 core/terminal.32
                0x00000000c000fe60                VgaText::isAtty()
                0x00000000c000fe64                VgaText::~VgaText()
                0x00000000c000fe64                VgaText::~VgaText()
                0x00000000c000fe88                VgaText::~VgaText()
                0x00000000c000feb2                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fed2                setTerminalScrollLock(bool)
                0x00000000c000fed3                addToTerminalCycle(VgaText*)
                0x00000000c000ff00                installVgaTextImplementation()
                0x00000000c000ff15                scrollTerminalScrollLock(int)
                0x00000000c000ff16                VgaText::load()
                0x00000000c000ff6a                VgaText::updateCursor()
                0x00000000c000ff84                VgaText::showCursor(bool)
                0x00000000c000ff94                VgaText::disableBlink(bool)
                0x00000000c000ffce                VgaText::doANSI_SGR(int)
                0x00000000c001005a                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010070                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c0010086                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00100a6                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00100b8                VgaText::scrollScreen()
                0x00000000c001014c                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c001015e                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00101be                VgaText::getCursorX()
                0x00000000c00101ca                VgaText::getCursorY()
                0x00000000c00101d6                VgaText::setCursor(int, int)
                0x00000000c00101f4                VgaText::setCursorX(int)
                0x00000000c0010210                VgaText::setCursorY(int)
                0x00000000c001022c                VgaText::incrementCursor(bool)
                0x00000000c0010294                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00102ee                VgaText::updateDiskUsage()
                0x00000000c0010454                VgaText::updateTitle()
                0x00000000c001049a                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00104aa                VgaText::setTitleColour(VgaColour)
                0x00000000c00104ba                VgaText::setTitle(char*)
                0x00000000c00104e0                VgaText::decrementCursor(bool)
                0x00000000c0010508                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010604                VgaText::isShowingCursor()
                0x00000000c0010610                VgaText::isBlinkDisabled()
                0x00000000c001061e                VgaText::setCursorHeight(int)
                0x00000000c001063c                VgaText::getCursorHeight()
                0x00000000c0010647                setActiveTerminal(VgaText*)
                0x00000000c00106f9                doTerminalCycle()
                0x00000000c0010716                VgaText::doUpdate()
                0x00000000c0010728                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00108e8                VgaText::clearScreen()
                0x00000000c001094c                VgaText::putchar(char)
                0x00000000c0010a66                VgaText::puts(char const*)
                0x00000000c0010a8c                VgaText::putx(unsigned int)
                0x00000000c0010ad2                VgaText::VgaText(char const*)
                0x00000000c0010ad2                VgaText::VgaText(char const*)
                0x00000000c0010c64                VgaText::receiveKey(unsigned char)
                0x00000000c0010d4c                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0010da0                newTerminal(char*)
 *fill*         0x00000000c0010dc5        0x1 
 .text          0x00000000c0010dc6      0x18f core/tss.32
                0x00000000c0010dc6                TSS::TSS()
                0x00000000c0010dc6                TSS::TSS()
                0x00000000c0010dd4                TSS::setESP(unsigned long)
                0x00000000c0010de6                TSS::flush()
                0x00000000c0010e06                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010f55        0x1 
 .text          0x00000000c0010f56      0x32f core/unixfile.32
                0x00000000c0010f56                ReservedFilename::isAtty()
                0x00000000c0010f6c                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0010ffe                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011094                UnixFile::getFileDescriptor()
                0x00000000c001109c                UnixFile::UnixFile(int)
                0x00000000c001109c                UnixFile::UnixFile(int)
                0x00000000c00110d8                ReservedFilename::ReservedFilename(int)
                0x00000000c00110d8                ReservedFilename::ReservedFilename(int)
                0x00000000c0011100                UnixFile::~UnixFile()
                0x00000000c0011100                UnixFile::~UnixFile()
                0x00000000c0011186                UnixFile::~UnixFile()
                0x00000000c00111ae                ReservedFilename::~ReservedFilename()
                0x00000000c00111ae                ReservedFilename::~ReservedFilename()
                0x00000000c00111d2                ReservedFilename::~ReservedFilename()
                0x00000000c00111f9                getFromFileDescriptor(int)
 *fill*         0x00000000c0011285        0x1 
 .text          0x00000000c0011286     0x1175 core/virtmgr.32
                0x00000000c0011286                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00112bb                Virt::getPageState(unsigned long)
                0x00000000c00112df                Virt::allocateKernelVirtualPages(int)
                0x00000000c00113f0                Virt::virtualMemorySetup()
                0x00000000c001146f                Virt::getAKernelVAS()
                0x00000000c0011475                Virt::setupPageSwapping(int)
                0x00000000c001159a                VAS::VAS()
                0x00000000c001159a                VAS::VAS()
                0x00000000c00115ca                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00115f6                VAS::getPageTableEntry(unsigned long)
                0x00000000c0011615                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0011738                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001175c                VAS::virtualToPhysical(unsigned long)
                0x00000000c0011774                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00117aa                VAS::~VAS()
                0x00000000c00117aa                VAS::~VAS()
                0x00000000c0011916                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0011a16                VAS::allocatePages(int, int)
                0x00000000c0011be6                VAS::setCPUSpecific(unsigned long)
                0x00000000c0011c02                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0011ccc                VAS::VAS(VAS*)
                0x00000000c0011ccc                VAS::VAS(VAS*)
                0x00000000c0012016                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012104                VAS::VAS(bool)
                0x00000000c0012104                VAS::VAS(bool)
                0x00000000c0012334                mapVASFirstTime
 .text          0x00000000c00123fb       0x93 coreobjs/c++.32
                0x00000000c00123fb                __cxa_atexit
                0x00000000c00123fe                __cxa_finalize
                0x00000000c00123ff                __stack_chk_fail
                0x00000000c001245f                __cxa_pure_virtual
                0x00000000c0012470                operator new(unsigned long)
                0x00000000c0012475                operator new[](unsigned long)
                0x00000000c001247a                operator delete(void*)
                0x00000000c001247f                operator delete(void*, unsigned long)
                0x00000000c0012484                operator delete[](void*)
                0x00000000c0012489                operator delete[](void*, unsigned long)
 .text          0x00000000c001248e        0x0 debugger/debug.32
 .text          0x00000000c001248e      0xb68 fs/vfs.32
                0x00000000c001248e                File::read(unsigned long long, void*, int*)
                0x00000000c00124e6                File::write(unsigned long long, void*, int*)
                0x00000000c001253e                Directory::read(unsigned long long, void*, int*)
                0x00000000c0012596                Directory::write(unsigned long long, void*, int*)
                0x00000000c00125c4                File::isAtty()
                0x00000000c00125c8                Directory::isAtty()
                0x00000000c00125cc                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00125d2                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00125d8                File::~File()
                0x00000000c00125d8                File::~File()
                0x00000000c00125fc                File::~File()
                0x00000000c0012626                Directory::~Directory()
                0x00000000c0012626                Directory::~Directory()
                0x00000000c001264a                Directory::~Directory()
                0x00000000c0012674                Filesystem::Filesystem()
                0x00000000c0012674                Filesystem::Filesystem()
                0x00000000c0012698                Filesystem::~Filesystem()
                0x00000000c0012698                Filesystem::~Filesystem()
                0x00000000c00126a6                Filesystem::~Filesystem()
                0x00000000c00126ca                initVFS()
                0x00000000c00126f4                standardiseFiles(char*, char const*, char const*)
                0x00000000c001289e                File::File(char const*, Process*)
                0x00000000c001289e                File::File(char const*, Process*)
                0x00000000c0012902                File::open(FileOpenMode)
                0x00000000c0012960                File::close()
                0x00000000c00129c0                File::seek(unsigned long long)
                0x00000000c0012a16                File::tell(unsigned long long*)
                0x00000000c0012a66                File::rewind()
                0x00000000c0012a7a                File::unlink()
                0x00000000c0012ac6                File::rename(char const*)
                0x00000000c0012b14                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012b70                File::exists()
                0x00000000c0012bae                File::stat(unsigned long long*, bool*)
                0x00000000c0012c0f                getcwd(Process*, char*, int)
                0x00000000c0012c39                setcwd(Process*, char*)
                0x00000000c0012d60                Directory::Directory(char const*, Process*)
                0x00000000c0012d60                Directory::Directory(char const*, Process*)
                0x00000000c0012dc4                Directory::open()
                0x00000000c0012e20                Directory::close()
                0x00000000c0012e80                Directory::unlink()
                0x00000000c0012ecc                Directory::rename(char const*)
                0x00000000c0012f1a                Directory::exists()
                0x00000000c0012f58                Directory::read(dirent*)
                0x00000000c0012fa4                Directory::create()
                0x00000000c0012ff0                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0012ff6       0x84 hal/bus.32
                0x00000000c0012ff6                Bus::Bus(char const*)
                0x00000000c0012ff6                Bus::Bus(char const*)
                0x00000000c001302c                Bus::~Bus()
                0x00000000c001302c                Bus::~Bus()
                0x00000000c0013050                Bus::~Bus()
 .text          0x00000000c001307a      0x14e hal/buzzer.32
                0x00000000c001307a                Buzzer::Buzzer(char const*)
                0x00000000c001307a                Buzzer::Buzzer(char const*)
                0x00000000c00130be                Buzzer::~Buzzer()
                0x00000000c00130be                Buzzer::~Buzzer()
                0x00000000c00130e2                Buzzer::~Buzzer()
                0x00000000c001310c                Buzzer::stop()
                0x00000000c001311f                beepThread(void*)
                0x00000000c001315a                Buzzer::beep(int, int, bool)
 .text          0x00000000c00131c8      0x42f hal/clock.32
                0x00000000c00131c8                loadClockSettings()
                0x00000000c00131e2                Clock::Clock(char const*)
                0x00000000c00131e2                Clock::Clock(char const*)
                0x00000000c0013218                Clock::~Clock()
                0x00000000c0013218                Clock::~Clock()
                0x00000000c001323c                Clock::~Clock()
                0x00000000c0013266                Clock::timeInSecondsLocal()
                0x00000000c00132ae                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013307                datetimeToSeconds(datetime_t)
                0x00000000c001342e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c001348e                secondsToDatetime(unsigned long long)
                0x00000000c00135d2                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00135f7        0x1 
 .text          0x00000000c00135f8      0x504 hal/device.32
                0x00000000c00135f8                Device::hibernate()
                0x00000000c00135fa                Device::wake()
                0x00000000c00135fc                Device::detect()
                0x00000000c00135fe                Device::disableLegacy()
                0x00000000c0013600                Device::powerSaving(PowerSavingLevel)
                0x00000000c0013602                DriverlessDevice::close(int, int, void*)
                0x00000000c0013606                DriverlessDevice::detect()
                0x00000000c0013608                DriverlessDevice::open(int, int, void*)
                0x00000000c001361c                Device::~Device()
                0x00000000c001361c                Device::~Device()
                0x00000000c001362a                Device::~Device()
                0x00000000c0013652                Device::findAndLoadDriver()
                0x00000000c0013654                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001367a                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00136ce                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001372c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001377a                Device::addChild(Device*)
                0x00000000c00137be                Device::removeAllChildren()
                0x00000000c0013804                Device::hibernateAll()
                0x00000000c0013834                Device::wakeAll()
                0x00000000c0013864                Device::detectAll()
                0x00000000c0013894                Device::disableLegacyAll()
                0x00000000c00138c4                Device::loadDriversForAll()
                0x00000000c00138f0                Device::closeAll()
                0x00000000c0013926                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c001395c                Device::setName(char const*)
                0x00000000c001396a                Device::Device(char const*)
                0x00000000c001396a                Device::Device(char const*)
                0x00000000c0013a5c                Device::getName()
                0x00000000c0013a66                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a66                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a8e                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0013ad2                getDevicesOfType(DeviceType)
 .text          0x00000000c0013afc       0x84 hal/diskctrl.32
                0x00000000c0013afc                HardDiskController::HardDiskController(char const*)
                0x00000000c0013afc                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b32                HardDiskController::~HardDiskController()
                0x00000000c0013b32                HardDiskController::~HardDiskController()
                0x00000000c0013b56                HardDiskController::~HardDiskController()
 .text          0x00000000c0013b80       0xde hal/diskphys.32
                0x00000000c0013b80                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013b80                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013be8                PhysicalDisk::startCache()
                0x00000000c0013c10                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c10                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c34                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013c5e      0x128 hal/fpu.32
                0x00000000c0013c5e                FPU::FPU(char const*)
                0x00000000c0013c5e                FPU::FPU(char const*)
                0x00000000c0013c94                FPU::~FPU()
                0x00000000c0013c94                FPU::~FPU()
                0x00000000c0013cb8                FPU::~FPU()
                0x00000000c0013ce2                setupFPU()
 .text          0x00000000c0013d86      0xb89 hal/intctrl.32
                0x00000000c0013d86                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0013dbe                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013e10                doubleFault(regs*, void*)
                0x00000000c0013e1e                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013eba                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013f62                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013fe9                nmiHandler(regs*, void*)
                0x00000000c0013ff7                int_handler
                0x00000000c0014092                InterruptController::InterruptController(char const*)
                0x00000000c0014092                InterruptController::InterruptController(char const*)
                0x00000000c0014138                InterruptController::~InterruptController()
                0x00000000c0014138                InterruptController::~InterruptController()
                0x00000000c001415c                InterruptController::~InterruptController()
                0x00000000c0014186                displayDebugInfo(regs*)
                0x00000000c0014568                gpFault(regs*, void*)
                0x00000000c00145a1                pgFault(regs*, void*)
                0x00000000c00145b8                otherISRHandler(regs*, void*)
                0x00000000c00145d7                opcodeFault(regs*, void*)
                0x00000000c0014641                displayProgramFault(char const*)
                0x00000000c001466a                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00146b4                setupInterruptController()
 *fill*         0x00000000c001490f        0x1 
 .text          0x00000000c0014910      0x604 hal/keybrd.32
                0x00000000c0014910                startGUI(void*)
                0x00000000c001497e                sendKeyToTerminal(unsigned char)
                0x00000000c00149ea                sendKeyboardToken(KeyboardToken)
                0x00000000c0014dc5                clearInternalKeybuffer(VgaText*)
                0x00000000c0014dfa                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014e8a                Keyboard::Keyboard(char const*)
                0x00000000c0014e8a                Keyboard::Keyboard(char const*)
                0x00000000c0014ec6                Keyboard::~Keyboard()
                0x00000000c0014ec6                Keyboard::~Keyboard()
                0x00000000c0014eea                Keyboard::~Keyboard()
 .text          0x00000000c0014f14      0x400 hal/logidisk.32
                0x00000000c0014f14                LogicalDisk::close(int, int, void*)
                0x00000000c0014f18                LogicalDisk::~LogicalDisk()
                0x00000000c0014f18                LogicalDisk::~LogicalDisk()
                0x00000000c0014f3c                LogicalDisk::~LogicalDisk()
                0x00000000c0014f66                LogicalDisk::open(int, int, void*)
                0x00000000c0014f7a                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014fb2                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0014ff8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014ff8                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00150ae                LogicalDisk::assignDriveLetter()
                0x00000000c0015164                LogicalDisk::mount()
                0x00000000c00151d6                LogicalDisk::unmount()
                0x00000000c00151e6                LogicalDisk::unassignDriveLetter()
                0x00000000c001523c                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00152a8                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0015314       0x84 hal/mouse.32
                0x00000000c0015314                Mouse::Mouse(char const*)
                0x00000000c0015314                Mouse::Mouse(char const*)
                0x00000000c001534a                Mouse::~Mouse()
                0x00000000c001534a                Mouse::~Mouse()
                0x00000000c001536e                Mouse::~Mouse()
 .text          0x00000000c0015398      0x339 hal/partition.32
                0x00000000c0015398                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015440                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00156d1        0x1 
 .text          0x00000000c00156d2      0x2e7 hal/timer.32
                0x00000000c00156d2                Timer::Timer(char const*)
                0x00000000c00156d2                Timer::Timer(char const*)
                0x00000000c0015708                Timer::~Timer()
                0x00000000c0015708                Timer::~Timer()
                0x00000000c001572c                Timer::~Timer()
                0x00000000c0015756                Timer::read()
                0x00000000c0015761                timerHandler(unsigned long long)
                0x00000000c0015898                setupTimer(int)
 *fill*         0x00000000c00159b9        0x1 
 .text          0x00000000c00159ba      0x2d1 hal/vcache.32
                0x00000000c00159ba                VCache::VCache(PhysicalDisk*)
                0x00000000c00159ba                VCache::VCache(PhysicalDisk*)
                0x00000000c0015aaa                VCache::writeWriteBuffer()
                0x00000000c0015ae6                VCache::~VCache()
                0x00000000c0015ae6                VCache::~VCache()
                0x00000000c0015b26                VCache::~VCache()
                0x00000000c0015b4e                VCache::write(unsigned long long, int, void*)
                0x00000000c0015c32                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015c8b        0x1 
 .text          0x00000000c0015c8c      0x26d hal/video.32
                0x00000000c0015c8c                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0015cd6                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0015d54                Video::clearScreen(unsigned int)
                0x00000000c0015d88                Video::putpixel(int, int, unsigned int)
                0x00000000c0015d96                Video::Video(char const*)
                0x00000000c0015d96                Video::Video(char const*)
                0x00000000c0015dcc                Video::~Video()
                0x00000000c0015dcc                Video::~Video()
                0x00000000c0015df0                Video::~Video()
                0x00000000c0015e1a                Video::isMonochrome()
                0x00000000c0015e26                Video::getWidth()
                0x00000000c0015e32                Video::getHeight()
                0x00000000c0015e3e                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015ef9        0x1 
 .text          0x00000000c0015efa      0xc86 hw/acpi.32
                0x00000000c0015efa                ACPI::close(int, int, void*)
                0x00000000c0015faf                findRSDP()
                0x00000000c0016039                loadACPITables(unsigned char*)
                0x00000000c0016260                findRSDT(unsigned char*)
                0x00000000c001637e                findDataTable(unsigned char*, char*)
                0x00000000c001641a                scanMADT()
                0x00000000c00167ae                ACPI::ACPI()
                0x00000000c00167ae                ACPI::ACPI()
                0x00000000c001680e                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00168f0                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00169f6                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00169fc                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0016a44                ACPI::open(int, int, void*)
                0x00000000c0016b68                ACPI::sleep()
 .text          0x00000000c0016b80     0x132c hw/cpu.32
                0x00000000c0016b80                CPU::close(int, int, void*)
                0x00000000c0016b83                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016d17                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016fc5                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016fe1                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016ff9                AMD_K6_writeback(int, int, int)
                0x00000000c001706c                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00170ef                cpuidCheckEDX(unsigned int)
                0x00000000c001711c                cpuidCheckECX(unsigned int)
                0x00000000c0017149                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017176                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00171a3                getCPUNumber()
                0x00000000c00171a6                thisCPU()
                0x00000000c00171ba                CPU::CPU()
                0x00000000c00171ba                CPU::CPU()
                0x00000000c0017248                CPU::displayFeatures()
                0x00000000c001724a                CPU::detectFeatures()
                0x00000000c0017c3c                CPU::setupSMEP()
                0x00000000c0017c56                CPU::setupUMIP()
                0x00000000c0017c6e                CPU::setupTSC()
                0x00000000c0017c86                CPU::setupLargePages()
                0x00000000c0017c9e                CPU::setupPAT()
                0x00000000c0017cda                CPU::setupMTRR()
                0x00000000c0017cdc                CPU::setupGlobalPages()
                0x00000000c0017cf2                CPU::allowUsermodeDataAccess()
                0x00000000c0017d04                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017d16                CPU::setupSMAP()
                0x00000000c0017d3c                CPU::setupFeatures()
                0x00000000c0017dde                CPU::open(int, int, void*)
 .text          0x00000000c0017eac        0x0 hw/ports.32
 .text          0x00000000c0017eac      0x503 registry/registry.32
                0x00000000c0017eac                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0018004                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0018163                Reg::getLine(char*, char*, char*)
                0x00000000c001819a                Reg::readInt(char*, char*, int*)
                0x00000000c0018285                Reg::readString(char*, char*, char*, int)
                0x00000000c0018306                Reg::readBool(char*, char*, bool*)
                0x00000000c001832b                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0018357                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0018383                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00183af       0x18 syscalls/sc_exit.32
                0x00000000c00183af                Sys::exit(regs*)
 .text          0x00000000c00183c7       0x68 syscalls/sc_read.32
                0x00000000c00183c7                Sys::read(regs*)
 .text          0x00000000c001842f       0x55 syscalls/sc_sbrk.32
                0x00000000c001842f                Sys::sbrk(regs*)
 .text          0x00000000c0018484       0x68 syscalls/sc_write.32
                0x00000000c0018484                Sys::write(regs*)
 .text          0x00000000c00184ec       0x1a syscalls/sc_yield.32
                0x00000000c00184ec                Sys::yield(regs*)
 .text          0x00000000c0018506      0x8bf vm86/vm8086.32
                0x00000000c0018506                vm8086EntryPoint(void*)
                0x00000000c0018531                inbv(unsigned short)
                0x00000000c0018537                outbv(unsigned short, unsigned char)
                0x00000000c0018541                realToLinear(unsigned short, unsigned short)
                0x00000000c0018551                getSegment(unsigned int)
                0x00000000c0018559                getOffset(unsigned int)
                0x00000000c001855e                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001868d                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018717                readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018728                readWordFromReal(unsigned short, unsigned short)
                0x00000000c001873a                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001874b                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018760                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018776                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001878b                vm8086FaultHandler(regs*)
 *fill*         0x00000000c0018dc5        0x1 
 .text          0x00000000c0018dc6     0x1088 fs/fat/vfslink.32
                0x00000000c0018dc6                FAT::getName()
                0x00000000c0018dcc                FAT::tell(void*, unsigned long long*)
                0x00000000c0018e00                FAT::stat(void*, unsigned long long*)
                0x00000000c0018e34                FAT::exists(char const*)
                0x00000000c0018e38                FAT::~FAT()
                0x00000000c0018e38                FAT::~FAT()
                0x00000000c0018e5c                FAT::~FAT()
                0x00000000c0018e84                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018f22                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018fdc                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00191c0                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00193c6                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00194ce                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019528                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019582                FAT::close(void*)
                0x00000000c00195ce                FAT::closeDir(void*)
                0x00000000c001961a                FAT::seek(void*, unsigned long long)
                0x00000000c001966e                fatWrapperReadDisk
                0x00000000c00196b5                fatWrapperWriteDisk
                0x00000000c00196fc                fatWrapperIoctl
                0x00000000c0019800                FAT::FAT()
                0x00000000c0019800                FAT::FAT()
                0x00000000c0019852                FAT::fixFilepath(char*)
                0x00000000c001988a                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00199b2                FAT::openDir(char const*, void**)
                0x00000000c0019a58                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b42                FAT::unlink(char const*)
                0x00000000c0019bbc                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d10                FAT::rename(char const*, char const*)
                0x00000000c0019dd4                FAT::mkdir(char const*)
 .text          0x00000000c0019e4e      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019e4e                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e54                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019e84                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019ea8                ISO9660::getName()
                0x00000000c0019eae                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019ed2                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019ed8                ISO9660::unlink(char const*)
                0x00000000c0019ede                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019ee4                ISO9660::rename(char const*, char const*)
                0x00000000c0019eea                ISO9660::mkdir(char const*)
                0x00000000c0019ef0                ISO9660::close(void*)
                0x00000000c0019f12                ISO9660::closeDir(void*)
                0x00000000c0019f34                ISO9660::~ISO9660()
                0x00000000c0019f34                ISO9660::~ISO9660()
                0x00000000c0019f58                ISO9660::~ISO9660()
                0x00000000c0019f7f                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019fc1                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a028                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a078                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a2bc                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a54a                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a59f                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a772                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a800                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a89a                ISO9660::exists(char const*)
                0x00000000c001a8be                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a952                ISO9660::openDir(char const*, void**)
                0x00000000c001aa0a                ISO9660::ISO9660()
                0x00000000c001aa0a                ISO9660::ISO9660()
 *fill*         0x00000000c001aa2d        0x1 
 .text          0x00000000c001aa2e      0x244 hal/sound/sndchannel.32
                0x00000000c001aa2e                SoundChannel::~SoundChannel()
                0x00000000c001aa2e                SoundChannel::~SoundChannel()
                0x00000000c001aa4a                SoundChannel::setSpeed(float)
                0x00000000c001aa56                SoundChannel::getSpeed()
                0x00000000c001aa5e                SoundChannel::setVolume(int)
                0x00000000c001aa7a                SoundChannel::getVolume()
                0x00000000c001aa82                SoundChannel::pause()
                0x00000000c001aa8c                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aa8c                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ab82                SoundChannel::play()
                0x00000000c001ab8c                SoundChannel::paused()
                0x00000000c001ab94                SoundChannel::getSampleRate()
                0x00000000c001ab9c                SoundChannel::getBits()
                0x00000000c001aba4                SoundChannel::getBufferUsed()
                0x00000000c001abac                SoundChannel::getBufferSize()
                0x00000000c001abb4                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001ac26                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ac72      0x317 hal/sound/sndhw.32
                0x00000000c001ac72                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac72                SoundDevice::SoundDevice(char const*)
                0x00000000c001acde                SoundDevice::~SoundDevice()
                0x00000000c001acde                SoundDevice::~SoundDevice()
                0x00000000c001ad58                SoundDevice::~SoundDevice()
                0x00000000c001ad82                SoundDevice::getFreeChannelNum()
                0x00000000c001ad9c                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001ae0c                SoundDevice::removeChannel(int)
                0x00000000c001ae3e                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001aeaa                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001af89        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af89        0x1 
 .text          0x00000000c001af8a      0x6e5 hw/bus/pci.32
                0x00000000c001af8a                PCI::open(int, int, void*)
                0x00000000c001af9e                PCI::close(int, int, void*)
                0x00000000c001afa2                PCI::PCI()
                0x00000000c001afa2                PCI::PCI()
                0x00000000c001b022                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b06a                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b08c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0b0                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0f4                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b118                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b13a                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b15c                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b180                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1e0                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b24c                PCI::checkBus(unsigned char)
                0x00000000c001b270                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b3e0                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5b0                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b61c                PCI::detect()
 *fill*         0x00000000c001b66f        0x1 
 .text          0x00000000c001b670      0x4b9 hw/clock/rtc.32
                0x00000000c001b670                RTC::open(int, int, void*)
                0x00000000c001b674                RTC::close(int, int, void*)
                0x00000000c001b678                RTC::timeInSecondsUTC()
                0x00000000c001b68a                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b68e                RTC::timeInDatetimeUTC()
                0x00000000c001b6b4                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b6f2                RTC::~RTC()
                0x00000000c001b6f2                RTC::~RTC()
                0x00000000c001b716                RTC::~RTC()
                0x00000000c001b740                RTC::get_update_in_progress_flag()
                0x00000000c001b758                RTC::completeRTCRefresh()
                0x00000000c001ba44                rtcIRQHandler(regs*, void*)
                0x00000000c001ba8a                RTC::RTC()
                0x00000000c001ba8a                RTC::RTC()
 *fill*         0x00000000c001bb29        0x1 
 .text          0x00000000c001bb2a      0xc70 hw/diskctrl/ide.32
                0x00000000c001bb2a                IDE::close(int, int, void*)
                0x00000000c001bb2e                IDE::IDE()
                0x00000000c001bb2e                IDE::IDE()
                0x00000000c001bb62                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb74                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb76                IDE::getBase(unsigned char)
                0x00000000c001bb88                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc48                IDE::read(unsigned char, unsigned char)
                0x00000000c001bcf6                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd5c                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd78                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bd94                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bdda                IDE::open(int, int, void*)
                0x00000000c001c1ea                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c2b6                IDE::detect()
                0x00000000c001c59e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c734                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c79a      0x62b hw/diskphys/ata.32
                0x00000000c001c79a                ATA::close(int, int, void*)
                0x00000000c001c7be                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c7c0                ATA::ATA()
                0x00000000c001c7c0                ATA::ATA()
                0x00000000c001c7ee                ATA::flush(bool)
                0x00000000c001c838                ATA::readyForCommand()
                0x00000000c001c888                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cc06                ATA::read(unsigned long long, int, void*)
                0x00000000c001cc6e                ATA::write(unsigned long long, int, void*)
                0x00000000c001ccd6                ATA::detectCHS()
                0x00000000c001cd00                ATA::open(int, int, void*)
 *fill*         0x00000000c001cdc5        0x1 
 .text          0x00000000c001cdc6      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cdc6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cdcc                ATAPI::close(int, int, void*)
                0x00000000c001cdf0                ATAPI::ATAPI()
                0x00000000c001cdf0                ATAPI::ATAPI()
                0x00000000c001ce1e                ATAPI::readyForCommand()
                0x00000000c001ce6e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d12e                ATAPI::diskRemoved()
                0x00000000c001d14a                ATAPI::eject()
                0x00000000c001d190                ATAPI::diskInserted()
                0x00000000c001d1be                ATAPI::detectMedia()
                0x00000000c001d27a                ATAPI::open(int, int, void*)
                0x00000000c001d2fa                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d379        0x1 
 .text          0x00000000c001d37a       0x8e hw/fpu/avx.32
                0x00000000c001d37a                AVX::open(int, int, void*)
                0x00000000c001d38c                AVX::close(int, int, void*)
                0x00000000c001d39e                AVX::available()
                0x00000000c001d3b0                AVX::save(void*)
                0x00000000c001d3c8                AVX::load(void*)
                0x00000000c001d3e0                AVX::AVX()
                0x00000000c001d3e0                AVX::AVX()
 .text          0x00000000c001d408       0x90 hw/fpu/mmx.32
                0x00000000c001d408                MMX::available()
                0x00000000c001d41c                MMX::open(int, int, void*)
                0x00000000c001d42e                MMX::close(int, int, void*)
                0x00000000c001d440                MMX::save(void*)
                0x00000000c001d458                MMX::load(void*)
                0x00000000c001d470                MMX::MMX()
                0x00000000c001d470                MMX::MMX()
 .text          0x00000000c001d498       0x96 hw/fpu/sse.32
                0x00000000c001d498                SSE::open(int, int, void*)
                0x00000000c001d4aa                SSE::close(int, int, void*)
                0x00000000c001d4bc                SSE::available()
                0x00000000c001d4d6                SSE::save(void*)
                0x00000000c001d4ee                SSE::load(void*)
                0x00000000c001d506                SSE::SSE()
                0x00000000c001d506                SSE::SSE()
 .text          0x00000000c001d52e       0x8e hw/fpu/x87.32
                0x00000000c001d52e                x87::open(int, int, void*)
                0x00000000c001d540                x87::close(int, int, void*)
                0x00000000c001d552                x87::available()
                0x00000000c001d564                x87::save(void*)
                0x00000000c001d57c                x87::load(void*)
                0x00000000c001d594                x87::x87()
                0x00000000c001d594                x87::x87()
 .text          0x00000000c001d5bc      0x5f3 hw/intctrl/apic.32
                0x00000000c001d5bc                APIC::disable()
                0x00000000c001d5be                APIC::close(int, int, void*)
                0x00000000c001d5e0                IOAPIC::close(int, int, void*)
                0x00000000c001d5e6                APIC::io_wait()
                0x00000000c001d5ec                APIC::getBase()
                0x00000000c001d62e                APIC::eoi(unsigned char)
                0x00000000c001d65c                APIC::open(int, int, void*)
                0x00000000c001d716                IOAPIC::IOAPIC()
                0x00000000c001d716                IOAPIC::IOAPIC()
                0x00000000c001d73e                APIC::APIC()
                0x00000000c001d73e                APIC::APIC()
                0x00000000c001d80e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d840                IOAPIC::read(int)
                0x00000000c001d868                IOAPIC::open(int, int, void*)
                0x00000000c001d95e                IOAPIC::write(int, int)
                0x00000000c001d98a                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001da44                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001dbaf        0x1 
 .text          0x00000000c001dbb0      0x3d3 hw/intctrl/pic.32
                0x00000000c001dbb0                PIC::disable()
                0x00000000c001dbde                PIC::close(int, int, void*)
                0x00000000c001dc00                PIC::PIC()
                0x00000000c001dc00                PIC::PIC()
                0x00000000c001dcd6                PIC::ioWait()
                0x00000000c001dcdc                PIC::getIRQReg(int)
                0x00000000c001dd46                PIC::eoi(unsigned char)
                0x00000000c001ddd8                PIC::remap()
                0x00000000c001df44                PIC::open(int, int, void*)
 *fill*         0x00000000c001df83        0x1 
 .text          0x00000000c001df84      0x252 hw/timer/apictimer.32
                0x00000000c001df84                APICTimer::close(int, int, void*)
                0x00000000c001df8a                apicTimerHandler(regs*, void*)
                0x00000000c001dfb8                APICTimer::write(int)
                0x00000000c001e0b6                APICTimer::open(int, int, void*)
                0x00000000c001e1ae                APICTimer::APICTimer()
                0x00000000c001e1ae                APICTimer::APICTimer()
 .text          0x00000000c001e1d6      0x1a7 hw/timer/pit.32
                0x00000000c001e1d6                PIT::write(int)
                0x00000000c001e254                pitHandler(regs*, void*)
                0x00000000c001e280                PIT::open(int, int, void*)
                0x00000000c001e2ce                PIT::close(int, int, void*)
                0x00000000c001e2fe                PIT::PIT()
                0x00000000c001e2fe                PIT::PIT()
 *fill*         0x00000000c001e37d        0x3 
 .text          0x00000000c001e380        0xa hw/fpu/x86/avx.32
                0x00000000c001e380                avxDetect
                0x00000000c001e386                avxSave
                0x00000000c001e387                avxLoad
                0x00000000c001e388                avxInit
                0x00000000c001e389                avxClose
 *fill*         0x00000000c001e38a        0x6 
 .text          0x00000000c001e390       0x38 hw/fpu/x86/sse.32
                0x00000000c001e390                sseDetect
                0x00000000c001e3ab                sseSave
                0x00000000c001e3b1                sseLoad
                0x00000000c001e3b7                sseInit
                0x00000000c001e3c7                sseClose
 *fill*         0x00000000c001e3c8        0x8 
 .text          0x00000000c001e3d0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e3d6                x87Detect
                0x00000000c001e3f1                x87Save
                0x00000000c001e3f7                x87Load
                0x00000000c001e3fc                x87Init
                0x00000000c001e416                x87Close
 *fill*         0x00000000c001e417        0x1 
 .text          0x00000000c001e418       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e43d        0x0 crtn.32
 *fill*         0x00000000c001e43d        0x3 
 .text          0x00000000c001e440      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e440                __divdi3
 *fill*         0x00000000c001e58b        0x1 
 .text          0x00000000c001e58c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e58c                __moddi3
 *fill*         0x00000000c001e70a        0x2 
 .text          0x00000000c001e70c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e70c                __udivdi3
 *fill*         0x00000000c001e80b        0x1 
 .text          0x00000000c001e80c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e80c                __umoddi3
 *fill*         0x00000000c001e926        0xa 
 .text          0x00000000c001e930       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e930                fabs
 *fill*         0x00000000c001e94e        0x2 
 .text          0x00000000c001e950        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e950                lrint
 .text          0x00000000c001e95c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e95c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e968        0x0
 .iplt          0x00000000c001e968        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e968        0xf
 .init          0x00000000c001e968        0x3 crti.32
                0x00000000c001e968                _init
 .init          0x00000000c001e96b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e970        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e975        0x2 crtn.32

.fini           0x00000000c001e977        0xa
 .fini          0x00000000c001e977        0x3 crti.32
                0x00000000c001e977                _fini
 .fini          0x00000000c001e97a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e97f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e982       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e982       0x23 core/computer.32
                0x00000000c001e982                Computer::~Computer()
                0x00000000c001e982                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e9a6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e9a6       0x2a core/computer.32
                0x00000000c001e9a6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e9d0       0x15
 .text._Z10idleCommonv
                0x00000000c001e9d0       0x15 core/idle.32
                0x00000000c001e9d0                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e9e5       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e9e5       0x12 core/kconsole.32
                0x00000000c001e9e5                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e9f7       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e9f7       0x12 core/kconsole.32
                0x00000000c001e9f7                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001ea09       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001ea09       0x12 core/kconsole.32
                0x00000000c001ea09                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ea1b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ea1b       0x12 core/kconsole.32
                0x00000000c001ea1b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001ea2d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001ea2d        0x9 core/kheap.32
                0x00000000c001ea2d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea36        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea36        0x2 core/prcssthr.32
                0x00000000c001ea36                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ea36                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea38       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea38       0x3e core/prcssthr.32
                0x00000000c001ea38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ea38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea76       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea76       0x58 core/prcssthr.32
                0x00000000c001ea76                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ea76                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eace       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eace       0xd3 core/prcssthr.32
                0x00000000c001eace                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eba2       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eba2       0x1c core/prcssthr.32
                0x00000000c001eba2                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebbe       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebbe       0xae core/prcssthr.32
                0x00000000c001ebbe                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec6c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec6c        0x7 core/prcssthr.32
                0x00000000c001ec6c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec74        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec74        0x8 core/prcssthr.32
                0x00000000c001ec74                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec7c        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec7c        0x2 core/unixfile.32
                0x00000000c001ec7c                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ec7c                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec7e       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec7e       0x58 core/unixfile.32
                0x00000000c001ec7e                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ec7e                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ecd6        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ecd6        0x7 core/unixfile.32
                0x00000000c001ecd6                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecde       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecde       0xa1 core/unixfile.32
                0x00000000c001ecde                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed80        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed80        0x8 core/unixfile.32
                0x00000000c001ed80                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed88      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed88      0x130 core/unixfile.32
                0x00000000c001ed88                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eeb8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eeb8       0x1a hal/device.32
                0x00000000c001eeb8                DriverlessDevice::~DriverlessDevice()
                0x00000000c001eeb8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eed2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eed2       0x2a hal/device.32
                0x00000000c001eed2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eefc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eefc       0xdc hal/device.32
                0x00000000c001eefc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efd8       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efd8       0x58 hal/device.32
                0x00000000c001efd8                LinkedList<Device>::LinkedList()
                0x00000000c001efd8                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001f030       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001f030       0x12 hal/intctrl.32
                0x00000000c001f030                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001f042       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001f042       0x12 hal/intctrl.32
                0x00000000c001f042                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f054       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f054       0x12 hal/intctrl.32
                0x00000000c001f054                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f066       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f066       0x12 hal/intctrl.32
                0x00000000c001f066                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f078       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f078       0x12 hal/intctrl.32
                0x00000000c001f078                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f08a       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f08a       0x12 hal/intctrl.32
                0x00000000c001f08a                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001f09c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f09c       0x23 hw/acpi.32
                0x00000000c001f09c                ACPI::~ACPI()
                0x00000000c001f09c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f0c0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f0c0       0x2a hw/acpi.32
                0x00000000c001f0c0                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f0ea       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f0ea       0x23 hw/cpu.32
                0x00000000c001f0ea                CPU::~CPU()
                0x00000000c001f0ea                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f10e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f10e       0x2a hw/cpu.32
                0x00000000c001f10e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f138        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f138        0x9 hw/cpu.32
                0x00000000c001f138                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f141        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f141        0x9 hw/cpu.32
                0x00000000c001f141                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001f14a       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f14a       0x23 hw/bus/pci.32
                0x00000000c001f14a                PCI::~PCI()
                0x00000000c001f14a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f16e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f16e       0x2a hw/bus/pci.32
                0x00000000c001f16e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f198       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f198       0x23 hw/diskctrl/ide.32
                0x00000000c001f198                IDE::~IDE()
                0x00000000c001f198                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f1bc       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f1bc       0x2a hw/diskctrl/ide.32
                0x00000000c001f1bc                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f1e6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f1e6       0x23 hw/diskphys/ata.32
                0x00000000c001f1e6                ATA::~ATA()
                0x00000000c001f1e6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f20a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f20a       0x2a hw/diskphys/ata.32
                0x00000000c001f20a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f234       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f234       0x23 hw/diskphys/atapi.32
                0x00000000c001f234                ATAPI::~ATAPI()
                0x00000000c001f234                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f258       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f258       0x2a hw/diskphys/atapi.32
                0x00000000c001f258                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f282       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f282       0x23 hw/fpu/avx.32
                0x00000000c001f282                AVX::~AVX()
                0x00000000c001f282                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f2a6       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f2a6       0x2a hw/fpu/avx.32
                0x00000000c001f2a6                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f2d0       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f2d0       0x23 hw/fpu/mmx.32
                0x00000000c001f2d0                MMX::~MMX()
                0x00000000c001f2d0                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f2f4       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f2f4       0x2a hw/fpu/mmx.32
                0x00000000c001f2f4                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f31e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f31e       0x23 hw/fpu/sse.32
                0x00000000c001f31e                SSE::~SSE()
                0x00000000c001f31e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f342       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f342       0x2a hw/fpu/sse.32
                0x00000000c001f342                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f36c       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f36c       0x23 hw/fpu/x87.32
                0x00000000c001f36c                x87::~x87()
                0x00000000c001f36c                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f390       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f390       0x2a hw/fpu/x87.32
                0x00000000c001f390                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f3ba       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f3ba       0x23 hw/intctrl/apic.32
                0x00000000c001f3ba                IOAPIC::~IOAPIC()
                0x00000000c001f3ba                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f3de       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f3de       0x2a hw/intctrl/apic.32
                0x00000000c001f3de                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f408       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f408       0x23 hw/intctrl/apic.32
                0x00000000c001f408                APIC::~APIC()
                0x00000000c001f408                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f42c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f42c       0x2a hw/intctrl/apic.32
                0x00000000c001f42c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f456       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f456       0x23 hw/intctrl/pic.32
                0x00000000c001f456                PIC::~PIC()
                0x00000000c001f456                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f47a       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f47a       0x2a hw/intctrl/pic.32
                0x00000000c001f47a                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f4a4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f4a4       0x23 hw/timer/apictimer.32
                0x00000000c001f4a4                APICTimer::~APICTimer()
                0x00000000c001f4a4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f4c8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f4c8       0x2a hw/timer/apictimer.32
                0x00000000c001f4c8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f4f2       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f4f2       0x23 hw/timer/pit.32
                0x00000000c001f4f2                PIT::~PIT()
                0x00000000c001f4f2                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f516       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f516       0x2a hw/timer/pit.32
                0x00000000c001f516                PIT::~PIT()

.rodata         0x00000000c001f540    0x1b8cc
                0x00000000c001f540                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f540        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f544        0x4 core/prcssthr.32
 .ctors         0x00000000c001f548        0x4 core/unixfile.32
 .ctors         0x00000000c001f54c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f550                end_ctors = .
                0x00000000c001f550                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f550        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f554        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f554                __DTOR_END__
                0x00000000c001f558                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f558        0x8 
 .rodata        0x00000000c001f560      0x101 acpica/utclib.32
                0x00000000c001f560                AcpiGbl_Ctypes
 *fill*         0x00000000c001f661        0x3 
 .rodata        0x00000000c001f664       0x18 core/malloc.32
 *fill*         0x00000000c001f67c        0x4 
 .rodata        0x00000000c001f680      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f7a0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f7f6        0xa 
 .rodata        0x00000000c001f800      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fc00       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fcb6        0x2 
 .rodata.str1.4
                0x00000000c001fcb8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c002005d        0x3 
 .rodata        0x00000000c0020060       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c00200c0       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c00200e0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c00200f4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020136        0x2 
 .rodata.cst8   0x00000000c0020138        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020140    0x185a4 hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c00386e4       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00387a8       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c00387f2        0x6 
 .rodata.cst8   0x00000000c00387f8        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0038800       0x14 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038814       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c003885c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c003885c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00388cf        0x1 
 .rodata._ZTV8Computer
                0x00000000c00388d0       0x2c core/computer.32
                0x00000000c00388d0                vtable for Computer
 .rodata.str1.1
                0x00000000c00388fc      0x1a1 core/elf.32
                                        0x1a3 (size before relaxing)
 .rodata.str1.1
                0x00000000c0038a9d       0x1c core/gdt.32
 *fill*         0x00000000c0038ab9        0x3 
 .rodata.str1.4
                0x00000000c0038abc      0x152 core/kconsole.32
 *fill*         0x00000000c0038c0e        0x2 
 .rodata        0x00000000c0038c10      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c0038d60       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0038e15        0x3 
 .rodata.str1.4
                0x00000000c0038e18       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0038e48        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0038e54       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038e6f       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c0038ebd       0x39 core/pipe.32
 *fill*         0x00000000c0038ef6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0038ef8       0x1c core/pipe.32
                0x00000000c0038ef8                vtable for Pipe
 .rodata.str1.1
                0x00000000c0038f14       0x53 core/prcssthr.32
 *fill*         0x00000000c0038f67        0x1 
 .rodata.str1.4
                0x00000000c0038f68      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c00391e8       0x19 core/prcssthr.32
 *fill*         0x00000000c0039201        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039204       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039226       0x15 core/prcssthr.32
 *fill*         0x00000000c003923b        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c003923c       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039287        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c003928f       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c00392ec       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c0039338       0x9d core/terminal.32
 *fill*         0x00000000c00393d5        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00393d8       0x1c core/terminal.32
                0x00000000c00393d8                vtable for VgaText
 .rodata        0x00000000c00393f4       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c0039412       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c003942c       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c003942c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c003942c        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c003942c       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c003945b       0x22 core/unixfile.32
 *fill*         0x00000000c003945b        0x1 
 .rodata.str1.4
                0x00000000c003945c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c003947c       0x1c core/unixfile.32
                0x00000000c003947c                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0039498       0x1c core/unixfile.32
                0x00000000c0039498                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00394b4      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c003965f      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c00397e3       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0039816       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0039816        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c0039818       0x64 fs/vfs.32
                0x00000000c0039818                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c003987c       0x1c fs/vfs.32
                0x00000000c003987c                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0039898       0x1c fs/vfs.32
                0x00000000c0039898                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00398b4       0x2c hal/bus.32
                0x00000000c00398b4                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00398e0       0x30 hal/buzzer.32
                0x00000000c00398e0                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0039910       0x3c hal/clock.32
                0x00000000c0039910                vtable for Clock
 *fill*         0x00000000c003994c       0x14 
 .rodata        0x00000000c0039960       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0039990       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00399ae       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00399ae       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00399ae       0x19 hal/device.32
 *fill*         0x00000000c00399ae        0x2 
 .rodata._ZTV6Device
                0x00000000c00399b0       0x2c hal/device.32
                0x00000000c00399b0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00399dc       0x2c hal/device.32
                0x00000000c00399dc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0039a08       0x2c hal/diskctrl.32
                0x00000000c0039a08                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0039a34       0x34 hal/diskphys.32
                0x00000000c0039a34                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0039a68        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0039a70       0x38 hal/fpu.32
                0x00000000c0039a70                vtable for FPU
 .rodata.str1.4
                0x00000000c0039aa8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0039bd8      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0039d45        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0039d48       0x48 hal/intctrl.32
                0x00000000c0039d48                vtable for InterruptController
 .rodata        0x00000000c0039d90       0x4e hal/keybrd.32
 *fill*         0x00000000c0039dde        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0039de0       0x34 hal/keybrd.32
                0x00000000c0039de0                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0039e14       0x7a hal/logidisk.32
 *fill*         0x00000000c0039e8e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0039e90       0x2c hal/logidisk.32
                0x00000000c0039e90                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0039ebc       0x2c hal/mouse.32
                0x00000000c0039ebc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0039ee8        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039ef3       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039ef3        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039ef3       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039ef3       0x22 hal/timer.32
 *fill*         0x00000000c0039ef3        0x1 
 .rodata._ZTV5Timer
                0x00000000c0039ef4       0x30 hal/timer.32
                0x00000000c0039ef4                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0039f24       0x10 hal/vcache.32
                0x00000000c0039f24                vtable for VCache
 .rodata.str1.1
                0x00000000c0039f34        0xf hal/video.32
 *fill*         0x00000000c0039f43        0x1 
 .rodata._ZTV5Video
                0x00000000c0039f44       0x40 hal/video.32
                0x00000000c0039f44                vtable for Video
 .rodata.str1.1
                0x00000000c0039f84       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c003a038       0xe5 hw/acpi.32
 *fill*         0x00000000c003a11d        0x3 
 .rodata._ZTV4ACPI
                0x00000000c003a120       0x2c hw/acpi.32
                0x00000000c003a120                vtable for ACPI
 .rodata.str1.1
                0x00000000c003a14c      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c003a370       0x2c hw/cpu.32
                0x00000000c003a370                vtable for CPU
 .rodata.str1.1
                0x00000000c003a39c       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c003a3e1       0x5f vm86/vm8086.32
 .rodata        0x00000000c003a440       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c003a470       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c003a4c3        0x1 
 .rodata.str1.4
                0x00000000c003a4c4       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c003a4ec       0x64 fs/fat/vfslink.32
                0x00000000c003a4ec                vtable for FAT
 .rodata.str1.1
                0x00000000c003a550       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c003a599        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c003a59c       0x64 fs/iso9660/vfslink.32
                0x00000000c003a59c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c003a600       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c003a61a        0x2 
 .rodata.cst4   0x00000000c003a61c        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c003a620       0x38 hal/sound/sndhw.32
                0x00000000c003a620                vtable for SoundDevice
 .rodata.cst4   0x00000000c003a658       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c003a668       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c003a70c       0x2c hw/bus/pci.32
                0x00000000c003a70c                vtable for PCI
 .rodata.str1.1
                0x00000000c003a738       0x2b hw/clock/rtc.32
 *fill*         0x00000000c003a763        0x1 
 .rodata._ZTV3RTC
                0x00000000c003a764       0x3c hw/clock/rtc.32
                0x00000000c003a764                vtable for RTC
 .rodata.str1.1
                0x00000000c003a7a0      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c003a9d6        0x2 
 .rodata._ZTV3IDE
                0x00000000c003a9d8       0x2c hw/diskctrl/ide.32
                0x00000000c003a9d8                vtable for IDE
 .rodata.str1.1
                0x00000000c003aa04       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c003aa25        0x3 
 .rodata._ZTV3ATA
                0x00000000c003aa28       0x34 hw/diskphys/ata.32
                0x00000000c003aa28                vtable for ATA
 .rodata.str1.1
                0x00000000c003aa5c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c003aa94       0x34 hw/diskphys/atapi.32
                0x00000000c003aa94                vtable for ATAPI
 .rodata.str1.1
                0x00000000c003aac8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c003aad0       0x38 hw/fpu/avx.32
                0x00000000c003aad0                vtable for AVX
 .rodata.str1.1
                0x00000000c003ab08        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c003ab10       0x38 hw/fpu/mmx.32
                0x00000000c003ab10                vtable for MMX
 .rodata.str1.1
                0x00000000c003ab48        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c003ab50       0x38 hw/fpu/sse.32
                0x00000000c003ab50                vtable for SSE
 .rodata.str1.1
                0x00000000c003ab88        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c003ab90       0x38 hw/fpu/x87.32
                0x00000000c003ab90                vtable for x87
 .rodata        0x00000000c003abc8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c003aca0       0x48 hw/intctrl/apic.32
                0x00000000c003aca0                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c003ace8       0x2c hw/intctrl/apic.32
                0x00000000c003ace8                vtable for IOAPIC
 .rodata        0x00000000c003ad14       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c003ad36        0x2 
 .rodata._ZTV3PIC
                0x00000000c003ad38       0x48 hw/intctrl/pic.32
                0x00000000c003ad38                vtable for PIC
 .rodata.str1.1
                0x00000000c003ad80        0xb hw/timer/apictimer.32
 *fill*         0x00000000c003ad8b        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c003ad8c       0x30 hw/timer/apictimer.32
                0x00000000c003ad8c                vtable for APICTimer
 .rodata.str1.1
                0x00000000c003adbc       0x1d hw/timer/pit.32
 *fill*         0x00000000c003add9        0x3 
 .rodata._ZTV3PIT
                0x00000000c003addc       0x30 hw/timer/pit.32
                0x00000000c003addc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c003ae0c      0x5f9
 *(.data)
 .data          0x00000000c003ae0c        0x0 crti.32
 .data          0x00000000c003ae0c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c003ae0c                __dso_handle
 .data          0x00000000c003ae10        0x0 acpica/utclib.32
 .data          0x00000000c003ae10        0x0 core/malloc.32
 .data          0x00000000c003ae10        0x0 libk/string.32
 .data          0x00000000c003ae10        0x0 fs/fat/diskio.32
 .data          0x00000000c003ae10        0x0 fs/fat/ff.32
 .data          0x00000000c003ae10        0x0 fs/fat/ffsystem.32
 .data          0x00000000c003ae10        0x0 fs/fat/ffunicode.32
 .data          0x00000000c003ae10        0x0 hal/libresample/samplerate.32
 .data          0x00000000c003ae10        0x0 hal/libresample/src_linear.32
 .data          0x00000000c003ae10        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c003ae10        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c003ae10        0x0 core/computer.32
 .data          0x00000000c003ae10        0x0 core/elf.32
 .data          0x00000000c003ae10        0x0 core/gdt.32
 .data          0x00000000c003ae10        0x0 core/idle.32
 .data          0x00000000c003ae10        0x0 core/idt.32
 .data          0x00000000c003ae10        0x0 core/kconsole.32
 .data          0x00000000c003ae10        0x4 core/kheap.32
 .data          0x00000000c003ae14        0x0 core/main.32
 .data          0x00000000c003ae14        0x4 core/physmgr.32
                0x00000000c003ae14                Phys::bitmap
 .data          0x00000000c003ae18        0x0 core/pipe.32
 .data          0x00000000c003ae18        0x4 core/prcssthr.32
                0x00000000c003ae18                nextPID
 .data          0x00000000c003ae1c        0x0 core/syscalls.32
 *fill*         0x00000000c003ae1c        0x4 
 .data          0x00000000c003ae20       0x60 core/terminal.32
                0x00000000c003ae20                VgaText::hiddenOut
                0x00000000c003ae40                ansiToVGAMappings
 .data          0x00000000c003ae80        0x0 core/tss.32
 .data          0x00000000c003ae80        0x4 core/unixfile.32
                0x00000000c003ae80                UnixFile::nextFd
 .data          0x00000000c003ae84        0x8 core/virtmgr.32
                0x00000000c003ae84                Virt::pageAllocPtr
                0x00000000c003ae88                Virt::bitmap
 .data          0x00000000c003ae8c        0x4 coreobjs/c++.32
                0x00000000c003ae8c                __stack_chk_guard
 .data          0x00000000c003ae90        0x0 debugger/debug.32
 .data          0x00000000c003ae90        0x0 fs/vfs.32
 .data          0x00000000c003ae90        0x0 hal/bus.32
 .data          0x00000000c003ae90        0x0 hal/buzzer.32
 .data          0x00000000c003ae90        0x0 hal/clock.32
 .data          0x00000000c003ae90        0x0 hal/device.32
 .data          0x00000000c003ae90        0x0 hal/diskctrl.32
 .data          0x00000000c003ae90        0x0 hal/diskphys.32
 .data          0x00000000c003ae90        0x0 hal/fpu.32
 *fill*         0x00000000c003ae90       0x10 
 .data          0x00000000c003aea0      0x2a0 hal/intctrl.32
                0x00000000c003aea0                exceptionNames
 .data          0x00000000c003b140        0x0 hal/keybrd.32
 .data          0x00000000c003b140        0x0 hal/logidisk.32
 .data          0x00000000c003b140        0x0 hal/mouse.32
 .data          0x00000000c003b140        0x0 hal/partition.32
 .data          0x00000000c003b140        0x0 hal/timer.32
 .data          0x00000000c003b140        0x0 hal/vcache.32
 .data          0x00000000c003b140        0x0 hal/video.32
 .data          0x00000000c003b140       0x10 hw/acpi.32
                0x00000000c003b140                legacyIRQRemaps
 *fill*         0x00000000c003b150       0x10 
 .data          0x00000000c003b160      0x2a4 hw/cpu.32
                0x00000000c003b160                cpuNameList
                0x00000000c003b400                lastCode
 .data          0x00000000c003b404        0x0 hw/ports.32
 .data          0x00000000c003b404        0x0 registry/registry.32
 .data          0x00000000c003b404        0x0 syscalls/sc_exit.32
 .data          0x00000000c003b404        0x0 syscalls/sc_read.32
 .data          0x00000000c003b404        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c003b404        0x0 syscalls/sc_write.32
 .data          0x00000000c003b404        0x0 syscalls/sc_yield.32
 .data          0x00000000c003b404        0x0 vm86/vm8086.32
 .data          0x00000000c003b404        0x0 fs/fat/vfslink.32
 .data          0x00000000c003b404        0x1 fs/iso9660/vfslink.32
                0x00000000c003b404                recentDriveletter
 .data          0x00000000c003b405        0x0 hal/sound/sndchannel.32
 .data          0x00000000c003b405        0x0 hal/sound/sndhw.32
 .data          0x00000000c003b405        0x0 hw/bus/isa.32
 .data          0x00000000c003b405        0x0 hw/bus/pci.32
 .data          0x00000000c003b405        0x0 hw/clock/rtc.32
 .data          0x00000000c003b405        0x0 hw/diskctrl/ide.32
 .data          0x00000000c003b405        0x0 hw/diskphys/ata.32
 .data          0x00000000c003b405        0x0 hw/diskphys/atapi.32
 .data          0x00000000c003b405        0x0 hw/fpu/avx.32
 .data          0x00000000c003b405        0x0 hw/fpu/mmx.32
 .data          0x00000000c003b405        0x0 hw/fpu/sse.32
 .data          0x00000000c003b405        0x0 hw/fpu/x87.32
 .data          0x00000000c003b405        0x0 hw/intctrl/apic.32
 .data          0x00000000c003b405        0x0 hw/intctrl/pic.32
 .data          0x00000000c003b405        0x0 hw/timer/apictimer.32
 .data          0x00000000c003b405        0x0 hw/timer/pit.32
 .data          0x00000000c003b405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c003b405        0x0 crtn.32
 .data          0x00000000c003b405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c003b405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c003b405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c003b405        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c003b405        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c003b405        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c003b405        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c003b408        0x0
 .got           0x00000000c003b408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c003b408        0x0
 .got.plt       0x00000000c003b408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c003b408        0x0
 .igot.plt      0x00000000c003b408        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c003b408        0x0
 .tm_clone_table
                0x00000000c003b408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c003b408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c003b405      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c003b405        0x3 
 .eh_frame      0x00000000c003b408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c003b408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c003b408       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c003b460       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c003b4a0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c003b50c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c003b590       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c003b5a8        0x0
 .rel.got       0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c003b5a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c003b5a8     0x1b80
                0x00000000c003b5a8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c003b5a8        0x0 crti.32
 .bss           0x00000000c003b5a8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c003b5c8        0x4 acpica/utclib.32
 *fill*         0x00000000c003b5cc       0x14 
 .bss           0x00000000c003b5e0      0x378 core/malloc.32
 .bss           0x00000000c003b958        0x0 libk/string.32
 .bss           0x00000000c003b958        0x0 fs/fat/diskio.32
 *fill*         0x00000000c003b958        0x8 
 .bss           0x00000000c003b960       0x88 fs/fat/ff.32
 .bss           0x00000000c003b9e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c003b9e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c003b9e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c003b9e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c003b9e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c003b9e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c003b9e8        0x6 core/computer.32
                0x00000000c003b9e8                computer
                0x00000000c003b9ec                preemptionOn
                0x00000000c003b9ed                schedulingOn
 *fill*         0x00000000c003b9ee       0x12 
 .bss           0x00000000c003ba00      0x184 core/elf.32
                0x00000000c003ba00                kernelSymbols
                0x00000000c003ba80                kernelStringTable
                0x00000000c003bb00                kernelSymbolTable
                0x00000000c003bb80                nextDLLSymbolIndex
 .bss           0x00000000c003bb84        0x6 core/gdt.32
                0x00000000c003bb84                gdtDescr
 .bss           0x00000000c003bb8a        0x0 core/idle.32
 *fill*         0x00000000c003bb8a        0x2 
 .bss           0x00000000c003bb8c        0x6 core/idt.32
                0x00000000c003bb8c                idtDescr
 .bss           0x00000000c003bb92        0x1 core/kconsole.32
                0x00000000c003bb92                kernelInPanic
 .bss           0x00000000c003bb93        0x0 core/kheap.32
 *fill*         0x00000000c003bb93        0x1 
 .bss           0x00000000c003bb94        0x4 core/main.32
                0x00000000c003bb94                sysBootSettings
 *fill*         0x00000000c003bb98        0x8 
 .bss           0x00000000c003bba0       0x50 core/physmgr.32
                0x00000000c003bba0                Phys::currentPagePointer
                0x00000000c003bba4                Phys::highestMem
                0x00000000c003bba8                Phys::oldPercent
                0x00000000c003bbac                Phys::usedPages
                0x00000000c003bbb0                Phys::usablePages
                0x00000000c003bbc0                Phys::dmaUsage
 .bss           0x00000000c003bbf0        0x0 core/pipe.32
 .bss           0x00000000c003bbf0       0x68 core/prcssthr.32
                0x00000000c003bbf0                cleanerThread
                0x00000000c003bbf4                weNeedTheCleanerToNotBlock
                0x00000000c003bbf8                xxxx
                0x00000000c003bbfc                retValLockStuff
                0x00000000c003bc00                retValSchedLock
                0x00000000c003bc04                lockStuffLock
                0x00000000c003bc08                schedulerLock
                0x00000000c003bc0c                taskSwitchesPostponedFlag
                0x00000000c003bc10                postponeTaskSwitchesCounter
                0x00000000c003bc14                irqDisableCounter
                0x00000000c003bc18                terminatedTaskList
                0x00000000c003bc24                sleepingTaskList
                0x00000000c003bc30                taskList
                0x00000000c003bc3c                kernelProcess
 *fill*         0x00000000c003bc58        0x8 
 .bss           0x00000000c003bc60      0x200 core/syscalls.32
                0x00000000c003bc60                systemCallHandlers
 .bss           0x00000000c003be60       0x29 core/terminal.32
                0x00000000c003be60                textModeImplementation
                0x00000000c003be80                terminalCycle
                0x00000000c003be84                activeTerminal
                0x00000000c003be88                VgaText::graphicMode
 *fill*         0x00000000c003be89        0x1 
 .bss           0x00000000c003be8a        0x2 core/tss.32
                0x00000000c003be8a                doubleFaultSelector
 .bss           0x00000000c003be8c       0x10 core/unixfile.32
                0x00000000c003be8c                initialFilesAdded
                0x00000000c003be90                unixFileLinkedList
 .bss           0x00000000c003be9c        0x4 core/virtmgr.32
                0x00000000c003be9c                firstVAS
 .bss           0x00000000c003bea0        0x0 coreobjs/c++.32
 .bss           0x00000000c003bea0        0x0 debugger/debug.32
 .bss           0x00000000c003bea0        0x4 fs/vfs.32
                0x00000000c003bea0                installedFilesystems
 .bss           0x00000000c003bea4        0x0 hal/bus.32
 .bss           0x00000000c003bea4        0x4 hal/buzzer.32
                0x00000000c003bea4                systemBuzzer
 .bss           0x00000000c003bea8        0x8 hal/clock.32
                0x00000000c003bea8                dstOn
                0x00000000c003bea9                timezoneHalfHourOffset
                0x00000000c003beac                timezoneHourOffset
 .bss           0x00000000c003beb0        0x0 hal/device.32
 .bss           0x00000000c003beb0        0x0 hal/diskctrl.32
 .bss           0x00000000c003beb0        0x0 hal/diskphys.32
 .bss           0x00000000c003beb0        0x0 hal/fpu.32
 .bss           0x00000000c003beb0       0x1c hal/intctrl.32
                0x00000000c003beb0                pf5
                0x00000000c003beb4                pf4
                0x00000000c003beb8                pf3
                0x00000000c003bebc                pf2
                0x00000000c003bec0                pf1
                0x00000000c003bec4                pf0
                0x00000000c003bec8                gpFaultIntercept
 *fill*         0x00000000c003becc       0x14 
 .bss           0x00000000c003bee0      0x429 hal/keybrd.32
                0x00000000c003bee0                keyboardWaitingTaskList
                0x00000000c003bee4                keyboardSetupYet
                0x00000000c003bf00                keystates
 *fill*         0x00000000c003c309       0x17 
 .bss           0x00000000c003c320       0x88 hal/logidisk.32
                0x00000000c003c320                diskAssignments
                0x00000000c003c340                disks
 .bss           0x00000000c003c3a8        0x4 hal/mouse.32
                0x00000000c003c3a8                guiMouseHandler
 .bss           0x00000000c003c3ac        0x0 hal/partition.32
 *fill*         0x00000000c003c3ac        0x4 
 .bss           0x00000000c003c3b0        0x8 hal/timer.32
                0x00000000c003c3b0                nanoSinceBoot
 .bss           0x00000000c003c3b8        0x0 hal/vcache.32
 .bss           0x00000000c003c3b8        0x4 hal/video.32
                0x00000000c003c3b8                screen
 *fill*         0x00000000c003c3bc        0x4 
 .bss           0x00000000c003c3c0      0x3c0 hw/acpi.32
                0x00000000c003c3c0                systemSleepFunction
                0x00000000c003c3c4                systemResetFunction
                0x00000000c003c3c8                systemShutdownFunction
                0x00000000c003c3cc                nextACPITable
                0x00000000c003c3e0                acpiTables
                0x00000000c003c5e0                usingXSDT
                0x00000000c003c5e4                MADTpointer
                0x00000000c003c5e8                RSDTpointer
                0x00000000c003c5ec                RSDPpointer
                0x00000000c003c5f0                ioapicDiscoveryNumber
                0x00000000c003c600                ioapicFoundInMADT
                0x00000000c003c620                ioapicAddresses
                0x00000000c003c6a0                ioapicGSIBase
                0x00000000c003c720                processorDiscoveryNumber
                0x00000000c003c740                matchingAPICID
                0x00000000c003c760                processorID
 .bss           0x00000000c003c780       0x10 hw/cpu.32
                0x00000000c003c780                lastD
                0x00000000c003c784                lastC
                0x00000000c003c788                lastB
                0x00000000c003c78c                lastA
 .bss           0x00000000c003c790        0x0 hw/ports.32
 .bss           0x00000000c003c790        0x0 registry/registry.32
 .bss           0x00000000c003c790        0x0 syscalls/sc_exit.32
 .bss           0x00000000c003c790        0x0 syscalls/sc_read.32
 .bss           0x00000000c003c790        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c003c790        0x0 syscalls/sc_write.32
 .bss           0x00000000c003c790        0x0 syscalls/sc_yield.32
 .bss           0x00000000c003c790        0x0 vm86/vm8086.32
 *fill*         0x00000000c003c790       0x10 
 .bss           0x00000000c003c7a0       0xf0 fs/fat/vfslink.32
                0x00000000c003c7a0                FAT::fats
                0x00000000c003c7c0                FAT::vfsToFatRemaps
                0x00000000c003c840                fatToVFSRemaps
 *fill*         0x00000000c003c890       0x10 
 .bss           0x00000000c003c8a0      0x820 fs/iso9660/vfslink.32
                0x00000000c003c8a0                recentSector
                0x00000000c003c8c0                recentBuffer
 .bss           0x00000000c003d0c0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c003d0c0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c003d0c0        0x0 hw/bus/isa.32
 .bss           0x00000000c003d0c0        0x0 hw/bus/pci.32
 .bss           0x00000000c003d0c0        0x2 hw/clock/rtc.32
 .bss           0x00000000c003d0c2        0x0 hw/diskctrl/ide.32
 *fill*         0x00000000c003d0c2        0x2 
 .bss           0x00000000c003d0c4        0x8 hw/diskphys/ata.32
                0x00000000c003d0c4                ataSectorsWritten
                0x00000000c003d0c8                ataSectorsRead
 .bss           0x00000000c003d0cc        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003d0cc        0x0 hw/fpu/avx.32
 .bss           0x00000000c003d0cc        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003d0cc        0x0 hw/fpu/sse.32
 .bss           0x00000000c003d0cc        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003d0cc       0x14 
 .bss           0x00000000c003d0e0       0x41 hw/intctrl/apic.32
                0x00000000c003d0e0                noOfIOAPICs
                0x00000000c003d100                ioapics
                0x00000000c003d120                IOAPICsSetupYet
 .bss           0x00000000c003d121        0x0 hw/intctrl/pic.32
 .bss           0x00000000c003d121        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c003d121        0x3 
 .bss           0x00000000c003d124        0x4 hw/timer/pit.32
                0x00000000c003d124                pitFreq
 .bss           0x00000000c003d128        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003d128        0x0 crtn.32
 .bss           0x00000000c003d128        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c003d128        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c003d128        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c003d128        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c003d128        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c003d128        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c003d128        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003d128                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003eca8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
