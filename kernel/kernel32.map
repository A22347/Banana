Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e0d8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x68d core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afda                firstTask()
                0x00000000c000afe8                Computer::detectFeatures()
                0x00000000c000b1c2                Computer::displayFeatures()
                0x00000000c000b1c4                Computer::rdmsr(unsigned int)
                0x00000000c000b1f0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b228                Computer::nmiEnabled()
                0x00000000c000b234                Computer::readCMOS(unsigned char)
                0x00000000c000b24e                Computer::enableNMI(bool)
                0x00000000c000b266                Computer::open(int, int, void*)
                0x00000000c000b32e                Computer::disableNMI()
                0x00000000c000b33c                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b35a                Computer::handleNMI()
                0x00000000c000b3c0                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b3eb      0xf95 core/elf.32
                0x00000000c000b3eb                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000b668                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000b87e                runtimeReferenceHelper()
                0x00000000c000b891                getAddressOfKernelSymbol(char const*)
                0x00000000c000b8e0                loadKernelSymbolTable(char const*)
                0x00000000c000bba1                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c2a9                loadDLL(char const*)
                0x00000000c000c372                executeDLL(unsigned long, void*)
 .text          0x00000000c000c380      0x1b7 core/gdt.32
                0x00000000c000c380                GDTEntry::setBase(unsigned int)
                0x00000000c000c39c                GDTEntry::setLimit(unsigned int)
                0x00000000c000c3ba                GDT::GDT()
                0x00000000c000c3ba                GDT::GDT()
                0x00000000c000c3d0                GDT::addEntry(GDTEntry)
                0x00000000c000c40c                GDT::getNumberOfEntries()
                0x00000000c000c414                GDT::flush()
                0x00000000c000c436                GDT::setup()
 .text          0x00000000c000c537       0x61 core/idle.32
                0x00000000c000c537                idleFunction(void*)
 .text          0x00000000c000c598      0x45f core/idt.32
                0x00000000c000c598                IDTEntry::IDTEntry(bool)
                0x00000000c000c598                IDTEntry::IDTEntry(bool)
                0x00000000c000c606                IDTEntry::setOffset(unsigned int)
                0x00000000c000c61a                IDT::IDT()
                0x00000000c000c61a                IDT::IDT()
                0x00000000c000c61c                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000c624                IDT::addEntry(IDTEntry, int)
                0x00000000c000c63e                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000c676                IDT::flush()
                0x00000000c000c690                IDT::setup()
 .text          0x00000000c000c9f7      0x519 core/kconsole.32
                0x00000000c000c9f7                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ca58                logc(char)
                0x00000000c000ca6f                logs(char*)
                0x00000000c000ca8c                logWriteInt(unsigned int)
                0x00000000c000caa9                logWriteIntBase(unsigned int, int)
                0x00000000c000cac8                kprintf(char const*, ...)
                0x00000000c000cbe6                panic(char const*)
 .text          0x00000000c000cf10      0x20d core/kheap.32
                0x00000000c000cf10                sbrk
                0x00000000c000d028                mmap
                0x00000000c000d03e                munmap
                0x00000000c000d054                liballoc_lock()
                0x00000000c000d065                liballoc_unlock()
                0x00000000c000d076                liballoc_alloc(int)
                0x00000000c000d091                liballoc_free(void*, int)
                0x00000000c000d0af                realloc
                0x00000000c000d0c3                malloc
                0x00000000c000d0d3                free
                0x00000000c000d0e3                rfree
                0x00000000c000d0f3                calloc
 .text          0x00000000c000d11d      0x38d core/main.32
                0x00000000c000d11d                hwTextMode_loadInData(VgaText*)
                0x00000000c000d162                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d1a4                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d1f8                hwTextMode_update(VgaText*)
                0x00000000c000d1f9                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d241                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d27d                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d303                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d361                setupTextMode()
                0x00000000c000d3b2                kernel_main
 .text          0x00000000c000d4aa      0x46c core/physmgr.32
                0x00000000c000d4aa                Phys::allocateDMA(unsigned long)
                0x00000000c000d54d                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d595                Phys::setPageState(unsigned long, bool)
                0x00000000c000d5c7                Phys::getPageState(unsigned long)
                0x00000000c000d5e3                Phys::freePage(unsigned long)
                0x00000000c000d66d                Phys::allocatePage()
                0x00000000c000d729                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000d761                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000d916      0x273 core/pipe.32
                0x00000000c000d916                Pipe::isAtty()
                0x00000000c000d91a                Pipe::~Pipe()
                0x00000000c000d91a                Pipe::~Pipe()
                0x00000000c000d93e                Pipe::~Pipe()
                0x00000000c000d966                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000da5a                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000db22                Pipe::Pipe(int)
                0x00000000c000db22                Pipe::Pipe(int)
 *fill*         0x00000000c000db89        0x1 
 .text          0x00000000c000db8a     0x1154 core/prcssthr.32
                0x00000000c000db8a                changeTSS
                0x00000000c000dbb8                Process::addArgs(char**)
                0x00000000c000dc12                Process::Process(char const*, Process*, char**)
                0x00000000c000dc12                Process::Process(char const*, Process*, char**)
                0x00000000c000ddca                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000ddca                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000df4d                disableIRQs()
                0x00000000c000df55                getIRQNestingLevel()
                0x00000000c000df5b                enableIRQs()
                0x00000000c000df6a                lockScheduler()
                0x00000000c000df6c                unlockScheduler()
                0x00000000c000df6e                userModeEntryPoint(void*)
                0x00000000c000df91                lockStuff()
                0x00000000c000df9d                taskStartupFunction
                0x00000000c000dfa6                updateTimeUsed()
                0x00000000c000e004                switchToThread(ThreadControlBlock*)
                0x00000000c000e054                Semaphore::Semaphore(int)
                0x00000000c000e054                Semaphore::Semaphore(int)
                0x00000000c000e082                Mutex::Mutex()
                0x00000000c000e082                Mutex::Mutex()
                0x00000000c000e094                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e178                Process::createUserThread()
                0x00000000c000e194                setupMultitasking(void (*)())
                0x00000000c000e29e                schedule()
                0x00000000c000e323                unlockStuff()
                0x00000000c000e358                forkProcess(regs*)
                0x00000000c000e4c6                Semaphore::tryAcquire()
                0x00000000c000e4f4                Semaphore::assertLocked(char const*)
                0x00000000c000e527                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e569                blockTask(TaskState)
                0x00000000c000e58a                waitTask(int, int*, int)
                0x00000000c000e5cc                nanoSleepUntil(unsigned long long)
                0x00000000c000e623                nanoSleep(unsigned long long)
                0x00000000c000e638                sleep(unsigned long long)
                0x00000000c000e656                Semaphore::acquire()
                0x00000000c000e6be                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000e74c                taskReturned
                0x00000000c000e78e                unblockTask(ThreadControlBlock*)
                0x00000000c000e83d                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000eada                cleanerTaskFunction(void*)
                0x00000000c000eb6a                terminateTask(int)
                0x00000000c000ebf2                Semaphore::release()
 .text          0x00000000c000ecde      0xd8a core/syscalls.32
                0x00000000c000ecde                sysCallGetPID(regs*)
                0x00000000c000ecea                sysCallSeekDir(regs*)
                0x00000000c000ecef                sysCallTellDir(regs*)
                0x00000000c000ecf4                sysCallVerify(regs*)
                0x00000000c000ecfe                sysCallGetArgc(regs*)
                0x00000000c000ed0e                sysFormatDisk(regs*)
                0x00000000c000ed78                sysSetDiskVolumeLabel(regs*)
                0x00000000c000edbe                sysGetDiskVolumeLabel(regs*)
                0x00000000c000ee0f                sysShutdown(regs*)
                0x00000000c000ee57                sysCallGetCwd(regs*)
                0x00000000c000ee76                sysCallSetCwd(regs*)
                0x00000000c000ee92                sysCallRealpath(regs*)
                0x00000000c000eed5                sysCallOpen(regs*)
                0x00000000c000efc5                sysCallReadDir(regs*)
                0x00000000c000f034                sysCallIsATTY(regs*)
                0x00000000c000f087                sysCallSeek(regs*)
                0x00000000c000f0d8                sysCallTell(regs*)
                0x00000000c000f124                sysCallSizeFromFilename(regs*)
                0x00000000c000f19d                sysCallSize(regs*)
                0x00000000c000f1ef                sysCallClose(regs*)
                0x00000000c000f23d                sysCallOpenDir(regs*)
                0x00000000c000f2aa                sysCallMakeDir(regs*)
                0x00000000c000f303                sysCallCloseDir(regs*)
                0x00000000c000f351                sysCallWait(regs*)
                0x00000000c000f36b                sysCallFork(regs*)
                0x00000000c000f387                sysCallExecve(regs*)
                0x00000000c000f3dc                sysCallRmdir(regs*)
                0x00000000c000f42e                sysCallUnlink(regs*)
                0x00000000c000f480                sysCallGetArgv(regs*)
                0x00000000c000f4cc                sysCallTTYName(regs*)
                0x00000000c000f548                sysCallGetEnv(regs*)
                0x00000000c000f59a                sysCallUSleep(regs*)
                0x00000000c000f5c1                sysCallSpawn(regs*)
                0x00000000c000f631                sysAppSettings(regs*)
                0x00000000c000f750                sysSetFatAttrib(regs*)
                0x00000000c000f7b0                sysPanic(regs*)
                0x00000000c000f7d6                sysPipe(regs*)
                0x00000000c000f81b                sysGetUnixTime(regs*)
                0x00000000c000f82f                string_ends_with(char const*, char const*)
                0x00000000c000f877                setupSystemCalls()
                0x00000000c000fa26                systemCall(regs*, void*)
 .text          0x00000000c000fa68      0xf65 core/terminal.32
                0x00000000c000fa68                VgaText::isAtty()
                0x00000000c000fa6c                VgaText::~VgaText()
                0x00000000c000fa6c                VgaText::~VgaText()
                0x00000000c000fa90                VgaText::~VgaText()
                0x00000000c000faba                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fada                setTerminalScrollLock(bool)
                0x00000000c000fadb                addToTerminalCycle(VgaText*)
                0x00000000c000fb08                installVgaTextImplementation()
                0x00000000c000fb1d                scrollTerminalScrollLock(int)
                0x00000000c000fb1e                VgaText::load()
                0x00000000c000fb72                VgaText::updateCursor()
                0x00000000c000fb8c                VgaText::showCursor(bool)
                0x00000000c000fb9c                VgaText::disableBlink(bool)
                0x00000000c000fbd6                VgaText::doANSI_SGR(int)
                0x00000000c000fc62                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000fc78                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000fc8e                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000fcae                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000fcc0                VgaText::scrollScreen()
                0x00000000c000fd54                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000fd66                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000fdc6                VgaText::getCursorX()
                0x00000000c000fdd2                VgaText::getCursorY()
                0x00000000c000fdde                VgaText::setCursor(int, int)
                0x00000000c000fdfc                VgaText::setCursorX(int)
                0x00000000c000fe18                VgaText::setCursorY(int)
                0x00000000c000fe34                VgaText::incrementCursor(bool)
                0x00000000c000fe9c                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000fef6                VgaText::updateDiskUsage()
                0x00000000c001005c                VgaText::updateTitle()
                0x00000000c00100a2                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00100b2                VgaText::setTitleColour(VgaColour)
                0x00000000c00100c2                VgaText::setTitle(char*)
                0x00000000c00100e8                VgaText::decrementCursor(bool)
                0x00000000c0010110                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001020c                VgaText::isShowingCursor()
                0x00000000c0010218                VgaText::isBlinkDisabled()
                0x00000000c0010226                VgaText::setCursorHeight(int)
                0x00000000c0010244                VgaText::getCursorHeight()
                0x00000000c001024f                setActiveTerminal(VgaText*)
                0x00000000c0010301                doTerminalCycle()
                0x00000000c001031e                VgaText::doUpdate()
                0x00000000c0010330                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00104f0                VgaText::clearScreen()
                0x00000000c0010554                VgaText::putchar(char)
                0x00000000c001066e                VgaText::puts(char const*)
                0x00000000c0010694                VgaText::putx(unsigned int)
                0x00000000c00106da                VgaText::VgaText(char const*)
                0x00000000c00106da                VgaText::VgaText(char const*)
                0x00000000c001086c                VgaText::receiveKey(unsigned char)
                0x00000000c0010954                VgaText::write(unsigned long long, void*, int*)
                0x00000000c00109a8                newTerminal(char*)
 *fill*         0x00000000c00109cd        0x1 
 .text          0x00000000c00109ce      0x18f core/tss.32
                0x00000000c00109ce                TSS::TSS()
                0x00000000c00109ce                TSS::TSS()
                0x00000000c00109dc                TSS::setESP(unsigned long)
                0x00000000c00109ee                TSS::flush()
                0x00000000c0010a0e                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010b5d        0x1 
 .text          0x00000000c0010b5e      0x32f core/unixfile.32
                0x00000000c0010b5e                ReservedFilename::isAtty()
                0x00000000c0010b74                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0010c06                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0010c9c                UnixFile::getFileDescriptor()
                0x00000000c0010ca4                UnixFile::UnixFile(int)
                0x00000000c0010ca4                UnixFile::UnixFile(int)
                0x00000000c0010ce0                ReservedFilename::ReservedFilename(int)
                0x00000000c0010ce0                ReservedFilename::ReservedFilename(int)
                0x00000000c0010d08                UnixFile::~UnixFile()
                0x00000000c0010d08                UnixFile::~UnixFile()
                0x00000000c0010d8e                UnixFile::~UnixFile()
                0x00000000c0010db6                ReservedFilename::~ReservedFilename()
                0x00000000c0010db6                ReservedFilename::~ReservedFilename()
                0x00000000c0010dda                ReservedFilename::~ReservedFilename()
                0x00000000c0010e01                getFromFileDescriptor(int)
 *fill*         0x00000000c0010e8d        0x1 
 .text          0x00000000c0010e8e     0x1175 core/virtmgr.32
                0x00000000c0010e8e                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c0010ec3                Virt::getPageState(unsigned long)
                0x00000000c0010ee7                Virt::allocateKernelVirtualPages(int)
                0x00000000c0010ff8                Virt::virtualMemorySetup()
                0x00000000c0011077                Virt::getAKernelVAS()
                0x00000000c001107d                Virt::setupPageSwapping(int)
                0x00000000c00111a2                VAS::VAS()
                0x00000000c00111a2                VAS::VAS()
                0x00000000c00111d2                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00111fe                VAS::getPageTableEntry(unsigned long)
                0x00000000c001121d                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0011340                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0011364                VAS::virtualToPhysical(unsigned long)
                0x00000000c001137c                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00113b2                VAS::~VAS()
                0x00000000c00113b2                VAS::~VAS()
                0x00000000c001151e                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c001161e                VAS::allocatePages(int, int)
                0x00000000c00117ee                VAS::setCPUSpecific(unsigned long)
                0x00000000c001180a                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c00118d4                VAS::VAS(VAS*)
                0x00000000c00118d4                VAS::VAS(VAS*)
                0x00000000c0011c1e                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0011d0c                VAS::VAS(bool)
                0x00000000c0011d0c                VAS::VAS(bool)
                0x00000000c0011f3c                mapVASFirstTime
 .text          0x00000000c0012003       0x93 coreobjs/c++.32
                0x00000000c0012003                __cxa_atexit
                0x00000000c0012006                __cxa_finalize
                0x00000000c0012007                __stack_chk_fail
                0x00000000c0012067                __cxa_pure_virtual
                0x00000000c0012078                operator new(unsigned long)
                0x00000000c001207d                operator new[](unsigned long)
                0x00000000c0012082                operator delete(void*)
                0x00000000c0012087                operator delete(void*, unsigned long)
                0x00000000c001208c                operator delete[](void*)
                0x00000000c0012091                operator delete[](void*, unsigned long)
 .text          0x00000000c0012096        0x0 debugger/debug.32
 .text          0x00000000c0012096      0xb68 fs/vfs.32
                0x00000000c0012096                File::read(unsigned long long, void*, int*)
                0x00000000c00120ee                File::write(unsigned long long, void*, int*)
                0x00000000c0012146                Directory::read(unsigned long long, void*, int*)
                0x00000000c001219e                Directory::write(unsigned long long, void*, int*)
                0x00000000c00121cc                File::isAtty()
                0x00000000c00121d0                Directory::isAtty()
                0x00000000c00121d4                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00121da                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00121e0                File::~File()
                0x00000000c00121e0                File::~File()
                0x00000000c0012204                File::~File()
                0x00000000c001222e                Directory::~Directory()
                0x00000000c001222e                Directory::~Directory()
                0x00000000c0012252                Directory::~Directory()
                0x00000000c001227c                Filesystem::Filesystem()
                0x00000000c001227c                Filesystem::Filesystem()
                0x00000000c00122a0                Filesystem::~Filesystem()
                0x00000000c00122a0                Filesystem::~Filesystem()
                0x00000000c00122ae                Filesystem::~Filesystem()
                0x00000000c00122d2                initVFS()
                0x00000000c00122fc                standardiseFiles(char*, char const*, char const*)
                0x00000000c00124a6                File::File(char const*, Process*)
                0x00000000c00124a6                File::File(char const*, Process*)
                0x00000000c001250a                File::open(FileOpenMode)
                0x00000000c0012568                File::close()
                0x00000000c00125c8                File::seek(unsigned long long)
                0x00000000c001261e                File::tell(unsigned long long*)
                0x00000000c001266e                File::rewind()
                0x00000000c0012682                File::unlink()
                0x00000000c00126ce                File::rename(char const*)
                0x00000000c001271c                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012778                File::exists()
                0x00000000c00127b6                File::stat(unsigned long long*, bool*)
                0x00000000c0012817                getcwd(Process*, char*, int)
                0x00000000c0012841                setcwd(Process*, char*)
                0x00000000c0012968                Directory::Directory(char const*, Process*)
                0x00000000c0012968                Directory::Directory(char const*, Process*)
                0x00000000c00129cc                Directory::open()
                0x00000000c0012a28                Directory::close()
                0x00000000c0012a88                Directory::unlink()
                0x00000000c0012ad4                Directory::rename(char const*)
                0x00000000c0012b22                Directory::exists()
                0x00000000c0012b60                Directory::read(dirent*)
                0x00000000c0012bac                Directory::create()
                0x00000000c0012bf8                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0012bfe       0x84 hal/bus.32
                0x00000000c0012bfe                Bus::Bus(char const*)
                0x00000000c0012bfe                Bus::Bus(char const*)
                0x00000000c0012c34                Bus::~Bus()
                0x00000000c0012c34                Bus::~Bus()
                0x00000000c0012c58                Bus::~Bus()
 .text          0x00000000c0012c82      0x14e hal/buzzer.32
                0x00000000c0012c82                Buzzer::Buzzer(char const*)
                0x00000000c0012c82                Buzzer::Buzzer(char const*)
                0x00000000c0012cc6                Buzzer::~Buzzer()
                0x00000000c0012cc6                Buzzer::~Buzzer()
                0x00000000c0012cea                Buzzer::~Buzzer()
                0x00000000c0012d14                Buzzer::stop()
                0x00000000c0012d27                beepThread(void*)
                0x00000000c0012d62                Buzzer::beep(int, int, bool)
 .text          0x00000000c0012dd0      0x42f hal/clock.32
                0x00000000c0012dd0                loadClockSettings()
                0x00000000c0012dea                Clock::Clock(char const*)
                0x00000000c0012dea                Clock::Clock(char const*)
                0x00000000c0012e20                Clock::~Clock()
                0x00000000c0012e20                Clock::~Clock()
                0x00000000c0012e44                Clock::~Clock()
                0x00000000c0012e6e                Clock::timeInSecondsLocal()
                0x00000000c0012eb6                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0012f0f                datetimeToSeconds(datetime_t)
                0x00000000c0013036                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0013096                secondsToDatetime(unsigned long long)
                0x00000000c00131da                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00131ff        0x1 
 .text          0x00000000c0013200      0x504 hal/device.32
                0x00000000c0013200                Device::hibernate()
                0x00000000c0013202                Device::wake()
                0x00000000c0013204                Device::detect()
                0x00000000c0013206                Device::disableLegacy()
                0x00000000c0013208                Device::powerSaving(PowerSavingLevel)
                0x00000000c001320a                DriverlessDevice::close(int, int, void*)
                0x00000000c001320e                DriverlessDevice::detect()
                0x00000000c0013210                DriverlessDevice::open(int, int, void*)
                0x00000000c0013224                Device::~Device()
                0x00000000c0013224                Device::~Device()
                0x00000000c0013232                Device::~Device()
                0x00000000c001325a                Device::findAndLoadDriver()
                0x00000000c001325c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0013282                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00132d6                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013334                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013382                Device::addChild(Device*)
                0x00000000c00133c6                Device::removeAllChildren()
                0x00000000c001340c                Device::hibernateAll()
                0x00000000c001343c                Device::wakeAll()
                0x00000000c001346c                Device::detectAll()
                0x00000000c001349c                Device::disableLegacyAll()
                0x00000000c00134cc                Device::loadDriversForAll()
                0x00000000c00134f8                Device::closeAll()
                0x00000000c001352e                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0013564                Device::setName(char const*)
                0x00000000c0013572                Device::Device(char const*)
                0x00000000c0013572                Device::Device(char const*)
                0x00000000c0013664                Device::getName()
                0x00000000c001366e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001366e                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013696                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00136da                getDevicesOfType(DeviceType)
 .text          0x00000000c0013704       0x84 hal/diskctrl.32
                0x00000000c0013704                HardDiskController::HardDiskController(char const*)
                0x00000000c0013704                HardDiskController::HardDiskController(char const*)
                0x00000000c001373a                HardDiskController::~HardDiskController()
                0x00000000c001373a                HardDiskController::~HardDiskController()
                0x00000000c001375e                HardDiskController::~HardDiskController()
 .text          0x00000000c0013788       0xde hal/diskphys.32
                0x00000000c0013788                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013788                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00137f0                PhysicalDisk::startCache()
                0x00000000c0013818                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013818                PhysicalDisk::~PhysicalDisk()
                0x00000000c001383c                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013866      0x128 hal/fpu.32
                0x00000000c0013866                FPU::FPU(char const*)
                0x00000000c0013866                FPU::FPU(char const*)
                0x00000000c001389c                FPU::~FPU()
                0x00000000c001389c                FPU::~FPU()
                0x00000000c00138c0                FPU::~FPU()
                0x00000000c00138ea                setupFPU()
 .text          0x00000000c001398e      0xb89 hal/intctrl.32
                0x00000000c001398e                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00139c6                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013a18                doubleFault(regs*, void*)
                0x00000000c0013a26                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013ac2                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013b6a                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013bf1                nmiHandler(regs*, void*)
                0x00000000c0013bff                int_handler
                0x00000000c0013c9a                InterruptController::InterruptController(char const*)
                0x00000000c0013c9a                InterruptController::InterruptController(char const*)
                0x00000000c0013d40                InterruptController::~InterruptController()
                0x00000000c0013d40                InterruptController::~InterruptController()
                0x00000000c0013d64                InterruptController::~InterruptController()
                0x00000000c0013d8e                displayDebugInfo(regs*)
                0x00000000c0014170                gpFault(regs*, void*)
                0x00000000c00141a9                pgFault(regs*, void*)
                0x00000000c00141c0                otherISRHandler(regs*, void*)
                0x00000000c00141df                opcodeFault(regs*, void*)
                0x00000000c0014249                displayProgramFault(char const*)
                0x00000000c0014272                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00142bc                setupInterruptController()
 *fill*         0x00000000c0014517        0x1 
 .text          0x00000000c0014518      0x604 hal/keybrd.32
                0x00000000c0014518                startGUI(void*)
                0x00000000c0014586                sendKeyToTerminal(unsigned char)
                0x00000000c00145f2                sendKeyboardToken(KeyboardToken)
                0x00000000c00149cd                clearInternalKeybuffer(VgaText*)
                0x00000000c0014a02                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014a92                Keyboard::Keyboard(char const*)
                0x00000000c0014a92                Keyboard::Keyboard(char const*)
                0x00000000c0014ace                Keyboard::~Keyboard()
                0x00000000c0014ace                Keyboard::~Keyboard()
                0x00000000c0014af2                Keyboard::~Keyboard()
 .text          0x00000000c0014b1c      0x400 hal/logidisk.32
                0x00000000c0014b1c                LogicalDisk::close(int, int, void*)
                0x00000000c0014b20                LogicalDisk::~LogicalDisk()
                0x00000000c0014b20                LogicalDisk::~LogicalDisk()
                0x00000000c0014b44                LogicalDisk::~LogicalDisk()
                0x00000000c0014b6e                LogicalDisk::open(int, int, void*)
                0x00000000c0014b82                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014bba                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0014c00                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014c00                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014cb6                LogicalDisk::assignDriveLetter()
                0x00000000c0014d6c                LogicalDisk::mount()
                0x00000000c0014dde                LogicalDisk::unmount()
                0x00000000c0014dee                LogicalDisk::unassignDriveLetter()
                0x00000000c0014e44                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0014eb0                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0014f1c       0x84 hal/mouse.32
                0x00000000c0014f1c                Mouse::Mouse(char const*)
                0x00000000c0014f1c                Mouse::Mouse(char const*)
                0x00000000c0014f52                Mouse::~Mouse()
                0x00000000c0014f52                Mouse::~Mouse()
                0x00000000c0014f76                Mouse::~Mouse()
 .text          0x00000000c0014fa0      0x339 hal/partition.32
                0x00000000c0014fa0                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015048                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00152d9        0x1 
 .text          0x00000000c00152da      0x2e7 hal/timer.32
                0x00000000c00152da                Timer::Timer(char const*)
                0x00000000c00152da                Timer::Timer(char const*)
                0x00000000c0015310                Timer::~Timer()
                0x00000000c0015310                Timer::~Timer()
                0x00000000c0015334                Timer::~Timer()
                0x00000000c001535e                Timer::read()
                0x00000000c0015369                timerHandler(unsigned long long)
                0x00000000c00154a0                setupTimer(int)
 *fill*         0x00000000c00155c1        0x1 
 .text          0x00000000c00155c2      0x2d1 hal/vcache.32
                0x00000000c00155c2                VCache::VCache(PhysicalDisk*)
                0x00000000c00155c2                VCache::VCache(PhysicalDisk*)
                0x00000000c00156b2                VCache::writeWriteBuffer()
                0x00000000c00156ee                VCache::~VCache()
                0x00000000c00156ee                VCache::~VCache()
                0x00000000c001572e                VCache::~VCache()
                0x00000000c0015756                VCache::write(unsigned long long, int, void*)
                0x00000000c001583a                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015893        0x1 
 .text          0x00000000c0015894      0x26d hal/video.32
                0x00000000c0015894                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00158de                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001595c                Video::clearScreen(unsigned int)
                0x00000000c0015990                Video::putpixel(int, int, unsigned int)
                0x00000000c001599e                Video::Video(char const*)
                0x00000000c001599e                Video::Video(char const*)
                0x00000000c00159d4                Video::~Video()
                0x00000000c00159d4                Video::~Video()
                0x00000000c00159f8                Video::~Video()
                0x00000000c0015a22                Video::isMonochrome()
                0x00000000c0015a2e                Video::getWidth()
                0x00000000c0015a3a                Video::getHeight()
                0x00000000c0015a46                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015b01        0x1 
 .text          0x00000000c0015b02      0xca8 hw/acpi.32
                0x00000000c0015b02                ACPI::close(int, int, void*)
                0x00000000c0015bb7                findRSDP()
                0x00000000c0015c41                loadACPITables(unsigned char*)
                0x00000000c0015e68                findRSDT(unsigned char*)
                0x00000000c0015f86                findDataTable(unsigned char*, char*)
                0x00000000c0016022                scanMADT()
                0x00000000c00163b6                ACPI::ACPI()
                0x00000000c00163b6                ACPI::ACPI()
                0x00000000c0016416                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00164f8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00165fe                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0016604                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001664c                ACPI::open(int, int, void*)
                0x00000000c0016792                ACPI::sleep()
 .text          0x00000000c00167aa     0x132c hw/cpu.32
                0x00000000c00167aa                CPU::close(int, int, void*)
                0x00000000c00167ad                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016941                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016bef                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016c0b                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016c23                AMD_K6_writeback(int, int, int)
                0x00000000c0016c96                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0016d19                cpuidCheckEDX(unsigned int)
                0x00000000c0016d46                cpuidCheckECX(unsigned int)
                0x00000000c0016d73                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0016da0                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0016dcd                getCPUNumber()
                0x00000000c0016dd0                thisCPU()
                0x00000000c0016de4                CPU::CPU()
                0x00000000c0016de4                CPU::CPU()
                0x00000000c0016e72                CPU::displayFeatures()
                0x00000000c0016e74                CPU::detectFeatures()
                0x00000000c0017866                CPU::setupSMEP()
                0x00000000c0017880                CPU::setupUMIP()
                0x00000000c0017898                CPU::setupTSC()
                0x00000000c00178b0                CPU::setupLargePages()
                0x00000000c00178c8                CPU::setupPAT()
                0x00000000c0017904                CPU::setupMTRR()
                0x00000000c0017906                CPU::setupGlobalPages()
                0x00000000c001791c                CPU::allowUsermodeDataAccess()
                0x00000000c001792e                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017940                CPU::setupSMAP()
                0x00000000c0017966                CPU::setupFeatures()
                0x00000000c0017a08                CPU::open(int, int, void*)
 .text          0x00000000c0017ad6        0x0 hw/ports.32
 .text          0x00000000c0017ad6      0x503 registry/registry.32
                0x00000000c0017ad6                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0017c2e                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0017d8d                Reg::getLine(char*, char*, char*)
                0x00000000c0017dc4                Reg::readInt(char*, char*, int*)
                0x00000000c0017eaf                Reg::readString(char*, char*, char*, int)
                0x00000000c0017f30                Reg::readBool(char*, char*, bool*)
                0x00000000c0017f55                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0017f81                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0017fad                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0017fd9       0x18 syscalls/sc_exit.32
                0x00000000c0017fd9                Sys::exit(regs*)
 .text          0x00000000c0017ff1       0x68 syscalls/sc_read.32
                0x00000000c0017ff1                Sys::read(regs*)
 .text          0x00000000c0018059       0x55 syscalls/sc_sbrk.32
                0x00000000c0018059                Sys::sbrk(regs*)
 .text          0x00000000c00180ae       0x68 syscalls/sc_write.32
                0x00000000c00180ae                Sys::write(regs*)
 .text          0x00000000c0018116       0x1a syscalls/sc_yield.32
                0x00000000c0018116                Sys::yield(regs*)
 .text          0x00000000c0018130      0x8bf vm86/vm8086.32
                0x00000000c0018130                vm8086EntryPoint(void*)
                0x00000000c001815b                inbv(unsigned short)
                0x00000000c0018161                outbv(unsigned short, unsigned char)
                0x00000000c001816b                realToLinear(unsigned short, unsigned short)
                0x00000000c001817b                getSegment(unsigned int)
                0x00000000c0018183                getOffset(unsigned int)
                0x00000000c0018188                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00182b7                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018341                readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018352                readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018364                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018375                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001838a                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00183a0                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00183b5                vm8086FaultHandler(regs*)
 *fill*         0x00000000c00189ef        0x1 
 .text          0x00000000c00189f0     0x1088 fs/fat/vfslink.32
                0x00000000c00189f0                FAT::getName()
                0x00000000c00189f6                FAT::tell(void*, unsigned long long*)
                0x00000000c0018a2a                FAT::stat(void*, unsigned long long*)
                0x00000000c0018a5e                FAT::exists(char const*)
                0x00000000c0018a62                FAT::~FAT()
                0x00000000c0018a62                FAT::~FAT()
                0x00000000c0018a86                FAT::~FAT()
                0x00000000c0018aae                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018b4c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018c06                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0018dea                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0018ff0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00190f8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019152                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00191ac                FAT::close(void*)
                0x00000000c00191f8                FAT::closeDir(void*)
                0x00000000c0019244                FAT::seek(void*, unsigned long long)
                0x00000000c0019298                fatWrapperReadDisk
                0x00000000c00192df                fatWrapperWriteDisk
                0x00000000c0019326                fatWrapperIoctl
                0x00000000c001942a                FAT::FAT()
                0x00000000c001942a                FAT::FAT()
                0x00000000c001947c                FAT::fixFilepath(char*)
                0x00000000c00194b4                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00195dc                FAT::openDir(char const*, void**)
                0x00000000c0019682                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001976c                FAT::unlink(char const*)
                0x00000000c00197e6                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001993a                FAT::rename(char const*, char const*)
                0x00000000c00199fe                FAT::mkdir(char const*)
 .text          0x00000000c0019a78      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019a78                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019a7e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019aae                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019ad2                ISO9660::getName()
                0x00000000c0019ad8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019afc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019b02                ISO9660::unlink(char const*)
                0x00000000c0019b08                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019b0e                ISO9660::rename(char const*, char const*)
                0x00000000c0019b14                ISO9660::mkdir(char const*)
                0x00000000c0019b1a                ISO9660::close(void*)
                0x00000000c0019b3c                ISO9660::closeDir(void*)
                0x00000000c0019b5e                ISO9660::~ISO9660()
                0x00000000c0019b5e                ISO9660::~ISO9660()
                0x00000000c0019b82                ISO9660::~ISO9660()
                0x00000000c0019ba9                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019beb                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019c52                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c0019ca2                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c0019ee6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a174                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a1c9                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a39c                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a42a                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a4c4                ISO9660::exists(char const*)
                0x00000000c001a4e8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a57c                ISO9660::openDir(char const*, void**)
                0x00000000c001a634                ISO9660::ISO9660()
                0x00000000c001a634                ISO9660::ISO9660()
 *fill*         0x00000000c001a657        0x1 
 .text          0x00000000c001a658      0x244 hal/sound/sndchannel.32
                0x00000000c001a658                SoundChannel::~SoundChannel()
                0x00000000c001a658                SoundChannel::~SoundChannel()
                0x00000000c001a674                SoundChannel::setSpeed(float)
                0x00000000c001a680                SoundChannel::getSpeed()
                0x00000000c001a688                SoundChannel::setVolume(int)
                0x00000000c001a6a4                SoundChannel::getVolume()
                0x00000000c001a6ac                SoundChannel::pause()
                0x00000000c001a6b6                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001a6b6                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001a7ac                SoundChannel::play()
                0x00000000c001a7b6                SoundChannel::paused()
                0x00000000c001a7be                SoundChannel::getSampleRate()
                0x00000000c001a7c6                SoundChannel::getBits()
                0x00000000c001a7ce                SoundChannel::getBufferUsed()
                0x00000000c001a7d6                SoundChannel::getBufferSize()
                0x00000000c001a7de                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001a850                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001a89c      0x317 hal/sound/sndhw.32
                0x00000000c001a89c                SoundDevice::SoundDevice(char const*)
                0x00000000c001a89c                SoundDevice::SoundDevice(char const*)
                0x00000000c001a908                SoundDevice::~SoundDevice()
                0x00000000c001a908                SoundDevice::~SoundDevice()
                0x00000000c001a982                SoundDevice::~SoundDevice()
                0x00000000c001a9ac                SoundDevice::getFreeChannelNum()
                0x00000000c001a9c6                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001aa36                SoundDevice::removeChannel(int)
                0x00000000c001aa68                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001aad4                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001abb3        0x0 hw/bus/isa.32
 *fill*         0x00000000c001abb3        0x1 
 .text          0x00000000c001abb4      0x6e5 hw/bus/pci.32
                0x00000000c001abb4                PCI::open(int, int, void*)
                0x00000000c001abc8                PCI::close(int, int, void*)
                0x00000000c001abcc                PCI::PCI()
                0x00000000c001abcc                PCI::PCI()
                0x00000000c001ac4c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ac94                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001acb6                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001acda                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad1e                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad42                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad64                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001ad86                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001adaa                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001ae0a                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001ae76                PCI::checkBus(unsigned char)
                0x00000000c001ae9a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b00a                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1da                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b246                PCI::detect()
 *fill*         0x00000000c001b299        0x1 
 .text          0x00000000c001b29a      0xc70 hw/diskctrl/ide.32
                0x00000000c001b29a                IDE::close(int, int, void*)
                0x00000000c001b29e                IDE::IDE()
                0x00000000c001b29e                IDE::IDE()
                0x00000000c001b2d2                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b2e4                selectDrive(unsigned char, unsigned char)
                0x00000000c001b2e6                IDE::getBase(unsigned char)
                0x00000000c001b2f8                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3b8                IDE::read(unsigned char, unsigned char)
                0x00000000c001b466                IDE::waitInterrupt(unsigned char)
                0x00000000c001b4cc                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b4e8                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001b504                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001b54a                IDE::open(int, int, void*)
                0x00000000c001b95a                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ba26                IDE::detect()
                0x00000000c001bd0e                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001bea4                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001bf0a      0x62b hw/diskphys/ata.32
                0x00000000c001bf0a                ATA::close(int, int, void*)
                0x00000000c001bf2e                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001bf30                ATA::ATA()
                0x00000000c001bf30                ATA::ATA()
                0x00000000c001bf5e                ATA::flush(bool)
                0x00000000c001bfa8                ATA::readyForCommand()
                0x00000000c001bff8                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c376                ATA::read(unsigned long long, int, void*)
                0x00000000c001c3de                ATA::write(unsigned long long, int, void*)
                0x00000000c001c446                ATA::detectCHS()
                0x00000000c001c470                ATA::open(int, int, void*)
 *fill*         0x00000000c001c535        0x1 
 .text          0x00000000c001c536      0x5b3 hw/diskphys/atapi.32
                0x00000000c001c536                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001c53c                ATAPI::close(int, int, void*)
                0x00000000c001c560                ATAPI::ATAPI()
                0x00000000c001c560                ATAPI::ATAPI()
                0x00000000c001c58e                ATAPI::readyForCommand()
                0x00000000c001c5de                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001c89e                ATAPI::diskRemoved()
                0x00000000c001c8ba                ATAPI::eject()
                0x00000000c001c900                ATAPI::diskInserted()
                0x00000000c001c92e                ATAPI::detectMedia()
                0x00000000c001c9ea                ATAPI::open(int, int, void*)
                0x00000000c001ca6a                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001cae9        0x1 
 .text          0x00000000c001caea       0x8e hw/fpu/avx.32
                0x00000000c001caea                AVX::open(int, int, void*)
                0x00000000c001cafc                AVX::close(int, int, void*)
                0x00000000c001cb0e                AVX::available()
                0x00000000c001cb20                AVX::save(void*)
                0x00000000c001cb38                AVX::load(void*)
                0x00000000c001cb50                AVX::AVX()
                0x00000000c001cb50                AVX::AVX()
 .text          0x00000000c001cb78       0x90 hw/fpu/mmx.32
                0x00000000c001cb78                MMX::available()
                0x00000000c001cb8c                MMX::open(int, int, void*)
                0x00000000c001cb9e                MMX::close(int, int, void*)
                0x00000000c001cbb0                MMX::save(void*)
                0x00000000c001cbc8                MMX::load(void*)
                0x00000000c001cbe0                MMX::MMX()
                0x00000000c001cbe0                MMX::MMX()
 .text          0x00000000c001cc08       0x96 hw/fpu/sse.32
                0x00000000c001cc08                SSE::open(int, int, void*)
                0x00000000c001cc1a                SSE::close(int, int, void*)
                0x00000000c001cc2c                SSE::available()
                0x00000000c001cc46                SSE::save(void*)
                0x00000000c001cc5e                SSE::load(void*)
                0x00000000c001cc76                SSE::SSE()
                0x00000000c001cc76                SSE::SSE()
 .text          0x00000000c001cc9e       0x8e hw/fpu/x87.32
                0x00000000c001cc9e                x87::open(int, int, void*)
                0x00000000c001ccb0                x87::close(int, int, void*)
                0x00000000c001ccc2                x87::available()
                0x00000000c001ccd4                x87::save(void*)
                0x00000000c001ccec                x87::load(void*)
                0x00000000c001cd04                x87::x87()
                0x00000000c001cd04                x87::x87()
 .text          0x00000000c001cd2c      0x5f3 hw/intctrl/apic.32
                0x00000000c001cd2c                APIC::disable()
                0x00000000c001cd2e                APIC::close(int, int, void*)
                0x00000000c001cd50                IOAPIC::close(int, int, void*)
                0x00000000c001cd56                APIC::io_wait()
                0x00000000c001cd5c                APIC::getBase()
                0x00000000c001cd9e                APIC::eoi(unsigned char)
                0x00000000c001cdcc                APIC::open(int, int, void*)
                0x00000000c001ce86                IOAPIC::IOAPIC()
                0x00000000c001ce86                IOAPIC::IOAPIC()
                0x00000000c001ceae                APIC::APIC()
                0x00000000c001ceae                APIC::APIC()
                0x00000000c001cf7e                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001cfb0                IOAPIC::read(int)
                0x00000000c001cfd8                IOAPIC::open(int, int, void*)
                0x00000000c001d0ce                IOAPIC::write(int, int)
                0x00000000c001d0fa                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d1b4                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d31f        0x1 
 .text          0x00000000c001d320      0x3d3 hw/intctrl/pic.32
                0x00000000c001d320                PIC::disable()
                0x00000000c001d34e                PIC::close(int, int, void*)
                0x00000000c001d370                PIC::PIC()
                0x00000000c001d370                PIC::PIC()
                0x00000000c001d446                PIC::ioWait()
                0x00000000c001d44c                PIC::getIRQReg(int)
                0x00000000c001d4b6                PIC::eoi(unsigned char)
                0x00000000c001d548                PIC::remap()
                0x00000000c001d6b4                PIC::open(int, int, void*)
 *fill*         0x00000000c001d6f3        0x1 
 .text          0x00000000c001d6f4      0x252 hw/timer/apictimer.32
                0x00000000c001d6f4                APICTimer::close(int, int, void*)
                0x00000000c001d6fa                apicTimerHandler(regs*, void*)
                0x00000000c001d728                APICTimer::write(int)
                0x00000000c001d826                APICTimer::open(int, int, void*)
                0x00000000c001d91e                APICTimer::APICTimer()
                0x00000000c001d91e                APICTimer::APICTimer()
 .text          0x00000000c001d946      0x1a7 hw/timer/pit.32
                0x00000000c001d946                PIT::write(int)
                0x00000000c001d9c4                pitHandler(regs*, void*)
                0x00000000c001d9f0                PIT::open(int, int, void*)
                0x00000000c001da3e                PIT::close(int, int, void*)
                0x00000000c001da6e                PIT::PIT()
                0x00000000c001da6e                PIT::PIT()
 *fill*         0x00000000c001daed        0x3 
 .text          0x00000000c001daf0        0xa hw/fpu/x86/avx.32
                0x00000000c001daf0                avxDetect
                0x00000000c001daf6                avxSave
                0x00000000c001daf7                avxLoad
                0x00000000c001daf8                avxInit
                0x00000000c001daf9                avxClose
 *fill*         0x00000000c001dafa        0x6 
 .text          0x00000000c001db00       0x38 hw/fpu/x86/sse.32
                0x00000000c001db00                sseDetect
                0x00000000c001db1b                sseSave
                0x00000000c001db21                sseLoad
                0x00000000c001db27                sseInit
                0x00000000c001db37                sseClose
 *fill*         0x00000000c001db38        0x8 
 .text          0x00000000c001db40       0x47 hw/fpu/x86/x87.32
                0x00000000c001db46                x87Detect
                0x00000000c001db61                x87Save
                0x00000000c001db67                x87Load
                0x00000000c001db6c                x87Init
                0x00000000c001db86                x87Close
 *fill*         0x00000000c001db87        0x1 
 .text          0x00000000c001db88       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001dbad        0x0 crtn.32
 *fill*         0x00000000c001dbad        0x3 
 .text          0x00000000c001dbb0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001dbb0                __divdi3
 *fill*         0x00000000c001dcfb        0x1 
 .text          0x00000000c001dcfc      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001dcfc                __moddi3
 *fill*         0x00000000c001de7a        0x2 
 .text          0x00000000c001de7c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001de7c                __udivdi3
 *fill*         0x00000000c001df7b        0x1 
 .text          0x00000000c001df7c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001df7c                __umoddi3
 *fill*         0x00000000c001e096        0xa 
 .text          0x00000000c001e0a0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e0a0                fabs
 *fill*         0x00000000c001e0be        0x2 
 .text          0x00000000c001e0c0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e0c0                lrint
 .text          0x00000000c001e0cc        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e0cc                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e0d8        0x0
 .iplt          0x00000000c001e0d8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e0d8        0xf
 .init          0x00000000c001e0d8        0x3 crti.32
                0x00000000c001e0d8                _init
 .init          0x00000000c001e0db        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e0e0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e0e5        0x2 crtn.32

.fini           0x00000000c001e0e7        0xa
 .fini          0x00000000c001e0e7        0x3 crti.32
                0x00000000c001e0e7                _fini
 .fini          0x00000000c001e0ea        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e0ef        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e0f2       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e0f2       0x23 core/computer.32
                0x00000000c001e0f2                Computer::~Computer()
                0x00000000c001e0f2                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e116       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e116       0x2a core/computer.32
                0x00000000c001e116                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e140       0x15
 .text._Z10idleCommonv
                0x00000000c001e140       0x15 core/idle.32
                0x00000000c001e140                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e155       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e155       0x12 core/kconsole.32
                0x00000000c001e155                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e167       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e167       0x12 core/kconsole.32
                0x00000000c001e167                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e179       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e179       0x12 core/kconsole.32
                0x00000000c001e179                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001e18b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001e18b       0x12 core/kconsole.32
                0x00000000c001e18b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e19d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e19d        0x9 core/kheap.32
                0x00000000c001e19d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e1a6        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e1a6        0x2 core/prcssthr.32
                0x00000000c001e1a6                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e1a6                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e1a8       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e1a8       0x3e core/prcssthr.32
                0x00000000c001e1a8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e1a8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e1e6       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001e1e6       0x58 core/prcssthr.32
                0x00000000c001e1e6                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001e1e6                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e23e       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001e23e       0xd3 core/prcssthr.32
                0x00000000c001e23e                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e312       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001e312       0x1c core/prcssthr.32
                0x00000000c001e312                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e32e       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001e32e       0xae core/prcssthr.32
                0x00000000c001e32e                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3dc        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001e3dc        0x7 core/prcssthr.32
                0x00000000c001e3dc                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e3e4        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001e3e4        0x8 core/prcssthr.32
                0x00000000c001e3e4                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e3ec        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e3ec        0x2 core/unixfile.32
                0x00000000c001e3ec                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e3ec                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e3ee       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e3ee       0x58 core/unixfile.32
                0x00000000c001e3ee                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e3ee                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e446        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e446        0x7 core/unixfile.32
                0x00000000c001e446                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e44e       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e44e       0xa1 core/unixfile.32
                0x00000000c001e44e                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e4f0        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e4f0        0x8 core/unixfile.32
                0x00000000c001e4f0                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e4f8      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e4f8      0x130 core/unixfile.32
                0x00000000c001e4f8                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e628       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e628       0x1a hal/device.32
                0x00000000c001e628                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e628                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e642       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e642       0x2a hal/device.32
                0x00000000c001e642                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e66c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e66c       0xdc hal/device.32
                0x00000000c001e66c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e748       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e748       0x58 hal/device.32
                0x00000000c001e748                LinkedList<Device>::LinkedList()
                0x00000000c001e748                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001e7a0       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001e7a0       0x12 hal/intctrl.32
                0x00000000c001e7a0                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001e7b2       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001e7b2       0x12 hal/intctrl.32
                0x00000000c001e7b2                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001e7c4       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001e7c4       0x12 hal/intctrl.32
                0x00000000c001e7c4                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001e7d6       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001e7d6       0x12 hal/intctrl.32
                0x00000000c001e7d6                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001e7e8       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001e7e8       0x12 hal/intctrl.32
                0x00000000c001e7e8                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001e7fa       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001e7fa       0x12 hal/intctrl.32
                0x00000000c001e7fa                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001e80c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001e80c       0x23 hw/acpi.32
                0x00000000c001e80c                ACPI::~ACPI()
                0x00000000c001e80c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001e830       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001e830       0x2a hw/acpi.32
                0x00000000c001e830                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001e85a       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001e85a       0x23 hw/cpu.32
                0x00000000c001e85a                CPU::~CPU()
                0x00000000c001e85a                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001e87e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001e87e       0x2a hw/cpu.32
                0x00000000c001e87e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001e8a8        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001e8a8        0x9 hw/cpu.32
                0x00000000c001e8a8                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001e8b1        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001e8b1        0x9 hw/cpu.32
                0x00000000c001e8b1                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001e8ba       0x23
 .text._ZN3PCID2Ev
                0x00000000c001e8ba       0x23 hw/bus/pci.32
                0x00000000c001e8ba                PCI::~PCI()
                0x00000000c001e8ba                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001e8de       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001e8de       0x2a hw/bus/pci.32
                0x00000000c001e8de                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001e908       0x23
 .text._ZN3IDED2Ev
                0x00000000c001e908       0x23 hw/diskctrl/ide.32
                0x00000000c001e908                IDE::~IDE()
                0x00000000c001e908                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001e92c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001e92c       0x2a hw/diskctrl/ide.32
                0x00000000c001e92c                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001e956       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001e956       0x23 hw/diskphys/ata.32
                0x00000000c001e956                ATA::~ATA()
                0x00000000c001e956                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001e97a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001e97a       0x2a hw/diskphys/ata.32
                0x00000000c001e97a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001e9a4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001e9a4       0x23 hw/diskphys/atapi.32
                0x00000000c001e9a4                ATAPI::~ATAPI()
                0x00000000c001e9a4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001e9c8       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001e9c8       0x2a hw/diskphys/atapi.32
                0x00000000c001e9c8                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001e9f2       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001e9f2       0x23 hw/fpu/avx.32
                0x00000000c001e9f2                AVX::~AVX()
                0x00000000c001e9f2                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ea16       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ea16       0x2a hw/fpu/avx.32
                0x00000000c001ea16                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ea40       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ea40       0x23 hw/fpu/mmx.32
                0x00000000c001ea40                MMX::~MMX()
                0x00000000c001ea40                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ea64       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ea64       0x2a hw/fpu/mmx.32
                0x00000000c001ea64                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ea8e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ea8e       0x23 hw/fpu/sse.32
                0x00000000c001ea8e                SSE::~SSE()
                0x00000000c001ea8e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001eab2       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001eab2       0x2a hw/fpu/sse.32
                0x00000000c001eab2                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001eadc       0x23
 .text._ZN3x87D2Ev
                0x00000000c001eadc       0x23 hw/fpu/x87.32
                0x00000000c001eadc                x87::~x87()
                0x00000000c001eadc                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001eb00       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001eb00       0x2a hw/fpu/x87.32
                0x00000000c001eb00                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001eb2a       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001eb2a       0x23 hw/intctrl/apic.32
                0x00000000c001eb2a                IOAPIC::~IOAPIC()
                0x00000000c001eb2a                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001eb4e       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001eb4e       0x2a hw/intctrl/apic.32
                0x00000000c001eb4e                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001eb78       0x23
 .text._ZN4APICD2Ev
                0x00000000c001eb78       0x23 hw/intctrl/apic.32
                0x00000000c001eb78                APIC::~APIC()
                0x00000000c001eb78                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001eb9c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001eb9c       0x2a hw/intctrl/apic.32
                0x00000000c001eb9c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001ebc6       0x23
 .text._ZN3PICD2Ev
                0x00000000c001ebc6       0x23 hw/intctrl/pic.32
                0x00000000c001ebc6                PIC::~PIC()
                0x00000000c001ebc6                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001ebea       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001ebea       0x2a hw/intctrl/pic.32
                0x00000000c001ebea                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001ec14       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001ec14       0x23 hw/timer/apictimer.32
                0x00000000c001ec14                APICTimer::~APICTimer()
                0x00000000c001ec14                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001ec38       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001ec38       0x2a hw/timer/apictimer.32
                0x00000000c001ec38                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001ec62       0x23
 .text._ZN3PITD2Ev
                0x00000000c001ec62       0x23 hw/timer/pit.32
                0x00000000c001ec62                PIT::~PIT()
                0x00000000c001ec62                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001ec86       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001ec86       0x2a hw/timer/pit.32
                0x00000000c001ec86                PIT::~PIT()

.rodata         0x00000000c001ecb0     0x3354
                0x00000000c001ecb0                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001ecb0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001ecb4        0x4 core/prcssthr.32
 .ctors         0x00000000c001ecb8        0x4 core/unixfile.32
 .ctors         0x00000000c001ecbc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ecc0                end_ctors = .
                0x00000000c001ecc0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001ecc0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001ecc4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001ecc4                __DTOR_END__
                0x00000000c001ecc8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001ecc8       0x18 
 .rodata        0x00000000c001ece0      0x101 acpica/utclib.32
                0x00000000c001ece0                AcpiGbl_Ctypes
 *fill*         0x00000000c001ede1        0x3 
 .rodata        0x00000000c001ede4       0x18 core/malloc.32
 *fill*         0x00000000c001edfc        0x4 
 .rodata        0x00000000c001ee00      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001ef20       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001ef76        0xa 
 .rodata        0x00000000c001ef80      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f380       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f436        0x2 
 .rodata.str1.4
                0x00000000c001f438      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001f7dd        0x3 
 .rodata        0x00000000c001f7e0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001f840       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001f860       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001f874       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001f8b6        0x2 
 .rodata.cst8   0x00000000c001f8b8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001f8c0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001f92c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001f9f0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001fa3a        0x6 
 .rodata.cst8   0x00000000c001fa40        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001fa48        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001fa54       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001fa9c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001fa9c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c001fb0f        0x1 
 .rodata._ZTV8Computer
                0x00000000c001fb10       0x2c core/computer.32
                0x00000000c001fb10                vtable for Computer
 .rodata.str1.1
                0x00000000c001fb3c      0x1a1 core/elf.32
                                        0x1a3 (size before relaxing)
 .rodata.str1.1
                0x00000000c001fcdd       0x1c core/gdt.32
 *fill*         0x00000000c001fcf9        0x3 
 .rodata.str1.4
                0x00000000c001fcfc      0x152 core/kconsole.32
 *fill*         0x00000000c001fe4e        0x2 
 .rodata        0x00000000c001fe50      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c001ffa0       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0020055        0x3 
 .rodata.str1.4
                0x00000000c0020058       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020088        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020094       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00200af       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c00200fd       0x39 core/pipe.32
 *fill*         0x00000000c0020136        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020138       0x1c core/pipe.32
                0x00000000c0020138                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020154       0x53 core/prcssthr.32
 *fill*         0x00000000c00201a7        0x1 
 .rodata.str1.4
                0x00000000c00201a8      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0020428       0x19 core/prcssthr.32
 *fill*         0x00000000c0020441        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020444       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020466       0x15 core/prcssthr.32
 *fill*         0x00000000c002047b        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002047c       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00204c7        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c00204cf       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c002052c       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c0020578       0x9d core/terminal.32
 *fill*         0x00000000c0020615        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020618       0x1c core/terminal.32
                0x00000000c0020618                vtable for VgaText
 .rodata        0x00000000c0020634       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c0020652       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002066c       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002066c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002066c        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002066c       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002069b       0x22 core/unixfile.32
 *fill*         0x00000000c002069b        0x1 
 .rodata.str1.4
                0x00000000c002069c       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00206bc       0x1c core/unixfile.32
                0x00000000c00206bc                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00206d8       0x1c core/unixfile.32
                0x00000000c00206d8                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00206f4      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c002089f      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020a23       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0020a56       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0020a56        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c0020a58       0x64 fs/vfs.32
                0x00000000c0020a58                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020abc       0x1c fs/vfs.32
                0x00000000c0020abc                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020ad8       0x1c fs/vfs.32
                0x00000000c0020ad8                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020af4       0x2c hal/bus.32
                0x00000000c0020af4                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020b20       0x30 hal/buzzer.32
                0x00000000c0020b20                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020b50       0x3c hal/clock.32
                0x00000000c0020b50                vtable for Clock
 *fill*         0x00000000c0020b8c       0x14 
 .rodata        0x00000000c0020ba0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020bd0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020bee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020bee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0020bee       0x19 hal/device.32
 *fill*         0x00000000c0020bee        0x2 
 .rodata._ZTV6Device
                0x00000000c0020bf0       0x2c hal/device.32
                0x00000000c0020bf0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020c1c       0x2c hal/device.32
                0x00000000c0020c1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020c48       0x2c hal/diskctrl.32
                0x00000000c0020c48                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020c74       0x34 hal/diskphys.32
                0x00000000c0020c74                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020ca8        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0020cb0       0x38 hal/fpu.32
                0x00000000c0020cb0                vtable for FPU
 .rodata.str1.4
                0x00000000c0020ce8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020e18      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0020f85        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0020f88       0x48 hal/intctrl.32
                0x00000000c0020f88                vtable for InterruptController
 .rodata        0x00000000c0020fd0       0x4e hal/keybrd.32
 *fill*         0x00000000c002101e        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021020       0x34 hal/keybrd.32
                0x00000000c0021020                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021054       0x7a hal/logidisk.32
 *fill*         0x00000000c00210ce        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c00210d0       0x2c hal/logidisk.32
                0x00000000c00210d0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00210fc       0x2c hal/mouse.32
                0x00000000c00210fc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021128        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021133       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021133        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021133       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021133       0x22 hal/timer.32
 *fill*         0x00000000c0021133        0x1 
 .rodata._ZTV5Timer
                0x00000000c0021134       0x30 hal/timer.32
                0x00000000c0021134                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0021164       0x10 hal/vcache.32
                0x00000000c0021164                vtable for VCache
 .rodata.str1.1
                0x00000000c0021174        0xf hal/video.32
 *fill*         0x00000000c0021183        0x1 
 .rodata._ZTV5Video
                0x00000000c0021184       0x40 hal/video.32
                0x00000000c0021184                vtable for Video
 .rodata.str1.1
                0x00000000c00211c4       0xd1 hw/acpi.32
 *fill*         0x00000000c0021295        0x3 
 .rodata.str1.4
                0x00000000c0021298       0xe5 hw/acpi.32
 *fill*         0x00000000c002137d        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021380       0x2c hw/acpi.32
                0x00000000c0021380                vtable for ACPI
 .rodata.str1.1
                0x00000000c00213ac      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00215d0       0x2c hw/cpu.32
                0x00000000c00215d0                vtable for CPU
 .rodata.str1.1
                0x00000000c00215fc       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021641       0x5f vm86/vm8086.32
 .rodata        0x00000000c00216a0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00216d0       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0021723        0x1 
 .rodata.str1.4
                0x00000000c0021724       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c002174c       0x64 fs/fat/vfslink.32
                0x00000000c002174c                vtable for FAT
 .rodata.str1.1
                0x00000000c00217b0       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c00217f9        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c00217fc       0x64 fs/iso9660/vfslink.32
                0x00000000c00217fc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021860       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002187a        0x2 
 .rodata.cst4   0x00000000c002187c        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0021880       0x38 hal/sound/sndhw.32
                0x00000000c0021880                vtable for SoundDevice
 .rodata.cst4   0x00000000c00218b8       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00218c8       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002196c       0x2c hw/bus/pci.32
                0x00000000c002196c                vtable for PCI
 .rodata.str1.1
                0x00000000c0021998      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c0021bce        0x2 
 .rodata._ZTV3IDE
                0x00000000c0021bd0       0x2c hw/diskctrl/ide.32
                0x00000000c0021bd0                vtable for IDE
 .rodata.str1.1
                0x00000000c0021bfc       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0021c1d        0x3 
 .rodata._ZTV3ATA
                0x00000000c0021c20       0x34 hw/diskphys/ata.32
                0x00000000c0021c20                vtable for ATA
 .rodata.str1.1
                0x00000000c0021c54       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0021c8c       0x34 hw/diskphys/atapi.32
                0x00000000c0021c8c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0021cc0        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0021cc8       0x38 hw/fpu/avx.32
                0x00000000c0021cc8                vtable for AVX
 .rodata.str1.1
                0x00000000c0021d00        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0021d08       0x38 hw/fpu/mmx.32
                0x00000000c0021d08                vtable for MMX
 .rodata.str1.1
                0x00000000c0021d40        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0021d48       0x38 hw/fpu/sse.32
                0x00000000c0021d48                vtable for SSE
 .rodata.str1.1
                0x00000000c0021d80        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0021d88       0x38 hw/fpu/x87.32
                0x00000000c0021d88                vtable for x87
 .rodata        0x00000000c0021dc0       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0021e98       0x48 hw/intctrl/apic.32
                0x00000000c0021e98                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0021ee0       0x2c hw/intctrl/apic.32
                0x00000000c0021ee0                vtable for IOAPIC
 .rodata        0x00000000c0021f0c       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0021f2e        0x2 
 .rodata._ZTV3PIC
                0x00000000c0021f30       0x48 hw/intctrl/pic.32
                0x00000000c0021f30                vtable for PIC
 .rodata.str1.1
                0x00000000c0021f78        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0021f83        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0021f84       0x30 hw/timer/apictimer.32
                0x00000000c0021f84                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0021fb4       0x1d hw/timer/pit.32
 *fill*         0x00000000c0021fd1        0x3 
 .rodata._ZTV3PIT
                0x00000000c0021fd4       0x30 hw/timer/pit.32
                0x00000000c0021fd4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022004      0x601
 *(.data)
 .data          0x00000000c0022004        0x0 crti.32
 .data          0x00000000c0022004        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022004                __dso_handle
 .data          0x00000000c0022008        0x0 acpica/utclib.32
 .data          0x00000000c0022008        0x0 core/malloc.32
 .data          0x00000000c0022008        0x0 libk/string.32
 .data          0x00000000c0022008        0x0 fs/fat/diskio.32
 .data          0x00000000c0022008        0x0 fs/fat/ff.32
 .data          0x00000000c0022008        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022008        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022008        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022008        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022008        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022008        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022008        0x0 core/computer.32
 .data          0x00000000c0022008        0x0 core/elf.32
 .data          0x00000000c0022008        0x0 core/gdt.32
 .data          0x00000000c0022008        0x0 core/idle.32
 .data          0x00000000c0022008        0x0 core/idt.32
 .data          0x00000000c0022008        0x0 core/kconsole.32
 .data          0x00000000c0022008        0x4 core/kheap.32
 .data          0x00000000c002200c        0x0 core/main.32
 .data          0x00000000c002200c        0x4 core/physmgr.32
                0x00000000c002200c                Phys::bitmap
 .data          0x00000000c0022010        0x0 core/pipe.32
 .data          0x00000000c0022010        0x4 core/prcssthr.32
                0x00000000c0022010                nextPID
 .data          0x00000000c0022014        0x0 core/syscalls.32
 *fill*         0x00000000c0022014        0xc 
 .data          0x00000000c0022020       0x60 core/terminal.32
                0x00000000c0022020                VgaText::hiddenOut
                0x00000000c0022040                ansiToVGAMappings
 .data          0x00000000c0022080        0x0 core/tss.32
 .data          0x00000000c0022080        0x4 core/unixfile.32
                0x00000000c0022080                UnixFile::nextFd
 .data          0x00000000c0022084        0x8 core/virtmgr.32
                0x00000000c0022084                Virt::pageAllocPtr
                0x00000000c0022088                Virt::bitmap
 .data          0x00000000c002208c        0x4 coreobjs/c++.32
                0x00000000c002208c                __stack_chk_guard
 .data          0x00000000c0022090        0x0 debugger/debug.32
 .data          0x00000000c0022090        0x0 fs/vfs.32
 .data          0x00000000c0022090        0x0 hal/bus.32
 .data          0x00000000c0022090        0x0 hal/buzzer.32
 .data          0x00000000c0022090        0x0 hal/clock.32
 .data          0x00000000c0022090        0x0 hal/device.32
 .data          0x00000000c0022090        0x0 hal/diskctrl.32
 .data          0x00000000c0022090        0x0 hal/diskphys.32
 .data          0x00000000c0022090        0x0 hal/fpu.32
 *fill*         0x00000000c0022090       0x10 
 .data          0x00000000c00220a0      0x2a0 hal/intctrl.32
                0x00000000c00220a0                exceptionNames
 .data          0x00000000c0022340        0x0 hal/keybrd.32
 .data          0x00000000c0022340        0x0 hal/logidisk.32
 .data          0x00000000c0022340        0x0 hal/mouse.32
 .data          0x00000000c0022340        0x0 hal/partition.32
 .data          0x00000000c0022340        0x0 hal/timer.32
 .data          0x00000000c0022340        0x0 hal/vcache.32
 .data          0x00000000c0022340        0x0 hal/video.32
 .data          0x00000000c0022340       0x10 hw/acpi.32
                0x00000000c0022340                legacyIRQRemaps
 *fill*         0x00000000c0022350       0x10 
 .data          0x00000000c0022360      0x2a4 hw/cpu.32
                0x00000000c0022360                cpuNameList
                0x00000000c0022600                lastCode
 .data          0x00000000c0022604        0x0 hw/ports.32
 .data          0x00000000c0022604        0x0 registry/registry.32
 .data          0x00000000c0022604        0x0 syscalls/sc_exit.32
 .data          0x00000000c0022604        0x0 syscalls/sc_read.32
 .data          0x00000000c0022604        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c0022604        0x0 syscalls/sc_write.32
 .data          0x00000000c0022604        0x0 syscalls/sc_yield.32
 .data          0x00000000c0022604        0x0 vm86/vm8086.32
 .data          0x00000000c0022604        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022604        0x1 fs/iso9660/vfslink.32
                0x00000000c0022604                recentDriveletter
 .data          0x00000000c0022605        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022605        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022605        0x0 hw/bus/isa.32
 .data          0x00000000c0022605        0x0 hw/bus/pci.32
 .data          0x00000000c0022605        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022605        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022605        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022605        0x0 hw/fpu/avx.32
 .data          0x00000000c0022605        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022605        0x0 hw/fpu/sse.32
 .data          0x00000000c0022605        0x0 hw/fpu/x87.32
 .data          0x00000000c0022605        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022605        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022605        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022605        0x0 hw/timer/pit.32
 .data          0x00000000c0022605        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022605        0x0 crtn.32
 .data          0x00000000c0022605        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022605        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022605        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022605        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022605        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022605        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022605        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022608        0x0
 .got           0x00000000c0022608        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022608        0x0
 .got.plt       0x00000000c0022608        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022608        0x0
 .igot.plt      0x00000000c0022608        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022608        0x0
 .tm_clone_table
                0x00000000c0022608        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022608        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022605      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022605        0x3 
 .eh_frame      0x00000000c0022608        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022608        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022608       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022660       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00226a0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c002270c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022790       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00227a8        0x0
 .rel.got       0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00227a8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00227a8     0x1b80
                0x00000000c00227a8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00227a8        0x0 crti.32
 .bss           0x00000000c00227a8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00227c8        0x4 acpica/utclib.32
 *fill*         0x00000000c00227cc       0x14 
 .bss           0x00000000c00227e0      0x378 core/malloc.32
 .bss           0x00000000c0022b58        0x0 libk/string.32
 .bss           0x00000000c0022b58        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0022b58        0x8 
 .bss           0x00000000c0022b60       0x88 fs/fat/ff.32
 .bss           0x00000000c0022be8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0022be8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0022be8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0022be8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0022be8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0022be8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0022be8        0x6 core/computer.32
                0x00000000c0022be8                computer
                0x00000000c0022bec                preemptionOn
                0x00000000c0022bed                schedulingOn
 *fill*         0x00000000c0022bee       0x12 
 .bss           0x00000000c0022c00      0x184 core/elf.32
                0x00000000c0022c00                kernelSymbols
                0x00000000c0022c80                kernelStringTable
                0x00000000c0022d00                kernelSymbolTable
                0x00000000c0022d80                nextDLLSymbolIndex
 .bss           0x00000000c0022d84        0x6 core/gdt.32
                0x00000000c0022d84                gdtDescr
 .bss           0x00000000c0022d8a        0x0 core/idle.32
 *fill*         0x00000000c0022d8a        0x2 
 .bss           0x00000000c0022d8c        0x6 core/idt.32
                0x00000000c0022d8c                idtDescr
 .bss           0x00000000c0022d92        0x1 core/kconsole.32
                0x00000000c0022d92                kernelInPanic
 .bss           0x00000000c0022d93        0x0 core/kheap.32
 *fill*         0x00000000c0022d93        0x1 
 .bss           0x00000000c0022d94        0x4 core/main.32
                0x00000000c0022d94                sysBootSettings
 *fill*         0x00000000c0022d98        0x8 
 .bss           0x00000000c0022da0       0x50 core/physmgr.32
                0x00000000c0022da0                Phys::currentPagePointer
                0x00000000c0022da4                Phys::highestMem
                0x00000000c0022da8                Phys::oldPercent
                0x00000000c0022dac                Phys::usedPages
                0x00000000c0022db0                Phys::usablePages
                0x00000000c0022dc0                Phys::dmaUsage
 .bss           0x00000000c0022df0        0x0 core/pipe.32
 .bss           0x00000000c0022df0       0x68 core/prcssthr.32
                0x00000000c0022df0                cleanerThread
                0x00000000c0022df4                weNeedTheCleanerToNotBlock
                0x00000000c0022df8                xxxx
                0x00000000c0022dfc                retValLockStuff
                0x00000000c0022e00                retValSchedLock
                0x00000000c0022e04                lockStuffLock
                0x00000000c0022e08                schedulerLock
                0x00000000c0022e0c                taskSwitchesPostponedFlag
                0x00000000c0022e10                postponeTaskSwitchesCounter
                0x00000000c0022e14                irqDisableCounter
                0x00000000c0022e18                terminatedTaskList
                0x00000000c0022e24                sleepingTaskList
                0x00000000c0022e30                taskList
                0x00000000c0022e3c                kernelProcess
 *fill*         0x00000000c0022e58        0x8 
 .bss           0x00000000c0022e60      0x200 core/syscalls.32
                0x00000000c0022e60                systemCallHandlers
 .bss           0x00000000c0023060       0x29 core/terminal.32
                0x00000000c0023060                textModeImplementation
                0x00000000c0023080                terminalCycle
                0x00000000c0023084                activeTerminal
                0x00000000c0023088                VgaText::graphicMode
 *fill*         0x00000000c0023089        0x1 
 .bss           0x00000000c002308a        0x2 core/tss.32
                0x00000000c002308a                doubleFaultSelector
 .bss           0x00000000c002308c       0x10 core/unixfile.32
                0x00000000c002308c                initialFilesAdded
                0x00000000c0023090                unixFileLinkedList
 .bss           0x00000000c002309c        0x4 core/virtmgr.32
                0x00000000c002309c                firstVAS
 .bss           0x00000000c00230a0        0x0 coreobjs/c++.32
 .bss           0x00000000c00230a0        0x0 debugger/debug.32
 .bss           0x00000000c00230a0        0x4 fs/vfs.32
                0x00000000c00230a0                installedFilesystems
 .bss           0x00000000c00230a4        0x0 hal/bus.32
 .bss           0x00000000c00230a4        0x4 hal/buzzer.32
                0x00000000c00230a4                systemBuzzer
 .bss           0x00000000c00230a8        0x8 hal/clock.32
                0x00000000c00230a8                dstOn
                0x00000000c00230a9                timezoneHalfHourOffset
                0x00000000c00230ac                timezoneHourOffset
 .bss           0x00000000c00230b0        0x0 hal/device.32
 .bss           0x00000000c00230b0        0x0 hal/diskctrl.32
 .bss           0x00000000c00230b0        0x0 hal/diskphys.32
 .bss           0x00000000c00230b0        0x0 hal/fpu.32
 .bss           0x00000000c00230b0       0x1c hal/intctrl.32
                0x00000000c00230b0                pf5
                0x00000000c00230b4                pf4
                0x00000000c00230b8                pf3
                0x00000000c00230bc                pf2
                0x00000000c00230c0                pf1
                0x00000000c00230c4                pf0
                0x00000000c00230c8                gpFaultIntercept
 *fill*         0x00000000c00230cc       0x14 
 .bss           0x00000000c00230e0      0x429 hal/keybrd.32
                0x00000000c00230e0                keyboardWaitingTaskList
                0x00000000c00230e4                keyboardSetupYet
                0x00000000c0023100                keystates
 *fill*         0x00000000c0023509       0x17 
 .bss           0x00000000c0023520       0x88 hal/logidisk.32
                0x00000000c0023520                diskAssignments
                0x00000000c0023540                disks
 .bss           0x00000000c00235a8        0x4 hal/mouse.32
                0x00000000c00235a8                guiMouseHandler
 .bss           0x00000000c00235ac        0x0 hal/partition.32
 *fill*         0x00000000c00235ac        0x4 
 .bss           0x00000000c00235b0        0x8 hal/timer.32
                0x00000000c00235b0                nanoSinceBoot
 .bss           0x00000000c00235b8        0x0 hal/vcache.32
 .bss           0x00000000c00235b8        0x4 hal/video.32
                0x00000000c00235b8                screen
 *fill*         0x00000000c00235bc        0x4 
 .bss           0x00000000c00235c0      0x3c0 hw/acpi.32
                0x00000000c00235c0                systemSleepFunction
                0x00000000c00235c4                systemResetFunction
                0x00000000c00235c8                systemShutdownFunction
                0x00000000c00235cc                nextACPITable
                0x00000000c00235e0                acpiTables
                0x00000000c00237e0                usingXSDT
                0x00000000c00237e4                MADTpointer
                0x00000000c00237e8                RSDTpointer
                0x00000000c00237ec                RSDPpointer
                0x00000000c00237f0                ioapicDiscoveryNumber
                0x00000000c0023800                ioapicFoundInMADT
                0x00000000c0023820                ioapicAddresses
                0x00000000c00238a0                ioapicGSIBase
                0x00000000c0023920                processorDiscoveryNumber
                0x00000000c0023940                matchingAPICID
                0x00000000c0023960                processorID
 .bss           0x00000000c0023980       0x10 hw/cpu.32
                0x00000000c0023980                lastD
                0x00000000c0023984                lastC
                0x00000000c0023988                lastB
                0x00000000c002398c                lastA
 .bss           0x00000000c0023990        0x0 hw/ports.32
 .bss           0x00000000c0023990        0x0 registry/registry.32
 .bss           0x00000000c0023990        0x0 syscalls/sc_exit.32
 .bss           0x00000000c0023990        0x0 syscalls/sc_read.32
 .bss           0x00000000c0023990        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c0023990        0x0 syscalls/sc_write.32
 .bss           0x00000000c0023990        0x0 syscalls/sc_yield.32
 .bss           0x00000000c0023990        0x0 vm86/vm8086.32
 *fill*         0x00000000c0023990       0x10 
 .bss           0x00000000c00239a0       0xf0 fs/fat/vfslink.32
                0x00000000c00239a0                FAT::fats
                0x00000000c00239c0                FAT::vfsToFatRemaps
                0x00000000c0023a40                fatToVFSRemaps
 *fill*         0x00000000c0023a90       0x10 
 .bss           0x00000000c0023aa0      0x820 fs/iso9660/vfslink.32
                0x00000000c0023aa0                recentSector
                0x00000000c0023ac0                recentBuffer
 .bss           0x00000000c00242c0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c00242c0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00242c0        0x0 hw/bus/isa.32
 .bss           0x00000000c00242c0        0x0 hw/bus/pci.32
 .bss           0x00000000c00242c0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00242c0        0x8 hw/diskphys/ata.32
                0x00000000c00242c0                ataSectorsWritten
                0x00000000c00242c4                ataSectorsRead
 .bss           0x00000000c00242c8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00242c8        0x0 hw/fpu/avx.32
 .bss           0x00000000c00242c8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00242c8        0x0 hw/fpu/sse.32
 .bss           0x00000000c00242c8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00242c8       0x18 
 .bss           0x00000000c00242e0       0x41 hw/intctrl/apic.32
                0x00000000c00242e0                noOfIOAPICs
                0x00000000c0024300                ioapics
                0x00000000c0024320                IOAPICsSetupYet
 .bss           0x00000000c0024321        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0024321        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024321        0x3 
 .bss           0x00000000c0024324        0x4 hw/timer/pit.32
                0x00000000c0024324                pitFreq
 .bss           0x00000000c0024328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024328        0x0 crtn.32
 .bss           0x00000000c0024328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0024328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0024328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0024328        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0024328        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0024328        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0024328        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024328                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0025ea8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
