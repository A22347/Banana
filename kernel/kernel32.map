Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e648
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x695 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b336                Computer::disableNMI()
                0x00000000c000b344                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b362                Computer::handleNMI()
                0x00000000c000b3c8                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3f3        0x1 
 .text          0x00000000c000b3f4      0x1b7 core/gdt.32
                0x00000000c000b3f4                GDTEntry::setBase(unsigned int)
                0x00000000c000b410                GDTEntry::setLimit(unsigned int)
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b444                GDT::addEntry(GDTEntry)
                0x00000000c000b480                GDT::getNumberOfEntries()
                0x00000000c000b488                GDT::flush()
                0x00000000c000b4aa                GDT::setup()
 .text          0x00000000c000b5ab       0x61 core/idle.32
                0x00000000c000b5ab                idleFunction(void*)
 .text          0x00000000c000b60c      0x45f core/idt.32
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b67a                IDTEntry::setOffset(unsigned int)
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b690                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b698                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6b2                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6ea                IDT::flush()
                0x00000000c000b704                IDT::setup()
 .text          0x00000000c000ba6b      0x20d core/kheap.32
                0x00000000c000ba6b                sbrk
                0x00000000c000bb83                mmap
                0x00000000c000bb99                munmap
                0x00000000c000bbaf                liballoc_lock()
                0x00000000c000bbc0                liballoc_unlock()
                0x00000000c000bbd1                liballoc_alloc(int)
                0x00000000c000bbec                liballoc_free(void*, int)
                0x00000000c000bc0a                realloc
                0x00000000c000bc1e                malloc
                0x00000000c000bc2e                free
                0x00000000c000bc3e                rfree
                0x00000000c000bc4e                calloc
 .text          0x00000000c000bc78      0x38d core/main.32
                0x00000000c000bc78                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcbd                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcff                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd53                hwTextMode_update(VgaText*)
                0x00000000c000bd54                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd9c                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd8                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be5e                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000bebc                setupTextMode()
                0x00000000c000bf0d                kernel_main
 .text          0x00000000c000c005      0x46c core/physmgr.32
                0x00000000c000c005                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0f0                Phys::setPageState(unsigned long, bool)
                0x00000000c000c122                Phys::getPageState(unsigned long)
                0x00000000c000c13e                Phys::freePage(unsigned long)
                0x00000000c000c1c8                Phys::allocatePage()
                0x00000000c000c284                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2bc                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000c471        0x1 
 .text          0x00000000c000c472      0x273 core/pipe.32
                0x00000000c000c472                Pipe::isAtty()
                0x00000000c000c476                Pipe::~Pipe()
                0x00000000c000c476                Pipe::~Pipe()
                0x00000000c000c49a                Pipe::~Pipe()
                0x00000000c000c4c2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c5b6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c67e                Pipe::Pipe(int)
                0x00000000c000c67e                Pipe::Pipe(int)
 *fill*         0x00000000c000c6e5        0x1 
 .text          0x00000000c000c6e6      0xf65 core/terminal.32
                0x00000000c000c6e6                VgaText::isAtty()
                0x00000000c000c6ea                VgaText::~VgaText()
                0x00000000c000c6ea                VgaText::~VgaText()
                0x00000000c000c70e                VgaText::~VgaText()
                0x00000000c000c738                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c758                setTerminalScrollLock(bool)
                0x00000000c000c759                addToTerminalCycle(VgaText*)
                0x00000000c000c786                installVgaTextImplementation()
                0x00000000c000c79b                scrollTerminalScrollLock(int)
                0x00000000c000c79c                VgaText::load()
                0x00000000c000c7f0                VgaText::updateCursor()
                0x00000000c000c80a                VgaText::showCursor(bool)
                0x00000000c000c81a                VgaText::disableBlink(bool)
                0x00000000c000c854                VgaText::doANSI_SGR(int)
                0x00000000c000c8e0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c8f6                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c90c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c92c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c93e                VgaText::scrollScreen()
                0x00000000c000c9d2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000c9e4                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ca44                VgaText::getCursorX()
                0x00000000c000ca50                VgaText::getCursorY()
                0x00000000c000ca5c                VgaText::setCursor(int, int)
                0x00000000c000ca7a                VgaText::setCursorX(int)
                0x00000000c000ca96                VgaText::setCursorY(int)
                0x00000000c000cab2                VgaText::incrementCursor(bool)
                0x00000000c000cb1a                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cb74                VgaText::updateDiskUsage()
                0x00000000c000ccda                VgaText::updateTitle()
                0x00000000c000cd20                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cd30                VgaText::setTitleColour(VgaColour)
                0x00000000c000cd40                VgaText::setTitle(char*)
                0x00000000c000cd66                VgaText::decrementCursor(bool)
                0x00000000c000cd8e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000ce8a                VgaText::isShowingCursor()
                0x00000000c000ce96                VgaText::isBlinkDisabled()
                0x00000000c000cea4                VgaText::setCursorHeight(int)
                0x00000000c000cec2                VgaText::getCursorHeight()
                0x00000000c000cecd                setActiveTerminal(VgaText*)
                0x00000000c000cf7f                doTerminalCycle()
                0x00000000c000cf9c                VgaText::doUpdate()
                0x00000000c000cfae                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d16e                VgaText::clearScreen()
                0x00000000c000d1d2                VgaText::putchar(char)
                0x00000000c000d2ec                VgaText::puts(char const*)
                0x00000000c000d312                VgaText::putx(unsigned int)
                0x00000000c000d358                VgaText::VgaText(char const*)
                0x00000000c000d358                VgaText::VgaText(char const*)
                0x00000000c000d4ea                VgaText::receiveKey(unsigned char)
                0x00000000c000d5d2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d626                newTerminal(char*)
 *fill*         0x00000000c000d64b        0x1 
 .text          0x00000000c000d64c      0x18f core/tss.32
                0x00000000c000d64c                TSS::TSS()
                0x00000000c000d64c                TSS::TSS()
                0x00000000c000d65a                TSS::setESP(unsigned long)
                0x00000000c000d66c                TSS::flush()
                0x00000000c000d68c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d7db        0x1 
 .text          0x00000000c000d7dc      0x429 core/unixfile.32
                0x00000000c000d7dc                ReservedFilename::isAtty()
                0x00000000c000d7f8                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d88e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d928                UnixFile::getFileDescriptor()
                0x00000000c000d930                UnixFile::UnixFile(int)
                0x00000000c000d930                UnixFile::UnixFile(int)
                0x00000000c000da58                ReservedFilename::ReservedFilename(int)
                0x00000000c000da58                ReservedFilename::ReservedFilename(int)
                0x00000000c000da80                UnixFile::~UnixFile()
                0x00000000c000da80                UnixFile::~UnixFile()
                0x00000000c000db06                UnixFile::~UnixFile()
                0x00000000c000db2e                ReservedFilename::~ReservedFilename()
                0x00000000c000db2e                ReservedFilename::~ReservedFilename()
                0x00000000c000db52                ReservedFilename::~ReservedFilename()
                0x00000000c000db79                getFromFileDescriptor(int)
 *fill*         0x00000000c000dc05        0x1 
 .text          0x00000000c000dc06     0x1175 core/virtmgr.32
                0x00000000c000dc06                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000dc3b                Virt::getPageState(unsigned long)
                0x00000000c000dc5f                Virt::allocateKernelVirtualPages(int)
                0x00000000c000dd70                Virt::virtualMemorySetup()
                0x00000000c000ddef                Virt::getAKernelVAS()
                0x00000000c000ddf5                Virt::setupPageSwapping(int)
                0x00000000c000df1a                VAS::VAS()
                0x00000000c000df1a                VAS::VAS()
                0x00000000c000df4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000df76                VAS::getPageTableEntry(unsigned long)
                0x00000000c000df95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e0b8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e0dc                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e0f4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e12a                VAS::~VAS()
                0x00000000c000e12a                VAS::~VAS()
                0x00000000c000e296                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e396                VAS::allocatePages(int, int)
                0x00000000c000e566                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e582                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e64c                VAS::VAS(VAS*)
                0x00000000c000e64c                VAS::VAS(VAS*)
                0x00000000c000e996                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ea84                VAS::VAS(bool)
                0x00000000c000ea84                VAS::VAS(bool)
                0x00000000c000ecb4                mapVASFirstTime
 .text          0x00000000c000ed7b       0x93 coreobjs/c++.32
                0x00000000c000ed7b                __cxa_atexit
                0x00000000c000ed7e                __cxa_finalize
                0x00000000c000ed7f                __stack_chk_fail
                0x00000000c000eddf                __cxa_pure_virtual
                0x00000000c000edf0                operator new(unsigned long)
                0x00000000c000edf5                operator new[](unsigned long)
                0x00000000c000edfa                operator delete(void*)
                0x00000000c000edff                operator delete(void*, unsigned long)
                0x00000000c000ee04                operator delete[](void*)
                0x00000000c000ee09                operator delete[](void*, unsigned long)
 .text          0x00000000c000ee0e      0x1ef dbg/kconsole.32
                0x00000000c000ee0e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ee6f                Dbg::logc(char)
                0x00000000c000ee86                Dbg::logs(char*)
                0x00000000c000eea3                Dbg::logWriteInt(unsigned int)
                0x00000000c000eec0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000eedf                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000effd        0x1 
 .text          0x00000000c000effe      0xb68 fs/vfs.32
                0x00000000c000effe                File::read(unsigned long long, void*, int*)
                0x00000000c000f056                File::write(unsigned long long, void*, int*)
                0x00000000c000f0ae                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f106                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f134                File::isAtty()
                0x00000000c000f138                Directory::isAtty()
                0x00000000c000f13c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f142                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f148                File::~File()
                0x00000000c000f148                File::~File()
                0x00000000c000f16c                File::~File()
                0x00000000c000f196                Directory::~Directory()
                0x00000000c000f196                Directory::~Directory()
                0x00000000c000f1ba                Directory::~Directory()
                0x00000000c000f1e4                Filesystem::Filesystem()
                0x00000000c000f1e4                Filesystem::Filesystem()
                0x00000000c000f208                Filesystem::~Filesystem()
                0x00000000c000f208                Filesystem::~Filesystem()
                0x00000000c000f216                Filesystem::~Filesystem()
                0x00000000c000f23a                initVFS()
                0x00000000c000f264                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f40e                File::File(char const*, Process*)
                0x00000000c000f40e                File::File(char const*, Process*)
                0x00000000c000f472                File::open(FileOpenMode)
                0x00000000c000f4d0                File::close()
                0x00000000c000f530                File::seek(unsigned long long)
                0x00000000c000f586                File::tell(unsigned long long*)
                0x00000000c000f5d6                File::rewind()
                0x00000000c000f5ea                File::unlink()
                0x00000000c000f636                File::rename(char const*)
                0x00000000c000f684                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f6e0                File::exists()
                0x00000000c000f71e                File::stat(unsigned long long*, bool*)
                0x00000000c000f77f                getcwd(Process*, char*, int)
                0x00000000c000f7a9                setcwd(Process*, char*)
                0x00000000c000f8d0                Directory::Directory(char const*, Process*)
                0x00000000c000f8d0                Directory::Directory(char const*, Process*)
                0x00000000c000f934                Directory::open()
                0x00000000c000f990                Directory::close()
                0x00000000c000f9f0                Directory::unlink()
                0x00000000c000fa3c                Directory::rename(char const*)
                0x00000000c000fa8a                Directory::exists()
                0x00000000c000fac8                Directory::read(dirent*)
                0x00000000c000fb14                Directory::create()
                0x00000000c000fb60                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fb66       0x84 hal/bus.32
                0x00000000c000fb66                Bus::Bus(char const*)
                0x00000000c000fb66                Bus::Bus(char const*)
                0x00000000c000fb9c                Bus::~Bus()
                0x00000000c000fb9c                Bus::~Bus()
                0x00000000c000fbc0                Bus::~Bus()
 .text          0x00000000c000fbea      0x14e hal/buzzer.32
                0x00000000c000fbea                Buzzer::Buzzer(char const*)
                0x00000000c000fbea                Buzzer::Buzzer(char const*)
                0x00000000c000fc2e                Buzzer::~Buzzer()
                0x00000000c000fc2e                Buzzer::~Buzzer()
                0x00000000c000fc52                Buzzer::~Buzzer()
                0x00000000c000fc7c                Buzzer::stop()
                0x00000000c000fc8f                beepThread(void*)
                0x00000000c000fcca                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fd38      0x42f hal/clock.32
                0x00000000c000fd38                loadClockSettings()
                0x00000000c000fd52                Clock::Clock(char const*)
                0x00000000c000fd52                Clock::Clock(char const*)
                0x00000000c000fd88                Clock::~Clock()
                0x00000000c000fd88                Clock::~Clock()
                0x00000000c000fdac                Clock::~Clock()
                0x00000000c000fdd6                Clock::timeInSecondsLocal()
                0x00000000c000fe1e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fe77                datetimeToSeconds(datetime_t)
                0x00000000c000ff9e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fffe                secondsToDatetime(unsigned long long)
                0x00000000c0010142                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0010167        0x1 
 .text          0x00000000c0010168      0x504 hal/device.32
                0x00000000c0010168                Device::hibernate()
                0x00000000c001016a                Device::wake()
                0x00000000c001016c                Device::detect()
                0x00000000c001016e                Device::disableLegacy()
                0x00000000c0010170                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010172                DriverlessDevice::close(int, int, void*)
                0x00000000c0010176                DriverlessDevice::detect()
                0x00000000c0010178                DriverlessDevice::open(int, int, void*)
                0x00000000c001018c                Device::~Device()
                0x00000000c001018c                Device::~Device()
                0x00000000c001019a                Device::~Device()
                0x00000000c00101c2                Device::findAndLoadDriver()
                0x00000000c00101c4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00101ea                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001023e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001029c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00102ea                Device::addChild(Device*)
                0x00000000c001032e                Device::removeAllChildren()
                0x00000000c0010374                Device::hibernateAll()
                0x00000000c00103a4                Device::wakeAll()
                0x00000000c00103d4                Device::detectAll()
                0x00000000c0010404                Device::disableLegacyAll()
                0x00000000c0010434                Device::loadDriversForAll()
                0x00000000c0010460                Device::closeAll()
                0x00000000c0010496                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00104cc                Device::setName(char const*)
                0x00000000c00104da                Device::Device(char const*)
                0x00000000c00104da                Device::Device(char const*)
                0x00000000c00105cc                Device::getName()
                0x00000000c00105d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00105d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00105fe                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010642                getDevicesOfType(DeviceType)
 .text          0x00000000c001066c       0x84 hal/diskctrl.32
                0x00000000c001066c                HardDiskController::HardDiskController(char const*)
                0x00000000c001066c                HardDiskController::HardDiskController(char const*)
                0x00000000c00106a2                HardDiskController::~HardDiskController()
                0x00000000c00106a2                HardDiskController::~HardDiskController()
                0x00000000c00106c6                HardDiskController::~HardDiskController()
 .text          0x00000000c00106f0       0xde hal/diskphys.32
                0x00000000c00106f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00106f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010758                PhysicalDisk::startCache()
                0x00000000c0010780                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010780                PhysicalDisk::~PhysicalDisk()
                0x00000000c00107a4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00107ce      0x142 hal/fpu.32
                0x00000000c00107ce                FPU::FPU(char const*)
                0x00000000c00107ce                FPU::FPU(char const*)
                0x00000000c0010804                FPU::~FPU()
                0x00000000c0010804                FPU::~FPU()
                0x00000000c0010828                FPU::~FPU()
                0x00000000c0010852                setupFPU()
 .text          0x00000000c0010910      0xc21 hal/intctrl.32
                0x00000000c0010910                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010948                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001099a                doubleFault(regs*, void*)
                0x00000000c00109a8                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010a44                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010aec                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010b73                nmiHandler(regs*, void*)
                0x00000000c0010b81                int_handler
                0x00000000c0010c1c                InterruptController::InterruptController(char const*)
                0x00000000c0010c1c                InterruptController::InterruptController(char const*)
                0x00000000c0010cc2                InterruptController::~InterruptController()
                0x00000000c0010cc2                InterruptController::~InterruptController()
                0x00000000c0010ce6                InterruptController::~InterruptController()
                0x00000000c0010d10                displayDebugInfo(regs*)
                0x00000000c0011127                x87EmulHandler(regs*, void*)
                0x00000000c001118a                gpFault(regs*, void*)
                0x00000000c00111c3                pgFault(regs*, void*)
                0x00000000c00111da                otherISRHandler(regs*, void*)
                0x00000000c00111f9                opcodeFault(regs*, void*)
                0x00000000c0011263                displayProgramFault(char const*)
                0x00000000c001128c                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00112d6                setupInterruptController()
 *fill*         0x00000000c0011531        0x1 
 .text          0x00000000c0011532      0x608 hal/keybrd.32
                0x00000000c0011532                startGUI(void*)
                0x00000000c00115a4                sendKeyToTerminal(unsigned char)
                0x00000000c0011610                sendKeyboardToken(KeyboardToken)
                0x00000000c00119eb                clearInternalKeybuffer(VgaText*)
                0x00000000c0011a20                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0011ab0                Keyboard::Keyboard(char const*)
                0x00000000c0011ab0                Keyboard::Keyboard(char const*)
                0x00000000c0011aec                Keyboard::~Keyboard()
                0x00000000c0011aec                Keyboard::~Keyboard()
                0x00000000c0011b10                Keyboard::~Keyboard()
 .text          0x00000000c0011b3a      0x400 hal/logidisk.32
                0x00000000c0011b3a                LogicalDisk::close(int, int, void*)
                0x00000000c0011b3e                LogicalDisk::~LogicalDisk()
                0x00000000c0011b3e                LogicalDisk::~LogicalDisk()
                0x00000000c0011b62                LogicalDisk::~LogicalDisk()
                0x00000000c0011b8c                LogicalDisk::open(int, int, void*)
                0x00000000c0011ba0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011bd8                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011c1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011c1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011cd4                LogicalDisk::assignDriveLetter()
                0x00000000c0011d8a                LogicalDisk::mount()
                0x00000000c0011dfc                LogicalDisk::unmount()
                0x00000000c0011e0c                LogicalDisk::unassignDriveLetter()
                0x00000000c0011e62                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011ece                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011f3a       0x84 hal/mouse.32
                0x00000000c0011f3a                Mouse::Mouse(char const*)
                0x00000000c0011f3a                Mouse::Mouse(char const*)
                0x00000000c0011f70                Mouse::~Mouse()
                0x00000000c0011f70                Mouse::~Mouse()
                0x00000000c0011f94                Mouse::~Mouse()
 .text          0x00000000c0011fbe      0x339 hal/partition.32
                0x00000000c0011fbe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012066                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00122f7        0x1 
 .text          0x00000000c00122f8      0x2e7 hal/timer.32
                0x00000000c00122f8                Timer::Timer(char const*)
                0x00000000c00122f8                Timer::Timer(char const*)
                0x00000000c001232e                Timer::~Timer()
                0x00000000c001232e                Timer::~Timer()
                0x00000000c0012352                Timer::~Timer()
                0x00000000c001237c                Timer::read()
                0x00000000c0012387                timerHandler(unsigned long long)
                0x00000000c00124be                setupTimer(int)
 *fill*         0x00000000c00125df        0x1 
 .text          0x00000000c00125e0      0x2d1 hal/vcache.32
                0x00000000c00125e0                VCache::VCache(PhysicalDisk*)
                0x00000000c00125e0                VCache::VCache(PhysicalDisk*)
                0x00000000c00126d0                VCache::writeWriteBuffer()
                0x00000000c001270c                VCache::~VCache()
                0x00000000c001270c                VCache::~VCache()
                0x00000000c001274c                VCache::~VCache()
                0x00000000c0012774                VCache::write(unsigned long long, int, void*)
                0x00000000c0012858                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00128b1        0x1 
 .text          0x00000000c00128b2      0x26d hal/video.32
                0x00000000c00128b2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00128fc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001297a                Video::clearScreen(unsigned int)
                0x00000000c00129ae                Video::putpixel(int, int, unsigned int)
                0x00000000c00129bc                Video::Video(char const*)
                0x00000000c00129bc                Video::Video(char const*)
                0x00000000c00129f2                Video::~Video()
                0x00000000c00129f2                Video::~Video()
                0x00000000c0012a16                Video::~Video()
                0x00000000c0012a40                Video::isMonochrome()
                0x00000000c0012a4c                Video::getWidth()
                0x00000000c0012a58                Video::getHeight()
                0x00000000c0012a64                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012b1f        0x1 
 .text          0x00000000c0012b20      0xd28 hw/acpi.32
                0x00000000c0012b20                ACPI::close(int, int, void*)
                0x00000000c0012bd5                findRSDP()
                0x00000000c0012c5f                loadACPITables(unsigned char*)
                0x00000000c0012e86                findRSDT(unsigned char*)
                0x00000000c0012fa4                findDataTable(unsigned char*, char*)
                0x00000000c0013040                scanMADT()
                0x00000000c00133d4                ACPI::ACPI()
                0x00000000c00133d4                ACPI::ACPI()
                0x00000000c0013434                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013516                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001361c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013622                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001366a                ACPI::open(int, int, void*)
                0x00000000c0013830                ACPI::sleep()
 .text          0x00000000c0013848     0x132c hw/cpu.32
                0x00000000c0013848                CPU::close(int, int, void*)
                0x00000000c001384b                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c00139df                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013c8d                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013ca9                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013cc1                AMD_K6_writeback(int, int, int)
                0x00000000c0013d34                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013db7                cpuidCheckEDX(unsigned int)
                0x00000000c0013de4                cpuidCheckECX(unsigned int)
                0x00000000c0013e11                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013e3e                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013e6b                getCPUNumber()
                0x00000000c0013e6e                thisCPU()
                0x00000000c0013e82                CPU::CPU()
                0x00000000c0013e82                CPU::CPU()
                0x00000000c0013f10                CPU::displayFeatures()
                0x00000000c0013f12                CPU::detectFeatures()
                0x00000000c0014904                CPU::setupSMEP()
                0x00000000c001491e                CPU::setupUMIP()
                0x00000000c0014936                CPU::setupTSC()
                0x00000000c001494e                CPU::setupLargePages()
                0x00000000c0014966                CPU::setupPAT()
                0x00000000c00149a2                CPU::setupMTRR()
                0x00000000c00149a4                CPU::setupGlobalPages()
                0x00000000c00149ba                CPU::allowUsermodeDataAccess()
                0x00000000c00149cc                CPU::prohibitUsermodeDataAccess()
                0x00000000c00149de                CPU::setupSMAP()
                0x00000000c0014a04                CPU::setupFeatures()
                0x00000000c0014aa6                CPU::open(int, int, void*)
 .text          0x00000000c0014b74        0x0 hw/ports.32
 .text          0x00000000c0014b74      0x32c krnl/panic.32
                0x00000000c0014b74                Krnl::panic(char const*)
 .text          0x00000000c0014ea0      0x503 reg/registry.32
                0x00000000c0014ea0                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014ff8                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015157                Reg::getLine(char*, char*, char*)
                0x00000000c001518e                Reg::readInt(char*, char*, int*)
                0x00000000c0015279                Reg::readString(char*, char*, char*, int)
                0x00000000c00152fa                Reg::readBool(char*, char*, bool*)
                0x00000000c001531f                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001534b                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015377                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00153a3       0x18 sys/sc_exit.32
                0x00000000c00153a3                Sys::exit(regs*)
 .text          0x00000000c00153bb       0x95 sys/sc_loaddll.32
                0x00000000c00153bb                Sys::loadDLL(regs*)
 .text          0x00000000c0015450       0x68 sys/sc_read.32
                0x00000000c0015450                Sys::read(regs*)
 .text          0x00000000c00154b8       0x55 sys/sc_sbrk.32
                0x00000000c00154b8                Sys::sbrk(regs*)
 .text          0x00000000c001550d       0x68 sys/sc_write.32
                0x00000000c001550d                Sys::write(regs*)
 .text          0x00000000c0015575       0x1a sys/sc_yield.32
                0x00000000c0015575                Sys::yield(regs*)
 .text          0x00000000c001558f      0xdaa sys/syscalls.32
                0x00000000c001558f                sysCallGetPID(regs*)
                0x00000000c001559b                sysCallSeekDir(regs*)
                0x00000000c00155a0                sysCallTellDir(regs*)
                0x00000000c00155a5                sysCallVerify(regs*)
                0x00000000c00155af                sysCallGetArgc(regs*)
                0x00000000c00155bf                sysFormatDisk(regs*)
                0x00000000c0015629                sysSetDiskVolumeLabel(regs*)
                0x00000000c001566f                sysGetDiskVolumeLabel(regs*)
                0x00000000c00156c0                sysShutdown(regs*)
                0x00000000c001571e                sysCallGetCwd(regs*)
                0x00000000c001573d                sysCallSetCwd(regs*)
                0x00000000c0015759                sysCallRealpath(regs*)
                0x00000000c001579c                sysCallOpen(regs*)
                0x00000000c001588c                sysCallReadDir(regs*)
                0x00000000c00158fb                sysCallIsATTY(regs*)
                0x00000000c001594e                sysCallSeek(regs*)
                0x00000000c001599f                sysCallTell(regs*)
                0x00000000c00159eb                sysCallSizeFromFilename(regs*)
                0x00000000c0015a64                sysCallSize(regs*)
                0x00000000c0015ab6                sysCallClose(regs*)
                0x00000000c0015b04                sysCallOpenDir(regs*)
                0x00000000c0015b71                sysCallMakeDir(regs*)
                0x00000000c0015bca                sysCallCloseDir(regs*)
                0x00000000c0015c18                sysCallWait(regs*)
                0x00000000c0015c32                sysCallFork(regs*)
                0x00000000c0015c4e                sysCallExecve(regs*)
                0x00000000c0015ca3                sysCallRmdir(regs*)
                0x00000000c0015cf5                sysCallUnlink(regs*)
                0x00000000c0015d47                sysCallGetArgv(regs*)
                0x00000000c0015d93                sysCallTTYName(regs*)
                0x00000000c0015e0f                sysCallGetEnv(regs*)
                0x00000000c0015e61                sysCallUSleep(regs*)
                0x00000000c0015e88                sysCallSpawn(regs*)
                0x00000000c0015ef8                sysAppSettings(regs*)
                0x00000000c0016017                sysSetFatAttrib(regs*)
                0x00000000c0016077                sysPanic(regs*)
                0x00000000c001609d                sysPipe(regs*)
                0x00000000c00160e2                sysGetUnixTime(regs*)
                0x00000000c00160f6                string_ends_with(char const*, char const*)
                0x00000000c001613e                setupSystemCalls()
                0x00000000c00162f7                systemCall(regs*, void*)
 .text          0x00000000c0016339     0x1137 thr/elf.32
                0x00000000c0016339                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00165b6                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00167cc                Thr::runtimeReferenceHelper()
                0x00000000c00167df                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001682e                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016aef                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0017270                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00172a2                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00172d9                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00172f3                Thr::loadDLL(char const*, bool)
                0x00000000c0017446                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0017470     0x11c2 thr/prcssthr.32
                0x00000000c0017470                changeTSS
                0x00000000c001749e                Process::addArgs(char**)
                0x00000000c00174f8                Process::Process(char const*, Process*, char**)
                0x00000000c00174f8                Process::Process(char const*, Process*, char**)
                0x00000000c00176b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00176b0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017833                disableIRQs()
                0x00000000c001783b                getIRQNestingLevel()
                0x00000000c0017841                enableIRQs()
                0x00000000c0017850                lockScheduler()
                0x00000000c0017852                unlockScheduler()
                0x00000000c0017854                userModeEntryPoint(void*)
                0x00000000c0017877                lockStuff()
                0x00000000c0017883                taskStartupFunction
                0x00000000c001788c                updateTimeUsed()
                0x00000000c00178ea                switchToThread(ThreadControlBlock*)
                0x00000000c001793a                Semaphore::Semaphore(int)
                0x00000000c001793a                Semaphore::Semaphore(int)
                0x00000000c0017968                Mutex::Mutex()
                0x00000000c0017968                Mutex::Mutex()
                0x00000000c001797a                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017a5e                Process::createUserThread()
                0x00000000c0017a7a                setupMultitasking(void (*)())
                0x00000000c0017b84                schedule()
                0x00000000c0017c09                unlockStuff()
                0x00000000c0017c3e                forkProcess(regs*)
                0x00000000c0017dac                Semaphore::tryAcquire()
                0x00000000c0017dda                Semaphore::assertLocked(char const*)
                0x00000000c0017e0d                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017e4f                blockTask(TaskState)
                0x00000000c0017e70                waitTask(int, int*, int)
                0x00000000c0017eb2                nanoSleepUntil(unsigned long long)
                0x00000000c0017f09                nanoSleep(unsigned long long)
                0x00000000c0017f1e                sleep(unsigned long long)
                0x00000000c0017f3c                Semaphore::acquire()
                0x00000000c0017fa4                execveProcess(char const*, char* const*, char* const*)
                0x00000000c0018032                taskReturned
                0x00000000c0018060                unblockTask(ThreadControlBlock*)
                0x00000000c001810f                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00183b3                cleanerTaskFunction(void*)
                0x00000000c0018466                terminateTask(int)
                0x00000000c001853a                Thr::terminateFromIRQ(int)
                0x00000000c0018546                Semaphore::release()
 .text          0x00000000c0018632      0x8bf vm86/vm8086.32
                0x00000000c0018632                Vm::vm8086EntryPoint(void*)
                0x00000000c001865d                Vm::inbv(unsigned short)
                0x00000000c0018663                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001866d                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001867d                Vm::getSegment(unsigned int)
                0x00000000c0018685                Vm::getOffset(unsigned int)
                0x00000000c001868a                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c00187b9                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018843                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018854                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018866                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018877                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001888c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c00188a2                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c00188b7                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018ef1        0x1 
 .text          0x00000000c0018ef2     0x10ed fs/fat/vfslink.32
                0x00000000c0018ef2                FAT::getName()
                0x00000000c0018ef8                FAT::tell(void*, unsigned long long*)
                0x00000000c0018f2c                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f60                FAT::~FAT()
                0x00000000c0018f60                FAT::~FAT()
                0x00000000c0018f84                FAT::~FAT()
                0x00000000c0018fac                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c001904a                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019104                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00192e8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00194ee                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00195f4                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001964e                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c00196a8                FAT::close(void*)
                0x00000000c00196f4                FAT::closeDir(void*)
                0x00000000c0019740                FAT::seek(void*, unsigned long long)
                0x00000000c0019794                fatWrapperReadDisk
                0x00000000c00197db                fatWrapperWriteDisk
                0x00000000c0019822                fatWrapperIoctl
                0x00000000c0019926                FAT::FAT()
                0x00000000c0019926                FAT::FAT()
                0x00000000c0019978                FAT::fixFilepath(char*)
                0x00000000c00199b0                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ad8                FAT::openDir(char const*, void**)
                0x00000000c0019b7e                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019c68                FAT::unlink(char const*)
                0x00000000c0019ce2                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e36                FAT::rename(char const*, char const*)
                0x00000000c0019efa                FAT::mkdir(char const*)
                0x00000000c0019f74                FAT::exists(char const*)
 *fill*         0x00000000c0019fdf        0x1 
 .text          0x00000000c0019fe0      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019fe0                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019fe6                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a016                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a03a                ISO9660::getName()
                0x00000000c001a040                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a064                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a06a                ISO9660::unlink(char const*)
                0x00000000c001a070                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a076                ISO9660::rename(char const*, char const*)
                0x00000000c001a07c                ISO9660::mkdir(char const*)
                0x00000000c001a082                ISO9660::close(void*)
                0x00000000c001a0a4                ISO9660::closeDir(void*)
                0x00000000c001a0c6                ISO9660::~ISO9660()
                0x00000000c001a0c6                ISO9660::~ISO9660()
                0x00000000c001a0ea                ISO9660::~ISO9660()
                0x00000000c001a111                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a153                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a1ba                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a20a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a44e                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a6db                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a730                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a903                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a992                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001aa2c                ISO9660::exists(char const*)
                0x00000000c001aa50                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aae4                ISO9660::openDir(char const*, void**)
                0x00000000c001ab9c                ISO9660::ISO9660()
                0x00000000c001ab9c                ISO9660::ISO9660()
 *fill*         0x00000000c001abbf        0x1 
 .text          0x00000000c001abc0      0x244 hal/sound/sndchannel.32
                0x00000000c001abc0                SoundChannel::~SoundChannel()
                0x00000000c001abc0                SoundChannel::~SoundChannel()
                0x00000000c001abdc                SoundChannel::setSpeed(float)
                0x00000000c001abe8                SoundChannel::getSpeed()
                0x00000000c001abf0                SoundChannel::setVolume(int)
                0x00000000c001ac0c                SoundChannel::getVolume()
                0x00000000c001ac14                SoundChannel::pause()
                0x00000000c001ac1e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ac1e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ad14                SoundChannel::play()
                0x00000000c001ad1e                SoundChannel::paused()
                0x00000000c001ad26                SoundChannel::getSampleRate()
                0x00000000c001ad2e                SoundChannel::getBits()
                0x00000000c001ad36                SoundChannel::getBufferUsed()
                0x00000000c001ad3e                SoundChannel::getBufferSize()
                0x00000000c001ad46                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001adb8                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ae04      0x317 hal/sound/sndhw.32
                0x00000000c001ae04                SoundDevice::SoundDevice(char const*)
                0x00000000c001ae04                SoundDevice::SoundDevice(char const*)
                0x00000000c001ae70                SoundDevice::~SoundDevice()
                0x00000000c001ae70                SoundDevice::~SoundDevice()
                0x00000000c001aeea                SoundDevice::~SoundDevice()
                0x00000000c001af14                SoundDevice::getFreeChannelNum()
                0x00000000c001af2e                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001af9e                SoundDevice::removeChannel(int)
                0x00000000c001afd0                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001b03c                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b11b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b11b        0x1 
 .text          0x00000000c001b11c      0x6e5 hw/bus/pci.32
                0x00000000c001b11c                PCI::open(int, int, void*)
                0x00000000c001b130                PCI::close(int, int, void*)
                0x00000000c001b134                PCI::PCI()
                0x00000000c001b134                PCI::PCI()
                0x00000000c001b1b4                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1fc                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b21e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b242                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b286                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2aa                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2cc                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2ee                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b312                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b372                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b3de                PCI::checkBus(unsigned char)
                0x00000000c001b402                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b572                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b742                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b7ae                PCI::detect()
 *fill*         0x00000000c001b801        0x1 
 .text          0x00000000c001b802      0xc70 hw/diskctrl/ide.32
                0x00000000c001b802                IDE::close(int, int, void*)
                0x00000000c001b806                IDE::IDE()
                0x00000000c001b806                IDE::IDE()
                0x00000000c001b83a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b84c                selectDrive(unsigned char, unsigned char)
                0x00000000c001b84e                IDE::getBase(unsigned char)
                0x00000000c001b860                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b920                IDE::read(unsigned char, unsigned char)
                0x00000000c001b9ce                IDE::waitInterrupt(unsigned char)
                0x00000000c001ba34                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001ba50                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ba6c                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bab2                IDE::open(int, int, void*)
                0x00000000c001bec2                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bf8e                IDE::detect()
                0x00000000c001c276                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c40c                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c472      0x62b hw/diskphys/ata.32
                0x00000000c001c472                ATA::close(int, int, void*)
                0x00000000c001c496                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c498                ATA::ATA()
                0x00000000c001c498                ATA::ATA()
                0x00000000c001c4c6                ATA::flush(bool)
                0x00000000c001c510                ATA::readyForCommand()
                0x00000000c001c560                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c8de                ATA::read(unsigned long long, int, void*)
                0x00000000c001c946                ATA::write(unsigned long long, int, void*)
                0x00000000c001c9ae                ATA::detectCHS()
                0x00000000c001c9d8                ATA::open(int, int, void*)
 *fill*         0x00000000c001ca9d        0x1 
 .text          0x00000000c001ca9e      0x5b3 hw/diskphys/atapi.32
                0x00000000c001ca9e                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001caa4                ATAPI::close(int, int, void*)
                0x00000000c001cac8                ATAPI::ATAPI()
                0x00000000c001cac8                ATAPI::ATAPI()
                0x00000000c001caf6                ATAPI::readyForCommand()
                0x00000000c001cb46                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001ce06                ATAPI::diskRemoved()
                0x00000000c001ce22                ATAPI::eject()
                0x00000000c001ce68                ATAPI::diskInserted()
                0x00000000c001ce96                ATAPI::detectMedia()
                0x00000000c001cf52                ATAPI::open(int, int, void*)
                0x00000000c001cfd2                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d051        0x1 
 .text          0x00000000c001d052       0x8e hw/fpu/avx.32
                0x00000000c001d052                AVX::open(int, int, void*)
                0x00000000c001d064                AVX::close(int, int, void*)
                0x00000000c001d076                AVX::available()
                0x00000000c001d088                AVX::save(void*)
                0x00000000c001d0a0                AVX::load(void*)
                0x00000000c001d0b8                AVX::AVX()
                0x00000000c001d0b8                AVX::AVX()
 .text          0x00000000c001d0e0       0x90 hw/fpu/mmx.32
                0x00000000c001d0e0                MMX::available()
                0x00000000c001d0f4                MMX::open(int, int, void*)
                0x00000000c001d106                MMX::close(int, int, void*)
                0x00000000c001d118                MMX::save(void*)
                0x00000000c001d130                MMX::load(void*)
                0x00000000c001d148                MMX::MMX()
                0x00000000c001d148                MMX::MMX()
 .text          0x00000000c001d170       0x96 hw/fpu/sse.32
                0x00000000c001d170                SSE::open(int, int, void*)
                0x00000000c001d182                SSE::close(int, int, void*)
                0x00000000c001d194                SSE::available()
                0x00000000c001d1ae                SSE::save(void*)
                0x00000000c001d1c6                SSE::load(void*)
                0x00000000c001d1de                SSE::SSE()
                0x00000000c001d1de                SSE::SSE()
 .text          0x00000000c001d206       0x8e hw/fpu/x87.32
                0x00000000c001d206                x87::open(int, int, void*)
                0x00000000c001d218                x87::close(int, int, void*)
                0x00000000c001d22a                x87::available()
                0x00000000c001d23c                x87::save(void*)
                0x00000000c001d254                x87::load(void*)
                0x00000000c001d26c                x87::x87()
                0x00000000c001d26c                x87::x87()
 .text          0x00000000c001d294      0x5f3 hw/intctrl/apic.32
                0x00000000c001d294                APIC::disable()
                0x00000000c001d296                APIC::close(int, int, void*)
                0x00000000c001d2b8                IOAPIC::close(int, int, void*)
                0x00000000c001d2be                APIC::io_wait()
                0x00000000c001d2c4                APIC::getBase()
                0x00000000c001d306                APIC::eoi(unsigned char)
                0x00000000c001d334                APIC::open(int, int, void*)
                0x00000000c001d3ee                IOAPIC::IOAPIC()
                0x00000000c001d3ee                IOAPIC::IOAPIC()
                0x00000000c001d416                APIC::APIC()
                0x00000000c001d416                APIC::APIC()
                0x00000000c001d4e6                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d518                IOAPIC::read(int)
                0x00000000c001d540                IOAPIC::open(int, int, void*)
                0x00000000c001d636                IOAPIC::write(int, int)
                0x00000000c001d662                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d71c                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d887        0x1 
 .text          0x00000000c001d888      0x3d3 hw/intctrl/pic.32
                0x00000000c001d888                PIC::disable()
                0x00000000c001d8b6                PIC::close(int, int, void*)
                0x00000000c001d8d8                PIC::PIC()
                0x00000000c001d8d8                PIC::PIC()
                0x00000000c001d9ae                PIC::ioWait()
                0x00000000c001d9b4                PIC::getIRQReg(int)
                0x00000000c001da1e                PIC::eoi(unsigned char)
                0x00000000c001dab0                PIC::remap()
                0x00000000c001dc1c                PIC::open(int, int, void*)
 *fill*         0x00000000c001dc5b        0x1 
 .text          0x00000000c001dc5c      0x252 hw/timer/apictimer.32
                0x00000000c001dc5c                APICTimer::close(int, int, void*)
                0x00000000c001dc62                apicTimerHandler(regs*, void*)
                0x00000000c001dc90                APICTimer::write(int)
                0x00000000c001dd8e                APICTimer::open(int, int, void*)
                0x00000000c001de86                APICTimer::APICTimer()
                0x00000000c001de86                APICTimer::APICTimer()
 .text          0x00000000c001deae      0x1a7 hw/timer/pit.32
                0x00000000c001deae                PIT::write(int)
                0x00000000c001df2c                pitHandler(regs*, void*)
                0x00000000c001df58                PIT::open(int, int, void*)
                0x00000000c001dfa6                PIT::close(int, int, void*)
                0x00000000c001dfd6                PIT::PIT()
                0x00000000c001dfd6                PIT::PIT()
 *fill*         0x00000000c001e055        0xb 
 .text          0x00000000c001e060        0xa hw/fpu/x86/avx.32
                0x00000000c001e060                avxDetect
                0x00000000c001e066                avxSave
                0x00000000c001e067                avxLoad
                0x00000000c001e068                avxInit
                0x00000000c001e069                avxClose
 *fill*         0x00000000c001e06a        0x6 
 .text          0x00000000c001e070       0x38 hw/fpu/x86/sse.32
                0x00000000c001e070                sseDetect
                0x00000000c001e08b                sseSave
                0x00000000c001e091                sseLoad
                0x00000000c001e097                sseInit
                0x00000000c001e0a7                sseClose
 *fill*         0x00000000c001e0a8        0x8 
 .text          0x00000000c001e0b0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e0b6                x87Detect
                0x00000000c001e0d1                x87Save
                0x00000000c001e0d7                x87Load
                0x00000000c001e0dc                x87Init
                0x00000000c001e0f6                x87Close
 *fill*         0x00000000c001e0f7        0x1 
 .text          0x00000000c001e0f8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e11d        0x0 crtn.32
 *fill*         0x00000000c001e11d        0x3 
 .text          0x00000000c001e120      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e120                __divdi3
 *fill*         0x00000000c001e26b        0x1 
 .text          0x00000000c001e26c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e26c                __moddi3
 *fill*         0x00000000c001e3ea        0x2 
 .text          0x00000000c001e3ec       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e3ec                __udivdi3
 *fill*         0x00000000c001e4eb        0x1 
 .text          0x00000000c001e4ec      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e4ec                __umoddi3
 *fill*         0x00000000c001e606        0xa 
 .text          0x00000000c001e610       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e610                fabs
 *fill*         0x00000000c001e62e        0x2 
 .text          0x00000000c001e630        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e630                lrint
 .text          0x00000000c001e63c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e63c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e648        0x0
 .iplt          0x00000000c001e648        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e648        0xf
 .init          0x00000000c001e648        0x3 crti.32
                0x00000000c001e648                _init
 .init          0x00000000c001e64b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e650        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e655        0x2 crtn.32

.fini           0x00000000c001e657        0xa
 .fini          0x00000000c001e657        0x3 crti.32
                0x00000000c001e657                _fini
 .fini          0x00000000c001e65a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e65f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e662       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e662       0x23 core/computer.32
                0x00000000c001e662                Computer::~Computer()
                0x00000000c001e662                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e686       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e686       0x2a core/computer.32
                0x00000000c001e686                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e6b0       0x15
 .text._Z10idleCommonv
                0x00000000c001e6b0       0x15 core/idle.32
                0x00000000c001e6b0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e6c5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e6c5       0x12 core/kheap.32
                0x00000000c001e6c5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e6d7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e6d7        0x9 core/kheap.32
                0x00000000c001e6d7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e6e0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e6e0        0x2 core/unixfile.32
                0x00000000c001e6e0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e6e0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e6e2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e6e2       0x58 core/unixfile.32
                0x00000000c001e6e2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e6e2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e73a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e73a       0xd3 core/unixfile.32
                0x00000000c001e73a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e80e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e80e        0x7 core/unixfile.32
                0x00000000c001e80e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e816       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e816       0xa1 core/unixfile.32
                0x00000000c001e816                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e8b8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e8b8        0x8 core/unixfile.32
                0x00000000c001e8b8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e8c0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e8c0       0x1a hal/device.32
                0x00000000c001e8c0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e8c0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e8da       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e8da       0x2a hal/device.32
                0x00000000c001e8da                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e904       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e904       0xdc hal/device.32
                0x00000000c001e904                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e9e0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e9e0       0x58 hal/device.32
                0x00000000c001e9e0                LinkedList<Device>::LinkedList()
                0x00000000c001e9e0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001ea38       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001ea38       0x12 hal/fpu.32
                0x00000000c001ea38                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001ea4a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001ea4a        0x9 hal/fpu.32
                0x00000000c001ea4a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001ea53       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001ea53       0x12 hal/intctrl.32
                0x00000000c001ea53                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001ea65       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001ea65       0x12 hal/intctrl.32
                0x00000000c001ea65                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001ea77       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001ea77       0x12 hal/intctrl.32
                0x00000000c001ea77                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001ea89       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001ea89       0x12 hal/intctrl.32
                0x00000000c001ea89                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001ea9b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001ea9b       0x12 hal/intctrl.32
                0x00000000c001ea9b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001eaad       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001eaad       0x12 hal/intctrl.32
                0x00000000c001eaad                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eac0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eac0        0x7 hal/timer.32
                0x00000000c001eac0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eac8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eac8       0x1c hal/timer.32
                0x00000000c001eac8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eae4       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eae4       0xae hal/timer.32
                0x00000000c001eae4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eb92       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eb92       0xd3 hal/timer.32
                0x00000000c001eb92                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ec66       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ec66       0x23 hw/acpi.32
                0x00000000c001ec66                ACPI::~ACPI()
                0x00000000c001ec66                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ec8a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ec8a       0x2a hw/acpi.32
                0x00000000c001ec8a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001ecb4       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ecb4       0x23 hw/cpu.32
                0x00000000c001ecb4                CPU::~CPU()
                0x00000000c001ecb4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ecd8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ecd8       0x2a hw/cpu.32
                0x00000000c001ecd8                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ed02       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ed02       0x12 hw/cpu.32
                0x00000000c001ed02                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001ed14        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001ed14        0x9 hw/cpu.32
                0x00000000c001ed14                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001ed1d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001ed1d        0x9 hw/cpu.32
                0x00000000c001ed1d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001ed26       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001ed26       0x12 krnl/panic.32
                0x00000000c001ed26                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ed38        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ed38        0x2 thr/prcssthr.32
                0x00000000c001ed38                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ed38                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ed3a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ed3a       0x3e thr/prcssthr.32
                0x00000000c001ed3a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ed3a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed78       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed78       0x58 thr/prcssthr.32
                0x00000000c001ed78                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ed78                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001edd0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001edd0        0x8 thr/prcssthr.32
                0x00000000c001edd0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001edd8       0x23
 .text._ZN3PCID2Ev
                0x00000000c001edd8       0x23 hw/bus/pci.32
                0x00000000c001edd8                PCI::~PCI()
                0x00000000c001edd8                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001edfc       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001edfc       0x2a hw/bus/pci.32
                0x00000000c001edfc                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001ee26       0x23
 .text._ZN3IDED2Ev
                0x00000000c001ee26       0x23 hw/diskctrl/ide.32
                0x00000000c001ee26                IDE::~IDE()
                0x00000000c001ee26                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001ee4a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001ee4a       0x2a hw/diskctrl/ide.32
                0x00000000c001ee4a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001ee74       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ee74       0x23 hw/diskphys/ata.32
                0x00000000c001ee74                ATA::~ATA()
                0x00000000c001ee74                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ee98       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ee98       0x2a hw/diskphys/ata.32
                0x00000000c001ee98                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001eec2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001eec2       0x23 hw/diskphys/atapi.32
                0x00000000c001eec2                ATAPI::~ATAPI()
                0x00000000c001eec2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001eee6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001eee6       0x2a hw/diskphys/atapi.32
                0x00000000c001eee6                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001ef10       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001ef10       0x23 hw/fpu/avx.32
                0x00000000c001ef10                AVX::~AVX()
                0x00000000c001ef10                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001ef34       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001ef34       0x2a hw/fpu/avx.32
                0x00000000c001ef34                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ef5e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ef5e       0x23 hw/fpu/mmx.32
                0x00000000c001ef5e                MMX::~MMX()
                0x00000000c001ef5e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ef82       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ef82       0x2a hw/fpu/mmx.32
                0x00000000c001ef82                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001efac       0x23
 .text._ZN3SSED2Ev
                0x00000000c001efac       0x23 hw/fpu/sse.32
                0x00000000c001efac                SSE::~SSE()
                0x00000000c001efac                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001efd0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001efd0       0x2a hw/fpu/sse.32
                0x00000000c001efd0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001effa       0x23
 .text._ZN3x87D2Ev
                0x00000000c001effa       0x23 hw/fpu/x87.32
                0x00000000c001effa                x87::~x87()
                0x00000000c001effa                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f01e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f01e       0x2a hw/fpu/x87.32
                0x00000000c001f01e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f048       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f048       0x23 hw/intctrl/apic.32
                0x00000000c001f048                IOAPIC::~IOAPIC()
                0x00000000c001f048                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f06c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f06c       0x2a hw/intctrl/apic.32
                0x00000000c001f06c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f096       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f096       0x23 hw/intctrl/apic.32
                0x00000000c001f096                APIC::~APIC()
                0x00000000c001f096                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f0ba       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f0ba       0x2a hw/intctrl/apic.32
                0x00000000c001f0ba                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f0e4       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f0e4       0x23 hw/intctrl/pic.32
                0x00000000c001f0e4                PIC::~PIC()
                0x00000000c001f0e4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f108       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f108       0x2a hw/intctrl/pic.32
                0x00000000c001f108                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f132       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f132       0x23 hw/timer/apictimer.32
                0x00000000c001f132                APICTimer::~APICTimer()
                0x00000000c001f132                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f156       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f156       0x2a hw/timer/apictimer.32
                0x00000000c001f156                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f180       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f180       0x23 hw/timer/pit.32
                0x00000000c001f180                PIT::~PIT()
                0x00000000c001f180                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f1a4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f1a4       0x2a hw/timer/pit.32
                0x00000000c001f1a4                PIT::~PIT()

.rodata         0x00000000c001f1ce     0x3486
                0x00000000c001f1ce                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f1ce        0x2 
 .ctors         0x00000000c001f1d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f1d4        0x4 core/unixfile.32
 .ctors         0x00000000c001f1d8        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f1dc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f1e0                end_ctors = .
                0x00000000c001f1e0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f1e0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f1e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f1e4                __DTOR_END__
                0x00000000c001f1e8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f1e8       0x18 
 .rodata        0x00000000c001f200      0x101 acpica/utclib.32
                0x00000000c001f200                AcpiGbl_Ctypes
 *fill*         0x00000000c001f301        0x3 
 .rodata        0x00000000c001f304       0x18 core/malloc.32
 *fill*         0x00000000c001f31c        0x4 
 .rodata        0x00000000c001f320      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f440       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f496        0xa 
 .rodata        0x00000000c001f4a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f8a0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f956        0x2 
 .rodata.str1.4
                0x00000000c001f958      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001fcfd        0x3 
 .rodata        0x00000000c001fd00       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001fd60       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001fd80       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001fd94       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001fdd6        0x2 
 .rodata.cst8   0x00000000c001fdd8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001fde0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001fe4c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001ff10       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001ff5a        0x6 
 .rodata.cst8   0x00000000c001ff60        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001ff68        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001ff74       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001ffbc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001ffbc       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c002002f        0x1 
 .rodata._ZTV8Computer
                0x00000000c0020030       0x2c core/computer.32
                0x00000000c0020030                vtable for Computer
 .rodata.str1.1
                0x00000000c002005c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020078       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00200a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00200b4       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00200cf       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c002011d       0x39 core/pipe.32
 *fill*         0x00000000c0020156        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020158       0x1c core/pipe.32
                0x00000000c0020158                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020174       0x9d core/terminal.32
 *fill*         0x00000000c0020211        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020214       0x1c core/terminal.32
                0x00000000c0020214                vtable for VgaText
 .rodata        0x00000000c0020230       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002024e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020268       0x19 core/unixfile.32
 *fill*         0x00000000c0020281        0x3 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020284       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00202a6       0x15 core/unixfile.32
 *fill*         0x00000000c00202bb        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00202bc       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0020307        0x8 core/unixfile.32
 *fill*         0x00000000c002030f        0x1 
 .rodata.str1.4
                0x00000000c0020310       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020330       0x1c core/unixfile.32
                0x00000000c0020330                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002034c       0x1c core/unixfile.32
                0x00000000c002034c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020368      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020513      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020697       0x33 coreobjs/c++.32
 *fill*         0x00000000c00206ca        0x2 
 .rodata.str1.4
                0x00000000c00206cc       0x3f dbg/kconsole.32
 *fill*         0x00000000c002070b        0x1 
 .rodata        0x00000000c002070c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002085c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002085c       0x64 fs/vfs.32
                0x00000000c002085c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00208c0       0x1c fs/vfs.32
                0x00000000c00208c0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00208dc       0x1c fs/vfs.32
                0x00000000c00208dc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00208f8       0x2c hal/bus.32
                0x00000000c00208f8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020924       0x30 hal/buzzer.32
                0x00000000c0020924                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020954       0x3c hal/clock.32
                0x00000000c0020954                vtable for Clock
 *fill*         0x00000000c0020990       0x10 
 .rodata        0x00000000c00209a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00209d0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00209ee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00209ee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00209ee       0x19 hal/device.32
 *fill*         0x00000000c00209ee        0x2 
 .rodata._ZTV6Device
                0x00000000c00209f0       0x2c hal/device.32
                0x00000000c00209f0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020a1c       0x2c hal/device.32
                0x00000000c0020a1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020a48       0x2c hal/diskctrl.32
                0x00000000c0020a48                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020a74       0x34 hal/diskphys.32
                0x00000000c0020a74                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020aa8        0x9 hal/fpu.32
 *fill*         0x00000000c0020ab1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0020ab4       0x38 hal/fpu.32
                0x00000000c0020ab4                vtable for FPU
 .rodata.str1.4
                0x00000000c0020aec      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020c1c      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c0020daf        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c0020db0       0x48 hal/intctrl.32
                0x00000000c0020db0                vtable for InterruptController
 .rodata        0x00000000c0020df8       0x4e hal/keybrd.32
 *fill*         0x00000000c0020e46        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0020e48       0x34 hal/keybrd.32
                0x00000000c0020e48                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020e7c       0x7a hal/logidisk.32
 *fill*         0x00000000c0020ef6        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0020ef8       0x2c hal/logidisk.32
                0x00000000c0020ef8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020f24       0x2c hal/mouse.32
                0x00000000c0020f24                vtable for Mouse
 .rodata.str1.1
                0x00000000c0020f50        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020f5b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020f5b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020f5b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020f5b       0x15 hal/timer.32
 *fill*         0x00000000c0020f5b        0x1 
 .rodata._ZTV5Timer
                0x00000000c0020f5c       0x30 hal/timer.32
                0x00000000c0020f5c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020f8c       0x10 hal/vcache.32
                0x00000000c0020f8c                vtable for VCache
 .rodata.str1.1
                0x00000000c0020f9c        0xf hal/video.32
 *fill*         0x00000000c0020fab        0x1 
 .rodata._ZTV5Video
                0x00000000c0020fac       0x40 hal/video.32
                0x00000000c0020fac                vtable for Video
 .rodata.str1.1
                0x00000000c0020fec       0xd1 hw/acpi.32
 *fill*         0x00000000c00210bd        0x3 
 .rodata.str1.4
                0x00000000c00210c0       0xe5 hw/acpi.32
 *fill*         0x00000000c00211a5        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00211a8       0x2c hw/acpi.32
                0x00000000c00211a8                vtable for ACPI
 .rodata.str1.1
                0x00000000c00211d4      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00213f8       0x2c hw/cpu.32
                0x00000000c00213f8                vtable for CPU
 .rodata.str1.1
                0x00000000c0021424       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c00214d9        0x3 
 .rodata.str1.4
                0x00000000c00214dc      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00215ee       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021633       0x5d sys/syscalls.32
 .rodata.str1.4
                0x00000000c0021690       0x4c sys/syscalls.32
 .rodata.str1.1
                0x00000000c00216dc      0x1ea thr/elf.32
                                        0x1ec (size before relaxing)
 .rodata.str1.1
                0x00000000c00218c6      0x115 thr/prcssthr.32
 *fill*         0x00000000c00219db        0x1 
 .rodata.str1.4
                0x00000000c00219dc      0x2b4 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0021c90       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021c90       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021c90       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021c90       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021c90        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021c90       0x5f vm86/vm8086.32
 *fill*         0x00000000c0021cef        0x1 
 .rodata        0x00000000c0021cf0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021d20       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0021d73        0x1 
 .rodata.str1.4
                0x00000000c0021d74       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0021d9c       0x64 fs/fat/vfslink.32
                0x00000000c0021d9c                vtable for FAT
 .rodata.str1.1
                0x00000000c0021e00       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0021e49        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0021e4c       0x64 fs/iso9660/vfslink.32
                0x00000000c0021e4c                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0021eb0       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0021eca        0x2 
 .rodata.cst4   0x00000000c0021ecc        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0021ed0       0x38 hal/sound/sndhw.32
                0x00000000c0021ed0                vtable for SoundDevice
 .rodata.cst4   0x00000000c0021f08       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c0021f18       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0021fbc       0x2c hw/bus/pci.32
                0x00000000c0021fbc                vtable for PCI
 .rodata.str1.1
                0x00000000c0021fe8      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c002221e        0x2 
 .rodata._ZTV3IDE
                0x00000000c0022220       0x2c hw/diskctrl/ide.32
                0x00000000c0022220                vtable for IDE
 .rodata.str1.1
                0x00000000c002224c       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c002226d        0x3 
 .rodata._ZTV3ATA
                0x00000000c0022270       0x34 hw/diskphys/ata.32
                0x00000000c0022270                vtable for ATA
 .rodata.str1.1
                0x00000000c00222a4       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c00222dc       0x34 hw/diskphys/atapi.32
                0x00000000c00222dc                vtable for ATAPI
 .rodata.str1.1
                0x00000000c0022310        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c0022318       0x38 hw/fpu/avx.32
                0x00000000c0022318                vtable for AVX
 .rodata.str1.1
                0x00000000c0022350        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022358       0x38 hw/fpu/mmx.32
                0x00000000c0022358                vtable for MMX
 .rodata.str1.1
                0x00000000c0022390        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022398       0x38 hw/fpu/sse.32
                0x00000000c0022398                vtable for SSE
 .rodata.str1.1
                0x00000000c00223d0        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c00223d8       0x38 hw/fpu/x87.32
                0x00000000c00223d8                vtable for x87
 .rodata        0x00000000c0022410       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c00224e8       0x48 hw/intctrl/apic.32
                0x00000000c00224e8                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0022530       0x2c hw/intctrl/apic.32
                0x00000000c0022530                vtable for IOAPIC
 .rodata        0x00000000c002255c       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002257e        0x2 
 .rodata._ZTV3PIC
                0x00000000c0022580       0x48 hw/intctrl/pic.32
                0x00000000c0022580                vtable for PIC
 .rodata.str1.1
                0x00000000c00225c8        0xb hw/timer/apictimer.32
 *fill*         0x00000000c00225d3        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00225d4       0x30 hw/timer/apictimer.32
                0x00000000c00225d4                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022604       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022621        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022624       0x30 hw/timer/pit.32
                0x00000000c0022624                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022654      0x5f5
 *(.data)
 .data          0x00000000c0022654        0x0 crti.32
 .data          0x00000000c0022654        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022654                __dso_handle
 .data          0x00000000c0022658        0x0 acpica/utclib.32
 .data          0x00000000c0022658        0x0 core/malloc.32
 .data          0x00000000c0022658        0x0 libk/string.32
 .data          0x00000000c0022658        0x0 fs/fat/diskio.32
 .data          0x00000000c0022658        0x0 fs/fat/ff.32
 .data          0x00000000c0022658        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022658        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022658        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022658        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022658        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022658        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022658        0x0 core/computer.32
 .data          0x00000000c0022658        0x0 core/gdt.32
 .data          0x00000000c0022658        0x0 core/idle.32
 .data          0x00000000c0022658        0x0 core/idt.32
 .data          0x00000000c0022658        0x4 core/kheap.32
 .data          0x00000000c002265c        0x0 core/main.32
 .data          0x00000000c002265c        0x4 core/physmgr.32
                0x00000000c002265c                Phys::bitmap
 .data          0x00000000c0022660        0x0 core/pipe.32
 .data          0x00000000c0022660       0x60 core/terminal.32
                0x00000000c0022660                VgaText::hiddenOut
                0x00000000c0022680                ansiToVGAMappings
 .data          0x00000000c00226c0        0x0 core/tss.32
 .data          0x00000000c00226c0        0x4 core/unixfile.32
                0x00000000c00226c0                UnixFile::nextFd
 .data          0x00000000c00226c4        0x8 core/virtmgr.32
                0x00000000c00226c4                Virt::pageAllocPtr
                0x00000000c00226c8                Virt::bitmap
 .data          0x00000000c00226cc        0x4 coreobjs/c++.32
                0x00000000c00226cc                __stack_chk_guard
 .data          0x00000000c00226d0        0x0 dbg/kconsole.32
 .data          0x00000000c00226d0        0x0 fs/vfs.32
 .data          0x00000000c00226d0        0x0 hal/bus.32
 .data          0x00000000c00226d0        0x0 hal/buzzer.32
 .data          0x00000000c00226d0        0x0 hal/clock.32
 .data          0x00000000c00226d0        0x0 hal/device.32
 .data          0x00000000c00226d0        0x0 hal/diskctrl.32
 .data          0x00000000c00226d0        0x0 hal/diskphys.32
 .data          0x00000000c00226d0        0x0 hal/fpu.32
 *fill*         0x00000000c00226d0       0x10 
 .data          0x00000000c00226e0      0x2a0 hal/intctrl.32
                0x00000000c00226e0                exceptionNames
 .data          0x00000000c0022980        0x0 hal/keybrd.32
 .data          0x00000000c0022980        0x0 hal/logidisk.32
 .data          0x00000000c0022980        0x0 hal/mouse.32
 .data          0x00000000c0022980        0x0 hal/partition.32
 .data          0x00000000c0022980        0x0 hal/timer.32
 .data          0x00000000c0022980        0x0 hal/vcache.32
 .data          0x00000000c0022980        0x0 hal/video.32
 .data          0x00000000c0022980       0x10 hw/acpi.32
                0x00000000c0022980                legacyIRQRemaps
 *fill*         0x00000000c0022990       0x10 
 .data          0x00000000c00229a0      0x2a4 hw/cpu.32
                0x00000000c00229a0                cpuNameList
                0x00000000c0022c40                lastCode
 .data          0x00000000c0022c44        0x0 hw/ports.32
 .data          0x00000000c0022c44        0x0 krnl/panic.32
 .data          0x00000000c0022c44        0x0 reg/registry.32
 .data          0x00000000c0022c44        0x0 sys/sc_exit.32
 .data          0x00000000c0022c44        0x0 sys/sc_loaddll.32
 .data          0x00000000c0022c44        0x0 sys/sc_read.32
 .data          0x00000000c0022c44        0x0 sys/sc_sbrk.32
 .data          0x00000000c0022c44        0x0 sys/sc_write.32
 .data          0x00000000c0022c44        0x0 sys/sc_yield.32
 .data          0x00000000c0022c44        0x0 sys/syscalls.32
 .data          0x00000000c0022c44        0x0 thr/elf.32
 .data          0x00000000c0022c44        0x4 thr/prcssthr.32
                0x00000000c0022c44                nextPID
 .data          0x00000000c0022c48        0x0 vm86/vm8086.32
 .data          0x00000000c0022c48        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022c48        0x1 fs/iso9660/vfslink.32
                0x00000000c0022c48                recentDriveletter
 .data          0x00000000c0022c49        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022c49        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022c49        0x0 hw/bus/isa.32
 .data          0x00000000c0022c49        0x0 hw/bus/pci.32
 .data          0x00000000c0022c49        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022c49        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022c49        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022c49        0x0 hw/fpu/avx.32
 .data          0x00000000c0022c49        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022c49        0x0 hw/fpu/sse.32
 .data          0x00000000c0022c49        0x0 hw/fpu/x87.32
 .data          0x00000000c0022c49        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022c49        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022c49        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022c49        0x0 hw/timer/pit.32
 .data          0x00000000c0022c49        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022c49        0x0 crtn.32
 .data          0x00000000c0022c49        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022c49        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022c49        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022c49        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022c49        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022c49        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022c49        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022c4c        0x0
 .got           0x00000000c0022c4c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022c4c        0x0
 .got.plt       0x00000000c0022c4c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022c4c        0x0
 .igot.plt      0x00000000c0022c4c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022c4c        0x0
 .tm_clone_table
                0x00000000c0022c4c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022c4c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022c49      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022c49        0x3 
 .eh_frame      0x00000000c0022c4c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022c4c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022c4c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022ca4       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022ce4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0022d50       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022dd4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0022dec        0x0
 .rel.got       0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0022dec        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0022dec     0x21bc
                0x00000000c0022dec                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0022dec        0x0 crti.32
 .bss           0x00000000c0022dec       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0022e0c        0x4 acpica/utclib.32
 *fill*         0x00000000c0022e10       0x10 
 .bss           0x00000000c0022e20      0x378 core/malloc.32
 .bss           0x00000000c0023198        0x0 libk/string.32
 .bss           0x00000000c0023198        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023198        0x8 
 .bss           0x00000000c00231a0       0x88 fs/fat/ff.32
 .bss           0x00000000c0023228        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023228        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0023228        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0023228        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0023228        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0023228        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0023228        0x6 core/computer.32
                0x00000000c0023228                computer
                0x00000000c002322c                preemptionOn
                0x00000000c002322d                schedulingOn
 *fill*         0x00000000c002322e        0x2 
 .bss           0x00000000c0023230        0x6 core/gdt.32
                0x00000000c0023230                gdtDescr
 .bss           0x00000000c0023236        0x0 core/idle.32
 *fill*         0x00000000c0023236        0x2 
 .bss           0x00000000c0023238        0x6 core/idt.32
                0x00000000c0023238                idtDescr
 .bss           0x00000000c002323e        0x0 core/kheap.32
 *fill*         0x00000000c002323e        0x2 
 .bss           0x00000000c0023240        0x4 core/main.32
                0x00000000c0023240                sysBootSettings
 *fill*         0x00000000c0023244       0x1c 
 .bss           0x00000000c0023260       0x50 core/physmgr.32
                0x00000000c0023260                Phys::currentPagePointer
                0x00000000c0023264                Phys::highestMem
                0x00000000c0023268                Phys::oldPercent
                0x00000000c002326c                Phys::usedPages
                0x00000000c0023270                Phys::usablePages
                0x00000000c0023280                Phys::dmaUsage
 .bss           0x00000000c00232b0        0x0 core/pipe.32
 *fill*         0x00000000c00232b0       0x10 
 .bss           0x00000000c00232c0       0x29 core/terminal.32
                0x00000000c00232c0                textModeImplementation
                0x00000000c00232e0                terminalCycle
                0x00000000c00232e4                activeTerminal
                0x00000000c00232e8                VgaText::graphicMode
 *fill*         0x00000000c00232e9        0x1 
 .bss           0x00000000c00232ea        0x2 core/tss.32
                0x00000000c00232ea                doubleFaultSelector
 .bss           0x00000000c00232ec       0x10 core/unixfile.32
                0x00000000c00232ec                initialFilesAdded
                0x00000000c00232f0                unixFileLinkedList
 .bss           0x00000000c00232fc        0x4 core/virtmgr.32
                0x00000000c00232fc                firstVAS
 .bss           0x00000000c0023300        0x0 coreobjs/c++.32
 .bss           0x00000000c0023300        0x0 dbg/kconsole.32
 .bss           0x00000000c0023300        0x4 fs/vfs.32
                0x00000000c0023300                installedFilesystems
 .bss           0x00000000c0023304        0x0 hal/bus.32
 .bss           0x00000000c0023304        0x4 hal/buzzer.32
                0x00000000c0023304                systemBuzzer
 .bss           0x00000000c0023308        0x8 hal/clock.32
                0x00000000c0023308                dstOn
                0x00000000c0023309                timezoneHalfHourOffset
                0x00000000c002330c                timezoneHourOffset
 .bss           0x00000000c0023310        0x0 hal/device.32
 .bss           0x00000000c0023310        0x0 hal/diskctrl.32
 .bss           0x00000000c0023310        0x0 hal/diskphys.32
 .bss           0x00000000c0023310        0x0 hal/fpu.32
 .bss           0x00000000c0023310       0x20 hal/intctrl.32
                0x00000000c0023310                pf5
                0x00000000c0023314                pf4
                0x00000000c0023318                pf3
                0x00000000c002331c                pf2
                0x00000000c0023320                pf1
                0x00000000c0023324                pf0
                0x00000000c0023328                gpFaultIntercept
                0x00000000c002332c                x87FaultIntercept
 *fill*         0x00000000c0023330       0x10 
 .bss           0x00000000c0023340      0x429 hal/keybrd.32
                0x00000000c0023340                keyboardWaitingTaskList
                0x00000000c0023344                keyboardSetupYet
                0x00000000c0023360                keystates
 *fill*         0x00000000c0023769       0x17 
 .bss           0x00000000c0023780       0x88 hal/logidisk.32
                0x00000000c0023780                diskAssignments
                0x00000000c00237a0                disks
 .bss           0x00000000c0023808        0x4 hal/mouse.32
                0x00000000c0023808                guiMouseHandler
 .bss           0x00000000c002380c        0x0 hal/partition.32
 *fill*         0x00000000c002380c        0x4 
 .bss           0x00000000c0023810        0x8 hal/timer.32
                0x00000000c0023810                nanoSinceBoot
 .bss           0x00000000c0023818        0x0 hal/vcache.32
 .bss           0x00000000c0023818        0x4 hal/video.32
                0x00000000c0023818                screen
 *fill*         0x00000000c002381c        0x4 
 .bss           0x00000000c0023820      0x3c0 hw/acpi.32
                0x00000000c0023820                systemSleepFunction
                0x00000000c0023824                systemResetFunction
                0x00000000c0023828                systemShutdownFunction
                0x00000000c002382c                nextACPITable
                0x00000000c0023840                acpiTables
                0x00000000c0023a40                usingXSDT
                0x00000000c0023a44                MADTpointer
                0x00000000c0023a48                RSDTpointer
                0x00000000c0023a4c                RSDPpointer
                0x00000000c0023a50                ioapicDiscoveryNumber
                0x00000000c0023a60                ioapicFoundInMADT
                0x00000000c0023a80                ioapicAddresses
                0x00000000c0023b00                ioapicGSIBase
                0x00000000c0023b80                processorDiscoveryNumber
                0x00000000c0023ba0                matchingAPICID
                0x00000000c0023bc0                processorID
 .bss           0x00000000c0023be0       0x10 hw/cpu.32
                0x00000000c0023be0                lastD
                0x00000000c0023be4                lastC
                0x00000000c0023be8                lastB
                0x00000000c0023bec                lastA
 .bss           0x00000000c0023bf0        0x0 hw/ports.32
 .bss           0x00000000c0023bf0        0x1 krnl/panic.32
                0x00000000c0023bf0                Krnl::kernelInPanic
 .bss           0x00000000c0023bf1        0x0 reg/registry.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_exit.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_read.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_write.32
 .bss           0x00000000c0023bf1        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023bf1        0xf 
 .bss           0x00000000c0023c00      0x200 sys/syscalls.32
                0x00000000c0023c00                systemCallHandlers
 .bss           0x00000000c0023e00      0x7a4 thr/elf.32
                0x00000000c0023e00                Thr::driverLookupNext
                0x00000000c0023e20                Thr::driverLookupLen
                0x00000000c0024020                Thr::driverLookupAddr
                0x00000000c0024220                Thr::driverNameLookup
                0x00000000c0024420                Thr::kernelSymbols
                0x00000000c00244a0                Thr::kernelStringTable
                0x00000000c0024520                Thr::kernelSymbolTable
                0x00000000c00245a0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00245a4        0x4 
 .bss           0x00000000c00245a8       0x68 thr/prcssthr.32
                0x00000000c00245a8                cleanerThread
                0x00000000c00245ac                weNeedTheCleanerToNotBlock
                0x00000000c00245b0                xxxx
                0x00000000c00245b4                retValLockStuff
                0x00000000c00245b8                retValSchedLock
                0x00000000c00245bc                lockStuffLock
                0x00000000c00245c0                schedulerLock
                0x00000000c00245c4                taskSwitchesPostponedFlag
                0x00000000c00245c8                postponeTaskSwitchesCounter
                0x00000000c00245cc                irqDisableCounter
                0x00000000c00245d0                terminatedTaskList
                0x00000000c00245dc                sleepingTaskList
                0x00000000c00245e8                taskList
                0x00000000c00245f4                kernelProcess
 .bss           0x00000000c0024610        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024610       0x10 
 .bss           0x00000000c0024620       0xf0 fs/fat/vfslink.32
                0x00000000c0024620                FAT::fats
                0x00000000c0024640                FAT::vfsToFatRemaps
                0x00000000c00246c0                fatToVFSRemaps
 *fill*         0x00000000c0024710       0x10 
 .bss           0x00000000c0024720      0x820 fs/iso9660/vfslink.32
                0x00000000c0024720                recentSector
                0x00000000c0024740                recentBuffer
 .bss           0x00000000c0024f40        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0024f40        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0024f40        0x0 hw/bus/isa.32
 .bss           0x00000000c0024f40        0x0 hw/bus/pci.32
 .bss           0x00000000c0024f40        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0024f40        0x8 hw/diskphys/ata.32
                0x00000000c0024f40                ataSectorsWritten
                0x00000000c0024f44                ataSectorsRead
 .bss           0x00000000c0024f48        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0024f48        0x0 hw/fpu/avx.32
 .bss           0x00000000c0024f48        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0024f48        0x0 hw/fpu/sse.32
 .bss           0x00000000c0024f48        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0024f48       0x18 
 .bss           0x00000000c0024f60       0x41 hw/intctrl/apic.32
                0x00000000c0024f60                noOfIOAPICs
                0x00000000c0024f80                ioapics
                0x00000000c0024fa0                IOAPICsSetupYet
 .bss           0x00000000c0024fa1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0024fa1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0024fa1        0x3 
 .bss           0x00000000c0024fa4        0x4 hw/timer/pit.32
                0x00000000c0024fa4                pitFreq
 .bss           0x00000000c0024fa8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0024fa8        0x0 crtn.32
 .bss           0x00000000c0024fa8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0024fa8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0024fa8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0024fa8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0024fa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0024fa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0024fa8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0024fa8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027164                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
