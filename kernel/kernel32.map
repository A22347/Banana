Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e5e8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x695 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b336                Computer::disableNMI()
                0x00000000c000b344                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b362                Computer::handleNMI()
                0x00000000c000b3c8                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3f3        0x1 
 .text          0x00000000c000b3f4      0x1b7 core/gdt.32
                0x00000000c000b3f4                GDTEntry::setBase(unsigned int)
                0x00000000c000b410                GDTEntry::setLimit(unsigned int)
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b444                GDT::addEntry(GDTEntry)
                0x00000000c000b480                GDT::getNumberOfEntries()
                0x00000000c000b488                GDT::flush()
                0x00000000c000b4aa                GDT::setup()
 .text          0x00000000c000b5ab       0x61 core/idle.32
                0x00000000c000b5ab                idleFunction(void*)
 .text          0x00000000c000b60c      0x45f core/idt.32
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b67a                IDTEntry::setOffset(unsigned int)
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b690                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b698                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6b2                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6ea                IDT::flush()
                0x00000000c000b704                IDT::setup()
 .text          0x00000000c000ba6b      0x20d core/kheap.32
                0x00000000c000ba6b                sbrk
                0x00000000c000bb83                mmap
                0x00000000c000bb99                munmap
                0x00000000c000bbaf                liballoc_lock()
                0x00000000c000bbc0                liballoc_unlock()
                0x00000000c000bbd1                liballoc_alloc(int)
                0x00000000c000bbec                liballoc_free(void*, int)
                0x00000000c000bc0a                realloc
                0x00000000c000bc1e                malloc
                0x00000000c000bc2e                free
                0x00000000c000bc3e                rfree
                0x00000000c000bc4e                calloc
 .text          0x00000000c000bc78      0x38d core/main.32
                0x00000000c000bc78                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcbd                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcff                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd53                hwTextMode_update(VgaText*)
                0x00000000c000bd54                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd9c                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd8                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be5e                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000bebc                setupTextMode()
                0x00000000c000bf0d                kernel_main
 .text          0x00000000c000c005      0x4f3 core/physmgr.32
                0x00000000c000c005                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0f0                Phys::setPageState(unsigned long, bool)
                0x00000000c000c122                Phys::getPageState(unsigned long)
                0x00000000c000c13e                Phys::freePage(unsigned long)
                0x00000000c000c1c8                Phys::allocatePage()
                0x00000000c000c290                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2c8                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c4f8      0x273 core/pipe.32
                0x00000000c000c4f8                Pipe::isAtty()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c520                Pipe::~Pipe()
                0x00000000c000c548                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c63c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c704                Pipe::Pipe(int)
                0x00000000c000c704                Pipe::Pipe(int)
 *fill*         0x00000000c000c76b        0x1 
 .text          0x00000000c000c76c      0xf65 core/terminal.32
                0x00000000c000c76c                VgaText::isAtty()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c794                VgaText::~VgaText()
                0x00000000c000c7be                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c7de                setTerminalScrollLock(bool)
                0x00000000c000c7df                addToTerminalCycle(VgaText*)
                0x00000000c000c80c                installVgaTextImplementation()
                0x00000000c000c821                scrollTerminalScrollLock(int)
                0x00000000c000c822                VgaText::load()
                0x00000000c000c876                VgaText::updateCursor()
                0x00000000c000c890                VgaText::showCursor(bool)
                0x00000000c000c8a0                VgaText::disableBlink(bool)
                0x00000000c000c8da                VgaText::doANSI_SGR(int)
                0x00000000c000c966                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c97c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c992                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c9b2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c9c4                VgaText::scrollScreen()
                0x00000000c000ca58                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ca6a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000caca                VgaText::getCursorX()
                0x00000000c000cad6                VgaText::getCursorY()
                0x00000000c000cae2                VgaText::setCursor(int, int)
                0x00000000c000cb00                VgaText::setCursorX(int)
                0x00000000c000cb1c                VgaText::setCursorY(int)
                0x00000000c000cb38                VgaText::incrementCursor(bool)
                0x00000000c000cba0                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cbfa                VgaText::updateDiskUsage()
                0x00000000c000cd60                VgaText::updateTitle()
                0x00000000c000cda6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cdb6                VgaText::setTitleColour(VgaColour)
                0x00000000c000cdc6                VgaText::setTitle(char*)
                0x00000000c000cdec                VgaText::decrementCursor(bool)
                0x00000000c000ce14                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000cf10                VgaText::isShowingCursor()
                0x00000000c000cf1c                VgaText::isBlinkDisabled()
                0x00000000c000cf2a                VgaText::setCursorHeight(int)
                0x00000000c000cf48                VgaText::getCursorHeight()
                0x00000000c000cf53                setActiveTerminal(VgaText*)
                0x00000000c000d005                doTerminalCycle()
                0x00000000c000d022                VgaText::doUpdate()
                0x00000000c000d034                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d1f4                VgaText::clearScreen()
                0x00000000c000d258                VgaText::putchar(char)
                0x00000000c000d372                VgaText::puts(char const*)
                0x00000000c000d398                VgaText::putx(unsigned int)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d570                VgaText::receiveKey(unsigned char)
                0x00000000c000d658                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d6ac                newTerminal(char*)
 *fill*         0x00000000c000d6d1        0x1 
 .text          0x00000000c000d6d2      0x18f core/tss.32
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6e0                TSS::setESP(unsigned long)
                0x00000000c000d6f2                TSS::flush()
                0x00000000c000d712                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d861        0x1 
 .text          0x00000000c000d862      0x545 core/unixfile.32
                0x00000000c000d862                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d8f8                ReservedFilename::isAtty()
                0x00000000c000d92e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d9c8                UnixFile::getFileDescriptor()
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000dc0a                UnixFile::~UnixFile()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc56                ReservedFilename::~ReservedFilename()
                0x00000000c000dc7d                getFromFileDescriptor(int)
 *fill*         0x00000000c000dda7        0x1 
 .text          0x00000000c000dda8      0xe4f core/virtmgr.32
                0x00000000c000dda8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000dddd                Virt::getPageState(unsigned long)
                0x00000000c000de01                Virt::allocateKernelVirtualPages(int)
                0x00000000c000df12                Virt::virtualMemorySetup()
                0x00000000c000df91                Virt::getAKernelVAS()
                0x00000000c000df97                Virt::setupPageSwapping(int)
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e110                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e13c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e15b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e27e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e2a2                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e2ba                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e2f0                VAS::~VAS()
                0x00000000c000e2f0                VAS::~VAS()
                0x00000000c000e45c                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e55c                VAS::allocatePages(int, int)
                0x00000000c000e72c                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e748                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e812                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000e900                VAS::VAS(bool)
                0x00000000c000e900                VAS::VAS(bool)
                0x00000000c000eb30                mapVASFirstTime
 .text          0x00000000c000ebf7       0x93 coreobjs/c++.32
                0x00000000c000ebf7                __cxa_atexit
                0x00000000c000ebfa                __cxa_finalize
                0x00000000c000ebfb                __stack_chk_fail
                0x00000000c000ec5b                __cxa_pure_virtual
                0x00000000c000ec6c                operator new(unsigned long)
                0x00000000c000ec71                operator new[](unsigned long)
                0x00000000c000ec76                operator delete(void*)
                0x00000000c000ec7b                operator delete(void*, unsigned long)
                0x00000000c000ec80                operator delete[](void*)
                0x00000000c000ec85                operator delete[](void*, unsigned long)
 .text          0x00000000c000ec8a      0x1ef dbg/kconsole.32
                0x00000000c000ec8a                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000eceb                Dbg::logc(char)
                0x00000000c000ed02                Dbg::logs(char*)
                0x00000000c000ed1f                Dbg::logWriteInt(unsigned int)
                0x00000000c000ed3c                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000ed5b                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000ee79        0x1 
 .text          0x00000000c000ee7a      0xb68 fs/vfs.32
                0x00000000c000ee7a                File::read(unsigned long long, void*, int*)
                0x00000000c000eed2                File::write(unsigned long long, void*, int*)
                0x00000000c000ef2a                Directory::read(unsigned long long, void*, int*)
                0x00000000c000ef82                Directory::write(unsigned long long, void*, int*)
                0x00000000c000efb0                File::isAtty()
                0x00000000c000efb4                Directory::isAtty()
                0x00000000c000efb8                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000efbe                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000efc4                File::~File()
                0x00000000c000efc4                File::~File()
                0x00000000c000efe8                File::~File()
                0x00000000c000f012                Directory::~Directory()
                0x00000000c000f012                Directory::~Directory()
                0x00000000c000f036                Directory::~Directory()
                0x00000000c000f060                Filesystem::Filesystem()
                0x00000000c000f060                Filesystem::Filesystem()
                0x00000000c000f084                Filesystem::~Filesystem()
                0x00000000c000f084                Filesystem::~Filesystem()
                0x00000000c000f092                Filesystem::~Filesystem()
                0x00000000c000f0b6                initVFS()
                0x00000000c000f0e0                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f28a                File::File(char const*, Process*)
                0x00000000c000f28a                File::File(char const*, Process*)
                0x00000000c000f2ee                File::open(FileOpenMode)
                0x00000000c000f34c                File::close()
                0x00000000c000f3ac                File::seek(unsigned long long)
                0x00000000c000f402                File::tell(unsigned long long*)
                0x00000000c000f452                File::rewind()
                0x00000000c000f466                File::unlink()
                0x00000000c000f4b2                File::rename(char const*)
                0x00000000c000f500                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f55c                File::exists()
                0x00000000c000f59a                File::stat(unsigned long long*, bool*)
                0x00000000c000f5fb                getcwd(Process*, char*, int)
                0x00000000c000f625                setcwd(Process*, char*)
                0x00000000c000f74c                Directory::Directory(char const*, Process*)
                0x00000000c000f74c                Directory::Directory(char const*, Process*)
                0x00000000c000f7b0                Directory::open()
                0x00000000c000f80c                Directory::close()
                0x00000000c000f86c                Directory::unlink()
                0x00000000c000f8b8                Directory::rename(char const*)
                0x00000000c000f906                Directory::exists()
                0x00000000c000f944                Directory::read(dirent*)
                0x00000000c000f990                Directory::create()
                0x00000000c000f9dc                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000f9e2       0x84 hal/bus.32
                0x00000000c000f9e2                Bus::Bus(char const*)
                0x00000000c000f9e2                Bus::Bus(char const*)
                0x00000000c000fa18                Bus::~Bus()
                0x00000000c000fa18                Bus::~Bus()
                0x00000000c000fa3c                Bus::~Bus()
 .text          0x00000000c000fa66      0x14e hal/buzzer.32
                0x00000000c000fa66                Buzzer::Buzzer(char const*)
                0x00000000c000fa66                Buzzer::Buzzer(char const*)
                0x00000000c000faaa                Buzzer::~Buzzer()
                0x00000000c000faaa                Buzzer::~Buzzer()
                0x00000000c000face                Buzzer::~Buzzer()
                0x00000000c000faf8                Buzzer::stop()
                0x00000000c000fb0b                beepThread(void*)
                0x00000000c000fb46                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fbb4      0x42f hal/clock.32
                0x00000000c000fbb4                loadClockSettings()
                0x00000000c000fbce                Clock::Clock(char const*)
                0x00000000c000fbce                Clock::Clock(char const*)
                0x00000000c000fc04                Clock::~Clock()
                0x00000000c000fc04                Clock::~Clock()
                0x00000000c000fc28                Clock::~Clock()
                0x00000000c000fc52                Clock::timeInSecondsLocal()
                0x00000000c000fc9a                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fcf3                datetimeToSeconds(datetime_t)
                0x00000000c000fe1a                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fe7a                secondsToDatetime(unsigned long long)
                0x00000000c000ffbe                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c000ffe3        0x1 
 .text          0x00000000c000ffe4      0x504 hal/device.32
                0x00000000c000ffe4                Device::hibernate()
                0x00000000c000ffe6                Device::wake()
                0x00000000c000ffe8                Device::detect()
                0x00000000c000ffea                Device::disableLegacy()
                0x00000000c000ffec                Device::powerSaving(PowerSavingLevel)
                0x00000000c000ffee                DriverlessDevice::close(int, int, void*)
                0x00000000c000fff2                DriverlessDevice::detect()
                0x00000000c000fff4                DriverlessDevice::open(int, int, void*)
                0x00000000c0010008                Device::~Device()
                0x00000000c0010008                Device::~Device()
                0x00000000c0010016                Device::~Device()
                0x00000000c001003e                Device::findAndLoadDriver()
                0x00000000c0010040                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c0010066                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00100ba                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010118                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010166                Device::addChild(Device*)
                0x00000000c00101aa                Device::removeAllChildren()
                0x00000000c00101f0                Device::hibernateAll()
                0x00000000c0010220                Device::wakeAll()
                0x00000000c0010250                Device::detectAll()
                0x00000000c0010280                Device::disableLegacyAll()
                0x00000000c00102b0                Device::loadDriversForAll()
                0x00000000c00102dc                Device::closeAll()
                0x00000000c0010312                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0010348                Device::setName(char const*)
                0x00000000c0010356                Device::Device(char const*)
                0x00000000c0010356                Device::Device(char const*)
                0x00000000c0010448                Device::getName()
                0x00000000c0010452                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010452                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001047a                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00104be                getDevicesOfType(DeviceType)
 .text          0x00000000c00104e8       0x84 hal/diskctrl.32
                0x00000000c00104e8                HardDiskController::HardDiskController(char const*)
                0x00000000c00104e8                HardDiskController::HardDiskController(char const*)
                0x00000000c001051e                HardDiskController::~HardDiskController()
                0x00000000c001051e                HardDiskController::~HardDiskController()
                0x00000000c0010542                HardDiskController::~HardDiskController()
 .text          0x00000000c001056c       0xde hal/diskphys.32
                0x00000000c001056c                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001056c                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00105d4                PhysicalDisk::startCache()
                0x00000000c00105fc                PhysicalDisk::~PhysicalDisk()
                0x00000000c00105fc                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010620                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c001064a      0x142 hal/fpu.32
                0x00000000c001064a                FPU::FPU(char const*)
                0x00000000c001064a                FPU::FPU(char const*)
                0x00000000c0010680                FPU::~FPU()
                0x00000000c0010680                FPU::~FPU()
                0x00000000c00106a4                FPU::~FPU()
                0x00000000c00106ce                setupFPU()
 .text          0x00000000c001078c      0xc21 hal/intctrl.32
                0x00000000c001078c                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c00107c4                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010816                doubleFault(regs*, void*)
                0x00000000c0010824                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c00108c0                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010968                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00109ef                nmiHandler(regs*, void*)
                0x00000000c00109fd                int_handler
                0x00000000c0010a98                InterruptController::InterruptController(char const*)
                0x00000000c0010a98                InterruptController::InterruptController(char const*)
                0x00000000c0010b3e                InterruptController::~InterruptController()
                0x00000000c0010b3e                InterruptController::~InterruptController()
                0x00000000c0010b62                InterruptController::~InterruptController()
                0x00000000c0010b8c                displayDebugInfo(regs*)
                0x00000000c0010fa3                x87EmulHandler(regs*, void*)
                0x00000000c0011006                gpFault(regs*, void*)
                0x00000000c001103f                pgFault(regs*, void*)
                0x00000000c0011056                otherISRHandler(regs*, void*)
                0x00000000c0011075                opcodeFault(regs*, void*)
                0x00000000c00110df                displayProgramFault(char const*)
                0x00000000c0011108                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0011152                setupInterruptController()
 *fill*         0x00000000c00113ad        0x1 
 .text          0x00000000c00113ae      0x608 hal/keybrd.32
                0x00000000c00113ae                startGUI(void*)
                0x00000000c0011420                sendKeyToTerminal(unsigned char)
                0x00000000c001148c                sendKeyboardToken(KeyboardToken)
                0x00000000c0011867                clearInternalKeybuffer(VgaText*)
                0x00000000c001189c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c001192c                Keyboard::Keyboard(char const*)
                0x00000000c001192c                Keyboard::Keyboard(char const*)
                0x00000000c0011968                Keyboard::~Keyboard()
                0x00000000c0011968                Keyboard::~Keyboard()
                0x00000000c001198c                Keyboard::~Keyboard()
 .text          0x00000000c00119b6      0x400 hal/logidisk.32
                0x00000000c00119b6                LogicalDisk::close(int, int, void*)
                0x00000000c00119ba                LogicalDisk::~LogicalDisk()
                0x00000000c00119ba                LogicalDisk::~LogicalDisk()
                0x00000000c00119de                LogicalDisk::~LogicalDisk()
                0x00000000c0011a08                LogicalDisk::open(int, int, void*)
                0x00000000c0011a1c                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011a54                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011a9a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011a9a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011b50                LogicalDisk::assignDriveLetter()
                0x00000000c0011c06                LogicalDisk::mount()
                0x00000000c0011c78                LogicalDisk::unmount()
                0x00000000c0011c88                LogicalDisk::unassignDriveLetter()
                0x00000000c0011cde                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011d4a                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011db6       0x84 hal/mouse.32
                0x00000000c0011db6                Mouse::Mouse(char const*)
                0x00000000c0011db6                Mouse::Mouse(char const*)
                0x00000000c0011dec                Mouse::~Mouse()
                0x00000000c0011dec                Mouse::~Mouse()
                0x00000000c0011e10                Mouse::~Mouse()
 .text          0x00000000c0011e3a      0x339 hal/partition.32
                0x00000000c0011e3a                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011ee2                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012173        0x1 
 .text          0x00000000c0012174      0x2e7 hal/timer.32
                0x00000000c0012174                Timer::Timer(char const*)
                0x00000000c0012174                Timer::Timer(char const*)
                0x00000000c00121aa                Timer::~Timer()
                0x00000000c00121aa                Timer::~Timer()
                0x00000000c00121ce                Timer::~Timer()
                0x00000000c00121f8                Timer::read()
                0x00000000c0012203                timerHandler(unsigned long long)
                0x00000000c001233a                setupTimer(int)
 *fill*         0x00000000c001245b        0x1 
 .text          0x00000000c001245c      0x2d1 hal/vcache.32
                0x00000000c001245c                VCache::VCache(PhysicalDisk*)
                0x00000000c001245c                VCache::VCache(PhysicalDisk*)
                0x00000000c001254c                VCache::writeWriteBuffer()
                0x00000000c0012588                VCache::~VCache()
                0x00000000c0012588                VCache::~VCache()
                0x00000000c00125c8                VCache::~VCache()
                0x00000000c00125f0                VCache::write(unsigned long long, int, void*)
                0x00000000c00126d4                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c001272d        0x1 
 .text          0x00000000c001272e      0x26d hal/video.32
                0x00000000c001272e                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0012778                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c00127f6                Video::clearScreen(unsigned int)
                0x00000000c001282a                Video::putpixel(int, int, unsigned int)
                0x00000000c0012838                Video::Video(char const*)
                0x00000000c0012838                Video::Video(char const*)
                0x00000000c001286e                Video::~Video()
                0x00000000c001286e                Video::~Video()
                0x00000000c0012892                Video::~Video()
                0x00000000c00128bc                Video::isMonochrome()
                0x00000000c00128c8                Video::getWidth()
                0x00000000c00128d4                Video::getHeight()
                0x00000000c00128e0                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c001299b        0x1 
 .text          0x00000000c001299c      0xd28 hw/acpi.32
                0x00000000c001299c                ACPI::close(int, int, void*)
                0x00000000c0012a51                findRSDP()
                0x00000000c0012adb                loadACPITables(unsigned char*)
                0x00000000c0012d02                findRSDT(unsigned char*)
                0x00000000c0012e20                findDataTable(unsigned char*, char*)
                0x00000000c0012ebc                scanMADT()
                0x00000000c0013250                ACPI::ACPI()
                0x00000000c0013250                ACPI::ACPI()
                0x00000000c00132b0                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013392                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013498                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c001349e                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00134e6                ACPI::open(int, int, void*)
                0x00000000c00136ac                ACPI::sleep()
 .text          0x00000000c00136c4     0x132c hw/cpu.32
                0x00000000c00136c4                CPU::close(int, int, void*)
                0x00000000c00136c7                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c001385b                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013b09                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013b25                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013b3d                AMD_K6_writeback(int, int, int)
                0x00000000c0013bb0                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013c33                cpuidCheckEDX(unsigned int)
                0x00000000c0013c60                cpuidCheckECX(unsigned int)
                0x00000000c0013c8d                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013cba                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013ce7                getCPUNumber()
                0x00000000c0013cea                thisCPU()
                0x00000000c0013cfe                CPU::CPU()
                0x00000000c0013cfe                CPU::CPU()
                0x00000000c0013d8c                CPU::displayFeatures()
                0x00000000c0013d8e                CPU::detectFeatures()
                0x00000000c0014780                CPU::setupSMEP()
                0x00000000c001479a                CPU::setupUMIP()
                0x00000000c00147b2                CPU::setupTSC()
                0x00000000c00147ca                CPU::setupLargePages()
                0x00000000c00147e2                CPU::setupPAT()
                0x00000000c001481e                CPU::setupMTRR()
                0x00000000c0014820                CPU::setupGlobalPages()
                0x00000000c0014836                CPU::allowUsermodeDataAccess()
                0x00000000c0014848                CPU::prohibitUsermodeDataAccess()
                0x00000000c001485a                CPU::setupSMAP()
                0x00000000c0014880                CPU::setupFeatures()
                0x00000000c0014922                CPU::open(int, int, void*)
 .text          0x00000000c00149f0        0x0 hw/ports.32
 .text          0x00000000c00149f0      0x32c krnl/panic.32
                0x00000000c00149f0                Krnl::panic(char const*)
 .text          0x00000000c0014d1c      0x503 reg/registry.32
                0x00000000c0014d1c                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014e74                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0014fd3                Reg::getLine(char*, char*, char*)
                0x00000000c001500a                Reg::readInt(char*, char*, int*)
                0x00000000c00150f5                Reg::readString(char*, char*, char*, int)
                0x00000000c0015176                Reg::readBool(char*, char*, bool*)
                0x00000000c001519b                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00151c7                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00151f3                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001521f       0x18 sys/sc_exit.32
                0x00000000c001521f                Sys::exit(regs*)
 .text          0x00000000c0015237       0x95 sys/sc_loaddll.32
                0x00000000c0015237                Sys::loadDLL(regs*)
 .text          0x00000000c00152cc       0x68 sys/sc_read.32
                0x00000000c00152cc                Sys::read(regs*)
 .text          0x00000000c0015334       0x74 sys/sc_sbrk.32
                0x00000000c0015334                Sys::sbrk(regs*)
 .text          0x00000000c00153a8       0x83 sys/sc_write.32
                0x00000000c00153a8                Sys::write(regs*)
 .text          0x00000000c001542b       0x1a sys/sc_yield.32
                0x00000000c001542b                Sys::yield(regs*)
 .text          0x00000000c0015445      0xfdf sys/syscalls.32
                0x00000000c0015445                sysCallGetPID(regs*)
                0x00000000c0015451                sysCallSeekDir(regs*)
                0x00000000c0015456                sysCallTellDir(regs*)
                0x00000000c001545b                sysCallVerify(regs*)
                0x00000000c0015465                sysCallFork(regs*)
                0x00000000c0015470                sysCallExecve(regs*)
                0x00000000c001547b                sysFormatDisk(regs*)
                0x00000000c00154e5                sysSetDiskVolumeLabel(regs*)
                0x00000000c001552b                sysGetDiskVolumeLabel(regs*)
                0x00000000c001557c                sysShutdown(regs*)
                0x00000000c00155da                sysCallGetCwd(regs*)
                0x00000000c00155f9                sysCallSetCwd(regs*)
                0x00000000c0015615                sysCallRealpath(regs*)
                0x00000000c0015658                sysCallGetArgc(regs*)
                0x00000000c0015686                sysCallReadDir(regs*)
                0x00000000c0015714                sysCallIsATTY(regs*)
                0x00000000c001576e                sysCallSeek(regs*)
                0x00000000c00157d7                sysCallTell(regs*)
                0x00000000c0015854                sysCallSizeFromFilename(regs*)
                0x00000000c0015905                sysCallSize(regs*)
                0x00000000c0015988                sysCallClose(regs*)
                0x00000000c0015a10                sysCallOpenDir(regs*)
                0x00000000c0015a7d                sysCallMakeDir(regs*)
                0x00000000c0015ad6                sysCallCloseDir(regs*)
                0x00000000c0015b3c                sysCallWait(regs*)
                0x00000000c0015b56                sysCallRmdir(regs*)
                0x00000000c0015ba8                sysCallUnlink(regs*)
                0x00000000c0015bfa                sysCallGetArgv(regs*)
                0x00000000c0015c46                sysCallTTYName(regs*)
                0x00000000c0015cc9                sysCallGetEnv(regs*)
                0x00000000c0015d3d                sysCallUSleep(regs*)
                0x00000000c0015d64                sysCallSpawn(regs*)
                0x00000000c0015dbc                sysAppSettings(regs*)
                0x00000000c0015edb                sysSetFatAttrib(regs*)
                0x00000000c0015f3b                sysPanic(regs*)
                0x00000000c0015f61                sysPipe(regs*)
                0x00000000c0015fa6                sysGetUnixTime(regs*)
                0x00000000c0015fba                string_ends_with(char const*, char const*)
                0x00000000c0016002                sysCallOpen(regs*)
                0x00000000c001620f                setupSystemCalls()
                0x00000000c00163c8                systemCall(regs*, void*)
 .text          0x00000000c0016424     0x11ea thr/elf.32
                0x00000000c0016424                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00166a1                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00168b7                Thr::runtimeReferenceHelper()
                0x00000000c00168ca                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0016919                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016bda                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c0017378                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00173aa                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00173e1                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00173fb                Thr::loadDLL(char const*, bool)
                0x00000000c00175e4                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c001760e      0xfce thr/prcssthr.32
                0x00000000c001760e                changeTSS
                0x00000000c001763c                Process::addArgs(char**)
                0x00000000c0017696                Process::Process(char const*, Process*, char**)
                0x00000000c0017696                Process::Process(char const*, Process*, char**)
                0x00000000c001784e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001784e                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00179d1                disableIRQs()
                0x00000000c00179d9                getIRQNestingLevel()
                0x00000000c00179df                enableIRQs()
                0x00000000c00179ee                lockScheduler()
                0x00000000c00179f0                unlockScheduler()
                0x00000000c00179f2                userModeEntryPoint(void*)
                0x00000000c0017a15                lockStuff()
                0x00000000c0017a21                taskStartupFunction
                0x00000000c0017a2a                updateTimeUsed()
                0x00000000c0017a88                switchToThread(ThreadControlBlock*)
                0x00000000c0017ad8                Semaphore::Semaphore(int)
                0x00000000c0017ad8                Semaphore::Semaphore(int)
                0x00000000c0017b06                Mutex::Mutex()
                0x00000000c0017b06                Mutex::Mutex()
                0x00000000c0017b18                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017bfc                Process::createUserThread()
                0x00000000c0017c18                setupMultitasking(void (*)())
                0x00000000c0017d22                schedule()
                0x00000000c0017da7                unlockStuff()
                0x00000000c0017ddc                Semaphore::tryAcquire()
                0x00000000c0017e0a                Semaphore::assertLocked(char const*)
                0x00000000c0017e3a                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0017e7c                blockTask(TaskState)
                0x00000000c0017e9d                waitTask(int, int*, int)
                0x00000000c0017edf                nanoSleepUntil(unsigned long long)
                0x00000000c0017f36                nanoSleep(unsigned long long)
                0x00000000c0017f4b                sleep(unsigned long long)
                0x00000000c0017f68                Semaphore::acquire()
                0x00000000c0017fd0                taskReturned
                0x00000000c0017ffe                unblockTask(ThreadControlBlock*)
                0x00000000c00180ad                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c0018351                cleanerTaskFunction(void*)
                0x00000000c0018404                terminateTask(int)
                0x00000000c00184e4                Thr::terminateFromIRQ(int)
                0x00000000c00184f0                Semaphore::release()
 .text          0x00000000c00185dc      0x8bf vm86/vm8086.32
                0x00000000c00185dc                Vm::vm8086EntryPoint(void*)
                0x00000000c0018607                Vm::inbv(unsigned short)
                0x00000000c001860d                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018617                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018627                Vm::getSegment(unsigned int)
                0x00000000c001862f                Vm::getOffset(unsigned int)
                0x00000000c0018634                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018763                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00187ed                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c00187fe                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018810                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018821                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018836                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001884c                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018861                Vm::faultHandler(regs*)
 *fill*         0x00000000c0018e9b        0x1 
 .text          0x00000000c0018e9c     0x10ed fs/fat/vfslink.32
                0x00000000c0018e9c                FAT::getName()
                0x00000000c0018ea2                FAT::tell(void*, unsigned long long*)
                0x00000000c0018ed6                FAT::stat(void*, unsigned long long*)
                0x00000000c0018f0a                FAT::~FAT()
                0x00000000c0018f0a                FAT::~FAT()
                0x00000000c0018f2e                FAT::~FAT()
                0x00000000c0018f56                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ff4                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00190ae                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019292                FAT::tryMount(LogicalDisk*, int)
                0x00000000c0019498                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001959e                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00195f8                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019652                FAT::close(void*)
                0x00000000c001969e                FAT::closeDir(void*)
                0x00000000c00196ea                FAT::seek(void*, unsigned long long)
                0x00000000c001973e                fatWrapperReadDisk
                0x00000000c0019785                fatWrapperWriteDisk
                0x00000000c00197cc                fatWrapperIoctl
                0x00000000c00198d0                FAT::FAT()
                0x00000000c00198d0                FAT::FAT()
                0x00000000c0019922                FAT::fixFilepath(char*)
                0x00000000c001995a                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019a82                FAT::openDir(char const*, void**)
                0x00000000c0019b28                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019c12                FAT::unlink(char const*)
                0x00000000c0019c8c                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019de0                FAT::rename(char const*, char const*)
                0x00000000c0019ea4                FAT::mkdir(char const*)
                0x00000000c0019f1e                FAT::exists(char const*)
 *fill*         0x00000000c0019f89        0x1 
 .text          0x00000000c0019f8a      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019f8a                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019f90                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019fc0                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019fe4                ISO9660::getName()
                0x00000000c0019fea                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a00e                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a014                ISO9660::unlink(char const*)
                0x00000000c001a01a                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a020                ISO9660::rename(char const*, char const*)
                0x00000000c001a026                ISO9660::mkdir(char const*)
                0x00000000c001a02c                ISO9660::close(void*)
                0x00000000c001a04e                ISO9660::closeDir(void*)
                0x00000000c001a070                ISO9660::~ISO9660()
                0x00000000c001a070                ISO9660::~ISO9660()
                0x00000000c001a094                ISO9660::~ISO9660()
                0x00000000c001a0bb                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a0fd                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a164                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a1b4                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a3f8                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a685                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a6da                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a8ad                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a93c                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a9d6                ISO9660::exists(char const*)
                0x00000000c001a9fa                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aa8e                ISO9660::openDir(char const*, void**)
                0x00000000c001ab46                ISO9660::ISO9660()
                0x00000000c001ab46                ISO9660::ISO9660()
 *fill*         0x00000000c001ab69        0x1 
 .text          0x00000000c001ab6a      0x244 hal/sound/sndchannel.32
                0x00000000c001ab6a                SoundChannel::~SoundChannel()
                0x00000000c001ab6a                SoundChannel::~SoundChannel()
                0x00000000c001ab86                SoundChannel::setSpeed(float)
                0x00000000c001ab92                SoundChannel::getSpeed()
                0x00000000c001ab9a                SoundChannel::setVolume(int)
                0x00000000c001abb6                SoundChannel::getVolume()
                0x00000000c001abbe                SoundChannel::pause()
                0x00000000c001abc8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001abc8                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001acbe                SoundChannel::play()
                0x00000000c001acc8                SoundChannel::paused()
                0x00000000c001acd0                SoundChannel::getSampleRate()
                0x00000000c001acd8                SoundChannel::getBits()
                0x00000000c001ace0                SoundChannel::getBufferUsed()
                0x00000000c001ace8                SoundChannel::getBufferSize()
                0x00000000c001acf0                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001ad62                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001adae      0x317 hal/sound/sndhw.32
                0x00000000c001adae                SoundDevice::SoundDevice(char const*)
                0x00000000c001adae                SoundDevice::SoundDevice(char const*)
                0x00000000c001ae1a                SoundDevice::~SoundDevice()
                0x00000000c001ae1a                SoundDevice::~SoundDevice()
                0x00000000c001ae94                SoundDevice::~SoundDevice()
                0x00000000c001aebe                SoundDevice::getFreeChannelNum()
                0x00000000c001aed8                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001af48                SoundDevice::removeChannel(int)
                0x00000000c001af7a                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001afe6                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b0c5        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b0c5        0x1 
 .text          0x00000000c001b0c6      0x6e5 hw/bus/pci.32
                0x00000000c001b0c6                PCI::open(int, int, void*)
                0x00000000c001b0da                PCI::close(int, int, void*)
                0x00000000c001b0de                PCI::PCI()
                0x00000000c001b0de                PCI::PCI()
                0x00000000c001b15e                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1a6                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1c8                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b1ec                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b230                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b254                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b276                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b298                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b2bc                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b31c                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b388                PCI::checkBus(unsigned char)
                0x00000000c001b3ac                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b51c                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6ec                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b758                PCI::detect()
 *fill*         0x00000000c001b7ab        0x1 
 .text          0x00000000c001b7ac      0xc70 hw/diskctrl/ide.32
                0x00000000c001b7ac                IDE::close(int, int, void*)
                0x00000000c001b7b0                IDE::IDE()
                0x00000000c001b7b0                IDE::IDE()
                0x00000000c001b7e4                IDE::prepareInterrupt(unsigned char)
                0x00000000c001b7f6                selectDrive(unsigned char, unsigned char)
                0x00000000c001b7f8                IDE::getBase(unsigned char)
                0x00000000c001b80a                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001b8ca                IDE::read(unsigned char, unsigned char)
                0x00000000c001b978                IDE::waitInterrupt(unsigned char)
                0x00000000c001b9de                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001b9fa                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001ba16                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001ba5c                IDE::open(int, int, void*)
                0x00000000c001be6c                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001bf38                IDE::detect()
                0x00000000c001c220                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c3b6                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c41c      0x62b hw/diskphys/ata.32
                0x00000000c001c41c                ATA::close(int, int, void*)
                0x00000000c001c440                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c442                ATA::ATA()
                0x00000000c001c442                ATA::ATA()
                0x00000000c001c470                ATA::flush(bool)
                0x00000000c001c4ba                ATA::readyForCommand()
                0x00000000c001c50a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001c888                ATA::read(unsigned long long, int, void*)
                0x00000000c001c8f0                ATA::write(unsigned long long, int, void*)
                0x00000000c001c958                ATA::detectCHS()
                0x00000000c001c982                ATA::open(int, int, void*)
 *fill*         0x00000000c001ca47        0x1 
 .text          0x00000000c001ca48      0x5b3 hw/diskphys/atapi.32
                0x00000000c001ca48                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001ca4e                ATAPI::close(int, int, void*)
                0x00000000c001ca72                ATAPI::ATAPI()
                0x00000000c001ca72                ATAPI::ATAPI()
                0x00000000c001caa0                ATAPI::readyForCommand()
                0x00000000c001caf0                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cdb0                ATAPI::diskRemoved()
                0x00000000c001cdcc                ATAPI::eject()
                0x00000000c001ce12                ATAPI::diskInserted()
                0x00000000c001ce40                ATAPI::detectMedia()
                0x00000000c001cefc                ATAPI::open(int, int, void*)
                0x00000000c001cf7c                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001cffb        0x1 
 .text          0x00000000c001cffc       0x8e hw/fpu/avx.32
                0x00000000c001cffc                AVX::open(int, int, void*)
                0x00000000c001d00e                AVX::close(int, int, void*)
                0x00000000c001d020                AVX::available()
                0x00000000c001d032                AVX::save(void*)
                0x00000000c001d04a                AVX::load(void*)
                0x00000000c001d062                AVX::AVX()
                0x00000000c001d062                AVX::AVX()
 .text          0x00000000c001d08a       0x90 hw/fpu/mmx.32
                0x00000000c001d08a                MMX::available()
                0x00000000c001d09e                MMX::open(int, int, void*)
                0x00000000c001d0b0                MMX::close(int, int, void*)
                0x00000000c001d0c2                MMX::save(void*)
                0x00000000c001d0da                MMX::load(void*)
                0x00000000c001d0f2                MMX::MMX()
                0x00000000c001d0f2                MMX::MMX()
 .text          0x00000000c001d11a       0x96 hw/fpu/sse.32
                0x00000000c001d11a                SSE::open(int, int, void*)
                0x00000000c001d12c                SSE::close(int, int, void*)
                0x00000000c001d13e                SSE::available()
                0x00000000c001d158                SSE::save(void*)
                0x00000000c001d170                SSE::load(void*)
                0x00000000c001d188                SSE::SSE()
                0x00000000c001d188                SSE::SSE()
 .text          0x00000000c001d1b0       0x8e hw/fpu/x87.32
                0x00000000c001d1b0                x87::open(int, int, void*)
                0x00000000c001d1c2                x87::close(int, int, void*)
                0x00000000c001d1d4                x87::available()
                0x00000000c001d1e6                x87::save(void*)
                0x00000000c001d1fe                x87::load(void*)
                0x00000000c001d216                x87::x87()
                0x00000000c001d216                x87::x87()
 .text          0x00000000c001d23e      0x5f3 hw/intctrl/apic.32
                0x00000000c001d23e                APIC::disable()
                0x00000000c001d240                APIC::close(int, int, void*)
                0x00000000c001d262                IOAPIC::close(int, int, void*)
                0x00000000c001d268                APIC::io_wait()
                0x00000000c001d26e                APIC::getBase()
                0x00000000c001d2b0                APIC::eoi(unsigned char)
                0x00000000c001d2de                APIC::open(int, int, void*)
                0x00000000c001d398                IOAPIC::IOAPIC()
                0x00000000c001d398                IOAPIC::IOAPIC()
                0x00000000c001d3c0                APIC::APIC()
                0x00000000c001d3c0                APIC::APIC()
                0x00000000c001d490                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d4c2                IOAPIC::read(int)
                0x00000000c001d4ea                IOAPIC::open(int, int, void*)
                0x00000000c001d5e0                IOAPIC::write(int, int)
                0x00000000c001d60c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d6c6                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001d831        0x1 
 .text          0x00000000c001d832      0x3d3 hw/intctrl/pic.32
                0x00000000c001d832                PIC::disable()
                0x00000000c001d860                PIC::close(int, int, void*)
                0x00000000c001d882                PIC::PIC()
                0x00000000c001d882                PIC::PIC()
                0x00000000c001d958                PIC::ioWait()
                0x00000000c001d95e                PIC::getIRQReg(int)
                0x00000000c001d9c8                PIC::eoi(unsigned char)
                0x00000000c001da5a                PIC::remap()
                0x00000000c001dbc6                PIC::open(int, int, void*)
 *fill*         0x00000000c001dc05        0x1 
 .text          0x00000000c001dc06      0x252 hw/timer/apictimer.32
                0x00000000c001dc06                APICTimer::close(int, int, void*)
                0x00000000c001dc0c                apicTimerHandler(regs*, void*)
                0x00000000c001dc3a                APICTimer::write(int)
                0x00000000c001dd38                APICTimer::open(int, int, void*)
                0x00000000c001de30                APICTimer::APICTimer()
                0x00000000c001de30                APICTimer::APICTimer()
 .text          0x00000000c001de58      0x1a7 hw/timer/pit.32
                0x00000000c001de58                PIT::write(int)
                0x00000000c001ded6                pitHandler(regs*, void*)
                0x00000000c001df02                PIT::open(int, int, void*)
                0x00000000c001df50                PIT::close(int, int, void*)
                0x00000000c001df80                PIT::PIT()
                0x00000000c001df80                PIT::PIT()
 *fill*         0x00000000c001dfff        0x1 
 .text          0x00000000c001e000        0xa hw/fpu/x86/avx.32
                0x00000000c001e000                avxDetect
                0x00000000c001e006                avxSave
                0x00000000c001e007                avxLoad
                0x00000000c001e008                avxInit
                0x00000000c001e009                avxClose
 *fill*         0x00000000c001e00a        0x6 
 .text          0x00000000c001e010       0x38 hw/fpu/x86/sse.32
                0x00000000c001e010                sseDetect
                0x00000000c001e02b                sseSave
                0x00000000c001e031                sseLoad
                0x00000000c001e037                sseInit
                0x00000000c001e047                sseClose
 *fill*         0x00000000c001e048        0x8 
 .text          0x00000000c001e050       0x47 hw/fpu/x86/x87.32
                0x00000000c001e056                x87Detect
                0x00000000c001e071                x87Save
                0x00000000c001e077                x87Load
                0x00000000c001e07c                x87Init
                0x00000000c001e096                x87Close
 *fill*         0x00000000c001e097        0x1 
 .text          0x00000000c001e098       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e0bd        0x0 crtn.32
 *fill*         0x00000000c001e0bd        0x3 
 .text          0x00000000c001e0c0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e0c0                __divdi3
 *fill*         0x00000000c001e20b        0x1 
 .text          0x00000000c001e20c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e20c                __moddi3
 *fill*         0x00000000c001e38a        0x2 
 .text          0x00000000c001e38c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e38c                __udivdi3
 *fill*         0x00000000c001e48b        0x1 
 .text          0x00000000c001e48c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e48c                __umoddi3
 *fill*         0x00000000c001e5a6        0xa 
 .text          0x00000000c001e5b0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e5b0                fabs
 *fill*         0x00000000c001e5ce        0x2 
 .text          0x00000000c001e5d0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e5d0                lrint
 .text          0x00000000c001e5dc        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e5dc                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e5e8        0x0
 .iplt          0x00000000c001e5e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e5e8        0xf
 .init          0x00000000c001e5e8        0x3 crti.32
                0x00000000c001e5e8                _init
 .init          0x00000000c001e5eb        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e5f0        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e5f5        0x2 crtn.32

.fini           0x00000000c001e5f7        0xa
 .fini          0x00000000c001e5f7        0x3 crti.32
                0x00000000c001e5f7                _fini
 .fini          0x00000000c001e5fa        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e5ff        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e602       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e602       0x23 core/computer.32
                0x00000000c001e602                Computer::~Computer()
                0x00000000c001e602                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e626       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e626       0x2a core/computer.32
                0x00000000c001e626                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e650       0x15
 .text._Z10idleCommonv
                0x00000000c001e650       0x15 core/idle.32
                0x00000000c001e650                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e665       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e665       0x12 core/kheap.32
                0x00000000c001e665                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e677        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e677        0x9 core/kheap.32
                0x00000000c001e677                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e680        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e680        0x2 core/unixfile.32
                0x00000000c001e680                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e680                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e682       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e682       0x58 core/unixfile.32
                0x00000000c001e682                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e682                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e6da       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e6da       0xd3 core/unixfile.32
                0x00000000c001e6da                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e7ae        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e7ae        0x7 core/unixfile.32
                0x00000000c001e7ae                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e7b6       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e7b6       0xa1 core/unixfile.32
                0x00000000c001e7b6                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e858        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001e858        0x8 core/unixfile.32
                0x00000000c001e858                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e860       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001e860       0x1a hal/device.32
                0x00000000c001e860                DriverlessDevice::~DriverlessDevice()
                0x00000000c001e860                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e87a       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001e87a       0x2a hal/device.32
                0x00000000c001e87a                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e8a4       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001e8a4       0xdc hal/device.32
                0x00000000c001e8a4                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e980       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001e980       0x58 hal/device.32
                0x00000000c001e980                LinkedList<Device>::LinkedList()
                0x00000000c001e980                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e9d8       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e9d8       0x12 hal/fpu.32
                0x00000000c001e9d8                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001e9ea        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001e9ea        0x9 hal/fpu.32
                0x00000000c001e9ea                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001e9f3       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001e9f3       0x12 hal/intctrl.32
                0x00000000c001e9f3                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001ea05       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001ea05       0x12 hal/intctrl.32
                0x00000000c001ea05                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001ea17       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001ea17       0x12 hal/intctrl.32
                0x00000000c001ea17                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001ea29       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001ea29       0x12 hal/intctrl.32
                0x00000000c001ea29                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001ea3b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001ea3b       0x12 hal/intctrl.32
                0x00000000c001ea3b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001ea4d       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001ea4d       0x12 hal/intctrl.32
                0x00000000c001ea4d                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ea60        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ea60        0x7 hal/timer.32
                0x00000000c001ea60                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ea68       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ea68       0x1c hal/timer.32
                0x00000000c001ea68                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ea84       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ea84       0xae hal/timer.32
                0x00000000c001ea84                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eb32       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eb32       0xd3 hal/timer.32
                0x00000000c001eb32                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ec06       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ec06       0x23 hw/acpi.32
                0x00000000c001ec06                ACPI::~ACPI()
                0x00000000c001ec06                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ec2a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ec2a       0x2a hw/acpi.32
                0x00000000c001ec2a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001ec54       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ec54       0x23 hw/cpu.32
                0x00000000c001ec54                CPU::~CPU()
                0x00000000c001ec54                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001ec78       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001ec78       0x2a hw/cpu.32
                0x00000000c001ec78                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001eca2       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001eca2       0x12 hw/cpu.32
                0x00000000c001eca2                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001ecb4        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001ecb4        0x9 hw/cpu.32
                0x00000000c001ecb4                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001ecbd        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001ecbd        0x9 hw/cpu.32
                0x00000000c001ecbd                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001ecc6       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001ecc6       0x12 krnl/panic.32
                0x00000000c001ecc6                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ecd8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ecd8        0x2 thr/prcssthr.32
                0x00000000c001ecd8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ecd8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ecda       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ecda       0x3e thr/prcssthr.32
                0x00000000c001ecda                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ecda                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed18       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ed18       0x58 thr/prcssthr.32
                0x00000000c001ed18                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ed18                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ed70        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ed70        0x8 thr/prcssthr.32
                0x00000000c001ed70                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001ed78       0x23
 .text._ZN3PCID2Ev
                0x00000000c001ed78       0x23 hw/bus/pci.32
                0x00000000c001ed78                PCI::~PCI()
                0x00000000c001ed78                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001ed9c       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001ed9c       0x2a hw/bus/pci.32
                0x00000000c001ed9c                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001edc6       0x23
 .text._ZN3IDED2Ev
                0x00000000c001edc6       0x23 hw/diskctrl/ide.32
                0x00000000c001edc6                IDE::~IDE()
                0x00000000c001edc6                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001edea       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001edea       0x2a hw/diskctrl/ide.32
                0x00000000c001edea                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001ee14       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001ee14       0x23 hw/diskphys/ata.32
                0x00000000c001ee14                ATA::~ATA()
                0x00000000c001ee14                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001ee38       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001ee38       0x2a hw/diskphys/ata.32
                0x00000000c001ee38                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001ee62       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001ee62       0x23 hw/diskphys/atapi.32
                0x00000000c001ee62                ATAPI::~ATAPI()
                0x00000000c001ee62                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001ee86       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001ee86       0x2a hw/diskphys/atapi.32
                0x00000000c001ee86                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001eeb0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001eeb0       0x23 hw/fpu/avx.32
                0x00000000c001eeb0                AVX::~AVX()
                0x00000000c001eeb0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001eed4       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001eed4       0x2a hw/fpu/avx.32
                0x00000000c001eed4                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001eefe       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001eefe       0x23 hw/fpu/mmx.32
                0x00000000c001eefe                MMX::~MMX()
                0x00000000c001eefe                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ef22       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ef22       0x2a hw/fpu/mmx.32
                0x00000000c001ef22                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ef4c       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ef4c       0x23 hw/fpu/sse.32
                0x00000000c001ef4c                SSE::~SSE()
                0x00000000c001ef4c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001ef70       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001ef70       0x2a hw/fpu/sse.32
                0x00000000c001ef70                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001ef9a       0x23
 .text._ZN3x87D2Ev
                0x00000000c001ef9a       0x23 hw/fpu/x87.32
                0x00000000c001ef9a                x87::~x87()
                0x00000000c001ef9a                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001efbe       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001efbe       0x2a hw/fpu/x87.32
                0x00000000c001efbe                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001efe8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001efe8       0x23 hw/intctrl/apic.32
                0x00000000c001efe8                IOAPIC::~IOAPIC()
                0x00000000c001efe8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f00c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f00c       0x2a hw/intctrl/apic.32
                0x00000000c001f00c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f036       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f036       0x23 hw/intctrl/apic.32
                0x00000000c001f036                APIC::~APIC()
                0x00000000c001f036                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f05a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f05a       0x2a hw/intctrl/apic.32
                0x00000000c001f05a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f084       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f084       0x23 hw/intctrl/pic.32
                0x00000000c001f084                PIC::~PIC()
                0x00000000c001f084                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f0a8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f0a8       0x2a hw/intctrl/pic.32
                0x00000000c001f0a8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f0d2       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f0d2       0x23 hw/timer/apictimer.32
                0x00000000c001f0d2                APICTimer::~APICTimer()
                0x00000000c001f0d2                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f0f6       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f0f6       0x2a hw/timer/apictimer.32
                0x00000000c001f0f6                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f120       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f120       0x23 hw/timer/pit.32
                0x00000000c001f120                PIT::~PIT()
                0x00000000c001f120                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f144       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f144       0x2a hw/timer/pit.32
                0x00000000c001f144                PIT::~PIT()

.rodata         0x00000000c001f16e     0x3692
                0x00000000c001f16e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f16e        0x2 
 .ctors         0x00000000c001f170        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f174        0x4 core/unixfile.32
 .ctors         0x00000000c001f178        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f17c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f180                end_ctors = .
                0x00000000c001f180                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f180        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f184        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f184                __DTOR_END__
                0x00000000c001f188                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f188       0x18 
 .rodata        0x00000000c001f1a0      0x101 acpica/utclib.32
                0x00000000c001f1a0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f2a1        0x3 
 .rodata        0x00000000c001f2a4       0x18 core/malloc.32
 *fill*         0x00000000c001f2bc        0x4 
 .rodata        0x00000000c001f2c0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f3e0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f436        0xa 
 .rodata        0x00000000c001f440      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001f840       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001f8f6        0x2 
 .rodata.str1.4
                0x00000000c001f8f8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001fc9d        0x3 
 .rodata        0x00000000c001fca0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001fd00       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001fd20       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001fd34       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001fd76        0x2 
 .rodata.cst8   0x00000000c001fd78        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001fd80       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c001fdec       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001feb0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c001fefa        0x6 
 .rodata.cst8   0x00000000c001ff00        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c001ff08        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c001ff14       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c001ff5c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c001ff5c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c001ffcf        0x1 
 .rodata._ZTV8Computer
                0x00000000c001ffd0       0x2c core/computer.32
                0x00000000c001ffd0                vtable for Computer
 .rodata.str1.1
                0x00000000c001fffc       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020018       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020048        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020054       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c002006f       0x5f core/physmgr.32
 *fill*         0x00000000c00200ce        0x2 
 .rodata.str1.4
                0x00000000c00200d0       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002011d       0x39 core/pipe.32
 *fill*         0x00000000c0020156        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020158       0x1c core/pipe.32
                0x00000000c0020158                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020174       0x9d core/terminal.32
 *fill*         0x00000000c0020211        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020214       0x1c core/terminal.32
                0x00000000c0020214                vtable for VgaText
 .rodata        0x00000000c0020230       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002024e       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c00202d1       0x19 core/unixfile.32
 *fill*         0x00000000c00202ea        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00202ec       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002030e       0x15 core/unixfile.32
 *fill*         0x00000000c0020323        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020324       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c002036f        0x8 core/unixfile.32
 *fill*         0x00000000c0020377        0x1 
 .rodata.str1.4
                0x00000000c0020378       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0020398       0x1c core/unixfile.32
                0x00000000c0020398                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00203b4       0x1c core/unixfile.32
                0x00000000c00203b4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00203d0      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020557      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c002065a       0x33 coreobjs/c++.32
 *fill*         0x00000000c002068d        0x3 
 .rodata.str1.4
                0x00000000c0020690       0x3f dbg/kconsole.32
 *fill*         0x00000000c00206cf        0x1 
 .rodata        0x00000000c00206d0      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020820       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020820       0x64 fs/vfs.32
                0x00000000c0020820                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020884       0x1c fs/vfs.32
                0x00000000c0020884                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00208a0       0x1c fs/vfs.32
                0x00000000c00208a0                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00208bc       0x2c hal/bus.32
                0x00000000c00208bc                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c00208e8       0x30 hal/buzzer.32
                0x00000000c00208e8                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020918       0x3c hal/clock.32
                0x00000000c0020918                vtable for Clock
 *fill*         0x00000000c0020954        0xc 
 .rodata        0x00000000c0020960       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020990       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00209ae       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00209ae       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00209ae       0x19 hal/device.32
 *fill*         0x00000000c00209ae        0x2 
 .rodata._ZTV6Device
                0x00000000c00209b0       0x2c hal/device.32
                0x00000000c00209b0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00209dc       0x2c hal/device.32
                0x00000000c00209dc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020a08       0x2c hal/diskctrl.32
                0x00000000c0020a08                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020a34       0x34 hal/diskphys.32
                0x00000000c0020a34                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020a68        0x9 hal/fpu.32
 *fill*         0x00000000c0020a71        0x3 
 .rodata._ZTV3FPU
                0x00000000c0020a74       0x38 hal/fpu.32
                0x00000000c0020a74                vtable for FPU
 .rodata.str1.4
                0x00000000c0020aac      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020bdc      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c0020d6f        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c0020d70       0x48 hal/intctrl.32
                0x00000000c0020d70                vtable for InterruptController
 .rodata        0x00000000c0020db8       0x4e hal/keybrd.32
 *fill*         0x00000000c0020e06        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0020e08       0x34 hal/keybrd.32
                0x00000000c0020e08                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0020e3c       0x7a hal/logidisk.32
 *fill*         0x00000000c0020eb6        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0020eb8       0x2c hal/logidisk.32
                0x00000000c0020eb8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0020ee4       0x2c hal/mouse.32
                0x00000000c0020ee4                vtable for Mouse
 .rodata.str1.1
                0x00000000c0020f10        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0020f1b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0020f1b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0020f1b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0020f1b       0x15 hal/timer.32
 *fill*         0x00000000c0020f1b        0x1 
 .rodata._ZTV5Timer
                0x00000000c0020f1c       0x30 hal/timer.32
                0x00000000c0020f1c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0020f4c       0x10 hal/vcache.32
                0x00000000c0020f4c                vtable for VCache
 .rodata.str1.1
                0x00000000c0020f5c        0xf hal/video.32
 *fill*         0x00000000c0020f6b        0x1 
 .rodata._ZTV5Video
                0x00000000c0020f6c       0x40 hal/video.32
                0x00000000c0020f6c                vtable for Video
 .rodata.str1.1
                0x00000000c0020fac       0xd1 hw/acpi.32
 *fill*         0x00000000c002107d        0x3 
 .rodata.str1.4
                0x00000000c0021080       0xe5 hw/acpi.32
 *fill*         0x00000000c0021165        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021168       0x2c hw/acpi.32
                0x00000000c0021168                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021194      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00213b8       0x2c hw/cpu.32
                0x00000000c00213b8                vtable for CPU
 .rodata.str1.1
                0x00000000c00213e4       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021499        0x3 
 .rodata.str1.4
                0x00000000c002149c      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00215ae       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00215f3       0x1c sys/sc_sbrk.32
 .rodata.str1.1
                0x00000000c002160f       0x3e sys/sc_write.32
 .rodata.str1.1
                0x00000000c002164d       0xfe sys/syscalls.32
                                        0x106 (size before relaxing)
 *fill*         0x00000000c002174b        0x1 
 .rodata.str1.4
                0x00000000c002174c       0xf0 sys/syscalls.32
 .rodata.str1.1
                0x00000000c002183c      0x25b thr/elf.32
                                        0x25d (size before relaxing)
 .rodata.str1.1
                0x00000000c0021a97       0xfb thr/prcssthr.32
 *fill*         0x00000000c0021b92        0x2 
 .rodata.str1.4
                0x00000000c0021b94      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0021e3b       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021e3b       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021e3b       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021e3b       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021e3b        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021e3b       0x5f vm86/vm8086.32
 *fill*         0x00000000c0021e9a        0x2 
 .rodata        0x00000000c0021e9c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021ecc       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0021f1f        0x1 
 .rodata.str1.4
                0x00000000c0021f20       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0021f48       0x64 fs/fat/vfslink.32
                0x00000000c0021f48                vtable for FAT
 .rodata.str1.1
                0x00000000c0021fac       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0021ff5        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0021ff8       0x64 fs/iso9660/vfslink.32
                0x00000000c0021ff8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c002205c       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c0022076        0x2 
 .rodata.cst4   0x00000000c0022078        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c002207c       0x38 hal/sound/sndhw.32
                0x00000000c002207c                vtable for SoundDevice
 .rodata.cst4   0x00000000c00220b4       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00220c4       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022168       0x2c hw/bus/pci.32
                0x00000000c0022168                vtable for PCI
 .rodata.str1.1
                0x00000000c0022194      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00223ca        0x2 
 .rodata._ZTV3IDE
                0x00000000c00223cc       0x2c hw/diskctrl/ide.32
                0x00000000c00223cc                vtable for IDE
 .rodata.str1.1
                0x00000000c00223f8       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0022419        0x3 
 .rodata._ZTV3ATA
                0x00000000c002241c       0x34 hw/diskphys/ata.32
                0x00000000c002241c                vtable for ATA
 .rodata.str1.1
                0x00000000c0022450       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c0022488       0x34 hw/diskphys/atapi.32
                0x00000000c0022488                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00224bc        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00224c4       0x38 hw/fpu/avx.32
                0x00000000c00224c4                vtable for AVX
 .rodata.str1.1
                0x00000000c00224fc        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022504       0x38 hw/fpu/mmx.32
                0x00000000c0022504                vtable for MMX
 .rodata.str1.1
                0x00000000c002253c        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022544       0x38 hw/fpu/sse.32
                0x00000000c0022544                vtable for SSE
 .rodata.str1.1
                0x00000000c002257c        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0022584       0x38 hw/fpu/x87.32
                0x00000000c0022584                vtable for x87
 .rodata        0x00000000c00225bc       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0022694       0x48 hw/intctrl/apic.32
                0x00000000c0022694                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00226dc       0x2c hw/intctrl/apic.32
                0x00000000c00226dc                vtable for IOAPIC
 .rodata        0x00000000c0022708       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002272a        0x2 
 .rodata._ZTV3PIC
                0x00000000c002272c       0x48 hw/intctrl/pic.32
                0x00000000c002272c                vtable for PIC
 .rodata.str1.1
                0x00000000c0022774        0xb hw/timer/apictimer.32
 *fill*         0x00000000c002277f        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022780       0x30 hw/timer/apictimer.32
                0x00000000c0022780                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00227b0       0x1d hw/timer/pit.32
 *fill*         0x00000000c00227cd        0x3 
 .rodata._ZTV3PIT
                0x00000000c00227d0       0x30 hw/timer/pit.32
                0x00000000c00227d0                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022800      0x609
 *(.data)
 .data          0x00000000c0022800        0x0 crti.32
 .data          0x00000000c0022800        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022800                __dso_handle
 .data          0x00000000c0022804        0x0 acpica/utclib.32
 .data          0x00000000c0022804        0x0 core/malloc.32
 .data          0x00000000c0022804        0x0 libk/string.32
 .data          0x00000000c0022804        0x0 fs/fat/diskio.32
 .data          0x00000000c0022804        0x0 fs/fat/ff.32
 .data          0x00000000c0022804        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022804        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022804        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022804        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022804        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022804        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022804        0x0 core/computer.32
 .data          0x00000000c0022804        0x0 core/gdt.32
 .data          0x00000000c0022804        0x0 core/idle.32
 .data          0x00000000c0022804        0x0 core/idt.32
 .data          0x00000000c0022804        0x4 core/kheap.32
 .data          0x00000000c0022808        0x0 core/main.32
 .data          0x00000000c0022808        0x4 core/physmgr.32
                0x00000000c0022808                Phys::bitmap
 .data          0x00000000c002280c        0x0 core/pipe.32
 *fill*         0x00000000c002280c       0x14 
 .data          0x00000000c0022820       0x60 core/terminal.32
                0x00000000c0022820                VgaText::hiddenOut
                0x00000000c0022840                ansiToVGAMappings
 .data          0x00000000c0022880        0x0 core/tss.32
 .data          0x00000000c0022880        0x4 core/unixfile.32
                0x00000000c0022880                UnixFile::nextFd
 .data          0x00000000c0022884        0x8 core/virtmgr.32
                0x00000000c0022884                Virt::pageAllocPtr
                0x00000000c0022888                Virt::bitmap
 .data          0x00000000c002288c        0x4 coreobjs/c++.32
                0x00000000c002288c                __stack_chk_guard
 .data          0x00000000c0022890        0x0 dbg/kconsole.32
 .data          0x00000000c0022890        0x0 fs/vfs.32
 .data          0x00000000c0022890        0x0 hal/bus.32
 .data          0x00000000c0022890        0x0 hal/buzzer.32
 .data          0x00000000c0022890        0x0 hal/clock.32
 .data          0x00000000c0022890        0x0 hal/device.32
 .data          0x00000000c0022890        0x0 hal/diskctrl.32
 .data          0x00000000c0022890        0x0 hal/diskphys.32
 .data          0x00000000c0022890        0x0 hal/fpu.32
 *fill*         0x00000000c0022890       0x10 
 .data          0x00000000c00228a0      0x2a0 hal/intctrl.32
                0x00000000c00228a0                exceptionNames
 .data          0x00000000c0022b40        0x0 hal/keybrd.32
 .data          0x00000000c0022b40        0x0 hal/logidisk.32
 .data          0x00000000c0022b40        0x0 hal/mouse.32
 .data          0x00000000c0022b40        0x0 hal/partition.32
 .data          0x00000000c0022b40        0x0 hal/timer.32
 .data          0x00000000c0022b40        0x0 hal/vcache.32
 .data          0x00000000c0022b40        0x0 hal/video.32
 .data          0x00000000c0022b40       0x10 hw/acpi.32
                0x00000000c0022b40                legacyIRQRemaps
 *fill*         0x00000000c0022b50       0x10 
 .data          0x00000000c0022b60      0x2a4 hw/cpu.32
                0x00000000c0022b60                cpuNameList
                0x00000000c0022e00                lastCode
 .data          0x00000000c0022e04        0x0 hw/ports.32
 .data          0x00000000c0022e04        0x0 krnl/panic.32
 .data          0x00000000c0022e04        0x0 reg/registry.32
 .data          0x00000000c0022e04        0x0 sys/sc_exit.32
 .data          0x00000000c0022e04        0x0 sys/sc_loaddll.32
 .data          0x00000000c0022e04        0x0 sys/sc_read.32
 .data          0x00000000c0022e04        0x0 sys/sc_sbrk.32
 .data          0x00000000c0022e04        0x0 sys/sc_write.32
 .data          0x00000000c0022e04        0x0 sys/sc_yield.32
 .data          0x00000000c0022e04        0x0 sys/syscalls.32
 .data          0x00000000c0022e04        0x0 thr/elf.32
 .data          0x00000000c0022e04        0x4 thr/prcssthr.32
                0x00000000c0022e04                nextPID
 .data          0x00000000c0022e08        0x0 vm86/vm8086.32
 .data          0x00000000c0022e08        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022e08        0x1 fs/iso9660/vfslink.32
                0x00000000c0022e08                recentDriveletter
 .data          0x00000000c0022e09        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022e09        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022e09        0x0 hw/bus/isa.32
 .data          0x00000000c0022e09        0x0 hw/bus/pci.32
 .data          0x00000000c0022e09        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022e09        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022e09        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022e09        0x0 hw/fpu/avx.32
 .data          0x00000000c0022e09        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022e09        0x0 hw/fpu/sse.32
 .data          0x00000000c0022e09        0x0 hw/fpu/x87.32
 .data          0x00000000c0022e09        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022e09        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022e09        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022e09        0x0 hw/timer/pit.32
 .data          0x00000000c0022e09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022e09        0x0 crtn.32
 .data          0x00000000c0022e09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022e09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022e09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022e09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022e09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022e09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022e09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022e0c        0x0
 .got           0x00000000c0022e0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022e0c        0x0
 .got.plt       0x00000000c0022e0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022e0c        0x0
 .igot.plt      0x00000000c0022e0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022e0c        0x0
 .tm_clone_table
                0x00000000c0022e0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022e0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022e09      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022e09        0x3 
 .eh_frame      0x00000000c0022e0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022e0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022e0c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022e64       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022ea4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0022f10       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0022f94       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c0022fac        0x0
 .rel.got       0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c0022fac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c0022fac     0x223c
                0x00000000c0022fac                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c0022fac        0x0 crti.32
 .bss           0x00000000c0022fac       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c0022fcc        0x4 acpica/utclib.32
 *fill*         0x00000000c0022fd0       0x10 
 .bss           0x00000000c0022fe0      0x378 core/malloc.32
 .bss           0x00000000c0023358        0x0 libk/string.32
 .bss           0x00000000c0023358        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023358        0x8 
 .bss           0x00000000c0023360       0x88 fs/fat/ff.32
 .bss           0x00000000c00233e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00233e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00233e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c00233e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c00233e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c00233e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c00233e8        0x6 core/computer.32
                0x00000000c00233e8                computer
                0x00000000c00233ec                preemptionOn
                0x00000000c00233ed                schedulingOn
 *fill*         0x00000000c00233ee        0x2 
 .bss           0x00000000c00233f0        0x6 core/gdt.32
                0x00000000c00233f0                gdtDescr
 .bss           0x00000000c00233f6        0x0 core/idle.32
 *fill*         0x00000000c00233f6        0x2 
 .bss           0x00000000c00233f8        0x6 core/idt.32
                0x00000000c00233f8                idtDescr
 .bss           0x00000000c00233fe        0x0 core/kheap.32
 *fill*         0x00000000c00233fe        0x2 
 .bss           0x00000000c0023400        0x4 core/main.32
                0x00000000c0023400                sysBootSettings
 *fill*         0x00000000c0023404       0x1c 
 .bss           0x00000000c0023420       0x50 core/physmgr.32
                0x00000000c0023420                Phys::currentPagePointer
                0x00000000c0023424                Phys::highestMem
                0x00000000c0023428                Phys::oldPercent
                0x00000000c002342c                Phys::usedPages
                0x00000000c0023430                Phys::usablePages
                0x00000000c0023440                Phys::dmaUsage
 .bss           0x00000000c0023470        0x0 core/pipe.32
 *fill*         0x00000000c0023470       0x10 
 .bss           0x00000000c0023480       0x29 core/terminal.32
                0x00000000c0023480                textModeImplementation
                0x00000000c00234a0                terminalCycle
                0x00000000c00234a4                activeTerminal
                0x00000000c00234a8                VgaText::graphicMode
 *fill*         0x00000000c00234a9        0x1 
 .bss           0x00000000c00234aa        0x2 core/tss.32
                0x00000000c00234aa                doubleFaultSelector
 *fill*         0x00000000c00234ac       0x14 
 .bss           0x00000000c00234c0       0x84 core/unixfile.32
                0x00000000c00234c0                sfileLpt
                0x00000000c0023500                sfileCom
                0x00000000c0023524                sfileNul
                0x00000000c0023528                sfilePnt
                0x00000000c002352c                sfileAux
                0x00000000c0023530                sfileCon
                0x00000000c0023534                initialFilesAdded
                0x00000000c0023538                unixFileLinkedList
 .bss           0x00000000c0023544        0x4 core/virtmgr.32
                0x00000000c0023544                firstVAS
 .bss           0x00000000c0023548        0x0 coreobjs/c++.32
 .bss           0x00000000c0023548        0x0 dbg/kconsole.32
 .bss           0x00000000c0023548        0x4 fs/vfs.32
                0x00000000c0023548                installedFilesystems
 .bss           0x00000000c002354c        0x0 hal/bus.32
 .bss           0x00000000c002354c        0x4 hal/buzzer.32
                0x00000000c002354c                systemBuzzer
 .bss           0x00000000c0023550        0x8 hal/clock.32
                0x00000000c0023550                dstOn
                0x00000000c0023551                timezoneHalfHourOffset
                0x00000000c0023554                timezoneHourOffset
 .bss           0x00000000c0023558        0x0 hal/device.32
 .bss           0x00000000c0023558        0x0 hal/diskctrl.32
 .bss           0x00000000c0023558        0x0 hal/diskphys.32
 .bss           0x00000000c0023558        0x0 hal/fpu.32
 .bss           0x00000000c0023558       0x20 hal/intctrl.32
                0x00000000c0023558                pf5
                0x00000000c002355c                pf4
                0x00000000c0023560                pf3
                0x00000000c0023564                pf2
                0x00000000c0023568                pf1
                0x00000000c002356c                pf0
                0x00000000c0023570                gpFaultIntercept
                0x00000000c0023574                x87FaultIntercept
 *fill*         0x00000000c0023578        0x8 
 .bss           0x00000000c0023580      0x429 hal/keybrd.32
                0x00000000c0023580                keyboardWaitingTaskList
                0x00000000c0023584                keyboardSetupYet
                0x00000000c00235a0                keystates
 *fill*         0x00000000c00239a9       0x17 
 .bss           0x00000000c00239c0       0x88 hal/logidisk.32
                0x00000000c00239c0                diskAssignments
                0x00000000c00239e0                disks
 .bss           0x00000000c0023a48        0x4 hal/mouse.32
                0x00000000c0023a48                guiMouseHandler
 .bss           0x00000000c0023a4c        0x0 hal/partition.32
 *fill*         0x00000000c0023a4c        0x4 
 .bss           0x00000000c0023a50        0x8 hal/timer.32
                0x00000000c0023a50                nanoSinceBoot
 .bss           0x00000000c0023a58        0x0 hal/vcache.32
 .bss           0x00000000c0023a58        0x4 hal/video.32
                0x00000000c0023a58                screen
 *fill*         0x00000000c0023a5c        0x4 
 .bss           0x00000000c0023a60      0x3c0 hw/acpi.32
                0x00000000c0023a60                systemSleepFunction
                0x00000000c0023a64                systemResetFunction
                0x00000000c0023a68                systemShutdownFunction
                0x00000000c0023a6c                nextACPITable
                0x00000000c0023a80                acpiTables
                0x00000000c0023c80                usingXSDT
                0x00000000c0023c84                MADTpointer
                0x00000000c0023c88                RSDTpointer
                0x00000000c0023c8c                RSDPpointer
                0x00000000c0023c90                ioapicDiscoveryNumber
                0x00000000c0023ca0                ioapicFoundInMADT
                0x00000000c0023cc0                ioapicAddresses
                0x00000000c0023d40                ioapicGSIBase
                0x00000000c0023dc0                processorDiscoveryNumber
                0x00000000c0023de0                matchingAPICID
                0x00000000c0023e00                processorID
 .bss           0x00000000c0023e20       0x10 hw/cpu.32
                0x00000000c0023e20                lastD
                0x00000000c0023e24                lastC
                0x00000000c0023e28                lastB
                0x00000000c0023e2c                lastA
 .bss           0x00000000c0023e30        0x0 hw/ports.32
 .bss           0x00000000c0023e30        0x1 krnl/panic.32
                0x00000000c0023e30                Krnl::kernelInPanic
 .bss           0x00000000c0023e31        0x0 reg/registry.32
 .bss           0x00000000c0023e31        0x0 sys/sc_exit.32
 .bss           0x00000000c0023e31        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023e31        0x0 sys/sc_read.32
 .bss           0x00000000c0023e31        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023e31        0x0 sys/sc_write.32
 .bss           0x00000000c0023e31        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023e31        0xf 
 .bss           0x00000000c0023e40      0x200 sys/syscalls.32
                0x00000000c0023e40                systemCallHandlers
 .bss           0x00000000c0024040      0x7a4 thr/elf.32
                0x00000000c0024040                Thr::driverLookupNext
                0x00000000c0024060                Thr::driverLookupLen
                0x00000000c0024260                Thr::driverLookupAddr
                0x00000000c0024460                Thr::driverNameLookup
                0x00000000c0024660                Thr::kernelSymbols
                0x00000000c00246e0                Thr::kernelStringTable
                0x00000000c0024760                Thr::kernelSymbolTable
                0x00000000c00247e0                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c00247e4        0x4 
 .bss           0x00000000c00247e8       0x68 thr/prcssthr.32
                0x00000000c00247e8                cleanerThread
                0x00000000c00247ec                weNeedTheCleanerToNotBlock
                0x00000000c00247f0                xxxx
                0x00000000c00247f4                retValLockStuff
                0x00000000c00247f8                retValSchedLock
                0x00000000c00247fc                lockStuffLock
                0x00000000c0024800                schedulerLock
                0x00000000c0024804                taskSwitchesPostponedFlag
                0x00000000c0024808                postponeTaskSwitchesCounter
                0x00000000c002480c                irqDisableCounter
                0x00000000c0024810                terminatedTaskList
                0x00000000c002481c                sleepingTaskList
                0x00000000c0024828                taskList
                0x00000000c0024834                kernelProcess
 .bss           0x00000000c0024850        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024850       0x10 
 .bss           0x00000000c0024860       0xf0 fs/fat/vfslink.32
                0x00000000c0024860                FAT::fats
                0x00000000c0024880                FAT::vfsToFatRemaps
                0x00000000c0024900                fatToVFSRemaps
 *fill*         0x00000000c0024950       0x10 
 .bss           0x00000000c0024960      0x820 fs/iso9660/vfslink.32
                0x00000000c0024960                recentSector
                0x00000000c0024980                recentBuffer
 .bss           0x00000000c0025180        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0025180        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0025180        0x0 hw/bus/isa.32
 .bss           0x00000000c0025180        0x0 hw/bus/pci.32
 .bss           0x00000000c0025180        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025180        0x8 hw/diskphys/ata.32
                0x00000000c0025180                ataSectorsWritten
                0x00000000c0025184                ataSectorsRead
 .bss           0x00000000c0025188        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025188        0x0 hw/fpu/avx.32
 .bss           0x00000000c0025188        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0025188        0x0 hw/fpu/sse.32
 .bss           0x00000000c0025188        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0025188       0x18 
 .bss           0x00000000c00251a0       0x41 hw/intctrl/apic.32
                0x00000000c00251a0                noOfIOAPICs
                0x00000000c00251c0                ioapics
                0x00000000c00251e0                IOAPICsSetupYet
 .bss           0x00000000c00251e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c00251e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c00251e1        0x3 
 .bss           0x00000000c00251e4        0x4 hw/timer/pit.32
                0x00000000c00251e4                pitFreq
 .bss           0x00000000c00251e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c00251e8        0x0 crtn.32
 .bss           0x00000000c00251e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c00251e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c00251e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c00251e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c00251e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c00251e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c00251e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c00251e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027424                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
