Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e818
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x695 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b336                Computer::disableNMI()
                0x00000000c000b344                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b362                Computer::handleNMI()
                0x00000000c000b3c8                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3f3        0x1 
 .text          0x00000000c000b3f4      0x1b7 core/gdt.32
                0x00000000c000b3f4                GDTEntry::setBase(unsigned int)
                0x00000000c000b410                GDTEntry::setLimit(unsigned int)
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b444                GDT::addEntry(GDTEntry)
                0x00000000c000b480                GDT::getNumberOfEntries()
                0x00000000c000b488                GDT::flush()
                0x00000000c000b4aa                GDT::setup()
 .text          0x00000000c000b5ab       0x61 core/idle.32
                0x00000000c000b5ab                idleFunction(void*)
 .text          0x00000000c000b60c      0x45f core/idt.32
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b67a                IDTEntry::setOffset(unsigned int)
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b690                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b698                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6b2                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6ea                IDT::flush()
                0x00000000c000b704                IDT::setup()
 .text          0x00000000c000ba6b      0x20d core/kheap.32
                0x00000000c000ba6b                sbrk
                0x00000000c000bb83                mmap
                0x00000000c000bb99                munmap
                0x00000000c000bbaf                liballoc_lock()
                0x00000000c000bbc0                liballoc_unlock()
                0x00000000c000bbd1                liballoc_alloc(int)
                0x00000000c000bbec                liballoc_free(void*, int)
                0x00000000c000bc0a                realloc
                0x00000000c000bc1e                malloc
                0x00000000c000bc2e                free
                0x00000000c000bc3e                rfree
                0x00000000c000bc4e                calloc
 .text          0x00000000c000bc78      0x38d core/main.32
                0x00000000c000bc78                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcbd                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcff                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd53                hwTextMode_update(VgaText*)
                0x00000000c000bd54                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd9c                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd8                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be5e                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000bebc                setupTextMode()
                0x00000000c000bf0d                kernel_main
 .text          0x00000000c000c005      0x46c core/physmgr.32
                0x00000000c000c005                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0f0                Phys::setPageState(unsigned long, bool)
                0x00000000c000c122                Phys::getPageState(unsigned long)
                0x00000000c000c13e                Phys::freePage(unsigned long)
                0x00000000c000c1c8                Phys::allocatePage()
                0x00000000c000c284                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2bc                Phys::physicalMemorySetup(unsigned int)
 *fill*         0x00000000c000c471        0x1 
 .text          0x00000000c000c472      0x273 core/pipe.32
                0x00000000c000c472                Pipe::isAtty()
                0x00000000c000c476                Pipe::~Pipe()
                0x00000000c000c476                Pipe::~Pipe()
                0x00000000c000c49a                Pipe::~Pipe()
                0x00000000c000c4c2                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c5b6                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c67e                Pipe::Pipe(int)
                0x00000000c000c67e                Pipe::Pipe(int)
 *fill*         0x00000000c000c6e5        0x1 
 .text          0x00000000c000c6e6      0xf65 core/terminal.32
                0x00000000c000c6e6                VgaText::isAtty()
                0x00000000c000c6ea                VgaText::~VgaText()
                0x00000000c000c6ea                VgaText::~VgaText()
                0x00000000c000c70e                VgaText::~VgaText()
                0x00000000c000c738                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c758                setTerminalScrollLock(bool)
                0x00000000c000c759                addToTerminalCycle(VgaText*)
                0x00000000c000c786                installVgaTextImplementation()
                0x00000000c000c79b                scrollTerminalScrollLock(int)
                0x00000000c000c79c                VgaText::load()
                0x00000000c000c7f0                VgaText::updateCursor()
                0x00000000c000c80a                VgaText::showCursor(bool)
                0x00000000c000c81a                VgaText::disableBlink(bool)
                0x00000000c000c854                VgaText::doANSI_SGR(int)
                0x00000000c000c8e0                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c8f6                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c90c                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c92c                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c93e                VgaText::scrollScreen()
                0x00000000c000c9d2                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000c9e4                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ca44                VgaText::getCursorX()
                0x00000000c000ca50                VgaText::getCursorY()
                0x00000000c000ca5c                VgaText::setCursor(int, int)
                0x00000000c000ca7a                VgaText::setCursorX(int)
                0x00000000c000ca96                VgaText::setCursorY(int)
                0x00000000c000cab2                VgaText::incrementCursor(bool)
                0x00000000c000cb1a                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cb74                VgaText::updateDiskUsage()
                0x00000000c000ccda                VgaText::updateTitle()
                0x00000000c000cd20                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cd30                VgaText::setTitleColour(VgaColour)
                0x00000000c000cd40                VgaText::setTitle(char*)
                0x00000000c000cd66                VgaText::decrementCursor(bool)
                0x00000000c000cd8e                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000ce8a                VgaText::isShowingCursor()
                0x00000000c000ce96                VgaText::isBlinkDisabled()
                0x00000000c000cea4                VgaText::setCursorHeight(int)
                0x00000000c000cec2                VgaText::getCursorHeight()
                0x00000000c000cecd                setActiveTerminal(VgaText*)
                0x00000000c000cf7f                doTerminalCycle()
                0x00000000c000cf9c                VgaText::doUpdate()
                0x00000000c000cfae                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d16e                VgaText::clearScreen()
                0x00000000c000d1d2                VgaText::putchar(char)
                0x00000000c000d2ec                VgaText::puts(char const*)
                0x00000000c000d312                VgaText::putx(unsigned int)
                0x00000000c000d358                VgaText::VgaText(char const*)
                0x00000000c000d358                VgaText::VgaText(char const*)
                0x00000000c000d4ea                VgaText::receiveKey(unsigned char)
                0x00000000c000d5d2                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d626                newTerminal(char*)
 *fill*         0x00000000c000d64b        0x1 
 .text          0x00000000c000d64c      0x18f core/tss.32
                0x00000000c000d64c                TSS::TSS()
                0x00000000c000d64c                TSS::TSS()
                0x00000000c000d65a                TSS::setESP(unsigned long)
                0x00000000c000d66c                TSS::flush()
                0x00000000c000d68c                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d7db        0x1 
 .text          0x00000000c000d7dc      0x429 core/unixfile.32
                0x00000000c000d7dc                ReservedFilename::isAtty()
                0x00000000c000d7f8                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d88e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d928                UnixFile::getFileDescriptor()
                0x00000000c000d930                UnixFile::UnixFile(int)
                0x00000000c000d930                UnixFile::UnixFile(int)
                0x00000000c000da58                ReservedFilename::ReservedFilename(int)
                0x00000000c000da58                ReservedFilename::ReservedFilename(int)
                0x00000000c000da80                UnixFile::~UnixFile()
                0x00000000c000da80                UnixFile::~UnixFile()
                0x00000000c000db06                UnixFile::~UnixFile()
                0x00000000c000db2e                ReservedFilename::~ReservedFilename()
                0x00000000c000db2e                ReservedFilename::~ReservedFilename()
                0x00000000c000db52                ReservedFilename::~ReservedFilename()
                0x00000000c000db79                getFromFileDescriptor(int)
 *fill*         0x00000000c000dc05        0x1 
 .text          0x00000000c000dc06     0x1175 core/virtmgr.32
                0x00000000c000dc06                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000dc3b                Virt::getPageState(unsigned long)
                0x00000000c000dc5f                Virt::allocateKernelVirtualPages(int)
                0x00000000c000dd70                Virt::virtualMemorySetup()
                0x00000000c000ddef                Virt::getAKernelVAS()
                0x00000000c000ddf5                Virt::setupPageSwapping(int)
                0x00000000c000df1a                VAS::VAS()
                0x00000000c000df1a                VAS::VAS()
                0x00000000c000df4a                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000df76                VAS::getPageTableEntry(unsigned long)
                0x00000000c000df95                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e0b8                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e0dc                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e0f4                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e12a                VAS::~VAS()
                0x00000000c000e12a                VAS::~VAS()
                0x00000000c000e296                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e396                VAS::allocatePages(int, int)
                0x00000000c000e566                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e582                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e64c                VAS::VAS(VAS*)
                0x00000000c000e64c                VAS::VAS(VAS*)
                0x00000000c000e996                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ea84                VAS::VAS(bool)
                0x00000000c000ea84                VAS::VAS(bool)
                0x00000000c000ecb4                mapVASFirstTime
 .text          0x00000000c000ed7b       0x93 coreobjs/c++.32
                0x00000000c000ed7b                __cxa_atexit
                0x00000000c000ed7e                __cxa_finalize
                0x00000000c000ed7f                __stack_chk_fail
                0x00000000c000eddf                __cxa_pure_virtual
                0x00000000c000edf0                operator new(unsigned long)
                0x00000000c000edf5                operator new[](unsigned long)
                0x00000000c000edfa                operator delete(void*)
                0x00000000c000edff                operator delete(void*, unsigned long)
                0x00000000c000ee04                operator delete[](void*)
                0x00000000c000ee09                operator delete[](void*, unsigned long)
 .text          0x00000000c000ee0e      0x1ef dbg/kconsole.32
                0x00000000c000ee0e                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ee6f                Dbg::logc(char)
                0x00000000c000ee86                Dbg::logs(char*)
                0x00000000c000eea3                Dbg::logWriteInt(unsigned int)
                0x00000000c000eec0                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000eedf                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000effd        0x1 
 .text          0x00000000c000effe      0xb68 fs/vfs.32
                0x00000000c000effe                File::read(unsigned long long, void*, int*)
                0x00000000c000f056                File::write(unsigned long long, void*, int*)
                0x00000000c000f0ae                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f106                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f134                File::isAtty()
                0x00000000c000f138                Directory::isAtty()
                0x00000000c000f13c                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f142                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f148                File::~File()
                0x00000000c000f148                File::~File()
                0x00000000c000f16c                File::~File()
                0x00000000c000f196                Directory::~Directory()
                0x00000000c000f196                Directory::~Directory()
                0x00000000c000f1ba                Directory::~Directory()
                0x00000000c000f1e4                Filesystem::Filesystem()
                0x00000000c000f1e4                Filesystem::Filesystem()
                0x00000000c000f208                Filesystem::~Filesystem()
                0x00000000c000f208                Filesystem::~Filesystem()
                0x00000000c000f216                Filesystem::~Filesystem()
                0x00000000c000f23a                initVFS()
                0x00000000c000f264                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f40e                File::File(char const*, Process*)
                0x00000000c000f40e                File::File(char const*, Process*)
                0x00000000c000f472                File::open(FileOpenMode)
                0x00000000c000f4d0                File::close()
                0x00000000c000f530                File::seek(unsigned long long)
                0x00000000c000f586                File::tell(unsigned long long*)
                0x00000000c000f5d6                File::rewind()
                0x00000000c000f5ea                File::unlink()
                0x00000000c000f636                File::rename(char const*)
                0x00000000c000f684                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f6e0                File::exists()
                0x00000000c000f71e                File::stat(unsigned long long*, bool*)
                0x00000000c000f77f                getcwd(Process*, char*, int)
                0x00000000c000f7a9                setcwd(Process*, char*)
                0x00000000c000f8d0                Directory::Directory(char const*, Process*)
                0x00000000c000f8d0                Directory::Directory(char const*, Process*)
                0x00000000c000f934                Directory::open()
                0x00000000c000f990                Directory::close()
                0x00000000c000f9f0                Directory::unlink()
                0x00000000c000fa3c                Directory::rename(char const*)
                0x00000000c000fa8a                Directory::exists()
                0x00000000c000fac8                Directory::read(dirent*)
                0x00000000c000fb14                Directory::create()
                0x00000000c000fb60                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fb66       0x84 hal/bus.32
                0x00000000c000fb66                Bus::Bus(char const*)
                0x00000000c000fb66                Bus::Bus(char const*)
                0x00000000c000fb9c                Bus::~Bus()
                0x00000000c000fb9c                Bus::~Bus()
                0x00000000c000fbc0                Bus::~Bus()
 .text          0x00000000c000fbea      0x14e hal/buzzer.32
                0x00000000c000fbea                Buzzer::Buzzer(char const*)
                0x00000000c000fbea                Buzzer::Buzzer(char const*)
                0x00000000c000fc2e                Buzzer::~Buzzer()
                0x00000000c000fc2e                Buzzer::~Buzzer()
                0x00000000c000fc52                Buzzer::~Buzzer()
                0x00000000c000fc7c                Buzzer::stop()
                0x00000000c000fc8f                beepThread(void*)
                0x00000000c000fcca                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fd38      0x42f hal/clock.32
                0x00000000c000fd38                loadClockSettings()
                0x00000000c000fd52                Clock::Clock(char const*)
                0x00000000c000fd52                Clock::Clock(char const*)
                0x00000000c000fd88                Clock::~Clock()
                0x00000000c000fd88                Clock::~Clock()
                0x00000000c000fdac                Clock::~Clock()
                0x00000000c000fdd6                Clock::timeInSecondsLocal()
                0x00000000c000fe1e                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fe77                datetimeToSeconds(datetime_t)
                0x00000000c000ff9e                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fffe                secondsToDatetime(unsigned long long)
                0x00000000c0010142                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0010167        0x1 
 .text          0x00000000c0010168      0x504 hal/device.32
                0x00000000c0010168                Device::hibernate()
                0x00000000c001016a                Device::wake()
                0x00000000c001016c                Device::detect()
                0x00000000c001016e                Device::disableLegacy()
                0x00000000c0010170                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010172                DriverlessDevice::close(int, int, void*)
                0x00000000c0010176                DriverlessDevice::detect()
                0x00000000c0010178                DriverlessDevice::open(int, int, void*)
                0x00000000c001018c                Device::~Device()
                0x00000000c001018c                Device::~Device()
                0x00000000c001019a                Device::~Device()
                0x00000000c00101c2                Device::findAndLoadDriver()
                0x00000000c00101c4                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00101ea                Device::preOpenACPI(void*, char*, char*)
                0x00000000c001023e                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001029c                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00102ea                Device::addChild(Device*)
                0x00000000c001032e                Device::removeAllChildren()
                0x00000000c0010374                Device::hibernateAll()
                0x00000000c00103a4                Device::wakeAll()
                0x00000000c00103d4                Device::detectAll()
                0x00000000c0010404                Device::disableLegacyAll()
                0x00000000c0010434                Device::loadDriversForAll()
                0x00000000c0010460                Device::closeAll()
                0x00000000c0010496                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00104cc                Device::setName(char const*)
                0x00000000c00104da                Device::Device(char const*)
                0x00000000c00104da                Device::Device(char const*)
                0x00000000c00105cc                Device::getName()
                0x00000000c00105d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00105d6                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00105fe                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010642                getDevicesOfType(DeviceType)
 .text          0x00000000c001066c       0x84 hal/diskctrl.32
                0x00000000c001066c                HardDiskController::HardDiskController(char const*)
                0x00000000c001066c                HardDiskController::HardDiskController(char const*)
                0x00000000c00106a2                HardDiskController::~HardDiskController()
                0x00000000c00106a2                HardDiskController::~HardDiskController()
                0x00000000c00106c6                HardDiskController::~HardDiskController()
 .text          0x00000000c00106f0       0xde hal/diskphys.32
                0x00000000c00106f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00106f0                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010758                PhysicalDisk::startCache()
                0x00000000c0010780                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010780                PhysicalDisk::~PhysicalDisk()
                0x00000000c00107a4                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00107ce      0x142 hal/fpu.32
                0x00000000c00107ce                FPU::FPU(char const*)
                0x00000000c00107ce                FPU::FPU(char const*)
                0x00000000c0010804                FPU::~FPU()
                0x00000000c0010804                FPU::~FPU()
                0x00000000c0010828                FPU::~FPU()
                0x00000000c0010852                setupFPU()
 .text          0x00000000c0010910      0xc21 hal/intctrl.32
                0x00000000c0010910                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010948                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001099a                doubleFault(regs*, void*)
                0x00000000c00109a8                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010a44                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010aec                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010b73                nmiHandler(regs*, void*)
                0x00000000c0010b81                int_handler
                0x00000000c0010c1c                InterruptController::InterruptController(char const*)
                0x00000000c0010c1c                InterruptController::InterruptController(char const*)
                0x00000000c0010cc2                InterruptController::~InterruptController()
                0x00000000c0010cc2                InterruptController::~InterruptController()
                0x00000000c0010ce6                InterruptController::~InterruptController()
                0x00000000c0010d10                displayDebugInfo(regs*)
                0x00000000c0011127                x87EmulHandler(regs*, void*)
                0x00000000c001118a                gpFault(regs*, void*)
                0x00000000c00111c3                pgFault(regs*, void*)
                0x00000000c00111da                otherISRHandler(regs*, void*)
                0x00000000c00111f9                opcodeFault(regs*, void*)
                0x00000000c0011263                displayProgramFault(char const*)
                0x00000000c001128c                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00112d6                setupInterruptController()
 *fill*         0x00000000c0011531        0x1 
 .text          0x00000000c0011532      0x608 hal/keybrd.32
                0x00000000c0011532                startGUI(void*)
                0x00000000c00115a4                sendKeyToTerminal(unsigned char)
                0x00000000c0011610                sendKeyboardToken(KeyboardToken)
                0x00000000c00119eb                clearInternalKeybuffer(VgaText*)
                0x00000000c0011a20                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0011ab0                Keyboard::Keyboard(char const*)
                0x00000000c0011ab0                Keyboard::Keyboard(char const*)
                0x00000000c0011aec                Keyboard::~Keyboard()
                0x00000000c0011aec                Keyboard::~Keyboard()
                0x00000000c0011b10                Keyboard::~Keyboard()
 .text          0x00000000c0011b3a      0x400 hal/logidisk.32
                0x00000000c0011b3a                LogicalDisk::close(int, int, void*)
                0x00000000c0011b3e                LogicalDisk::~LogicalDisk()
                0x00000000c0011b3e                LogicalDisk::~LogicalDisk()
                0x00000000c0011b62                LogicalDisk::~LogicalDisk()
                0x00000000c0011b8c                LogicalDisk::open(int, int, void*)
                0x00000000c0011ba0                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011bd8                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011c1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011c1e                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011cd4                LogicalDisk::assignDriveLetter()
                0x00000000c0011d8a                LogicalDisk::mount()
                0x00000000c0011dfc                LogicalDisk::unmount()
                0x00000000c0011e0c                LogicalDisk::unassignDriveLetter()
                0x00000000c0011e62                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011ece                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011f3a       0x84 hal/mouse.32
                0x00000000c0011f3a                Mouse::Mouse(char const*)
                0x00000000c0011f3a                Mouse::Mouse(char const*)
                0x00000000c0011f70                Mouse::~Mouse()
                0x00000000c0011f70                Mouse::~Mouse()
                0x00000000c0011f94                Mouse::~Mouse()
 .text          0x00000000c0011fbe      0x339 hal/partition.32
                0x00000000c0011fbe                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0012066                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00122f7        0x1 
 .text          0x00000000c00122f8      0x2e7 hal/timer.32
                0x00000000c00122f8                Timer::Timer(char const*)
                0x00000000c00122f8                Timer::Timer(char const*)
                0x00000000c001232e                Timer::~Timer()
                0x00000000c001232e                Timer::~Timer()
                0x00000000c0012352                Timer::~Timer()
                0x00000000c001237c                Timer::read()
                0x00000000c0012387                timerHandler(unsigned long long)
                0x00000000c00124be                setupTimer(int)
 *fill*         0x00000000c00125df        0x1 
 .text          0x00000000c00125e0      0x2d1 hal/vcache.32
                0x00000000c00125e0                VCache::VCache(PhysicalDisk*)
                0x00000000c00125e0                VCache::VCache(PhysicalDisk*)
                0x00000000c00126d0                VCache::writeWriteBuffer()
                0x00000000c001270c                VCache::~VCache()
                0x00000000c001270c                VCache::~VCache()
                0x00000000c001274c                VCache::~VCache()
                0x00000000c0012774                VCache::write(unsigned long long, int, void*)
                0x00000000c0012858                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00128b1        0x1 
 .text          0x00000000c00128b2      0x26d hal/video.32
                0x00000000c00128b2                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00128fc                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001297a                Video::clearScreen(unsigned int)
                0x00000000c00129ae                Video::putpixel(int, int, unsigned int)
                0x00000000c00129bc                Video::Video(char const*)
                0x00000000c00129bc                Video::Video(char const*)
                0x00000000c00129f2                Video::~Video()
                0x00000000c00129f2                Video::~Video()
                0x00000000c0012a16                Video::~Video()
                0x00000000c0012a40                Video::isMonochrome()
                0x00000000c0012a4c                Video::getWidth()
                0x00000000c0012a58                Video::getHeight()
                0x00000000c0012a64                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012b1f        0x1 
 .text          0x00000000c0012b20      0xd28 hw/acpi.32
                0x00000000c0012b20                ACPI::close(int, int, void*)
                0x00000000c0012bd5                findRSDP()
                0x00000000c0012c5f                loadACPITables(unsigned char*)
                0x00000000c0012e86                findRSDT(unsigned char*)
                0x00000000c0012fa4                findDataTable(unsigned char*, char*)
                0x00000000c0013040                scanMADT()
                0x00000000c00133d4                ACPI::ACPI()
                0x00000000c00133d4                ACPI::ACPI()
                0x00000000c0013434                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013516                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001361c                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013622                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001366a                ACPI::open(int, int, void*)
                0x00000000c0013830                ACPI::sleep()
 .text          0x00000000c0013848     0x132c hw/cpu.32
                0x00000000c0013848                CPU::close(int, int, void*)
                0x00000000c001384b                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c00139df                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013c8d                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013ca9                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013cc1                AMD_K6_writeback(int, int, int)
                0x00000000c0013d34                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013db7                cpuidCheckEDX(unsigned int)
                0x00000000c0013de4                cpuidCheckECX(unsigned int)
                0x00000000c0013e11                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013e3e                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013e6b                getCPUNumber()
                0x00000000c0013e6e                thisCPU()
                0x00000000c0013e82                CPU::CPU()
                0x00000000c0013e82                CPU::CPU()
                0x00000000c0013f10                CPU::displayFeatures()
                0x00000000c0013f12                CPU::detectFeatures()
                0x00000000c0014904                CPU::setupSMEP()
                0x00000000c001491e                CPU::setupUMIP()
                0x00000000c0014936                CPU::setupTSC()
                0x00000000c001494e                CPU::setupLargePages()
                0x00000000c0014966                CPU::setupPAT()
                0x00000000c00149a2                CPU::setupMTRR()
                0x00000000c00149a4                CPU::setupGlobalPages()
                0x00000000c00149ba                CPU::allowUsermodeDataAccess()
                0x00000000c00149cc                CPU::prohibitUsermodeDataAccess()
                0x00000000c00149de                CPU::setupSMAP()
                0x00000000c0014a04                CPU::setupFeatures()
                0x00000000c0014aa6                CPU::open(int, int, void*)
 .text          0x00000000c0014b74        0x0 hw/ports.32
 .text          0x00000000c0014b74      0x32c krnl/panic.32
                0x00000000c0014b74                Krnl::panic(char const*)
 .text          0x00000000c0014ea0      0x503 reg/registry.32
                0x00000000c0014ea0                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0014ff8                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015157                Reg::getLine(char*, char*, char*)
                0x00000000c001518e                Reg::readInt(char*, char*, int*)
                0x00000000c0015279                Reg::readString(char*, char*, char*, int)
                0x00000000c00152fa                Reg::readBool(char*, char*, bool*)
                0x00000000c001531f                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c001534b                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0015377                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00153a3       0x18 sys/sc_exit.32
                0x00000000c00153a3                Sys::exit(regs*)
 .text          0x00000000c00153bb       0x95 sys/sc_loaddll.32
                0x00000000c00153bb                Sys::loadDLL(regs*)
 .text          0x00000000c0015450       0x68 sys/sc_read.32
                0x00000000c0015450                Sys::read(regs*)
 .text          0x00000000c00154b8       0x55 sys/sc_sbrk.32
                0x00000000c00154b8                Sys::sbrk(regs*)
 .text          0x00000000c001550d       0x68 sys/sc_write.32
                0x00000000c001550d                Sys::write(regs*)
 .text          0x00000000c0015575       0x1a sys/sc_yield.32
                0x00000000c0015575                Sys::yield(regs*)
 .text          0x00000000c001558f      0xf75 sys/syscalls.32
                0x00000000c001558f                sysCallGetPID(regs*)
                0x00000000c001559b                sysCallSeekDir(regs*)
                0x00000000c00155a0                sysCallTellDir(regs*)
                0x00000000c00155a5                sysCallVerify(regs*)
                0x00000000c00155af                sysCallGetArgc(regs*)
                0x00000000c00155bf                sysFormatDisk(regs*)
                0x00000000c0015629                sysSetDiskVolumeLabel(regs*)
                0x00000000c001566f                sysGetDiskVolumeLabel(regs*)
                0x00000000c00156c0                sysShutdown(regs*)
                0x00000000c001571e                sysCallGetCwd(regs*)
                0x00000000c001573d                sysCallSetCwd(regs*)
                0x00000000c0015759                sysCallRealpath(regs*)
                0x00000000c001579c                sysCallReadDir(regs*)
                0x00000000c001582a                sysCallIsATTY(regs*)
                0x00000000c0015884                sysCallSeek(regs*)
                0x00000000c00158ed                sysCallTell(regs*)
                0x00000000c0015951                sysCallSizeFromFilename(regs*)
                0x00000000c00159e3                sysCallSize(regs*)
                0x00000000c0015a4d                sysCallClose(regs*)
                0x00000000c0015ad5                sysCallOpenDir(regs*)
                0x00000000c0015b42                sysCallMakeDir(regs*)
                0x00000000c0015b9b                sysCallCloseDir(regs*)
                0x00000000c0015c01                sysCallWait(regs*)
                0x00000000c0015c1b                sysCallFork(regs*)
                0x00000000c0015c37                sysCallExecve(regs*)
                0x00000000c0015c8c                sysCallRmdir(regs*)
                0x00000000c0015cde                sysCallUnlink(regs*)
                0x00000000c0015d30                sysCallGetArgv(regs*)
                0x00000000c0015d7c                sysCallTTYName(regs*)
                0x00000000c0015dff                sysCallGetEnv(regs*)
                0x00000000c0015e51                sysCallUSleep(regs*)
                0x00000000c0015e78                sysCallSpawn(regs*)
                0x00000000c0015ee8                sysAppSettings(regs*)
                0x00000000c0016007                sysSetFatAttrib(regs*)
                0x00000000c0016067                sysPanic(regs*)
                0x00000000c001608d                sysPipe(regs*)
                0x00000000c00160d2                sysGetUnixTime(regs*)
                0x00000000c00160e6                string_ends_with(char const*, char const*)
                0x00000000c001612e                sysCallOpen(regs*)
                0x00000000c0016309                setupSystemCalls()
                0x00000000c00164c2                systemCall(regs*, void*)
 .text          0x00000000c0016504     0x1137 thr/elf.32
                0x00000000c0016504                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0016781                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0016997                Thr::runtimeReferenceHelper()
                0x00000000c00169aa                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c00169f9                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0016cba                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001743b                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001746d                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00174a4                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00174be                Thr::loadDLL(char const*, bool)
                0x00000000c0017611                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c001763b        0x1 
 .text          0x00000000c001763c     0x11c2 thr/prcssthr.32
                0x00000000c001763c                changeTSS
                0x00000000c001766a                Process::addArgs(char**)
                0x00000000c00176c4                Process::Process(char const*, Process*, char**)
                0x00000000c00176c4                Process::Process(char const*, Process*, char**)
                0x00000000c001787c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001787c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00179ff                disableIRQs()
                0x00000000c0017a07                getIRQNestingLevel()
                0x00000000c0017a0d                enableIRQs()
                0x00000000c0017a1c                lockScheduler()
                0x00000000c0017a1e                unlockScheduler()
                0x00000000c0017a20                userModeEntryPoint(void*)
                0x00000000c0017a43                lockStuff()
                0x00000000c0017a4f                taskStartupFunction
                0x00000000c0017a58                updateTimeUsed()
                0x00000000c0017ab6                switchToThread(ThreadControlBlock*)
                0x00000000c0017b06                Semaphore::Semaphore(int)
                0x00000000c0017b06                Semaphore::Semaphore(int)
                0x00000000c0017b34                Mutex::Mutex()
                0x00000000c0017b34                Mutex::Mutex()
                0x00000000c0017b46                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0017c2a                Process::createUserThread()
                0x00000000c0017c46                setupMultitasking(void (*)())
                0x00000000c0017d50                schedule()
                0x00000000c0017dd5                unlockStuff()
                0x00000000c0017e0a                forkProcess(regs*)
                0x00000000c0017f78                Semaphore::tryAcquire()
                0x00000000c0017fa6                Semaphore::assertLocked(char const*)
                0x00000000c0017fd9                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c001801b                blockTask(TaskState)
                0x00000000c001803c                waitTask(int, int*, int)
                0x00000000c001807e                nanoSleepUntil(unsigned long long)
                0x00000000c00180d5                nanoSleep(unsigned long long)
                0x00000000c00180ea                sleep(unsigned long long)
                0x00000000c0018108                Semaphore::acquire()
                0x00000000c0018170                execveProcess(char const*, char* const*, char* const*)
                0x00000000c00181fe                taskReturned
                0x00000000c001822c                unblockTask(ThreadControlBlock*)
                0x00000000c00182db                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001857f                cleanerTaskFunction(void*)
                0x00000000c0018632                terminateTask(int)
                0x00000000c0018706                Thr::terminateFromIRQ(int)
                0x00000000c0018712                Semaphore::release()
 .text          0x00000000c00187fe      0x8bf vm86/vm8086.32
                0x00000000c00187fe                Vm::vm8086EntryPoint(void*)
                0x00000000c0018829                Vm::inbv(unsigned short)
                0x00000000c001882f                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018839                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018849                Vm::getSegment(unsigned int)
                0x00000000c0018851                Vm::getOffset(unsigned int)
                0x00000000c0018856                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018985                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018a0f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018a20                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018a32                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018a43                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018a58                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018a6e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018a83                Vm::faultHandler(regs*)
 *fill*         0x00000000c00190bd        0x1 
 .text          0x00000000c00190be     0x10ed fs/fat/vfslink.32
                0x00000000c00190be                FAT::getName()
                0x00000000c00190c4                FAT::tell(void*, unsigned long long*)
                0x00000000c00190f8                FAT::stat(void*, unsigned long long*)
                0x00000000c001912c                FAT::~FAT()
                0x00000000c001912c                FAT::~FAT()
                0x00000000c0019150                FAT::~FAT()
                0x00000000c0019178                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019216                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c00192d0                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00194b4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00196ba                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00197c0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001981a                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019874                FAT::close(void*)
                0x00000000c00198c0                FAT::closeDir(void*)
                0x00000000c001990c                FAT::seek(void*, unsigned long long)
                0x00000000c0019960                fatWrapperReadDisk
                0x00000000c00199a7                fatWrapperWriteDisk
                0x00000000c00199ee                fatWrapperIoctl
                0x00000000c0019af2                FAT::FAT()
                0x00000000c0019af2                FAT::FAT()
                0x00000000c0019b44                FAT::fixFilepath(char*)
                0x00000000c0019b7c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ca4                FAT::openDir(char const*, void**)
                0x00000000c0019d4a                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019e34                FAT::unlink(char const*)
                0x00000000c0019eae                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a002                FAT::rename(char const*, char const*)
                0x00000000c001a0c6                FAT::mkdir(char const*)
                0x00000000c001a140                FAT::exists(char const*)
 *fill*         0x00000000c001a1ab        0x1 
 .text          0x00000000c001a1ac      0xbdf fs/iso9660/vfslink.32
                0x00000000c001a1ac                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a1b2                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a1e2                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a206                ISO9660::getName()
                0x00000000c001a20c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a230                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a236                ISO9660::unlink(char const*)
                0x00000000c001a23c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a242                ISO9660::rename(char const*, char const*)
                0x00000000c001a248                ISO9660::mkdir(char const*)
                0x00000000c001a24e                ISO9660::close(void*)
                0x00000000c001a270                ISO9660::closeDir(void*)
                0x00000000c001a292                ISO9660::~ISO9660()
                0x00000000c001a292                ISO9660::~ISO9660()
                0x00000000c001a2b6                ISO9660::~ISO9660()
                0x00000000c001a2dd                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a31f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a386                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a3d6                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a61a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a8a7                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a8fc                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001aacf                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001ab5e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001abf8                ISO9660::exists(char const*)
                0x00000000c001ac1c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001acb0                ISO9660::openDir(char const*, void**)
                0x00000000c001ad68                ISO9660::ISO9660()
                0x00000000c001ad68                ISO9660::ISO9660()
 *fill*         0x00000000c001ad8b        0x1 
 .text          0x00000000c001ad8c      0x244 hal/sound/sndchannel.32
                0x00000000c001ad8c                SoundChannel::~SoundChannel()
                0x00000000c001ad8c                SoundChannel::~SoundChannel()
                0x00000000c001ada8                SoundChannel::setSpeed(float)
                0x00000000c001adb4                SoundChannel::getSpeed()
                0x00000000c001adbc                SoundChannel::setVolume(int)
                0x00000000c001add8                SoundChannel::getVolume()
                0x00000000c001ade0                SoundChannel::pause()
                0x00000000c001adea                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001adea                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aee0                SoundChannel::play()
                0x00000000c001aeea                SoundChannel::paused()
                0x00000000c001aef2                SoundChannel::getSampleRate()
                0x00000000c001aefa                SoundChannel::getBits()
                0x00000000c001af02                SoundChannel::getBufferUsed()
                0x00000000c001af0a                SoundChannel::getBufferSize()
                0x00000000c001af12                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001af84                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001afd0      0x317 hal/sound/sndhw.32
                0x00000000c001afd0                SoundDevice::SoundDevice(char const*)
                0x00000000c001afd0                SoundDevice::SoundDevice(char const*)
                0x00000000c001b03c                SoundDevice::~SoundDevice()
                0x00000000c001b03c                SoundDevice::~SoundDevice()
                0x00000000c001b0b6                SoundDevice::~SoundDevice()
                0x00000000c001b0e0                SoundDevice::getFreeChannelNum()
                0x00000000c001b0fa                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001b16a                SoundDevice::removeChannel(int)
                0x00000000c001b19c                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001b208                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b2e7        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b2e7        0x1 
 .text          0x00000000c001b2e8      0x6e5 hw/bus/pci.32
                0x00000000c001b2e8                PCI::open(int, int, void*)
                0x00000000c001b2fc                PCI::close(int, int, void*)
                0x00000000c001b300                PCI::PCI()
                0x00000000c001b300                PCI::PCI()
                0x00000000c001b380                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b3c8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b3ea                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b40e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b452                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b476                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b498                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4ba                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b4de                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b53e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b5aa                PCI::checkBus(unsigned char)
                0x00000000c001b5ce                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b73e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b90e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b97a                PCI::detect()
 *fill*         0x00000000c001b9cd        0x1 
 .text          0x00000000c001b9ce      0xc70 hw/diskctrl/ide.32
                0x00000000c001b9ce                IDE::close(int, int, void*)
                0x00000000c001b9d2                IDE::IDE()
                0x00000000c001b9d2                IDE::IDE()
                0x00000000c001ba06                IDE::prepareInterrupt(unsigned char)
                0x00000000c001ba18                selectDrive(unsigned char, unsigned char)
                0x00000000c001ba1a                IDE::getBase(unsigned char)
                0x00000000c001ba2c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001baec                IDE::read(unsigned char, unsigned char)
                0x00000000c001bb9a                IDE::waitInterrupt(unsigned char)
                0x00000000c001bc00                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bc1c                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bc38                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bc7e                IDE::open(int, int, void*)
                0x00000000c001c08e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c15a                IDE::detect()
                0x00000000c001c442                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c5d8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c63e      0x62b hw/diskphys/ata.32
                0x00000000c001c63e                ATA::close(int, int, void*)
                0x00000000c001c662                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c664                ATA::ATA()
                0x00000000c001c664                ATA::ATA()
                0x00000000c001c692                ATA::flush(bool)
                0x00000000c001c6dc                ATA::readyForCommand()
                0x00000000c001c72c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001caaa                ATA::read(unsigned long long, int, void*)
                0x00000000c001cb12                ATA::write(unsigned long long, int, void*)
                0x00000000c001cb7a                ATA::detectCHS()
                0x00000000c001cba4                ATA::open(int, int, void*)
 *fill*         0x00000000c001cc69        0x1 
 .text          0x00000000c001cc6a      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cc6a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cc70                ATAPI::close(int, int, void*)
                0x00000000c001cc94                ATAPI::ATAPI()
                0x00000000c001cc94                ATAPI::ATAPI()
                0x00000000c001ccc2                ATAPI::readyForCommand()
                0x00000000c001cd12                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001cfd2                ATAPI::diskRemoved()
                0x00000000c001cfee                ATAPI::eject()
                0x00000000c001d034                ATAPI::diskInserted()
                0x00000000c001d062                ATAPI::detectMedia()
                0x00000000c001d11e                ATAPI::open(int, int, void*)
                0x00000000c001d19e                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d21d        0x1 
 .text          0x00000000c001d21e       0x8e hw/fpu/avx.32
                0x00000000c001d21e                AVX::open(int, int, void*)
                0x00000000c001d230                AVX::close(int, int, void*)
                0x00000000c001d242                AVX::available()
                0x00000000c001d254                AVX::save(void*)
                0x00000000c001d26c                AVX::load(void*)
                0x00000000c001d284                AVX::AVX()
                0x00000000c001d284                AVX::AVX()
 .text          0x00000000c001d2ac       0x90 hw/fpu/mmx.32
                0x00000000c001d2ac                MMX::available()
                0x00000000c001d2c0                MMX::open(int, int, void*)
                0x00000000c001d2d2                MMX::close(int, int, void*)
                0x00000000c001d2e4                MMX::save(void*)
                0x00000000c001d2fc                MMX::load(void*)
                0x00000000c001d314                MMX::MMX()
                0x00000000c001d314                MMX::MMX()
 .text          0x00000000c001d33c       0x96 hw/fpu/sse.32
                0x00000000c001d33c                SSE::open(int, int, void*)
                0x00000000c001d34e                SSE::close(int, int, void*)
                0x00000000c001d360                SSE::available()
                0x00000000c001d37a                SSE::save(void*)
                0x00000000c001d392                SSE::load(void*)
                0x00000000c001d3aa                SSE::SSE()
                0x00000000c001d3aa                SSE::SSE()
 .text          0x00000000c001d3d2       0x8e hw/fpu/x87.32
                0x00000000c001d3d2                x87::open(int, int, void*)
                0x00000000c001d3e4                x87::close(int, int, void*)
                0x00000000c001d3f6                x87::available()
                0x00000000c001d408                x87::save(void*)
                0x00000000c001d420                x87::load(void*)
                0x00000000c001d438                x87::x87()
                0x00000000c001d438                x87::x87()
 .text          0x00000000c001d460      0x5f3 hw/intctrl/apic.32
                0x00000000c001d460                APIC::disable()
                0x00000000c001d462                APIC::close(int, int, void*)
                0x00000000c001d484                IOAPIC::close(int, int, void*)
                0x00000000c001d48a                APIC::io_wait()
                0x00000000c001d490                APIC::getBase()
                0x00000000c001d4d2                APIC::eoi(unsigned char)
                0x00000000c001d500                APIC::open(int, int, void*)
                0x00000000c001d5ba                IOAPIC::IOAPIC()
                0x00000000c001d5ba                IOAPIC::IOAPIC()
                0x00000000c001d5e2                APIC::APIC()
                0x00000000c001d5e2                APIC::APIC()
                0x00000000c001d6b2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d6e4                IOAPIC::read(int)
                0x00000000c001d70c                IOAPIC::open(int, int, void*)
                0x00000000c001d802                IOAPIC::write(int, int)
                0x00000000c001d82e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d8e8                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001da53        0x1 
 .text          0x00000000c001da54      0x3d3 hw/intctrl/pic.32
                0x00000000c001da54                PIC::disable()
                0x00000000c001da82                PIC::close(int, int, void*)
                0x00000000c001daa4                PIC::PIC()
                0x00000000c001daa4                PIC::PIC()
                0x00000000c001db7a                PIC::ioWait()
                0x00000000c001db80                PIC::getIRQReg(int)
                0x00000000c001dbea                PIC::eoi(unsigned char)
                0x00000000c001dc7c                PIC::remap()
                0x00000000c001dde8                PIC::open(int, int, void*)
 *fill*         0x00000000c001de27        0x1 
 .text          0x00000000c001de28      0x252 hw/timer/apictimer.32
                0x00000000c001de28                APICTimer::close(int, int, void*)
                0x00000000c001de2e                apicTimerHandler(regs*, void*)
                0x00000000c001de5c                APICTimer::write(int)
                0x00000000c001df5a                APICTimer::open(int, int, void*)
                0x00000000c001e052                APICTimer::APICTimer()
                0x00000000c001e052                APICTimer::APICTimer()
 .text          0x00000000c001e07a      0x1a7 hw/timer/pit.32
                0x00000000c001e07a                PIT::write(int)
                0x00000000c001e0f8                pitHandler(regs*, void*)
                0x00000000c001e124                PIT::open(int, int, void*)
                0x00000000c001e172                PIT::close(int, int, void*)
                0x00000000c001e1a2                PIT::PIT()
                0x00000000c001e1a2                PIT::PIT()
 *fill*         0x00000000c001e221        0xf 
 .text          0x00000000c001e230        0xa hw/fpu/x86/avx.32
                0x00000000c001e230                avxDetect
                0x00000000c001e236                avxSave
                0x00000000c001e237                avxLoad
                0x00000000c001e238                avxInit
                0x00000000c001e239                avxClose
 *fill*         0x00000000c001e23a        0x6 
 .text          0x00000000c001e240       0x38 hw/fpu/x86/sse.32
                0x00000000c001e240                sseDetect
                0x00000000c001e25b                sseSave
                0x00000000c001e261                sseLoad
                0x00000000c001e267                sseInit
                0x00000000c001e277                sseClose
 *fill*         0x00000000c001e278        0x8 
 .text          0x00000000c001e280       0x47 hw/fpu/x86/x87.32
                0x00000000c001e286                x87Detect
                0x00000000c001e2a1                x87Save
                0x00000000c001e2a7                x87Load
                0x00000000c001e2ac                x87Init
                0x00000000c001e2c6                x87Close
 *fill*         0x00000000c001e2c7        0x1 
 .text          0x00000000c001e2c8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e2ed        0x0 crtn.32
 *fill*         0x00000000c001e2ed        0x3 
 .text          0x00000000c001e2f0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e2f0                __divdi3
 *fill*         0x00000000c001e43b        0x1 
 .text          0x00000000c001e43c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e43c                __moddi3
 *fill*         0x00000000c001e5ba        0x2 
 .text          0x00000000c001e5bc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e5bc                __udivdi3
 *fill*         0x00000000c001e6bb        0x1 
 .text          0x00000000c001e6bc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e6bc                __umoddi3
 *fill*         0x00000000c001e7d6        0xa 
 .text          0x00000000c001e7e0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e7e0                fabs
 *fill*         0x00000000c001e7fe        0x2 
 .text          0x00000000c001e800        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e800                lrint
 .text          0x00000000c001e80c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e80c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e818        0x0
 .iplt          0x00000000c001e818        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e818        0xf
 .init          0x00000000c001e818        0x3 crti.32
                0x00000000c001e818                _init
 .init          0x00000000c001e81b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e820        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e825        0x2 crtn.32

.fini           0x00000000c001e827        0xa
 .fini          0x00000000c001e827        0x3 crti.32
                0x00000000c001e827                _fini
 .fini          0x00000000c001e82a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e82f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e832       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e832       0x23 core/computer.32
                0x00000000c001e832                Computer::~Computer()
                0x00000000c001e832                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e856       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e856       0x2a core/computer.32
                0x00000000c001e856                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e880       0x15
 .text._Z10idleCommonv
                0x00000000c001e880       0x15 core/idle.32
                0x00000000c001e880                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e895       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e895       0x12 core/kheap.32
                0x00000000c001e895                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e8a7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e8a7        0x9 core/kheap.32
                0x00000000c001e8a7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8b0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001e8b0        0x2 core/unixfile.32
                0x00000000c001e8b0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001e8b0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8b2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001e8b2       0x58 core/unixfile.32
                0x00000000c001e8b2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001e8b2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e90a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001e90a       0xd3 core/unixfile.32
                0x00000000c001e90a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9de        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001e9de        0x7 core/unixfile.32
                0x00000000c001e9de                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9e6       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001e9e6       0xa1 core/unixfile.32
                0x00000000c001e9e6                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea88        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ea88        0x8 core/unixfile.32
                0x00000000c001ea88                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea90       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ea90       0x1a hal/device.32
                0x00000000c001ea90                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ea90                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaaa       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eaaa       0x2a hal/device.32
                0x00000000c001eaaa                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ead4       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ead4       0xdc hal/device.32
                0x00000000c001ead4                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebb0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ebb0       0x58 hal/device.32
                0x00000000c001ebb0                LinkedList<Device>::LinkedList()
                0x00000000c001ebb0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001ec08       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001ec08       0x12 hal/fpu.32
                0x00000000c001ec08                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001ec1a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001ec1a        0x9 hal/fpu.32
                0x00000000c001ec1a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001ec23       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001ec23       0x12 hal/intctrl.32
                0x00000000c001ec23                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001ec35       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001ec35       0x12 hal/intctrl.32
                0x00000000c001ec35                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001ec47       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001ec47       0x12 hal/intctrl.32
                0x00000000c001ec47                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001ec59       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001ec59       0x12 hal/intctrl.32
                0x00000000c001ec59                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001ec6b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001ec6b       0x12 hal/intctrl.32
                0x00000000c001ec6b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001ec7d       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001ec7d       0x12 hal/intctrl.32
                0x00000000c001ec7d                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec90        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec90        0x7 hal/timer.32
                0x00000000c001ec90                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec98       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ec98       0x1c hal/timer.32
                0x00000000c001ec98                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ecb4       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ecb4       0xae hal/timer.32
                0x00000000c001ecb4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ed62       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ed62       0xd3 hal/timer.32
                0x00000000c001ed62                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001ee36       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001ee36       0x23 hw/acpi.32
                0x00000000c001ee36                ACPI::~ACPI()
                0x00000000c001ee36                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001ee5a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001ee5a       0x2a hw/acpi.32
                0x00000000c001ee5a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001ee84       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001ee84       0x23 hw/cpu.32
                0x00000000c001ee84                CPU::~CPU()
                0x00000000c001ee84                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001eea8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001eea8       0x2a hw/cpu.32
                0x00000000c001eea8                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001eed2       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001eed2       0x12 hw/cpu.32
                0x00000000c001eed2                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001eee4        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001eee4        0x9 hw/cpu.32
                0x00000000c001eee4                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001eeed        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001eeed        0x9 hw/cpu.32
                0x00000000c001eeed                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001eef6       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001eef6       0x12 krnl/panic.32
                0x00000000c001eef6                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef08        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ef08        0x2 thr/prcssthr.32
                0x00000000c001ef08                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ef08                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef0a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ef0a       0x3e thr/prcssthr.32
                0x00000000c001ef0a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ef0a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef48       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ef48       0x58 thr/prcssthr.32
                0x00000000c001ef48                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ef48                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001efa0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001efa0        0x8 thr/prcssthr.32
                0x00000000c001efa0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001efa8       0x23
 .text._ZN3PCID2Ev
                0x00000000c001efa8       0x23 hw/bus/pci.32
                0x00000000c001efa8                PCI::~PCI()
                0x00000000c001efa8                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001efcc       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001efcc       0x2a hw/bus/pci.32
                0x00000000c001efcc                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001eff6       0x23
 .text._ZN3IDED2Ev
                0x00000000c001eff6       0x23 hw/diskctrl/ide.32
                0x00000000c001eff6                IDE::~IDE()
                0x00000000c001eff6                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f01a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f01a       0x2a hw/diskctrl/ide.32
                0x00000000c001f01a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f044       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f044       0x23 hw/diskphys/ata.32
                0x00000000c001f044                ATA::~ATA()
                0x00000000c001f044                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f068       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f068       0x2a hw/diskphys/ata.32
                0x00000000c001f068                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f092       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f092       0x23 hw/diskphys/atapi.32
                0x00000000c001f092                ATAPI::~ATAPI()
                0x00000000c001f092                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f0b6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f0b6       0x2a hw/diskphys/atapi.32
                0x00000000c001f0b6                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f0e0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f0e0       0x23 hw/fpu/avx.32
                0x00000000c001f0e0                AVX::~AVX()
                0x00000000c001f0e0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f104       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f104       0x2a hw/fpu/avx.32
                0x00000000c001f104                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f12e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f12e       0x23 hw/fpu/mmx.32
                0x00000000c001f12e                MMX::~MMX()
                0x00000000c001f12e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f152       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f152       0x2a hw/fpu/mmx.32
                0x00000000c001f152                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f17c       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f17c       0x23 hw/fpu/sse.32
                0x00000000c001f17c                SSE::~SSE()
                0x00000000c001f17c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f1a0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f1a0       0x2a hw/fpu/sse.32
                0x00000000c001f1a0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f1ca       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f1ca       0x23 hw/fpu/x87.32
                0x00000000c001f1ca                x87::~x87()
                0x00000000c001f1ca                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f1ee       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f1ee       0x2a hw/fpu/x87.32
                0x00000000c001f1ee                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f218       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f218       0x23 hw/intctrl/apic.32
                0x00000000c001f218                IOAPIC::~IOAPIC()
                0x00000000c001f218                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f23c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f23c       0x2a hw/intctrl/apic.32
                0x00000000c001f23c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f266       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f266       0x23 hw/intctrl/apic.32
                0x00000000c001f266                APIC::~APIC()
                0x00000000c001f266                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f28a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f28a       0x2a hw/intctrl/apic.32
                0x00000000c001f28a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f2b4       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f2b4       0x23 hw/intctrl/pic.32
                0x00000000c001f2b4                PIC::~PIC()
                0x00000000c001f2b4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f2d8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f2d8       0x2a hw/intctrl/pic.32
                0x00000000c001f2d8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f302       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f302       0x23 hw/timer/apictimer.32
                0x00000000c001f302                APICTimer::~APICTimer()
                0x00000000c001f302                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f326       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f326       0x2a hw/timer/apictimer.32
                0x00000000c001f326                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f350       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f350       0x23 hw/timer/pit.32
                0x00000000c001f350                PIT::~PIT()
                0x00000000c001f350                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f374       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f374       0x2a hw/timer/pit.32
                0x00000000c001f374                PIT::~PIT()

.rodata         0x00000000c001f39e     0x3566
                0x00000000c001f39e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f39e        0x2 
 .ctors         0x00000000c001f3a0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f3a4        0x4 core/unixfile.32
 .ctors         0x00000000c001f3a8        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f3ac        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f3b0                end_ctors = .
                0x00000000c001f3b0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f3b0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f3b4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f3b4                __DTOR_END__
                0x00000000c001f3b8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f3b8        0x8 
 .rodata        0x00000000c001f3c0      0x101 acpica/utclib.32
                0x00000000c001f3c0                AcpiGbl_Ctypes
 *fill*         0x00000000c001f4c1        0x3 
 .rodata        0x00000000c001f4c4       0x18 core/malloc.32
 *fill*         0x00000000c001f4dc        0x4 
 .rodata        0x00000000c001f4e0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f600       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f656        0xa 
 .rodata        0x00000000c001f660      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fa60       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fb16        0x2 
 .rodata.str1.4
                0x00000000c001fb18      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c001febd        0x3 
 .rodata        0x00000000c001fec0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c001ff20       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c001ff40       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c001ff54       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c001ff96        0x2 
 .rodata.cst8   0x00000000c001ff98        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c001ffa0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c002000c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00200d0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c002011a        0x6 
 .rodata.cst8   0x00000000c0020120        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020128        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020134       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c002017c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c002017c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00201ef        0x1 
 .rodata._ZTV8Computer
                0x00000000c00201f0       0x2c core/computer.32
                0x00000000c00201f0                vtable for Computer
 .rodata.str1.1
                0x00000000c002021c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020238       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0020268        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0020274       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c002028f       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c00202dd       0x39 core/pipe.32
 *fill*         0x00000000c0020316        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0020318       0x1c core/pipe.32
                0x00000000c0020318                vtable for Pipe
 .rodata.str1.1
                0x00000000c0020334       0x9d core/terminal.32
 *fill*         0x00000000c00203d1        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00203d4       0x1c core/terminal.32
                0x00000000c00203d4                vtable for VgaText
 .rodata        0x00000000c00203f0       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002040e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020428       0x19 core/unixfile.32
 *fill*         0x00000000c0020441        0x3 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0020444       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0020466       0x15 core/unixfile.32
 *fill*         0x00000000c002047b        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c002047c       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00204c7        0x8 core/unixfile.32
 *fill*         0x00000000c00204cf        0x1 
 .rodata.str1.4
                0x00000000c00204d0       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00204f0       0x1c core/unixfile.32
                0x00000000c00204f0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c002050c       0x1c core/unixfile.32
                0x00000000c002050c                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020528      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c00206d3      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0020857       0x33 coreobjs/c++.32
 *fill*         0x00000000c002088a        0x2 
 .rodata.str1.4
                0x00000000c002088c       0x3f dbg/kconsole.32
 *fill*         0x00000000c00208cb        0x1 
 .rodata        0x00000000c00208cc      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020a1c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020a1c       0x64 fs/vfs.32
                0x00000000c0020a1c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020a80       0x1c fs/vfs.32
                0x00000000c0020a80                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020a9c       0x1c fs/vfs.32
                0x00000000c0020a9c                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020ab8       0x2c hal/bus.32
                0x00000000c0020ab8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020ae4       0x30 hal/buzzer.32
                0x00000000c0020ae4                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020b14       0x3c hal/clock.32
                0x00000000c0020b14                vtable for Clock
 *fill*         0x00000000c0020b50       0x10 
 .rodata        0x00000000c0020b60       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020b90       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020bae       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020bae       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0020bae       0x19 hal/device.32
 *fill*         0x00000000c0020bae        0x2 
 .rodata._ZTV6Device
                0x00000000c0020bb0       0x2c hal/device.32
                0x00000000c0020bb0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020bdc       0x2c hal/device.32
                0x00000000c0020bdc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020c08       0x2c hal/diskctrl.32
                0x00000000c0020c08                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020c34       0x34 hal/diskphys.32
                0x00000000c0020c34                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020c68        0x9 hal/fpu.32
 *fill*         0x00000000c0020c71        0x3 
 .rodata._ZTV3FPU
                0x00000000c0020c74       0x38 hal/fpu.32
                0x00000000c0020c74                vtable for FPU
 .rodata.str1.4
                0x00000000c0020cac      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0020ddc      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c0020f6f        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c0020f70       0x48 hal/intctrl.32
                0x00000000c0020f70                vtable for InterruptController
 .rodata        0x00000000c0020fb8       0x4e hal/keybrd.32
 *fill*         0x00000000c0021006        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021008       0x34 hal/keybrd.32
                0x00000000c0021008                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002103c       0x7a hal/logidisk.32
 *fill*         0x00000000c00210b6        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c00210b8       0x2c hal/logidisk.32
                0x00000000c00210b8                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c00210e4       0x2c hal/mouse.32
                0x00000000c00210e4                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021110        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002111b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002111b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002111b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002111b       0x15 hal/timer.32
 *fill*         0x00000000c002111b        0x1 
 .rodata._ZTV5Timer
                0x00000000c002111c       0x30 hal/timer.32
                0x00000000c002111c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c002114c       0x10 hal/vcache.32
                0x00000000c002114c                vtable for VCache
 .rodata.str1.1
                0x00000000c002115c        0xf hal/video.32
 *fill*         0x00000000c002116b        0x1 
 .rodata._ZTV5Video
                0x00000000c002116c       0x40 hal/video.32
                0x00000000c002116c                vtable for Video
 .rodata.str1.1
                0x00000000c00211ac       0xd1 hw/acpi.32
 *fill*         0x00000000c002127d        0x3 
 .rodata.str1.4
                0x00000000c0021280       0xe5 hw/acpi.32
 *fill*         0x00000000c0021365        0x3 
 .rodata._ZTV4ACPI
                0x00000000c0021368       0x2c hw/acpi.32
                0x00000000c0021368                vtable for ACPI
 .rodata.str1.1
                0x00000000c0021394      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00215b8       0x2c hw/cpu.32
                0x00000000c00215b8                vtable for CPU
 .rodata.str1.1
                0x00000000c00215e4       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021699        0x3 
 .rodata.str1.4
                0x00000000c002169c      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00217ae       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 *fill*         0x00000000c00217f3        0x1 
 .rodata.str1.4
                0x00000000c00217f4       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c00218b0       0xdc sys/syscalls.32
                                         0xe4 (size before relaxing)
 .rodata.str1.1
                0x00000000c002198c      0x1ea thr/elf.32
                                        0x1ec (size before relaxing)
 .rodata.str1.1
                0x00000000c0021b76      0x115 thr/prcssthr.32
 *fill*         0x00000000c0021c8b        0x1 
 .rodata.str1.4
                0x00000000c0021c8c      0x2b4 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0021f40       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0021f40       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0021f40       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0021f40       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0021f40        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0021f40       0x5f vm86/vm8086.32
 *fill*         0x00000000c0021f9f        0x1 
 .rodata        0x00000000c0021fa0       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c0021fd0       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c0022023        0x1 
 .rodata.str1.4
                0x00000000c0022024       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c002204c       0x64 fs/fat/vfslink.32
                0x00000000c002204c                vtable for FAT
 .rodata.str1.1
                0x00000000c00220b0       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c00220f9        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c00220fc       0x64 fs/iso9660/vfslink.32
                0x00000000c00220fc                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022160       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c002217a        0x2 
 .rodata.cst4   0x00000000c002217c        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c0022180       0x38 hal/sound/sndhw.32
                0x00000000c0022180                vtable for SoundDevice
 .rodata.cst4   0x00000000c00221b8       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00221c8       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c002226c       0x2c hw/bus/pci.32
                0x00000000c002226c                vtable for PCI
 .rodata.str1.1
                0x00000000c0022298      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00224ce        0x2 
 .rodata._ZTV3IDE
                0x00000000c00224d0       0x2c hw/diskctrl/ide.32
                0x00000000c00224d0                vtable for IDE
 .rodata.str1.1
                0x00000000c00224fc       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c002251d        0x3 
 .rodata._ZTV3ATA
                0x00000000c0022520       0x34 hw/diskphys/ata.32
                0x00000000c0022520                vtable for ATA
 .rodata.str1.1
                0x00000000c0022554       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c002258c       0x34 hw/diskphys/atapi.32
                0x00000000c002258c                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00225c0        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00225c8       0x38 hw/fpu/avx.32
                0x00000000c00225c8                vtable for AVX
 .rodata.str1.1
                0x00000000c0022600        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022608       0x38 hw/fpu/mmx.32
                0x00000000c0022608                vtable for MMX
 .rodata.str1.1
                0x00000000c0022640        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022648       0x38 hw/fpu/sse.32
                0x00000000c0022648                vtable for SSE
 .rodata.str1.1
                0x00000000c0022680        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0022688       0x38 hw/fpu/x87.32
                0x00000000c0022688                vtable for x87
 .rodata        0x00000000c00226c0       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0022798       0x48 hw/intctrl/apic.32
                0x00000000c0022798                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c00227e0       0x2c hw/intctrl/apic.32
                0x00000000c00227e0                vtable for IOAPIC
 .rodata        0x00000000c002280c       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c002282e        0x2 
 .rodata._ZTV3PIC
                0x00000000c0022830       0x48 hw/intctrl/pic.32
                0x00000000c0022830                vtable for PIC
 .rodata.str1.1
                0x00000000c0022878        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0022883        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022884       0x30 hw/timer/apictimer.32
                0x00000000c0022884                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00228b4       0x1d hw/timer/pit.32
 *fill*         0x00000000c00228d1        0x3 
 .rodata._ZTV3PIT
                0x00000000c00228d4       0x30 hw/timer/pit.32
                0x00000000c00228d4                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022904      0x605
 *(.data)
 .data          0x00000000c0022904        0x0 crti.32
 .data          0x00000000c0022904        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022904                __dso_handle
 .data          0x00000000c0022908        0x0 acpica/utclib.32
 .data          0x00000000c0022908        0x0 core/malloc.32
 .data          0x00000000c0022908        0x0 libk/string.32
 .data          0x00000000c0022908        0x0 fs/fat/diskio.32
 .data          0x00000000c0022908        0x0 fs/fat/ff.32
 .data          0x00000000c0022908        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022908        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022908        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022908        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022908        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022908        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022908        0x0 core/computer.32
 .data          0x00000000c0022908        0x0 core/gdt.32
 .data          0x00000000c0022908        0x0 core/idle.32
 .data          0x00000000c0022908        0x0 core/idt.32
 .data          0x00000000c0022908        0x4 core/kheap.32
 .data          0x00000000c002290c        0x0 core/main.32
 .data          0x00000000c002290c        0x4 core/physmgr.32
                0x00000000c002290c                Phys::bitmap
 .data          0x00000000c0022910        0x0 core/pipe.32
 *fill*         0x00000000c0022910       0x10 
 .data          0x00000000c0022920       0x60 core/terminal.32
                0x00000000c0022920                VgaText::hiddenOut
                0x00000000c0022940                ansiToVGAMappings
 .data          0x00000000c0022980        0x0 core/tss.32
 .data          0x00000000c0022980        0x4 core/unixfile.32
                0x00000000c0022980                UnixFile::nextFd
 .data          0x00000000c0022984        0x8 core/virtmgr.32
                0x00000000c0022984                Virt::pageAllocPtr
                0x00000000c0022988                Virt::bitmap
 .data          0x00000000c002298c        0x4 coreobjs/c++.32
                0x00000000c002298c                __stack_chk_guard
 .data          0x00000000c0022990        0x0 dbg/kconsole.32
 .data          0x00000000c0022990        0x0 fs/vfs.32
 .data          0x00000000c0022990        0x0 hal/bus.32
 .data          0x00000000c0022990        0x0 hal/buzzer.32
 .data          0x00000000c0022990        0x0 hal/clock.32
 .data          0x00000000c0022990        0x0 hal/device.32
 .data          0x00000000c0022990        0x0 hal/diskctrl.32
 .data          0x00000000c0022990        0x0 hal/diskphys.32
 .data          0x00000000c0022990        0x0 hal/fpu.32
 *fill*         0x00000000c0022990       0x10 
 .data          0x00000000c00229a0      0x2a0 hal/intctrl.32
                0x00000000c00229a0                exceptionNames
 .data          0x00000000c0022c40        0x0 hal/keybrd.32
 .data          0x00000000c0022c40        0x0 hal/logidisk.32
 .data          0x00000000c0022c40        0x0 hal/mouse.32
 .data          0x00000000c0022c40        0x0 hal/partition.32
 .data          0x00000000c0022c40        0x0 hal/timer.32
 .data          0x00000000c0022c40        0x0 hal/vcache.32
 .data          0x00000000c0022c40        0x0 hal/video.32
 .data          0x00000000c0022c40       0x10 hw/acpi.32
                0x00000000c0022c40                legacyIRQRemaps
 *fill*         0x00000000c0022c50       0x10 
 .data          0x00000000c0022c60      0x2a4 hw/cpu.32
                0x00000000c0022c60                cpuNameList
                0x00000000c0022f00                lastCode
 .data          0x00000000c0022f04        0x0 hw/ports.32
 .data          0x00000000c0022f04        0x0 krnl/panic.32
 .data          0x00000000c0022f04        0x0 reg/registry.32
 .data          0x00000000c0022f04        0x0 sys/sc_exit.32
 .data          0x00000000c0022f04        0x0 sys/sc_loaddll.32
 .data          0x00000000c0022f04        0x0 sys/sc_read.32
 .data          0x00000000c0022f04        0x0 sys/sc_sbrk.32
 .data          0x00000000c0022f04        0x0 sys/sc_write.32
 .data          0x00000000c0022f04        0x0 sys/sc_yield.32
 .data          0x00000000c0022f04        0x0 sys/syscalls.32
 .data          0x00000000c0022f04        0x0 thr/elf.32
 .data          0x00000000c0022f04        0x4 thr/prcssthr.32
                0x00000000c0022f04                nextPID
 .data          0x00000000c0022f08        0x0 vm86/vm8086.32
 .data          0x00000000c0022f08        0x0 fs/fat/vfslink.32
 .data          0x00000000c0022f08        0x1 fs/iso9660/vfslink.32
                0x00000000c0022f08                recentDriveletter
 .data          0x00000000c0022f09        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0022f09        0x0 hal/sound/sndhw.32
 .data          0x00000000c0022f09        0x0 hw/bus/isa.32
 .data          0x00000000c0022f09        0x0 hw/bus/pci.32
 .data          0x00000000c0022f09        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0022f09        0x0 hw/diskphys/ata.32
 .data          0x00000000c0022f09        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0022f09        0x0 hw/fpu/avx.32
 .data          0x00000000c0022f09        0x0 hw/fpu/mmx.32
 .data          0x00000000c0022f09        0x0 hw/fpu/sse.32
 .data          0x00000000c0022f09        0x0 hw/fpu/x87.32
 .data          0x00000000c0022f09        0x0 hw/intctrl/apic.32
 .data          0x00000000c0022f09        0x0 hw/intctrl/pic.32
 .data          0x00000000c0022f09        0x0 hw/timer/apictimer.32
 .data          0x00000000c0022f09        0x0 hw/timer/pit.32
 .data          0x00000000c0022f09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0022f09        0x0 crtn.32
 .data          0x00000000c0022f09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0022f09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0022f09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0022f09        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0022f09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0022f09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0022f09        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c0022f0c        0x0
 .got           0x00000000c0022f0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c0022f0c        0x0
 .got.plt       0x00000000c0022f0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c0022f0c        0x0
 .igot.plt      0x00000000c0022f0c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c0022f0c        0x0
 .tm_clone_table
                0x00000000c0022f0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c0022f0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0022f09      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0022f09        0x3 
 .eh_frame      0x00000000c0022f0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c0022f0c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c0022f0c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0022f64       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c0022fa4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023010       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c0023094       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00230ac        0x0
 .rel.got       0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00230ac        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00230ac     0x21bc
                0x00000000c00230ac                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00230ac        0x0 crti.32
 .bss           0x00000000c00230ac       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00230cc        0x4 acpica/utclib.32
 *fill*         0x00000000c00230d0       0x10 
 .bss           0x00000000c00230e0      0x378 core/malloc.32
 .bss           0x00000000c0023458        0x0 libk/string.32
 .bss           0x00000000c0023458        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023458        0x8 
 .bss           0x00000000c0023460       0x88 fs/fat/ff.32
 .bss           0x00000000c00234e8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c00234e8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c00234e8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c00234e8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c00234e8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c00234e8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c00234e8        0x6 core/computer.32
                0x00000000c00234e8                computer
                0x00000000c00234ec                preemptionOn
                0x00000000c00234ed                schedulingOn
 *fill*         0x00000000c00234ee        0x2 
 .bss           0x00000000c00234f0        0x6 core/gdt.32
                0x00000000c00234f0                gdtDescr
 .bss           0x00000000c00234f6        0x0 core/idle.32
 *fill*         0x00000000c00234f6        0x2 
 .bss           0x00000000c00234f8        0x6 core/idt.32
                0x00000000c00234f8                idtDescr
 .bss           0x00000000c00234fe        0x0 core/kheap.32
 *fill*         0x00000000c00234fe        0x2 
 .bss           0x00000000c0023500        0x4 core/main.32
                0x00000000c0023500                sysBootSettings
 *fill*         0x00000000c0023504       0x1c 
 .bss           0x00000000c0023520       0x50 core/physmgr.32
                0x00000000c0023520                Phys::currentPagePointer
                0x00000000c0023524                Phys::highestMem
                0x00000000c0023528                Phys::oldPercent
                0x00000000c002352c                Phys::usedPages
                0x00000000c0023530                Phys::usablePages
                0x00000000c0023540                Phys::dmaUsage
 .bss           0x00000000c0023570        0x0 core/pipe.32
 *fill*         0x00000000c0023570       0x10 
 .bss           0x00000000c0023580       0x29 core/terminal.32
                0x00000000c0023580                textModeImplementation
                0x00000000c00235a0                terminalCycle
                0x00000000c00235a4                activeTerminal
                0x00000000c00235a8                VgaText::graphicMode
 *fill*         0x00000000c00235a9        0x1 
 .bss           0x00000000c00235aa        0x2 core/tss.32
                0x00000000c00235aa                doubleFaultSelector
 .bss           0x00000000c00235ac       0x10 core/unixfile.32
                0x00000000c00235ac                initialFilesAdded
                0x00000000c00235b0                unixFileLinkedList
 .bss           0x00000000c00235bc        0x4 core/virtmgr.32
                0x00000000c00235bc                firstVAS
 .bss           0x00000000c00235c0        0x0 coreobjs/c++.32
 .bss           0x00000000c00235c0        0x0 dbg/kconsole.32
 .bss           0x00000000c00235c0        0x4 fs/vfs.32
                0x00000000c00235c0                installedFilesystems
 .bss           0x00000000c00235c4        0x0 hal/bus.32
 .bss           0x00000000c00235c4        0x4 hal/buzzer.32
                0x00000000c00235c4                systemBuzzer
 .bss           0x00000000c00235c8        0x8 hal/clock.32
                0x00000000c00235c8                dstOn
                0x00000000c00235c9                timezoneHalfHourOffset
                0x00000000c00235cc                timezoneHourOffset
 .bss           0x00000000c00235d0        0x0 hal/device.32
 .bss           0x00000000c00235d0        0x0 hal/diskctrl.32
 .bss           0x00000000c00235d0        0x0 hal/diskphys.32
 .bss           0x00000000c00235d0        0x0 hal/fpu.32
 .bss           0x00000000c00235d0       0x20 hal/intctrl.32
                0x00000000c00235d0                pf5
                0x00000000c00235d4                pf4
                0x00000000c00235d8                pf3
                0x00000000c00235dc                pf2
                0x00000000c00235e0                pf1
                0x00000000c00235e4                pf0
                0x00000000c00235e8                gpFaultIntercept
                0x00000000c00235ec                x87FaultIntercept
 *fill*         0x00000000c00235f0       0x10 
 .bss           0x00000000c0023600      0x429 hal/keybrd.32
                0x00000000c0023600                keyboardWaitingTaskList
                0x00000000c0023604                keyboardSetupYet
                0x00000000c0023620                keystates
 *fill*         0x00000000c0023a29       0x17 
 .bss           0x00000000c0023a40       0x88 hal/logidisk.32
                0x00000000c0023a40                diskAssignments
                0x00000000c0023a60                disks
 .bss           0x00000000c0023ac8        0x4 hal/mouse.32
                0x00000000c0023ac8                guiMouseHandler
 .bss           0x00000000c0023acc        0x0 hal/partition.32
 *fill*         0x00000000c0023acc        0x4 
 .bss           0x00000000c0023ad0        0x8 hal/timer.32
                0x00000000c0023ad0                nanoSinceBoot
 .bss           0x00000000c0023ad8        0x0 hal/vcache.32
 .bss           0x00000000c0023ad8        0x4 hal/video.32
                0x00000000c0023ad8                screen
 *fill*         0x00000000c0023adc        0x4 
 .bss           0x00000000c0023ae0      0x3c0 hw/acpi.32
                0x00000000c0023ae0                systemSleepFunction
                0x00000000c0023ae4                systemResetFunction
                0x00000000c0023ae8                systemShutdownFunction
                0x00000000c0023aec                nextACPITable
                0x00000000c0023b00                acpiTables
                0x00000000c0023d00                usingXSDT
                0x00000000c0023d04                MADTpointer
                0x00000000c0023d08                RSDTpointer
                0x00000000c0023d0c                RSDPpointer
                0x00000000c0023d10                ioapicDiscoveryNumber
                0x00000000c0023d20                ioapicFoundInMADT
                0x00000000c0023d40                ioapicAddresses
                0x00000000c0023dc0                ioapicGSIBase
                0x00000000c0023e40                processorDiscoveryNumber
                0x00000000c0023e60                matchingAPICID
                0x00000000c0023e80                processorID
 .bss           0x00000000c0023ea0       0x10 hw/cpu.32
                0x00000000c0023ea0                lastD
                0x00000000c0023ea4                lastC
                0x00000000c0023ea8                lastB
                0x00000000c0023eac                lastA
 .bss           0x00000000c0023eb0        0x0 hw/ports.32
 .bss           0x00000000c0023eb0        0x1 krnl/panic.32
                0x00000000c0023eb0                Krnl::kernelInPanic
 .bss           0x00000000c0023eb1        0x0 reg/registry.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_exit.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_read.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_write.32
 .bss           0x00000000c0023eb1        0x0 sys/sc_yield.32
 *fill*         0x00000000c0023eb1        0xf 
 .bss           0x00000000c0023ec0      0x200 sys/syscalls.32
                0x00000000c0023ec0                systemCallHandlers
 .bss           0x00000000c00240c0      0x7a4 thr/elf.32
                0x00000000c00240c0                Thr::driverLookupNext
                0x00000000c00240e0                Thr::driverLookupLen
                0x00000000c00242e0                Thr::driverLookupAddr
                0x00000000c00244e0                Thr::driverNameLookup
                0x00000000c00246e0                Thr::kernelSymbols
                0x00000000c0024760                Thr::kernelStringTable
                0x00000000c00247e0                Thr::kernelSymbolTable
                0x00000000c0024860                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0024864        0x4 
 .bss           0x00000000c0024868       0x68 thr/prcssthr.32
                0x00000000c0024868                cleanerThread
                0x00000000c002486c                weNeedTheCleanerToNotBlock
                0x00000000c0024870                xxxx
                0x00000000c0024874                retValLockStuff
                0x00000000c0024878                retValSchedLock
                0x00000000c002487c                lockStuffLock
                0x00000000c0024880                schedulerLock
                0x00000000c0024884                taskSwitchesPostponedFlag
                0x00000000c0024888                postponeTaskSwitchesCounter
                0x00000000c002488c                irqDisableCounter
                0x00000000c0024890                terminatedTaskList
                0x00000000c002489c                sleepingTaskList
                0x00000000c00248a8                taskList
                0x00000000c00248b4                kernelProcess
 .bss           0x00000000c00248d0        0x0 vm86/vm8086.32
 *fill*         0x00000000c00248d0       0x10 
 .bss           0x00000000c00248e0       0xf0 fs/fat/vfslink.32
                0x00000000c00248e0                FAT::fats
                0x00000000c0024900                FAT::vfsToFatRemaps
                0x00000000c0024980                fatToVFSRemaps
 *fill*         0x00000000c00249d0       0x10 
 .bss           0x00000000c00249e0      0x820 fs/iso9660/vfslink.32
                0x00000000c00249e0                recentSector
                0x00000000c0024a00                recentBuffer
 .bss           0x00000000c0025200        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c0025200        0x0 hal/sound/sndhw.32
 .bss           0x00000000c0025200        0x0 hw/bus/isa.32
 .bss           0x00000000c0025200        0x0 hw/bus/pci.32
 .bss           0x00000000c0025200        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c0025200        0x8 hw/diskphys/ata.32
                0x00000000c0025200                ataSectorsWritten
                0x00000000c0025204                ataSectorsRead
 .bss           0x00000000c0025208        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c0025208        0x0 hw/fpu/avx.32
 .bss           0x00000000c0025208        0x0 hw/fpu/mmx.32
 .bss           0x00000000c0025208        0x0 hw/fpu/sse.32
 .bss           0x00000000c0025208        0x0 hw/fpu/x87.32
 *fill*         0x00000000c0025208       0x18 
 .bss           0x00000000c0025220       0x41 hw/intctrl/apic.32
                0x00000000c0025220                noOfIOAPICs
                0x00000000c0025240                ioapics
                0x00000000c0025260                IOAPICsSetupYet
 .bss           0x00000000c0025261        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0025261        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025261        0x3 
 .bss           0x00000000c0025264        0x4 hw/timer/pit.32
                0x00000000c0025264                pitFreq
 .bss           0x00000000c0025268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025268        0x0 crtn.32
 .bss           0x00000000c0025268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0025268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0025268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0025268        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0025268        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0025268        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0025268        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025268                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027424                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
