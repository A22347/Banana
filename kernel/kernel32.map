Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/clock/rtc.32
 .comment       0x0000000000000000       0x12 hw/clock/rtc.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/clock/rtc.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e978
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x44c D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001e2                goToVM86
                0x00000000c0000213                goToUsermode
                0x00000000c000023e                switchToThreadASMFirstTime
                0x00000000c000024c                switchToThreadASM
                0x00000000c00002ec                detectCPUID
                0x00000000c0000302                asmQuickAcquireLock
                0x00000000c0000320                asmQuickReleaseLock
                0x00000000c000032c                asmAcquireLock
                0x00000000c000034d                asmReleaseLock
                0x00000000c0000360                loadGDT
                0x00000000c0000380                isr0
                0x00000000c0000390                isr1
                0x00000000c000039a                isr2
                0x00000000c00003a4                isr3
                0x00000000c00003ae                isr4
                0x00000000c00003b8                isr5
                0x00000000c00003c2                isr6
                0x00000000c00003cc                isr7
                0x00000000c00003d6                isr8
                0x00000000c00003de                isr9
                0x00000000c00003e8                isr10
                0x00000000c00003f0                isr11
                0x00000000c00003f8                isr12
                0x00000000c0000400                isr13
                0x00000000c0000408                isr14
                0x00000000c0000410                isr15
                0x00000000c000041a                isr16
                0x00000000c0000424                isr17
                0x00000000c000042e                isr18
                0x00000000c0000438                isr96
                0x00000000c0000442                irq0
                0x00000000c000044c                irq1
                0x00000000c0000456                irq2
                0x00000000c0000460                irq3
                0x00000000c000046a                irq4
                0x00000000c0000474                irq5
                0x00000000c000047e                irq6
                0x00000000c0000488                irq7
                0x00000000c0000492                irq8
                0x00000000c000049c                irq9
                0x00000000c00004a6                irq10
                0x00000000c00004b0                irq11
                0x00000000c00004ba                irq12
                0x00000000c00004c4                irq13
                0x00000000c00004ce                irq14
                0x00000000c00004d8                irq15
                0x00000000c00004e2                irq16
                0x00000000c00004ec                irq17
                0x00000000c00004f6                irq18
                0x00000000c0000500                irq19
                0x00000000c000050a                irq20
                0x00000000c0000514                irq21
                0x00000000c000051e                irq22
                0x00000000c0000528                irq23
                0x00000000c0000532                int_common_stub
                0x00000000c0000562                syscall_common_stub
 .text          0x00000000c000059c      0x6ff acpica/utclib.32
                0x00000000c000059c                memcmp
                0x00000000c00005f4                memmove
                0x00000000c0000661                memcpy
                0x00000000c00006d8                memset
                0x00000000c0000701                strlen
                0x00000000c0000724                strpbrk
                0x00000000c0000766                strtok
                0x00000000c00007f4                strcpy
                0x00000000c0000826                strncpy
                0x00000000c000087a                strcmp
                0x00000000c00008bc                strchr
                0x00000000c00008e5                strncmp
                0x00000000c0000941                strcat
                0x00000000c0000982                strncat
                0x00000000c00009de                strstr
                0x00000000c0000a31                toupper
                0x00000000c0000a57                tolower
                0x00000000c0000a7d                simple_strtoul
 .text          0x00000000c0000c9b      0xfbf core/malloc.32
                0x00000000c0000e06                dlfree
                0x00000000c0001161                dlmalloc
                0x00000000c000169e                dlrealloc
                0x00000000c0001853                dlmemalign
                0x00000000c0001976                dlcalloc
                0x00000000c0001a10                dlcfree
                0x00000000c0001a15                dlindependent_calloc
                0x00000000c0001a3a                dlindependent_comalloc
                0x00000000c0001a51                dlvalloc
                0x00000000c0001a7c                dlpvalloc
                0x00000000c0001ab2                dlmalloc_trim
                0x00000000c0001abf                dlmalloc_usable_size
                0x00000000c0001af0                dlmallinfo
                0x00000000c0001bbf                dlmalloc_stats
                0x00000000c0001bd0                dlmallopt
 .text          0x00000000c0001c5a        0x0 libk/string.32
 .text          0x00000000c0001c5a       0x51 fs/fat/diskio.32
                0x00000000c0001c5a                disk_status
                0x00000000c0001c5d                disk_initialize
                0x00000000c0001c60                disk_read
                0x00000000c0001c76                disk_write
                0x00000000c0001c8c                disk_ioctl
 .text          0x00000000c0001cab     0x6833 fs/fat/ff.32
                0x00000000c0004f79                f_mount
                0x00000000c0004fdb                f_open
                0x00000000c0005417                f_read
                0x00000000c0005697                f_write
                0x00000000c0005951                f_sync
                0x00000000c0005b2d                f_close
                0x00000000c0005b5c                f_lseek
                0x00000000c0006013                f_opendir
                0x00000000c0006115                f_closedir
                0x00000000c0006137                f_readdir
                0x00000000c00061d2                f_stat
                0x00000000c0006261                f_getfree
                0x00000000c000642c                f_truncate
                0x00000000c0006524                f_unlink
                0x00000000c00066a7                f_mkdir
                0x00000000c00068d3                f_rename
                0x00000000c0006bc6                f_chmod
                0x00000000c0006ca4                f_utime
                0x00000000c0006d82                f_getlabel
                0x00000000c0006f70                f_setlabel
                0x00000000c00071dd                f_forward
                0x00000000c00073bb                f_mkfs
 .text          0x00000000c00084de       0x2d fs/fat/ffsystem.32
                0x00000000c00084de                ff_memalloc
                0x00000000c00084f4                ff_memfree
 .text          0x00000000c000850b      0x253 fs/fat/ffunicode.32
                0x00000000c000850b                ff_uni2oem
                0x00000000c000859b                ff_oem2uni
                0x00000000c0008607                ff_wtoupper
 .text          0x00000000c000875e      0x70e hal/libresample/samplerate.32
                0x00000000c00087e6                src_delete
                0x00000000c0008822                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008aab                src_set_ratio
                0x00000000c0008b02                src_get_channels
                0x00000000c0008b24                src_reset
                0x00000000c0008b68                src_new
                0x00000000c0008bf6                src_callback_new
                0x00000000c0008c58                src_get_name
                0x00000000c0008c8f                src_get_description
                0x00000000c0008cc6                src_get_version
                0x00000000c0008ccc                src_is_valid_ratio
                0x00000000c0008ce6                src_error
                0x00000000c0008cf4                src_strerror
                0x00000000c0008d07                src_simple
                0x00000000c0008d5a                src_short_to_float_array
                0x00000000c0008d80                src_float_to_short_array
                0x00000000c0008de4                src_int_to_float_array
                0x00000000c0008e0a                src_float_to_int_array
 .text          0x00000000c0008e6c      0x3fd hal/libresample/src_linear.32
                0x00000000c00091c4                linear_get_name
                0x00000000c00091d3                linear_get_description
                0x00000000c00091e2                linear_set_converter
 .text          0x00000000c0009269     0x1b46 hal/libresample/src_sinc.32
                0x00000000c000abbf                sinc_get_name
                0x00000000c000abd2                sinc_get_description
                0x00000000c000abe5                sinc_set_converter
 .text          0x00000000c000adaf      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000b0dd                zoh_get_name
                0x00000000c000b0ec                zoh_get_description
                0x00000000c000b0fb                zoh_set_converter
 .text          0x00000000c000b182      0x68d core/computer.32
                0x00000000c000b182                Computer::close(int, int, void*)
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b322                Computer::setBootMessage(char const*)
                0x00000000c000b324                Computer::start()
                0x00000000c000b3fe                firstTask()
                0x00000000c000b40c                Computer::detectFeatures()
                0x00000000c000b5e6                Computer::displayFeatures()
                0x00000000c000b5e8                Computer::rdmsr(unsigned int)
                0x00000000c000b614                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b64c                Computer::nmiEnabled()
                0x00000000c000b658                Computer::readCMOS(unsigned char)
                0x00000000c000b672                Computer::enableNMI(bool)
                0x00000000c000b68a                Computer::open(int, int, void*)
                0x00000000c000b752                Computer::disableNMI()
                0x00000000c000b760                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b77e                Computer::handleNMI()
                0x00000000c000b7e4                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b80f      0xfaa core/elf.32
                0x00000000c000b80f                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000ba8c                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000bca2                runtimeReferenceHelper()
                0x00000000c000bcb5                getAddressOfKernelSymbol(char const*)
                0x00000000c000bd04                loadKernelSymbolTable(char const*)
                0x00000000c000bfc5                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c6e2                loadDLL(char const*)
                0x00000000c000c7ab                executeDLL(unsigned long, void*)
 *fill*         0x00000000c000c7b9        0x1 
 .text          0x00000000c000c7ba      0x1b7 core/gdt.32
                0x00000000c000c7ba                GDTEntry::setBase(unsigned int)
                0x00000000c000c7d6                GDTEntry::setLimit(unsigned int)
                0x00000000c000c7f4                GDT::GDT()
                0x00000000c000c7f4                GDT::GDT()
                0x00000000c000c80a                GDT::addEntry(GDTEntry)
                0x00000000c000c846                GDT::getNumberOfEntries()
                0x00000000c000c84e                GDT::flush()
                0x00000000c000c870                GDT::setup()
 .text          0x00000000c000c971       0x61 core/idle.32
                0x00000000c000c971                idleFunction(void*)
 .text          0x00000000c000c9d2      0x45f core/idt.32
                0x00000000c000c9d2                IDTEntry::IDTEntry(bool)
                0x00000000c000c9d2                IDTEntry::IDTEntry(bool)
                0x00000000c000ca40                IDTEntry::setOffset(unsigned int)
                0x00000000c000ca54                IDT::IDT()
                0x00000000c000ca54                IDT::IDT()
                0x00000000c000ca56                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ca5e                IDT::addEntry(IDTEntry, int)
                0x00000000c000ca78                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000cab0                IDT::flush()
                0x00000000c000caca                IDT::setup()
 .text          0x00000000c000ce31      0x519 core/kconsole.32
                0x00000000c000ce31                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ce92                logc(char)
                0x00000000c000cea9                logs(char*)
                0x00000000c000cec6                logWriteInt(unsigned int)
                0x00000000c000cee3                logWriteIntBase(unsigned int, int)
                0x00000000c000cf02                kprintf(char const*, ...)
                0x00000000c000d020                panic(char const*)
 .text          0x00000000c000d34a      0x20d core/kheap.32
                0x00000000c000d34a                sbrk
                0x00000000c000d462                mmap
                0x00000000c000d478                munmap
                0x00000000c000d48e                liballoc_lock()
                0x00000000c000d49f                liballoc_unlock()
                0x00000000c000d4b0                liballoc_alloc(int)
                0x00000000c000d4cb                liballoc_free(void*, int)
                0x00000000c000d4e9                realloc
                0x00000000c000d4fd                malloc
                0x00000000c000d50d                free
                0x00000000c000d51d                rfree
                0x00000000c000d52d                calloc
 .text          0x00000000c000d557      0x38d core/main.32
                0x00000000c000d557                hwTextMode_loadInData(VgaText*)
                0x00000000c000d59c                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d5de                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d632                hwTextMode_update(VgaText*)
                0x00000000c000d633                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d67b                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d6b7                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d73d                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d79b                setupTextMode()
                0x00000000c000d7ec                kernel_main
 .text          0x00000000c000d8e4      0x46c core/physmgr.32
                0x00000000c000d8e4                Phys::allocateDMA(unsigned long)
                0x00000000c000d987                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d9cf                Phys::setPageState(unsigned long, bool)
                0x00000000c000da01                Phys::getPageState(unsigned long)
                0x00000000c000da1d                Phys::freePage(unsigned long)
                0x00000000c000daa7                Phys::allocatePage()
                0x00000000c000db63                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000db9b                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000dd50      0x273 core/pipe.32
                0x00000000c000dd50                Pipe::isAtty()
                0x00000000c000dd54                Pipe::~Pipe()
                0x00000000c000dd54                Pipe::~Pipe()
                0x00000000c000dd78                Pipe::~Pipe()
                0x00000000c000dda0                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000de94                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000df5c                Pipe::Pipe(int)
                0x00000000c000df5c                Pipe::Pipe(int)
 *fill*         0x00000000c000dfc3        0x1 
 .text          0x00000000c000dfc4     0x1154 core/prcssthr.32
                0x00000000c000dfc4                changeTSS
                0x00000000c000dff2                Process::addArgs(char**)
                0x00000000c000e04c                Process::Process(char const*, Process*, char**)
                0x00000000c000e04c                Process::Process(char const*, Process*, char**)
                0x00000000c000e204                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e204                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e387                disableIRQs()
                0x00000000c000e38f                getIRQNestingLevel()
                0x00000000c000e395                enableIRQs()
                0x00000000c000e3a4                lockScheduler()
                0x00000000c000e3a6                unlockScheduler()
                0x00000000c000e3a8                userModeEntryPoint(void*)
                0x00000000c000e3cb                lockStuff()
                0x00000000c000e3d7                taskStartupFunction
                0x00000000c000e3e0                updateTimeUsed()
                0x00000000c000e43e                switchToThread(ThreadControlBlock*)
                0x00000000c000e48e                Semaphore::Semaphore(int)
                0x00000000c000e48e                Semaphore::Semaphore(int)
                0x00000000c000e4bc                Mutex::Mutex()
                0x00000000c000e4bc                Mutex::Mutex()
                0x00000000c000e4ce                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e5b2                Process::createUserThread()
                0x00000000c000e5ce                setupMultitasking(void (*)())
                0x00000000c000e6d8                schedule()
                0x00000000c000e75d                unlockStuff()
                0x00000000c000e792                forkProcess(regs*)
                0x00000000c000e900                Semaphore::tryAcquire()
                0x00000000c000e92e                Semaphore::assertLocked(char const*)
                0x00000000c000e961                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e9a3                blockTask(TaskState)
                0x00000000c000e9c4                waitTask(int, int*, int)
                0x00000000c000ea06                nanoSleepUntil(unsigned long long)
                0x00000000c000ea5d                nanoSleep(unsigned long long)
                0x00000000c000ea72                sleep(unsigned long long)
                0x00000000c000ea90                Semaphore::acquire()
                0x00000000c000eaf8                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000eb86                taskReturned
                0x00000000c000ebc8                unblockTask(ThreadControlBlock*)
                0x00000000c000ec77                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000ef14                cleanerTaskFunction(void*)
                0x00000000c000efa4                terminateTask(int)
                0x00000000c000f02c                Semaphore::release()
 .text          0x00000000c000f118      0xd8a core/syscalls.32
                0x00000000c000f118                sysCallGetPID(regs*)
                0x00000000c000f124                sysCallSeekDir(regs*)
                0x00000000c000f129                sysCallTellDir(regs*)
                0x00000000c000f12e                sysCallVerify(regs*)
                0x00000000c000f138                sysCallGetArgc(regs*)
                0x00000000c000f148                sysFormatDisk(regs*)
                0x00000000c000f1b2                sysSetDiskVolumeLabel(regs*)
                0x00000000c000f1f8                sysGetDiskVolumeLabel(regs*)
                0x00000000c000f249                sysShutdown(regs*)
                0x00000000c000f291                sysCallGetCwd(regs*)
                0x00000000c000f2b0                sysCallSetCwd(regs*)
                0x00000000c000f2cc                sysCallRealpath(regs*)
                0x00000000c000f30f                sysCallOpen(regs*)
                0x00000000c000f3ff                sysCallReadDir(regs*)
                0x00000000c000f46e                sysCallIsATTY(regs*)
                0x00000000c000f4c1                sysCallSeek(regs*)
                0x00000000c000f512                sysCallTell(regs*)
                0x00000000c000f55e                sysCallSizeFromFilename(regs*)
                0x00000000c000f5d7                sysCallSize(regs*)
                0x00000000c000f629                sysCallClose(regs*)
                0x00000000c000f677                sysCallOpenDir(regs*)
                0x00000000c000f6e4                sysCallMakeDir(regs*)
                0x00000000c000f73d                sysCallCloseDir(regs*)
                0x00000000c000f78b                sysCallWait(regs*)
                0x00000000c000f7a5                sysCallFork(regs*)
                0x00000000c000f7c1                sysCallExecve(regs*)
                0x00000000c000f816                sysCallRmdir(regs*)
                0x00000000c000f868                sysCallUnlink(regs*)
                0x00000000c000f8ba                sysCallGetArgv(regs*)
                0x00000000c000f906                sysCallTTYName(regs*)
                0x00000000c000f982                sysCallGetEnv(regs*)
                0x00000000c000f9d4                sysCallUSleep(regs*)
                0x00000000c000f9fb                sysCallSpawn(regs*)
                0x00000000c000fa6b                sysAppSettings(regs*)
                0x00000000c000fb8a                sysSetFatAttrib(regs*)
                0x00000000c000fbea                sysPanic(regs*)
                0x00000000c000fc10                sysPipe(regs*)
                0x00000000c000fc55                sysGetUnixTime(regs*)
                0x00000000c000fc69                string_ends_with(char const*, char const*)
                0x00000000c000fcb1                setupSystemCalls()
                0x00000000c000fe60                systemCall(regs*, void*)
 .text          0x00000000c000fea2      0xf65 core/terminal.32
                0x00000000c000fea2                VgaText::isAtty()
                0x00000000c000fea6                VgaText::~VgaText()
                0x00000000c000fea6                VgaText::~VgaText()
                0x00000000c000feca                VgaText::~VgaText()
                0x00000000c000fef4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000ff14                setTerminalScrollLock(bool)
                0x00000000c000ff15                addToTerminalCycle(VgaText*)
                0x00000000c000ff42                installVgaTextImplementation()
                0x00000000c000ff57                scrollTerminalScrollLock(int)
                0x00000000c000ff58                VgaText::load()
                0x00000000c000ffac                VgaText::updateCursor()
                0x00000000c000ffc6                VgaText::showCursor(bool)
                0x00000000c000ffd6                VgaText::disableBlink(bool)
                0x00000000c0010010                VgaText::doANSI_SGR(int)
                0x00000000c001009c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c00100b2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00100c8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00100e8                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00100fa                VgaText::scrollScreen()
                0x00000000c001018e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c00101a0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0010200                VgaText::getCursorX()
                0x00000000c001020c                VgaText::getCursorY()
                0x00000000c0010218                VgaText::setCursor(int, int)
                0x00000000c0010236                VgaText::setCursorX(int)
                0x00000000c0010252                VgaText::setCursorY(int)
                0x00000000c001026e                VgaText::incrementCursor(bool)
                0x00000000c00102d6                VgaText::updateRAMUsageDisplay(int)
                0x00000000c0010330                VgaText::updateDiskUsage()
                0x00000000c0010496                VgaText::updateTitle()
                0x00000000c00104dc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00104ec                VgaText::setTitleColour(VgaColour)
                0x00000000c00104fc                VgaText::setTitle(char*)
                0x00000000c0010522                VgaText::decrementCursor(bool)
                0x00000000c001054a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c0010646                VgaText::isShowingCursor()
                0x00000000c0010652                VgaText::isBlinkDisabled()
                0x00000000c0010660                VgaText::setCursorHeight(int)
                0x00000000c001067e                VgaText::getCursorHeight()
                0x00000000c0010689                setActiveTerminal(VgaText*)
                0x00000000c001073b                doTerminalCycle()
                0x00000000c0010758                VgaText::doUpdate()
                0x00000000c001076a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c001092a                VgaText::clearScreen()
                0x00000000c001098e                VgaText::putchar(char)
                0x00000000c0010aa8                VgaText::puts(char const*)
                0x00000000c0010ace                VgaText::putx(unsigned int)
                0x00000000c0010b14                VgaText::VgaText(char const*)
                0x00000000c0010b14                VgaText::VgaText(char const*)
                0x00000000c0010ca6                VgaText::receiveKey(unsigned char)
                0x00000000c0010d8e                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0010de2                newTerminal(char*)
 *fill*         0x00000000c0010e07        0x1 
 .text          0x00000000c0010e08      0x18f core/tss.32
                0x00000000c0010e08                TSS::TSS()
                0x00000000c0010e08                TSS::TSS()
                0x00000000c0010e16                TSS::setESP(unsigned long)
                0x00000000c0010e28                TSS::flush()
                0x00000000c0010e48                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010f97        0x1 
 .text          0x00000000c0010f98      0x32f core/unixfile.32
                0x00000000c0010f98                ReservedFilename::isAtty()
                0x00000000c0010fae                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011040                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00110d6                UnixFile::getFileDescriptor()
                0x00000000c00110de                UnixFile::UnixFile(int)
                0x00000000c00110de                UnixFile::UnixFile(int)
                0x00000000c001111a                ReservedFilename::ReservedFilename(int)
                0x00000000c001111a                ReservedFilename::ReservedFilename(int)
                0x00000000c0011142                UnixFile::~UnixFile()
                0x00000000c0011142                UnixFile::~UnixFile()
                0x00000000c00111c8                UnixFile::~UnixFile()
                0x00000000c00111f0                ReservedFilename::~ReservedFilename()
                0x00000000c00111f0                ReservedFilename::~ReservedFilename()
                0x00000000c0011214                ReservedFilename::~ReservedFilename()
                0x00000000c001123b                getFromFileDescriptor(int)
 *fill*         0x00000000c00112c7        0x1 
 .text          0x00000000c00112c8     0x1175 core/virtmgr.32
                0x00000000c00112c8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00112fd                Virt::getPageState(unsigned long)
                0x00000000c0011321                Virt::allocateKernelVirtualPages(int)
                0x00000000c0011432                Virt::virtualMemorySetup()
                0x00000000c00114b1                Virt::getAKernelVAS()
                0x00000000c00114b7                Virt::setupPageSwapping(int)
                0x00000000c00115dc                VAS::VAS()
                0x00000000c00115dc                VAS::VAS()
                0x00000000c001160c                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011638                VAS::getPageTableEntry(unsigned long)
                0x00000000c0011657                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001177a                VAS::freeAllocatedPages(unsigned long)
                0x00000000c001179e                VAS::virtualToPhysical(unsigned long)
                0x00000000c00117b6                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00117ec                VAS::~VAS()
                0x00000000c00117ec                VAS::~VAS()
                0x00000000c0011958                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0011a58                VAS::allocatePages(int, int)
                0x00000000c0011c28                VAS::setCPUSpecific(unsigned long)
                0x00000000c0011c44                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0011d0e                VAS::VAS(VAS*)
                0x00000000c0011d0e                VAS::VAS(VAS*)
                0x00000000c0012058                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c0012146                VAS::VAS(bool)
                0x00000000c0012146                VAS::VAS(bool)
                0x00000000c0012376                mapVASFirstTime
 .text          0x00000000c001243d       0x93 coreobjs/c++.32
                0x00000000c001243d                __cxa_atexit
                0x00000000c0012440                __cxa_finalize
                0x00000000c0012441                __stack_chk_fail
                0x00000000c00124a1                __cxa_pure_virtual
                0x00000000c00124b2                operator new(unsigned long)
                0x00000000c00124b7                operator new[](unsigned long)
                0x00000000c00124bc                operator delete(void*)
                0x00000000c00124c1                operator delete(void*, unsigned long)
                0x00000000c00124c6                operator delete[](void*)
                0x00000000c00124cb                operator delete[](void*, unsigned long)
 .text          0x00000000c00124d0        0x0 debugger/debug.32
 .text          0x00000000c00124d0      0xb68 fs/vfs.32
                0x00000000c00124d0                File::read(unsigned long long, void*, int*)
                0x00000000c0012528                File::write(unsigned long long, void*, int*)
                0x00000000c0012580                Directory::read(unsigned long long, void*, int*)
                0x00000000c00125d8                Directory::write(unsigned long long, void*, int*)
                0x00000000c0012606                File::isAtty()
                0x00000000c001260a                Directory::isAtty()
                0x00000000c001260e                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0012614                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c001261a                File::~File()
                0x00000000c001261a                File::~File()
                0x00000000c001263e                File::~File()
                0x00000000c0012668                Directory::~Directory()
                0x00000000c0012668                Directory::~Directory()
                0x00000000c001268c                Directory::~Directory()
                0x00000000c00126b6                Filesystem::Filesystem()
                0x00000000c00126b6                Filesystem::Filesystem()
                0x00000000c00126da                Filesystem::~Filesystem()
                0x00000000c00126da                Filesystem::~Filesystem()
                0x00000000c00126e8                Filesystem::~Filesystem()
                0x00000000c001270c                initVFS()
                0x00000000c0012736                standardiseFiles(char*, char const*, char const*)
                0x00000000c00128e0                File::File(char const*, Process*)
                0x00000000c00128e0                File::File(char const*, Process*)
                0x00000000c0012944                File::open(FileOpenMode)
                0x00000000c00129a2                File::close()
                0x00000000c0012a02                File::seek(unsigned long long)
                0x00000000c0012a58                File::tell(unsigned long long*)
                0x00000000c0012aa8                File::rewind()
                0x00000000c0012abc                File::unlink()
                0x00000000c0012b08                File::rename(char const*)
                0x00000000c0012b56                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012bb2                File::exists()
                0x00000000c0012bf0                File::stat(unsigned long long*, bool*)
                0x00000000c0012c51                getcwd(Process*, char*, int)
                0x00000000c0012c7b                setcwd(Process*, char*)
                0x00000000c0012da2                Directory::Directory(char const*, Process*)
                0x00000000c0012da2                Directory::Directory(char const*, Process*)
                0x00000000c0012e06                Directory::open()
                0x00000000c0012e62                Directory::close()
                0x00000000c0012ec2                Directory::unlink()
                0x00000000c0012f0e                Directory::rename(char const*)
                0x00000000c0012f5c                Directory::exists()
                0x00000000c0012f9a                Directory::read(dirent*)
                0x00000000c0012fe6                Directory::create()
                0x00000000c0013032                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013038       0x84 hal/bus.32
                0x00000000c0013038                Bus::Bus(char const*)
                0x00000000c0013038                Bus::Bus(char const*)
                0x00000000c001306e                Bus::~Bus()
                0x00000000c001306e                Bus::~Bus()
                0x00000000c0013092                Bus::~Bus()
 .text          0x00000000c00130bc      0x14e hal/buzzer.32
                0x00000000c00130bc                Buzzer::Buzzer(char const*)
                0x00000000c00130bc                Buzzer::Buzzer(char const*)
                0x00000000c0013100                Buzzer::~Buzzer()
                0x00000000c0013100                Buzzer::~Buzzer()
                0x00000000c0013124                Buzzer::~Buzzer()
                0x00000000c001314e                Buzzer::stop()
                0x00000000c0013161                beepThread(void*)
                0x00000000c001319c                Buzzer::beep(int, int, bool)
 .text          0x00000000c001320a      0x42f hal/clock.32
                0x00000000c001320a                loadClockSettings()
                0x00000000c0013224                Clock::Clock(char const*)
                0x00000000c0013224                Clock::Clock(char const*)
                0x00000000c001325a                Clock::~Clock()
                0x00000000c001325a                Clock::~Clock()
                0x00000000c001327e                Clock::~Clock()
                0x00000000c00132a8                Clock::timeInSecondsLocal()
                0x00000000c00132f0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013349                datetimeToSeconds(datetime_t)
                0x00000000c0013470                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00134d0                secondsToDatetime(unsigned long long)
                0x00000000c0013614                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0013639        0x1 
 .text          0x00000000c001363a      0x504 hal/device.32
                0x00000000c001363a                Device::hibernate()
                0x00000000c001363c                Device::wake()
                0x00000000c001363e                Device::detect()
                0x00000000c0013640                Device::disableLegacy()
                0x00000000c0013642                Device::powerSaving(PowerSavingLevel)
                0x00000000c0013644                DriverlessDevice::close(int, int, void*)
                0x00000000c0013648                DriverlessDevice::detect()
                0x00000000c001364a                DriverlessDevice::open(int, int, void*)
                0x00000000c001365e                Device::~Device()
                0x00000000c001365e                Device::~Device()
                0x00000000c001366c                Device::~Device()
                0x00000000c0013694                Device::findAndLoadDriver()
                0x00000000c0013696                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00136bc                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0013710                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c001376e                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00137bc                Device::addChild(Device*)
                0x00000000c0013800                Device::removeAllChildren()
                0x00000000c0013846                Device::hibernateAll()
                0x00000000c0013876                Device::wakeAll()
                0x00000000c00138a6                Device::detectAll()
                0x00000000c00138d6                Device::disableLegacyAll()
                0x00000000c0013906                Device::loadDriversForAll()
                0x00000000c0013932                Device::closeAll()
                0x00000000c0013968                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c001399e                Device::setName(char const*)
                0x00000000c00139ac                Device::Device(char const*)
                0x00000000c00139ac                Device::Device(char const*)
                0x00000000c0013a9e                Device::getName()
                0x00000000c0013aa8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013aa8                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013ad0                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0013b14                getDevicesOfType(DeviceType)
 .text          0x00000000c0013b3e       0x84 hal/diskctrl.32
                0x00000000c0013b3e                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b3e                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b74                HardDiskController::~HardDiskController()
                0x00000000c0013b74                HardDiskController::~HardDiskController()
                0x00000000c0013b98                HardDiskController::~HardDiskController()
 .text          0x00000000c0013bc2       0xde hal/diskphys.32
                0x00000000c0013bc2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013bc2                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013c2a                PhysicalDisk::startCache()
                0x00000000c0013c52                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c52                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c76                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013ca0      0x128 hal/fpu.32
                0x00000000c0013ca0                FPU::FPU(char const*)
                0x00000000c0013ca0                FPU::FPU(char const*)
                0x00000000c0013cd6                FPU::~FPU()
                0x00000000c0013cd6                FPU::~FPU()
                0x00000000c0013cfa                FPU::~FPU()
                0x00000000c0013d24                setupFPU()
 .text          0x00000000c0013dc8      0xb89 hal/intctrl.32
                0x00000000c0013dc8                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0013e00                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013e52                doubleFault(regs*, void*)
                0x00000000c0013e60                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013efc                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013fa4                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001402b                nmiHandler(regs*, void*)
                0x00000000c0014039                int_handler
                0x00000000c00140d4                InterruptController::InterruptController(char const*)
                0x00000000c00140d4                InterruptController::InterruptController(char const*)
                0x00000000c001417a                InterruptController::~InterruptController()
                0x00000000c001417a                InterruptController::~InterruptController()
                0x00000000c001419e                InterruptController::~InterruptController()
                0x00000000c00141c8                displayDebugInfo(regs*)
                0x00000000c00145aa                gpFault(regs*, void*)
                0x00000000c00145e3                pgFault(regs*, void*)
                0x00000000c00145fa                otherISRHandler(regs*, void*)
                0x00000000c0014619                opcodeFault(regs*, void*)
                0x00000000c0014683                displayProgramFault(char const*)
                0x00000000c00146ac                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00146f6                setupInterruptController()
 *fill*         0x00000000c0014951        0x1 
 .text          0x00000000c0014952      0x604 hal/keybrd.32
                0x00000000c0014952                startGUI(void*)
                0x00000000c00149c0                sendKeyToTerminal(unsigned char)
                0x00000000c0014a2c                sendKeyboardToken(KeyboardToken)
                0x00000000c0014e07                clearInternalKeybuffer(VgaText*)
                0x00000000c0014e3c                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014ecc                Keyboard::Keyboard(char const*)
                0x00000000c0014ecc                Keyboard::Keyboard(char const*)
                0x00000000c0014f08                Keyboard::~Keyboard()
                0x00000000c0014f08                Keyboard::~Keyboard()
                0x00000000c0014f2c                Keyboard::~Keyboard()
 .text          0x00000000c0014f56      0x400 hal/logidisk.32
                0x00000000c0014f56                LogicalDisk::close(int, int, void*)
                0x00000000c0014f5a                LogicalDisk::~LogicalDisk()
                0x00000000c0014f5a                LogicalDisk::~LogicalDisk()
                0x00000000c0014f7e                LogicalDisk::~LogicalDisk()
                0x00000000c0014fa8                LogicalDisk::open(int, int, void*)
                0x00000000c0014fbc                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014ff4                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c001503a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001503a                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00150f0                LogicalDisk::assignDriveLetter()
                0x00000000c00151a6                LogicalDisk::mount()
                0x00000000c0015218                LogicalDisk::unmount()
                0x00000000c0015228                LogicalDisk::unassignDriveLetter()
                0x00000000c001527e                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00152ea                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0015356       0x84 hal/mouse.32
                0x00000000c0015356                Mouse::Mouse(char const*)
                0x00000000c0015356                Mouse::Mouse(char const*)
                0x00000000c001538c                Mouse::~Mouse()
                0x00000000c001538c                Mouse::~Mouse()
                0x00000000c00153b0                Mouse::~Mouse()
 .text          0x00000000c00153da      0x339 hal/partition.32
                0x00000000c00153da                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015482                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0015713        0x1 
 .text          0x00000000c0015714      0x2e7 hal/timer.32
                0x00000000c0015714                Timer::Timer(char const*)
                0x00000000c0015714                Timer::Timer(char const*)
                0x00000000c001574a                Timer::~Timer()
                0x00000000c001574a                Timer::~Timer()
                0x00000000c001576e                Timer::~Timer()
                0x00000000c0015798                Timer::read()
                0x00000000c00157a3                timerHandler(unsigned long long)
                0x00000000c00158da                setupTimer(int)
 *fill*         0x00000000c00159fb        0x1 
 .text          0x00000000c00159fc      0x2d1 hal/vcache.32
                0x00000000c00159fc                VCache::VCache(PhysicalDisk*)
                0x00000000c00159fc                VCache::VCache(PhysicalDisk*)
                0x00000000c0015aec                VCache::writeWriteBuffer()
                0x00000000c0015b28                VCache::~VCache()
                0x00000000c0015b28                VCache::~VCache()
                0x00000000c0015b68                VCache::~VCache()
                0x00000000c0015b90                VCache::write(unsigned long long, int, void*)
                0x00000000c0015c74                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015ccd        0x1 
 .text          0x00000000c0015cce      0x26d hal/video.32
                0x00000000c0015cce                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0015d18                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0015d96                Video::clearScreen(unsigned int)
                0x00000000c0015dca                Video::putpixel(int, int, unsigned int)
                0x00000000c0015dd8                Video::Video(char const*)
                0x00000000c0015dd8                Video::Video(char const*)
                0x00000000c0015e0e                Video::~Video()
                0x00000000c0015e0e                Video::~Video()
                0x00000000c0015e32                Video::~Video()
                0x00000000c0015e5c                Video::isMonochrome()
                0x00000000c0015e68                Video::getWidth()
                0x00000000c0015e74                Video::getHeight()
                0x00000000c0015e80                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015f3b        0x1 
 .text          0x00000000c0015f3c      0xc56 hw/acpi.32
                0x00000000c0015f3c                ACPI::close(int, int, void*)
                0x00000000c0015ff1                findRSDP()
                0x00000000c001607b                loadACPITables(unsigned char*)
                0x00000000c00162a2                findRSDT(unsigned char*)
                0x00000000c00163c0                findDataTable(unsigned char*, char*)
                0x00000000c001645c                scanMADT()
                0x00000000c00167f0                ACPI::ACPI()
                0x00000000c00167f0                ACPI::ACPI()
                0x00000000c0016850                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0016932                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00169f8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00169fe                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0016a46                ACPI::open(int, int, void*)
                0x00000000c0016b7a                ACPI::sleep()
 .text          0x00000000c0016b92     0x132c hw/cpu.32
                0x00000000c0016b92                CPU::close(int, int, void*)
                0x00000000c0016b95                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016d29                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016fd7                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016ff3                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c001700b                AMD_K6_writeback(int, int, int)
                0x00000000c001707e                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017101                cpuidCheckEDX(unsigned int)
                0x00000000c001712e                cpuidCheckECX(unsigned int)
                0x00000000c001715b                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017188                cpuidCheckExtendedECX(unsigned int)
                0x00000000c00171b5                getCPUNumber()
                0x00000000c00171b8                thisCPU()
                0x00000000c00171cc                CPU::CPU()
                0x00000000c00171cc                CPU::CPU()
                0x00000000c001725a                CPU::displayFeatures()
                0x00000000c001725c                CPU::detectFeatures()
                0x00000000c0017c4e                CPU::setupSMEP()
                0x00000000c0017c68                CPU::setupUMIP()
                0x00000000c0017c80                CPU::setupTSC()
                0x00000000c0017c98                CPU::setupLargePages()
                0x00000000c0017cb0                CPU::setupPAT()
                0x00000000c0017cec                CPU::setupMTRR()
                0x00000000c0017cee                CPU::setupGlobalPages()
                0x00000000c0017d04                CPU::allowUsermodeDataAccess()
                0x00000000c0017d16                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017d28                CPU::setupSMAP()
                0x00000000c0017d4e                CPU::setupFeatures()
                0x00000000c0017df0                CPU::open(int, int, void*)
 .text          0x00000000c0017ebe        0x0 hw/ports.32
 .text          0x00000000c0017ebe      0x503 registry/registry.32
                0x00000000c0017ebe                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0018016                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0018175                Reg::getLine(char*, char*, char*)
                0x00000000c00181ac                Reg::readInt(char*, char*, int*)
                0x00000000c0018297                Reg::readString(char*, char*, char*, int)
                0x00000000c0018318                Reg::readBool(char*, char*, bool*)
                0x00000000c001833d                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0018369                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0018395                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00183c1       0x18 syscalls/sc_exit.32
                0x00000000c00183c1                Sys::exit(regs*)
 .text          0x00000000c00183d9       0x68 syscalls/sc_read.32
                0x00000000c00183d9                Sys::read(regs*)
 .text          0x00000000c0018441       0x55 syscalls/sc_sbrk.32
                0x00000000c0018441                Sys::sbrk(regs*)
 .text          0x00000000c0018496       0x68 syscalls/sc_write.32
                0x00000000c0018496                Sys::write(regs*)
 .text          0x00000000c00184fe       0x1a syscalls/sc_yield.32
                0x00000000c00184fe                Sys::yield(regs*)
 .text          0x00000000c0018518      0x8bf vm86/vm8086.32
                0x00000000c0018518                vm8086EntryPoint(void*)
                0x00000000c0018543                inbv(unsigned short)
                0x00000000c0018549                outbv(unsigned short, unsigned char)
                0x00000000c0018553                realToLinear(unsigned short, unsigned short)
                0x00000000c0018563                getSegment(unsigned int)
                0x00000000c001856b                getOffset(unsigned int)
                0x00000000c0018570                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c001869f                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018729                readByteFromReal(unsigned short, unsigned short)
                0x00000000c001873a                readWordFromReal(unsigned short, unsigned short)
                0x00000000c001874c                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c001875d                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018772                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018788                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001879d                vm8086FaultHandler(regs*)
 *fill*         0x00000000c0018dd7        0x1 
 .text          0x00000000c0018dd8     0x1088 fs/fat/vfslink.32
                0x00000000c0018dd8                FAT::getName()
                0x00000000c0018dde                FAT::tell(void*, unsigned long long*)
                0x00000000c0018e12                FAT::stat(void*, unsigned long long*)
                0x00000000c0018e46                FAT::exists(char const*)
                0x00000000c0018e4a                FAT::~FAT()
                0x00000000c0018e4a                FAT::~FAT()
                0x00000000c0018e6e                FAT::~FAT()
                0x00000000c0018e96                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018f34                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018fee                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00191d2                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00193d8                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00194e0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001953a                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019594                FAT::close(void*)
                0x00000000c00195e0                FAT::closeDir(void*)
                0x00000000c001962c                FAT::seek(void*, unsigned long long)
                0x00000000c0019680                fatWrapperReadDisk
                0x00000000c00196c7                fatWrapperWriteDisk
                0x00000000c001970e                fatWrapperIoctl
                0x00000000c0019812                FAT::FAT()
                0x00000000c0019812                FAT::FAT()
                0x00000000c0019864                FAT::fixFilepath(char*)
                0x00000000c001989c                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00199c4                FAT::openDir(char const*, void**)
                0x00000000c0019a6a                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b54                FAT::unlink(char const*)
                0x00000000c0019bce                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d22                FAT::rename(char const*, char const*)
                0x00000000c0019de6                FAT::mkdir(char const*)
 .text          0x00000000c0019e60      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019e60                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e66                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019e96                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019eba                ISO9660::getName()
                0x00000000c0019ec0                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019ee4                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019eea                ISO9660::unlink(char const*)
                0x00000000c0019ef0                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019ef6                ISO9660::rename(char const*, char const*)
                0x00000000c0019efc                ISO9660::mkdir(char const*)
                0x00000000c0019f02                ISO9660::close(void*)
                0x00000000c0019f24                ISO9660::closeDir(void*)
                0x00000000c0019f46                ISO9660::~ISO9660()
                0x00000000c0019f46                ISO9660::~ISO9660()
                0x00000000c0019f6a                ISO9660::~ISO9660()
                0x00000000c0019f91                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019fd3                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a03a                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a08a                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a2ce                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a55c                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a5b1                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a784                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a812                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a8ac                ISO9660::exists(char const*)
                0x00000000c001a8d0                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a964                ISO9660::openDir(char const*, void**)
                0x00000000c001aa1c                ISO9660::ISO9660()
                0x00000000c001aa1c                ISO9660::ISO9660()
 *fill*         0x00000000c001aa3f        0x1 
 .text          0x00000000c001aa40      0x244 hal/sound/sndchannel.32
                0x00000000c001aa40                SoundChannel::~SoundChannel()
                0x00000000c001aa40                SoundChannel::~SoundChannel()
                0x00000000c001aa5c                SoundChannel::setSpeed(float)
                0x00000000c001aa68                SoundChannel::getSpeed()
                0x00000000c001aa70                SoundChannel::setVolume(int)
                0x00000000c001aa8c                SoundChannel::getVolume()
                0x00000000c001aa94                SoundChannel::pause()
                0x00000000c001aa9e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aa9e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ab94                SoundChannel::play()
                0x00000000c001ab9e                SoundChannel::paused()
                0x00000000c001aba6                SoundChannel::getSampleRate()
                0x00000000c001abae                SoundChannel::getBits()
                0x00000000c001abb6                SoundChannel::getBufferUsed()
                0x00000000c001abbe                SoundChannel::getBufferSize()
                0x00000000c001abc6                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001ac38                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ac84      0x317 hal/sound/sndhw.32
                0x00000000c001ac84                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac84                SoundDevice::SoundDevice(char const*)
                0x00000000c001acf0                SoundDevice::~SoundDevice()
                0x00000000c001acf0                SoundDevice::~SoundDevice()
                0x00000000c001ad6a                SoundDevice::~SoundDevice()
                0x00000000c001ad94                SoundDevice::getFreeChannelNum()
                0x00000000c001adae                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001ae1e                SoundDevice::removeChannel(int)
                0x00000000c001ae50                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001aebc                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001af9b        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af9b        0x1 
 .text          0x00000000c001af9c      0x6e5 hw/bus/pci.32
                0x00000000c001af9c                PCI::open(int, int, void*)
                0x00000000c001afb0                PCI::close(int, int, void*)
                0x00000000c001afb4                PCI::PCI()
                0x00000000c001afb4                PCI::PCI()
                0x00000000c001b034                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b07c                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b09e                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0c2                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b106                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b12a                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b14c                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b16e                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b192                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1f2                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b25e                PCI::checkBus(unsigned char)
                0x00000000c001b282                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b3f2                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5c2                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b62e                PCI::detect()
 *fill*         0x00000000c001b681        0x1 
 .text          0x00000000c001b682      0x4b9 hw/clock/rtc.32
                0x00000000c001b682                RTC::open(int, int, void*)
                0x00000000c001b686                RTC::close(int, int, void*)
                0x00000000c001b68a                RTC::timeInSecondsUTC()
                0x00000000c001b69c                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b6a0                RTC::timeInDatetimeUTC()
                0x00000000c001b6c6                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b704                RTC::~RTC()
                0x00000000c001b704                RTC::~RTC()
                0x00000000c001b728                RTC::~RTC()
                0x00000000c001b752                RTC::get_update_in_progress_flag()
                0x00000000c001b76a                RTC::completeRTCRefresh()
                0x00000000c001ba56                rtcIRQHandler(regs*, void*)
                0x00000000c001ba9c                RTC::RTC()
                0x00000000c001ba9c                RTC::RTC()
 *fill*         0x00000000c001bb3b        0x1 
 .text          0x00000000c001bb3c      0xc70 hw/diskctrl/ide.32
                0x00000000c001bb3c                IDE::close(int, int, void*)
                0x00000000c001bb40                IDE::IDE()
                0x00000000c001bb40                IDE::IDE()
                0x00000000c001bb74                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb86                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb88                IDE::getBase(unsigned char)
                0x00000000c001bb9a                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc5a                IDE::read(unsigned char, unsigned char)
                0x00000000c001bd08                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd6e                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd8a                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bda6                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bdec                IDE::open(int, int, void*)
                0x00000000c001c1fc                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c2c8                IDE::detect()
                0x00000000c001c5b0                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c746                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c7ac      0x62b hw/diskphys/ata.32
                0x00000000c001c7ac                ATA::close(int, int, void*)
                0x00000000c001c7d0                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c7d2                ATA::ATA()
                0x00000000c001c7d2                ATA::ATA()
                0x00000000c001c800                ATA::flush(bool)
                0x00000000c001c84a                ATA::readyForCommand()
                0x00000000c001c89a                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cc18                ATA::read(unsigned long long, int, void*)
                0x00000000c001cc80                ATA::write(unsigned long long, int, void*)
                0x00000000c001cce8                ATA::detectCHS()
                0x00000000c001cd12                ATA::open(int, int, void*)
 *fill*         0x00000000c001cdd7        0x1 
 .text          0x00000000c001cdd8      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cdd8                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cdde                ATAPI::close(int, int, void*)
                0x00000000c001ce02                ATAPI::ATAPI()
                0x00000000c001ce02                ATAPI::ATAPI()
                0x00000000c001ce30                ATAPI::readyForCommand()
                0x00000000c001ce80                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d140                ATAPI::diskRemoved()
                0x00000000c001d15c                ATAPI::eject()
                0x00000000c001d1a2                ATAPI::diskInserted()
                0x00000000c001d1d0                ATAPI::detectMedia()
                0x00000000c001d28c                ATAPI::open(int, int, void*)
                0x00000000c001d30c                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d38b        0x1 
 .text          0x00000000c001d38c       0x8e hw/fpu/avx.32
                0x00000000c001d38c                AVX::open(int, int, void*)
                0x00000000c001d39e                AVX::close(int, int, void*)
                0x00000000c001d3b0                AVX::available()
                0x00000000c001d3c2                AVX::save(void*)
                0x00000000c001d3da                AVX::load(void*)
                0x00000000c001d3f2                AVX::AVX()
                0x00000000c001d3f2                AVX::AVX()
 .text          0x00000000c001d41a       0x90 hw/fpu/mmx.32
                0x00000000c001d41a                MMX::available()
                0x00000000c001d42e                MMX::open(int, int, void*)
                0x00000000c001d440                MMX::close(int, int, void*)
                0x00000000c001d452                MMX::save(void*)
                0x00000000c001d46a                MMX::load(void*)
                0x00000000c001d482                MMX::MMX()
                0x00000000c001d482                MMX::MMX()
 .text          0x00000000c001d4aa       0x96 hw/fpu/sse.32
                0x00000000c001d4aa                SSE::open(int, int, void*)
                0x00000000c001d4bc                SSE::close(int, int, void*)
                0x00000000c001d4ce                SSE::available()
                0x00000000c001d4e8                SSE::save(void*)
                0x00000000c001d500                SSE::load(void*)
                0x00000000c001d518                SSE::SSE()
                0x00000000c001d518                SSE::SSE()
 .text          0x00000000c001d540       0x8e hw/fpu/x87.32
                0x00000000c001d540                x87::open(int, int, void*)
                0x00000000c001d552                x87::close(int, int, void*)
                0x00000000c001d564                x87::available()
                0x00000000c001d576                x87::save(void*)
                0x00000000c001d58e                x87::load(void*)
                0x00000000c001d5a6                x87::x87()
                0x00000000c001d5a6                x87::x87()
 .text          0x00000000c001d5ce      0x5f3 hw/intctrl/apic.32
                0x00000000c001d5ce                APIC::disable()
                0x00000000c001d5d0                APIC::close(int, int, void*)
                0x00000000c001d5f2                IOAPIC::close(int, int, void*)
                0x00000000c001d5f8                APIC::io_wait()
                0x00000000c001d5fe                APIC::getBase()
                0x00000000c001d640                APIC::eoi(unsigned char)
                0x00000000c001d66e                APIC::open(int, int, void*)
                0x00000000c001d728                IOAPIC::IOAPIC()
                0x00000000c001d728                IOAPIC::IOAPIC()
                0x00000000c001d750                APIC::APIC()
                0x00000000c001d750                APIC::APIC()
                0x00000000c001d820                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d852                IOAPIC::read(int)
                0x00000000c001d87a                IOAPIC::open(int, int, void*)
                0x00000000c001d970                IOAPIC::write(int, int)
                0x00000000c001d99c                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001da56                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001dbc1        0x1 
 .text          0x00000000c001dbc2      0x3d3 hw/intctrl/pic.32
                0x00000000c001dbc2                PIC::disable()
                0x00000000c001dbf0                PIC::close(int, int, void*)
                0x00000000c001dc12                PIC::PIC()
                0x00000000c001dc12                PIC::PIC()
                0x00000000c001dce8                PIC::ioWait()
                0x00000000c001dcee                PIC::getIRQReg(int)
                0x00000000c001dd58                PIC::eoi(unsigned char)
                0x00000000c001ddea                PIC::remap()
                0x00000000c001df56                PIC::open(int, int, void*)
 *fill*         0x00000000c001df95        0x1 
 .text          0x00000000c001df96      0x252 hw/timer/apictimer.32
                0x00000000c001df96                APICTimer::close(int, int, void*)
                0x00000000c001df9c                apicTimerHandler(regs*, void*)
                0x00000000c001dfca                APICTimer::write(int)
                0x00000000c001e0c8                APICTimer::open(int, int, void*)
                0x00000000c001e1c0                APICTimer::APICTimer()
                0x00000000c001e1c0                APICTimer::APICTimer()
 .text          0x00000000c001e1e8      0x1a7 hw/timer/pit.32
                0x00000000c001e1e8                PIT::write(int)
                0x00000000c001e266                pitHandler(regs*, void*)
                0x00000000c001e292                PIT::open(int, int, void*)
                0x00000000c001e2e0                PIT::close(int, int, void*)
                0x00000000c001e310                PIT::PIT()
                0x00000000c001e310                PIT::PIT()
 *fill*         0x00000000c001e38f        0x1 
 .text          0x00000000c001e390        0xa hw/fpu/x86/avx.32
                0x00000000c001e390                avxDetect
                0x00000000c001e396                avxSave
                0x00000000c001e397                avxLoad
                0x00000000c001e398                avxInit
                0x00000000c001e399                avxClose
 *fill*         0x00000000c001e39a        0x6 
 .text          0x00000000c001e3a0       0x38 hw/fpu/x86/sse.32
                0x00000000c001e3a0                sseDetect
                0x00000000c001e3bb                sseSave
                0x00000000c001e3c1                sseLoad
                0x00000000c001e3c7                sseInit
                0x00000000c001e3d7                sseClose
 *fill*         0x00000000c001e3d8        0x8 
 .text          0x00000000c001e3e0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e3e6                x87Detect
                0x00000000c001e401                x87Save
                0x00000000c001e407                x87Load
                0x00000000c001e40c                x87Init
                0x00000000c001e426                x87Close
 *fill*         0x00000000c001e427        0x1 
 .text          0x00000000c001e428       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e44d        0x0 crtn.32
 *fill*         0x00000000c001e44d        0x3 
 .text          0x00000000c001e450      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e450                __divdi3
 *fill*         0x00000000c001e59b        0x1 
 .text          0x00000000c001e59c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e59c                __moddi3
 *fill*         0x00000000c001e71a        0x2 
 .text          0x00000000c001e71c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e71c                __udivdi3
 *fill*         0x00000000c001e81b        0x1 
 .text          0x00000000c001e81c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e81c                __umoddi3
 *fill*         0x00000000c001e936        0xa 
 .text          0x00000000c001e940       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e940                fabs
 *fill*         0x00000000c001e95e        0x2 
 .text          0x00000000c001e960        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e960                lrint
 .text          0x00000000c001e96c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e96c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e978        0x0
 .iplt          0x00000000c001e978        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e978        0xf
 .init          0x00000000c001e978        0x3 crti.32
                0x00000000c001e978                _init
 .init          0x00000000c001e97b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e980        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e985        0x2 crtn.32

.fini           0x00000000c001e987        0xa
 .fini          0x00000000c001e987        0x3 crti.32
                0x00000000c001e987                _fini
 .fini          0x00000000c001e98a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e98f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e992       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e992       0x23 core/computer.32
                0x00000000c001e992                Computer::~Computer()
                0x00000000c001e992                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e9b6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e9b6       0x2a core/computer.32
                0x00000000c001e9b6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e9e0       0x15
 .text._Z10idleCommonv
                0x00000000c001e9e0       0x15 core/idle.32
                0x00000000c001e9e0                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e9f5       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e9f5       0x12 core/kconsole.32
                0x00000000c001e9f5                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001ea07       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001ea07       0x12 core/kconsole.32
                0x00000000c001ea07                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001ea19       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001ea19       0x12 core/kconsole.32
                0x00000000c001ea19                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ea2b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ea2b       0x12 core/kconsole.32
                0x00000000c001ea2b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001ea3d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001ea3d        0x9 core/kheap.32
                0x00000000c001ea3d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea46        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea46        0x2 core/prcssthr.32
                0x00000000c001ea46                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ea46                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea48       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea48       0x3e core/prcssthr.32
                0x00000000c001ea48                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ea48                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea86       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea86       0x58 core/prcssthr.32
                0x00000000c001ea86                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ea86                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eade       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eade       0xd3 core/prcssthr.32
                0x00000000c001eade                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebb2       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001ebb2       0x1c core/prcssthr.32
                0x00000000c001ebb2                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebce       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebce       0xae core/prcssthr.32
                0x00000000c001ebce                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec7c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec7c        0x7 core/prcssthr.32
                0x00000000c001ec7c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec84        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec84        0x8 core/prcssthr.32
                0x00000000c001ec84                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec8c        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec8c        0x2 core/unixfile.32
                0x00000000c001ec8c                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ec8c                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec8e       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec8e       0x58 core/unixfile.32
                0x00000000c001ec8e                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ec8e                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ece6        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ece6        0x7 core/unixfile.32
                0x00000000c001ece6                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecee       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecee       0xa1 core/unixfile.32
                0x00000000c001ecee                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed90        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed90        0x8 core/unixfile.32
                0x00000000c001ed90                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed98      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed98      0x130 core/unixfile.32
                0x00000000c001ed98                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eec8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eec8       0x1a hal/device.32
                0x00000000c001eec8                DriverlessDevice::~DriverlessDevice()
                0x00000000c001eec8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eee2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eee2       0x2a hal/device.32
                0x00000000c001eee2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ef0c       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ef0c       0xdc hal/device.32
                0x00000000c001ef0c                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efe8       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efe8       0x58 hal/device.32
                0x00000000c001efe8                LinkedList<Device>::LinkedList()
                0x00000000c001efe8                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001f040       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001f040       0x12 hal/intctrl.32
                0x00000000c001f040                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001f052       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001f052       0x12 hal/intctrl.32
                0x00000000c001f052                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f064       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f064       0x12 hal/intctrl.32
                0x00000000c001f064                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f076       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f076       0x12 hal/intctrl.32
                0x00000000c001f076                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f088       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f088       0x12 hal/intctrl.32
                0x00000000c001f088                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f09a       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f09a       0x12 hal/intctrl.32
                0x00000000c001f09a                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001f0ac       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f0ac       0x23 hw/acpi.32
                0x00000000c001f0ac                ACPI::~ACPI()
                0x00000000c001f0ac                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f0d0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f0d0       0x2a hw/acpi.32
                0x00000000c001f0d0                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f0fa       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f0fa       0x23 hw/cpu.32
                0x00000000c001f0fa                CPU::~CPU()
                0x00000000c001f0fa                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f11e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f11e       0x2a hw/cpu.32
                0x00000000c001f11e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f148        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f148        0x9 hw/cpu.32
                0x00000000c001f148                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f151        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f151        0x9 hw/cpu.32
                0x00000000c001f151                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001f15a       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f15a       0x23 hw/bus/pci.32
                0x00000000c001f15a                PCI::~PCI()
                0x00000000c001f15a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f17e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f17e       0x2a hw/bus/pci.32
                0x00000000c001f17e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f1a8       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f1a8       0x23 hw/diskctrl/ide.32
                0x00000000c001f1a8                IDE::~IDE()
                0x00000000c001f1a8                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f1cc       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f1cc       0x2a hw/diskctrl/ide.32
                0x00000000c001f1cc                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f1f6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f1f6       0x23 hw/diskphys/ata.32
                0x00000000c001f1f6                ATA::~ATA()
                0x00000000c001f1f6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f21a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f21a       0x2a hw/diskphys/ata.32
                0x00000000c001f21a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f244       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f244       0x23 hw/diskphys/atapi.32
                0x00000000c001f244                ATAPI::~ATAPI()
                0x00000000c001f244                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f268       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f268       0x2a hw/diskphys/atapi.32
                0x00000000c001f268                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f292       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f292       0x23 hw/fpu/avx.32
                0x00000000c001f292                AVX::~AVX()
                0x00000000c001f292                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f2b6       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f2b6       0x2a hw/fpu/avx.32
                0x00000000c001f2b6                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f2e0       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f2e0       0x23 hw/fpu/mmx.32
                0x00000000c001f2e0                MMX::~MMX()
                0x00000000c001f2e0                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f304       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f304       0x2a hw/fpu/mmx.32
                0x00000000c001f304                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f32e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f32e       0x23 hw/fpu/sse.32
                0x00000000c001f32e                SSE::~SSE()
                0x00000000c001f32e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f352       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f352       0x2a hw/fpu/sse.32
                0x00000000c001f352                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f37c       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f37c       0x23 hw/fpu/x87.32
                0x00000000c001f37c                x87::~x87()
                0x00000000c001f37c                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f3a0       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f3a0       0x2a hw/fpu/x87.32
                0x00000000c001f3a0                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f3ca       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f3ca       0x23 hw/intctrl/apic.32
                0x00000000c001f3ca                IOAPIC::~IOAPIC()
                0x00000000c001f3ca                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f3ee       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f3ee       0x2a hw/intctrl/apic.32
                0x00000000c001f3ee                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f418       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f418       0x23 hw/intctrl/apic.32
                0x00000000c001f418                APIC::~APIC()
                0x00000000c001f418                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f43c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f43c       0x2a hw/intctrl/apic.32
                0x00000000c001f43c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f466       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f466       0x23 hw/intctrl/pic.32
                0x00000000c001f466                PIC::~PIC()
                0x00000000c001f466                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f48a       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f48a       0x2a hw/intctrl/pic.32
                0x00000000c001f48a                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f4b4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f4b4       0x23 hw/timer/apictimer.32
                0x00000000c001f4b4                APICTimer::~APICTimer()
                0x00000000c001f4b4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f4d8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f4d8       0x2a hw/timer/apictimer.32
                0x00000000c001f4d8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f502       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f502       0x23 hw/timer/pit.32
                0x00000000c001f502                PIT::~PIT()
                0x00000000c001f502                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f526       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f526       0x2a hw/timer/pit.32
                0x00000000c001f526                PIT::~PIT()

.rodata         0x00000000c001f550    0x1b878
                0x00000000c001f550                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f550        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f554        0x4 core/prcssthr.32
 .ctors         0x00000000c001f558        0x4 core/unixfile.32
 .ctors         0x00000000c001f55c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f560                end_ctors = .
                0x00000000c001f560                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f560        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f564        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f564                __DTOR_END__
                0x00000000c001f568                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f568       0x18 
 .rodata        0x00000000c001f580      0x101 acpica/utclib.32
                0x00000000c001f580                AcpiGbl_Ctypes
 *fill*         0x00000000c001f681        0x3 
 .rodata        0x00000000c001f684       0x18 core/malloc.32
 *fill*         0x00000000c001f69c        0x4 
 .rodata        0x00000000c001f6a0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f7c0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f816        0xa 
 .rodata        0x00000000c001f820      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fc20       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fcd6        0x2 
 .rodata.str1.4
                0x00000000c001fcd8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c002007d        0x3 
 .rodata        0x00000000c0020080       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c00200e0       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020100       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020114       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020156        0x2 
 .rodata.cst8   0x00000000c0020158        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020160    0x185a4 hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0038704       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00387c8       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0038812        0x6 
 .rodata.cst8   0x00000000c0038818        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0038820       0x14 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038834       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c003887c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c003887c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00388ef        0x1 
 .rodata._ZTV8Computer
                0x00000000c00388f0       0x2c core/computer.32
                0x00000000c00388f0                vtable for Computer
 .rodata.str1.1
                0x00000000c003891c      0x1a8 core/elf.32
                                        0x1b6 (size before relaxing)
 .rodata.str1.1
                0x00000000c0038ac4       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0038ae0      0x152 core/kconsole.32
 *fill*         0x00000000c0038c32        0x2 
 .rodata        0x00000000c0038c34      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c0038d84       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0038e39        0x3 
 .rodata.str1.4
                0x00000000c0038e3c       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0038e6c        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0038e78       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038e93       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c0038ee1       0x39 core/pipe.32
 *fill*         0x00000000c0038f1a        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0038f1c       0x1c core/pipe.32
                0x00000000c0038f1c                vtable for Pipe
 .rodata.str1.1
                0x00000000c0038f38       0x53 core/prcssthr.32
 *fill*         0x00000000c0038f8b        0x1 
 .rodata.str1.4
                0x00000000c0038f8c      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c003920c       0x19 core/prcssthr.32
 *fill*         0x00000000c0039225        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039228       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c003924a       0x15 core/prcssthr.32
 *fill*         0x00000000c003925f        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039260       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00392ab        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c00392b3       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c0039310       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c003935c       0x9d core/terminal.32
 *fill*         0x00000000c00393f9        0x3 
 .rodata._ZTV7VgaText
                0x00000000c00393fc       0x1c core/terminal.32
                0x00000000c00393fc                vtable for VgaText
 .rodata        0x00000000c0039418       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c0039436       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0039450       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0039450       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0039450        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0039450       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c003947f       0x22 core/unixfile.32
 *fill*         0x00000000c003947f        0x1 
 .rodata.str1.4
                0x00000000c0039480       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00394a0       0x1c core/unixfile.32
                0x00000000c00394a0                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00394bc       0x1c core/unixfile.32
                0x00000000c00394bc                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00394d8      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c0039683      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c0039807       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c003983a       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c003983a        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c003983c       0x64 fs/vfs.32
                0x00000000c003983c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00398a0       0x1c fs/vfs.32
                0x00000000c00398a0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00398bc       0x1c fs/vfs.32
                0x00000000c00398bc                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00398d8       0x2c hal/bus.32
                0x00000000c00398d8                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0039904       0x30 hal/buzzer.32
                0x00000000c0039904                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0039934       0x3c hal/clock.32
                0x00000000c0039934                vtable for Clock
 *fill*         0x00000000c0039970       0x10 
 .rodata        0x00000000c0039980       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00399b0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00399ce       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00399ce       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00399ce       0x19 hal/device.32
 *fill*         0x00000000c00399ce        0x2 
 .rodata._ZTV6Device
                0x00000000c00399d0       0x2c hal/device.32
                0x00000000c00399d0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c00399fc       0x2c hal/device.32
                0x00000000c00399fc                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0039a28       0x2c hal/diskctrl.32
                0x00000000c0039a28                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0039a54       0x34 hal/diskphys.32
                0x00000000c0039a54                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0039a88        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0039a90       0x38 hal/fpu.32
                0x00000000c0039a90                vtable for FPU
 .rodata.str1.4
                0x00000000c0039ac8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0039bf8      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0039d65        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0039d68       0x48 hal/intctrl.32
                0x00000000c0039d68                vtable for InterruptController
 .rodata        0x00000000c0039db0       0x4e hal/keybrd.32
 *fill*         0x00000000c0039dfe        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0039e00       0x34 hal/keybrd.32
                0x00000000c0039e00                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0039e34       0x7a hal/logidisk.32
 *fill*         0x00000000c0039eae        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0039eb0       0x2c hal/logidisk.32
                0x00000000c0039eb0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0039edc       0x2c hal/mouse.32
                0x00000000c0039edc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0039f08        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039f13       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039f13        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039f13       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039f13       0x22 hal/timer.32
 *fill*         0x00000000c0039f13        0x1 
 .rodata._ZTV5Timer
                0x00000000c0039f14       0x30 hal/timer.32
                0x00000000c0039f14                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0039f44       0x10 hal/vcache.32
                0x00000000c0039f44                vtable for VCache
 .rodata.str1.1
                0x00000000c0039f54        0xf hal/video.32
 *fill*         0x00000000c0039f63        0x1 
 .rodata._ZTV5Video
                0x00000000c0039f64       0x40 hal/video.32
                0x00000000c0039f64                vtable for Video
 .rodata.str1.1
                0x00000000c0039fa4       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c003a058       0x82 hw/acpi.32
 *fill*         0x00000000c003a0da        0x2 
 .rodata._ZTV4ACPI
                0x00000000c003a0dc       0x2c hw/acpi.32
                0x00000000c003a0dc                vtable for ACPI
 .rodata.str1.1
                0x00000000c003a108      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c003a32c       0x2c hw/cpu.32
                0x00000000c003a32c                vtable for CPU
 .rodata.str1.1
                0x00000000c003a358       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c003a39d       0x5f vm86/vm8086.32
 .rodata        0x00000000c003a3fc       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c003a42c       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c003a47f        0x1 
 .rodata.str1.4
                0x00000000c003a480       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c003a4a8       0x64 fs/fat/vfslink.32
                0x00000000c003a4a8                vtable for FAT
 .rodata.str1.1
                0x00000000c003a50c       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c003a555        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c003a558       0x64 fs/iso9660/vfslink.32
                0x00000000c003a558                vtable for ISO9660
 .rodata.str1.1
                0x00000000c003a5bc       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c003a5d6        0x2 
 .rodata.cst4   0x00000000c003a5d8        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c003a5dc       0x38 hal/sound/sndhw.32
                0x00000000c003a5dc                vtable for SoundDevice
 .rodata.cst4   0x00000000c003a614       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c003a624       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c003a6c8       0x2c hw/bus/pci.32
                0x00000000c003a6c8                vtable for PCI
 .rodata.str1.1
                0x00000000c003a6f4       0x2b hw/clock/rtc.32
 *fill*         0x00000000c003a71f        0x1 
 .rodata._ZTV3RTC
                0x00000000c003a720       0x3c hw/clock/rtc.32
                0x00000000c003a720                vtable for RTC
 .rodata.str1.1
                0x00000000c003a75c      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c003a992        0x2 
 .rodata._ZTV3IDE
                0x00000000c003a994       0x2c hw/diskctrl/ide.32
                0x00000000c003a994                vtable for IDE
 .rodata.str1.1
                0x00000000c003a9c0       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c003a9e1        0x3 
 .rodata._ZTV3ATA
                0x00000000c003a9e4       0x34 hw/diskphys/ata.32
                0x00000000c003a9e4                vtable for ATA
 .rodata.str1.1
                0x00000000c003aa18       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c003aa50       0x34 hw/diskphys/atapi.32
                0x00000000c003aa50                vtable for ATAPI
 .rodata.str1.1
                0x00000000c003aa84        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c003aa8c       0x38 hw/fpu/avx.32
                0x00000000c003aa8c                vtable for AVX
 .rodata.str1.1
                0x00000000c003aac4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c003aacc       0x38 hw/fpu/mmx.32
                0x00000000c003aacc                vtable for MMX
 .rodata.str1.1
                0x00000000c003ab04        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c003ab0c       0x38 hw/fpu/sse.32
                0x00000000c003ab0c                vtable for SSE
 .rodata.str1.1
                0x00000000c003ab44        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c003ab4c       0x38 hw/fpu/x87.32
                0x00000000c003ab4c                vtable for x87
 .rodata        0x00000000c003ab84       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c003ac5c       0x48 hw/intctrl/apic.32
                0x00000000c003ac5c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c003aca4       0x2c hw/intctrl/apic.32
                0x00000000c003aca4                vtable for IOAPIC
 .rodata        0x00000000c003acd0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c003acf2        0x2 
 .rodata._ZTV3PIC
                0x00000000c003acf4       0x48 hw/intctrl/pic.32
                0x00000000c003acf4                vtable for PIC
 .rodata.str1.1
                0x00000000c003ad3c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c003ad47        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c003ad48       0x30 hw/timer/apictimer.32
                0x00000000c003ad48                vtable for APICTimer
 .rodata.str1.1
                0x00000000c003ad78       0x1d hw/timer/pit.32
 *fill*         0x00000000c003ad95        0x3 
 .rodata._ZTV3PIT
                0x00000000c003ad98       0x30 hw/timer/pit.32
                0x00000000c003ad98                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c003adc8      0x5fd
 *(.data)
 .data          0x00000000c003adc8        0x0 crti.32
 .data          0x00000000c003adc8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c003adc8                __dso_handle
 .data          0x00000000c003adcc        0x0 acpica/utclib.32
 .data          0x00000000c003adcc        0x0 core/malloc.32
 .data          0x00000000c003adcc        0x0 libk/string.32
 .data          0x00000000c003adcc        0x0 fs/fat/diskio.32
 .data          0x00000000c003adcc        0x0 fs/fat/ff.32
 .data          0x00000000c003adcc        0x0 fs/fat/ffsystem.32
 .data          0x00000000c003adcc        0x0 fs/fat/ffunicode.32
 .data          0x00000000c003adcc        0x0 hal/libresample/samplerate.32
 .data          0x00000000c003adcc        0x0 hal/libresample/src_linear.32
 .data          0x00000000c003adcc        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c003adcc        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c003adcc        0x0 core/computer.32
 .data          0x00000000c003adcc        0x0 core/elf.32
 .data          0x00000000c003adcc        0x0 core/gdt.32
 .data          0x00000000c003adcc        0x0 core/idle.32
 .data          0x00000000c003adcc        0x0 core/idt.32
 .data          0x00000000c003adcc        0x0 core/kconsole.32
 .data          0x00000000c003adcc        0x4 core/kheap.32
 .data          0x00000000c003add0        0x0 core/main.32
 .data          0x00000000c003add0        0x4 core/physmgr.32
                0x00000000c003add0                Phys::bitmap
 .data          0x00000000c003add4        0x0 core/pipe.32
 .data          0x00000000c003add4        0x4 core/prcssthr.32
                0x00000000c003add4                nextPID
 .data          0x00000000c003add8        0x0 core/syscalls.32
 *fill*         0x00000000c003add8        0x8 
 .data          0x00000000c003ade0       0x60 core/terminal.32
                0x00000000c003ade0                VgaText::hiddenOut
                0x00000000c003ae00                ansiToVGAMappings
 .data          0x00000000c003ae40        0x0 core/tss.32
 .data          0x00000000c003ae40        0x4 core/unixfile.32
                0x00000000c003ae40                UnixFile::nextFd
 .data          0x00000000c003ae44        0x8 core/virtmgr.32
                0x00000000c003ae44                Virt::pageAllocPtr
                0x00000000c003ae48                Virt::bitmap
 .data          0x00000000c003ae4c        0x4 coreobjs/c++.32
                0x00000000c003ae4c                __stack_chk_guard
 .data          0x00000000c003ae50        0x0 debugger/debug.32
 .data          0x00000000c003ae50        0x0 fs/vfs.32
 .data          0x00000000c003ae50        0x0 hal/bus.32
 .data          0x00000000c003ae50        0x0 hal/buzzer.32
 .data          0x00000000c003ae50        0x0 hal/clock.32
 .data          0x00000000c003ae50        0x0 hal/device.32
 .data          0x00000000c003ae50        0x0 hal/diskctrl.32
 .data          0x00000000c003ae50        0x0 hal/diskphys.32
 .data          0x00000000c003ae50        0x0 hal/fpu.32
 *fill*         0x00000000c003ae50       0x10 
 .data          0x00000000c003ae60      0x2a0 hal/intctrl.32
                0x00000000c003ae60                exceptionNames
 .data          0x00000000c003b100        0x0 hal/keybrd.32
 .data          0x00000000c003b100        0x0 hal/logidisk.32
 .data          0x00000000c003b100        0x0 hal/mouse.32
 .data          0x00000000c003b100        0x0 hal/partition.32
 .data          0x00000000c003b100        0x0 hal/timer.32
 .data          0x00000000c003b100        0x0 hal/vcache.32
 .data          0x00000000c003b100        0x0 hal/video.32
 .data          0x00000000c003b100       0x10 hw/acpi.32
                0x00000000c003b100                legacyIRQRemaps
 *fill*         0x00000000c003b110       0x10 
 .data          0x00000000c003b120      0x2a4 hw/cpu.32
                0x00000000c003b120                cpuNameList
                0x00000000c003b3c0                lastCode
 .data          0x00000000c003b3c4        0x0 hw/ports.32
 .data          0x00000000c003b3c4        0x0 registry/registry.32
 .data          0x00000000c003b3c4        0x0 syscalls/sc_exit.32
 .data          0x00000000c003b3c4        0x0 syscalls/sc_read.32
 .data          0x00000000c003b3c4        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c003b3c4        0x0 syscalls/sc_write.32
 .data          0x00000000c003b3c4        0x0 syscalls/sc_yield.32
 .data          0x00000000c003b3c4        0x0 vm86/vm8086.32
 .data          0x00000000c003b3c4        0x0 fs/fat/vfslink.32
 .data          0x00000000c003b3c4        0x1 fs/iso9660/vfslink.32
                0x00000000c003b3c4                recentDriveletter
 .data          0x00000000c003b3c5        0x0 hal/sound/sndchannel.32
 .data          0x00000000c003b3c5        0x0 hal/sound/sndhw.32
 .data          0x00000000c003b3c5        0x0 hw/bus/isa.32
 .data          0x00000000c003b3c5        0x0 hw/bus/pci.32
 .data          0x00000000c003b3c5        0x0 hw/clock/rtc.32
 .data          0x00000000c003b3c5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c003b3c5        0x0 hw/diskphys/ata.32
 .data          0x00000000c003b3c5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c003b3c5        0x0 hw/fpu/avx.32
 .data          0x00000000c003b3c5        0x0 hw/fpu/mmx.32
 .data          0x00000000c003b3c5        0x0 hw/fpu/sse.32
 .data          0x00000000c003b3c5        0x0 hw/fpu/x87.32
 .data          0x00000000c003b3c5        0x0 hw/intctrl/apic.32
 .data          0x00000000c003b3c5        0x0 hw/intctrl/pic.32
 .data          0x00000000c003b3c5        0x0 hw/timer/apictimer.32
 .data          0x00000000c003b3c5        0x0 hw/timer/pit.32
 .data          0x00000000c003b3c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c003b3c5        0x0 crtn.32
 .data          0x00000000c003b3c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c003b3c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c003b3c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c003b3c5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c003b3c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c003b3c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c003b3c5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c003b3c8        0x0
 .got           0x00000000c003b3c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c003b3c8        0x0
 .got.plt       0x00000000c003b3c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c003b3c8        0x0
 .igot.plt      0x00000000c003b3c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c003b3c8        0x0
 .tm_clone_table
                0x00000000c003b3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c003b3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c003b3c5      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c003b3c5        0x3 
 .eh_frame      0x00000000c003b3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c003b3c8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c003b3c8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c003b420       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c003b460       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c003b4cc       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c003b550       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c003b568        0x0
 .rel.got       0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c003b568        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c003b568     0x1b80
                0x00000000c003b568                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c003b568        0x0 crti.32
 .bss           0x00000000c003b568       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c003b588        0x4 acpica/utclib.32
 *fill*         0x00000000c003b58c       0x14 
 .bss           0x00000000c003b5a0      0x378 core/malloc.32
 .bss           0x00000000c003b918        0x0 libk/string.32
 .bss           0x00000000c003b918        0x0 fs/fat/diskio.32
 *fill*         0x00000000c003b918        0x8 
 .bss           0x00000000c003b920       0x88 fs/fat/ff.32
 .bss           0x00000000c003b9a8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c003b9a8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c003b9a8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c003b9a8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c003b9a8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c003b9a8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c003b9a8        0x6 core/computer.32
                0x00000000c003b9a8                computer
                0x00000000c003b9ac                preemptionOn
                0x00000000c003b9ad                schedulingOn
 *fill*         0x00000000c003b9ae       0x12 
 .bss           0x00000000c003b9c0      0x184 core/elf.32
                0x00000000c003b9c0                kernelSymbols
                0x00000000c003ba40                kernelStringTable
                0x00000000c003bac0                kernelSymbolTable
                0x00000000c003bb40                nextDLLSymbolIndex
 .bss           0x00000000c003bb44        0x6 core/gdt.32
                0x00000000c003bb44                gdtDescr
 .bss           0x00000000c003bb4a        0x0 core/idle.32
 *fill*         0x00000000c003bb4a        0x2 
 .bss           0x00000000c003bb4c        0x6 core/idt.32
                0x00000000c003bb4c                idtDescr
 .bss           0x00000000c003bb52        0x1 core/kconsole.32
                0x00000000c003bb52                kernelInPanic
 .bss           0x00000000c003bb53        0x0 core/kheap.32
 *fill*         0x00000000c003bb53        0x1 
 .bss           0x00000000c003bb54        0x4 core/main.32
                0x00000000c003bb54                sysBootSettings
 *fill*         0x00000000c003bb58        0x8 
 .bss           0x00000000c003bb60       0x50 core/physmgr.32
                0x00000000c003bb60                Phys::currentPagePointer
                0x00000000c003bb64                Phys::highestMem
                0x00000000c003bb68                Phys::oldPercent
                0x00000000c003bb6c                Phys::usedPages
                0x00000000c003bb70                Phys::usablePages
                0x00000000c003bb80                Phys::dmaUsage
 .bss           0x00000000c003bbb0        0x0 core/pipe.32
 .bss           0x00000000c003bbb0       0x68 core/prcssthr.32
                0x00000000c003bbb0                cleanerThread
                0x00000000c003bbb4                weNeedTheCleanerToNotBlock
                0x00000000c003bbb8                xxxx
                0x00000000c003bbbc                retValLockStuff
                0x00000000c003bbc0                retValSchedLock
                0x00000000c003bbc4                lockStuffLock
                0x00000000c003bbc8                schedulerLock
                0x00000000c003bbcc                taskSwitchesPostponedFlag
                0x00000000c003bbd0                postponeTaskSwitchesCounter
                0x00000000c003bbd4                irqDisableCounter
                0x00000000c003bbd8                terminatedTaskList
                0x00000000c003bbe4                sleepingTaskList
                0x00000000c003bbf0                taskList
                0x00000000c003bbfc                kernelProcess
 *fill*         0x00000000c003bc18        0x8 
 .bss           0x00000000c003bc20      0x200 core/syscalls.32
                0x00000000c003bc20                systemCallHandlers
 .bss           0x00000000c003be20       0x29 core/terminal.32
                0x00000000c003be20                textModeImplementation
                0x00000000c003be40                terminalCycle
                0x00000000c003be44                activeTerminal
                0x00000000c003be48                VgaText::graphicMode
 *fill*         0x00000000c003be49        0x1 
 .bss           0x00000000c003be4a        0x2 core/tss.32
                0x00000000c003be4a                doubleFaultSelector
 .bss           0x00000000c003be4c       0x10 core/unixfile.32
                0x00000000c003be4c                initialFilesAdded
                0x00000000c003be50                unixFileLinkedList
 .bss           0x00000000c003be5c        0x4 core/virtmgr.32
                0x00000000c003be5c                firstVAS
 .bss           0x00000000c003be60        0x0 coreobjs/c++.32
 .bss           0x00000000c003be60        0x0 debugger/debug.32
 .bss           0x00000000c003be60        0x4 fs/vfs.32
                0x00000000c003be60                installedFilesystems
 .bss           0x00000000c003be64        0x0 hal/bus.32
 .bss           0x00000000c003be64        0x4 hal/buzzer.32
                0x00000000c003be64                systemBuzzer
 .bss           0x00000000c003be68        0x8 hal/clock.32
                0x00000000c003be68                dstOn
                0x00000000c003be69                timezoneHalfHourOffset
                0x00000000c003be6c                timezoneHourOffset
 .bss           0x00000000c003be70        0x0 hal/device.32
 .bss           0x00000000c003be70        0x0 hal/diskctrl.32
 .bss           0x00000000c003be70        0x0 hal/diskphys.32
 .bss           0x00000000c003be70        0x0 hal/fpu.32
 .bss           0x00000000c003be70       0x1c hal/intctrl.32
                0x00000000c003be70                pf5
                0x00000000c003be74                pf4
                0x00000000c003be78                pf3
                0x00000000c003be7c                pf2
                0x00000000c003be80                pf1
                0x00000000c003be84                pf0
                0x00000000c003be88                gpFaultIntercept
 *fill*         0x00000000c003be8c       0x14 
 .bss           0x00000000c003bea0      0x429 hal/keybrd.32
                0x00000000c003bea0                keyboardWaitingTaskList
                0x00000000c003bea4                keyboardSetupYet
                0x00000000c003bec0                keystates
 *fill*         0x00000000c003c2c9       0x17 
 .bss           0x00000000c003c2e0       0x88 hal/logidisk.32
                0x00000000c003c2e0                diskAssignments
                0x00000000c003c300                disks
 .bss           0x00000000c003c368        0x4 hal/mouse.32
                0x00000000c003c368                guiMouseHandler
 .bss           0x00000000c003c36c        0x0 hal/partition.32
 *fill*         0x00000000c003c36c        0x4 
 .bss           0x00000000c003c370        0x8 hal/timer.32
                0x00000000c003c370                nanoSinceBoot
 .bss           0x00000000c003c378        0x0 hal/vcache.32
 .bss           0x00000000c003c378        0x4 hal/video.32
                0x00000000c003c378                screen
 *fill*         0x00000000c003c37c        0x4 
 .bss           0x00000000c003c380      0x3c0 hw/acpi.32
                0x00000000c003c380                systemSleepFunction
                0x00000000c003c384                systemResetFunction
                0x00000000c003c388                systemShutdownFunction
                0x00000000c003c38c                nextACPITable
                0x00000000c003c3a0                acpiTables
                0x00000000c003c5a0                usingXSDT
                0x00000000c003c5a4                MADTpointer
                0x00000000c003c5a8                RSDTpointer
                0x00000000c003c5ac                RSDPpointer
                0x00000000c003c5b0                ioapicDiscoveryNumber
                0x00000000c003c5c0                ioapicFoundInMADT
                0x00000000c003c5e0                ioapicAddresses
                0x00000000c003c660                ioapicGSIBase
                0x00000000c003c6e0                processorDiscoveryNumber
                0x00000000c003c700                matchingAPICID
                0x00000000c003c720                processorID
 .bss           0x00000000c003c740       0x10 hw/cpu.32
                0x00000000c003c740                lastD
                0x00000000c003c744                lastC
                0x00000000c003c748                lastB
                0x00000000c003c74c                lastA
 .bss           0x00000000c003c750        0x0 hw/ports.32
 .bss           0x00000000c003c750        0x0 registry/registry.32
 .bss           0x00000000c003c750        0x0 syscalls/sc_exit.32
 .bss           0x00000000c003c750        0x0 syscalls/sc_read.32
 .bss           0x00000000c003c750        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c003c750        0x0 syscalls/sc_write.32
 .bss           0x00000000c003c750        0x0 syscalls/sc_yield.32
 .bss           0x00000000c003c750        0x0 vm86/vm8086.32
 *fill*         0x00000000c003c750       0x10 
 .bss           0x00000000c003c760       0xf0 fs/fat/vfslink.32
                0x00000000c003c760                FAT::fats
                0x00000000c003c780                FAT::vfsToFatRemaps
                0x00000000c003c800                fatToVFSRemaps
 *fill*         0x00000000c003c850       0x10 
 .bss           0x00000000c003c860      0x820 fs/iso9660/vfslink.32
                0x00000000c003c860                recentSector
                0x00000000c003c880                recentBuffer
 .bss           0x00000000c003d080        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c003d080        0x0 hal/sound/sndhw.32
 .bss           0x00000000c003d080        0x0 hw/bus/isa.32
 .bss           0x00000000c003d080        0x0 hw/bus/pci.32
 .bss           0x00000000c003d080        0x2 hw/clock/rtc.32
 .bss           0x00000000c003d082        0x0 hw/diskctrl/ide.32
 *fill*         0x00000000c003d082        0x2 
 .bss           0x00000000c003d084        0x8 hw/diskphys/ata.32
                0x00000000c003d084                ataSectorsWritten
                0x00000000c003d088                ataSectorsRead
 .bss           0x00000000c003d08c        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003d08c        0x0 hw/fpu/avx.32
 .bss           0x00000000c003d08c        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003d08c        0x0 hw/fpu/sse.32
 .bss           0x00000000c003d08c        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003d08c       0x14 
 .bss           0x00000000c003d0a0       0x41 hw/intctrl/apic.32
                0x00000000c003d0a0                noOfIOAPICs
                0x00000000c003d0c0                ioapics
                0x00000000c003d0e0                IOAPICsSetupYet
 .bss           0x00000000c003d0e1        0x0 hw/intctrl/pic.32
 .bss           0x00000000c003d0e1        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c003d0e1        0x3 
 .bss           0x00000000c003d0e4        0x4 hw/timer/pit.32
                0x00000000c003d0e4                pitFreq
 .bss           0x00000000c003d0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003d0e8        0x0 crtn.32
 .bss           0x00000000c003d0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c003d0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c003d0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c003d0e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c003d0e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c003d0e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c003d0e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003d0e8                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003ec68                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
