Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1ea48
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x40f acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c000097e      0xfbf core/malloc.32
                0x00000000c0000ae9                dlfree
                0x00000000c0000e44                dlmalloc
                0x00000000c0001381                dlrealloc
                0x00000000c0001536                dlmemalign
                0x00000000c0001659                dlcalloc
                0x00000000c00016f3                dlcfree
                0x00000000c00016f8                dlindependent_calloc
                0x00000000c000171d                dlindependent_comalloc
                0x00000000c0001734                dlvalloc
                0x00000000c000175f                dlpvalloc
                0x00000000c0001795                dlmalloc_trim
                0x00000000c00017a2                dlmalloc_usable_size
                0x00000000c00017d3                dlmallinfo
                0x00000000c00018a2                dlmalloc_stats
                0x00000000c00018b3                dlmallopt
 .text          0x00000000c000193d        0x0 libk/string.32
 .text          0x00000000c000193d       0x51 fs/fat/diskio.32
                0x00000000c000193d                disk_status
                0x00000000c0001940                disk_initialize
                0x00000000c0001943                disk_read
                0x00000000c0001959                disk_write
                0x00000000c000196f                disk_ioctl
 .text          0x00000000c000198e     0x6833 fs/fat/ff.32
                0x00000000c0004c5c                f_mount
                0x00000000c0004cbe                f_open
                0x00000000c00050fa                f_read
                0x00000000c000537a                f_write
                0x00000000c0005634                f_sync
                0x00000000c0005810                f_close
                0x00000000c000583f                f_lseek
                0x00000000c0005cf6                f_opendir
                0x00000000c0005df8                f_closedir
                0x00000000c0005e1a                f_readdir
                0x00000000c0005eb5                f_stat
                0x00000000c0005f44                f_getfree
                0x00000000c000610f                f_truncate
                0x00000000c0006207                f_unlink
                0x00000000c000638a                f_mkdir
                0x00000000c00065b6                f_rename
                0x00000000c00068a9                f_chmod
                0x00000000c0006987                f_utime
                0x00000000c0006a65                f_getlabel
                0x00000000c0006c53                f_setlabel
                0x00000000c0006ec0                f_forward
                0x00000000c000709e                f_mkfs
 .text          0x00000000c00081c1       0x2d fs/fat/ffsystem.32
                0x00000000c00081c1                ff_memalloc
                0x00000000c00081d7                ff_memfree
 .text          0x00000000c00081ee      0x253 fs/fat/ffunicode.32
                0x00000000c00081ee                ff_uni2oem
                0x00000000c000827e                ff_oem2uni
                0x00000000c00082ea                ff_wtoupper
 .text          0x00000000c0008441      0x70e hal/libresample/samplerate.32
                0x00000000c00084c9                src_delete
                0x00000000c0008505                src_process
                0x00000000c000862d                src_callback_read
                0x00000000c000878e                src_set_ratio
                0x00000000c00087e5                src_get_channels
                0x00000000c0008807                src_reset
                0x00000000c000884b                src_new
                0x00000000c00088d9                src_callback_new
                0x00000000c000893b                src_get_name
                0x00000000c0008972                src_get_description
                0x00000000c00089a9                src_get_version
                0x00000000c00089af                src_is_valid_ratio
                0x00000000c00089c9                src_error
                0x00000000c00089d7                src_strerror
                0x00000000c00089ea                src_simple
                0x00000000c0008a3d                src_short_to_float_array
                0x00000000c0008a63                src_float_to_short_array
                0x00000000c0008ac7                src_int_to_float_array
                0x00000000c0008aed                src_float_to_int_array
 .text          0x00000000c0008b4f      0x3fd hal/libresample/src_linear.32
                0x00000000c0008ea7                linear_get_name
                0x00000000c0008eb6                linear_get_description
                0x00000000c0008ec5                linear_set_converter
 .text          0x00000000c0008f4c     0x1a3f hal/libresample/src_sinc.32
                0x00000000c000a8a2                sinc_get_name
                0x00000000c000a8b5                sinc_get_description
                0x00000000c000a8c8                sinc_set_converter
 .text          0x00000000c000a98b      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000acb9                zoh_get_name
                0x00000000c000acc8                zoh_get_description
                0x00000000c000acd7                zoh_set_converter
 .text          0x00000000c000ad5e      0x695 core/computer.32
                0x00000000c000ad5e                Computer::close(int, int, void*)
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000ada2                Computer::Computer()
                0x00000000c000aefe                Computer::setBootMessage(char const*)
                0x00000000c000af00                Computer::start()
                0x00000000c000afdc                firstTask()
                0x00000000c000afea                Computer::detectFeatures()
                0x00000000c000b1c4                Computer::displayFeatures()
                0x00000000c000b1c6                Computer::rdmsr(unsigned int)
                0x00000000c000b1f2                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b22a                Computer::nmiEnabled()
                0x00000000c000b236                Computer::readCMOS(unsigned char)
                0x00000000c000b250                Computer::enableNMI(bool)
                0x00000000c000b268                Computer::open(int, int, void*)
                0x00000000c000b336                Computer::disableNMI()
                0x00000000c000b344                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b362                Computer::handleNMI()
                0x00000000c000b3c8                Computer::setDiskActivityLight(int, bool)
 *fill*         0x00000000c000b3f3        0x1 
 .text          0x00000000c000b3f4      0x1b7 core/gdt.32
                0x00000000c000b3f4                GDTEntry::setBase(unsigned int)
                0x00000000c000b410                GDTEntry::setLimit(unsigned int)
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b42e                GDT::GDT()
                0x00000000c000b444                GDT::addEntry(GDTEntry)
                0x00000000c000b480                GDT::getNumberOfEntries()
                0x00000000c000b488                GDT::flush()
                0x00000000c000b4aa                GDT::setup()
 .text          0x00000000c000b5ab       0x61 core/idle.32
                0x00000000c000b5ab                idleFunction(void*)
 .text          0x00000000c000b60c      0x45f core/idt.32
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b60c                IDTEntry::IDTEntry(bool)
                0x00000000c000b67a                IDTEntry::setOffset(unsigned int)
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b68e                IDT::IDT()
                0x00000000c000b690                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b698                IDT::addEntry(IDTEntry, int)
                0x00000000c000b6b2                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b6ea                IDT::flush()
                0x00000000c000b704                IDT::setup()
 .text          0x00000000c000ba6b      0x20d core/kheap.32
                0x00000000c000ba6b                sbrk
                0x00000000c000bb83                mmap
                0x00000000c000bb99                munmap
                0x00000000c000bbaf                liballoc_lock()
                0x00000000c000bbc0                liballoc_unlock()
                0x00000000c000bbd1                liballoc_alloc(int)
                0x00000000c000bbec                liballoc_free(void*, int)
                0x00000000c000bc0a                realloc
                0x00000000c000bc1e                malloc
                0x00000000c000bc2e                free
                0x00000000c000bc3e                rfree
                0x00000000c000bc4e                calloc
 .text          0x00000000c000bc78      0x38d core/main.32
                0x00000000c000bc78                hwTextMode_loadInData(VgaText*)
                0x00000000c000bcbd                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000bcff                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000bd53                hwTextMode_update(VgaText*)
                0x00000000c000bd54                hwTextMode_updateCursor(VgaText*)
                0x00000000c000bd9c                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000bdd8                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000be5e                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000bebc                setupTextMode()
                0x00000000c000bf0d                kernel_main
 .text          0x00000000c000c005      0x4f3 core/physmgr.32
                0x00000000c000c005                Phys::allocateDMA(unsigned long)
                0x00000000c000c0a8                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c0f0                Phys::setPageState(unsigned long, bool)
                0x00000000c000c122                Phys::getPageState(unsigned long)
                0x00000000c000c13e                Phys::freePage(unsigned long)
                0x00000000c000c1c8                Phys::allocatePage()
                0x00000000c000c290                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c2c8                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c4f8      0x273 core/pipe.32
                0x00000000c000c4f8                Pipe::isAtty()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c4fc                Pipe::~Pipe()
                0x00000000c000c520                Pipe::~Pipe()
                0x00000000c000c548                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c63c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000c704                Pipe::Pipe(int)
                0x00000000c000c704                Pipe::Pipe(int)
 *fill*         0x00000000c000c76b        0x1 
 .text          0x00000000c000c76c      0xf65 core/terminal.32
                0x00000000c000c76c                VgaText::isAtty()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c770                VgaText::~VgaText()
                0x00000000c000c794                VgaText::~VgaText()
                0x00000000c000c7be                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000c7de                setTerminalScrollLock(bool)
                0x00000000c000c7df                addToTerminalCycle(VgaText*)
                0x00000000c000c80c                installVgaTextImplementation()
                0x00000000c000c821                scrollTerminalScrollLock(int)
                0x00000000c000c822                VgaText::load()
                0x00000000c000c876                VgaText::updateCursor()
                0x00000000c000c890                VgaText::showCursor(bool)
                0x00000000c000c8a0                VgaText::disableBlink(bool)
                0x00000000c000c8da                VgaText::doANSI_SGR(int)
                0x00000000c000c966                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000c97c                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000c992                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000c9b2                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000c9c4                VgaText::scrollScreen()
                0x00000000c000ca58                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000ca6a                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000caca                VgaText::getCursorX()
                0x00000000c000cad6                VgaText::getCursorY()
                0x00000000c000cae2                VgaText::setCursor(int, int)
                0x00000000c000cb00                VgaText::setCursorX(int)
                0x00000000c000cb1c                VgaText::setCursorY(int)
                0x00000000c000cb38                VgaText::incrementCursor(bool)
                0x00000000c000cba0                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cbfa                VgaText::updateDiskUsage()
                0x00000000c000cd60                VgaText::updateTitle()
                0x00000000c000cda6                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000cdb6                VgaText::setTitleColour(VgaColour)
                0x00000000c000cdc6                VgaText::setTitle(char*)
                0x00000000c000cdec                VgaText::decrementCursor(bool)
                0x00000000c000ce14                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000cf10                VgaText::isShowingCursor()
                0x00000000c000cf1c                VgaText::isBlinkDisabled()
                0x00000000c000cf2a                VgaText::setCursorHeight(int)
                0x00000000c000cf48                VgaText::getCursorHeight()
                0x00000000c000cf53                setActiveTerminal(VgaText*)
                0x00000000c000d005                doTerminalCycle()
                0x00000000c000d022                VgaText::doUpdate()
                0x00000000c000d034                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d1f4                VgaText::clearScreen()
                0x00000000c000d258                VgaText::putchar(char)
                0x00000000c000d372                VgaText::puts(char const*)
                0x00000000c000d398                VgaText::putx(unsigned int)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d3de                VgaText::VgaText(char const*)
                0x00000000c000d570                VgaText::receiveKey(unsigned char)
                0x00000000c000d658                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d6ac                newTerminal(char*)
 *fill*         0x00000000c000d6d1        0x1 
 .text          0x00000000c000d6d2      0x18f core/tss.32
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6d2                TSS::TSS()
                0x00000000c000d6e0                TSS::setESP(unsigned long)
                0x00000000c000d6f2                TSS::flush()
                0x00000000c000d712                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000d861        0x1 
 .text          0x00000000c000d862      0x545 core/unixfile.32
                0x00000000c000d862                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000d8f8                ReservedFilename::isAtty()
                0x00000000c000d92e                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000d9c8                UnixFile::getFileDescriptor()
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000d9d0                UnixFile::UnixFile(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db40                ReservedFilename::ReservedFilename(int)
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000db72                UnixFile::~UnixFile()
                0x00000000c000dc0a                UnixFile::~UnixFile()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc32                ReservedFilename::~ReservedFilename()
                0x00000000c000dc56                ReservedFilename::~ReservedFilename()
                0x00000000c000dc7d                getFromFileDescriptor(int)
 *fill*         0x00000000c000dda7        0x1 
 .text          0x00000000c000dda8      0xec7 core/virtmgr.32
                0x00000000c000dda8                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000dddd                Virt::getPageState(unsigned long)
                0x00000000c000de01                Virt::allocateKernelVirtualPages(int)
                0x00000000c000df12                Virt::virtualMemorySetup()
                0x00000000c000df91                Virt::getAKernelVAS()
                0x00000000c000df97                Virt::setupPageSwapping(int)
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0bc                VAS::VAS()
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e0ec                VAS::VAS(VAS*)
                0x00000000c000e110                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e13c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e15b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e27e                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e2a2                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e2ba                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e2fa                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e332                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e368                VAS::~VAS()
                0x00000000c000e368                VAS::~VAS()
                0x00000000c000e4d4                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e5d4                VAS::allocatePages(int, int)
                0x00000000c000e7a4                VAS::setCPUSpecific(unsigned long)
                0x00000000c000e7c0                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000e88a                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000e978                VAS::VAS(bool)
                0x00000000c000e978                VAS::VAS(bool)
                0x00000000c000eba8                mapVASFirstTime
 .text          0x00000000c000ec6f       0x93 coreobjs/c++.32
                0x00000000c000ec6f                __cxa_atexit
                0x00000000c000ec72                __cxa_finalize
                0x00000000c000ec73                __stack_chk_fail
                0x00000000c000ecd3                __cxa_pure_virtual
                0x00000000c000ece4                operator new(unsigned long)
                0x00000000c000ece9                operator new[](unsigned long)
                0x00000000c000ecee                operator delete(void*)
                0x00000000c000ecf3                operator delete(void*, unsigned long)
                0x00000000c000ecf8                operator delete[](void*)
                0x00000000c000ecfd                operator delete[](void*, unsigned long)
 .text          0x00000000c000ed02      0x1ef dbg/kconsole.32
                0x00000000c000ed02                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ed63                Dbg::logc(char)
                0x00000000c000ed7a                Dbg::logs(char*)
                0x00000000c000ed97                Dbg::logWriteInt(unsigned int)
                0x00000000c000edb4                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000edd3                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000eef1        0x1 
 .text          0x00000000c000eef2      0xb68 fs/vfs.32
                0x00000000c000eef2                File::read(unsigned long long, void*, int*)
                0x00000000c000ef4a                File::write(unsigned long long, void*, int*)
                0x00000000c000efa2                Directory::read(unsigned long long, void*, int*)
                0x00000000c000effa                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f028                File::isAtty()
                0x00000000c000f02c                Directory::isAtty()
                0x00000000c000f030                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f036                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f03c                File::~File()
                0x00000000c000f03c                File::~File()
                0x00000000c000f060                File::~File()
                0x00000000c000f08a                Directory::~Directory()
                0x00000000c000f08a                Directory::~Directory()
                0x00000000c000f0ae                Directory::~Directory()
                0x00000000c000f0d8                Filesystem::Filesystem()
                0x00000000c000f0d8                Filesystem::Filesystem()
                0x00000000c000f0fc                Filesystem::~Filesystem()
                0x00000000c000f0fc                Filesystem::~Filesystem()
                0x00000000c000f10a                Filesystem::~Filesystem()
                0x00000000c000f12e                initVFS()
                0x00000000c000f158                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f302                File::File(char const*, Process*)
                0x00000000c000f302                File::File(char const*, Process*)
                0x00000000c000f366                File::open(FileOpenMode)
                0x00000000c000f3c4                File::close()
                0x00000000c000f424                File::seek(unsigned long long)
                0x00000000c000f47a                File::tell(unsigned long long*)
                0x00000000c000f4ca                File::rewind()
                0x00000000c000f4de                File::unlink()
                0x00000000c000f52a                File::rename(char const*)
                0x00000000c000f578                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f5d4                File::exists()
                0x00000000c000f612                File::stat(unsigned long long*, bool*)
                0x00000000c000f673                getcwd(Process*, char*, int)
                0x00000000c000f69d                setcwd(Process*, char*)
                0x00000000c000f7c4                Directory::Directory(char const*, Process*)
                0x00000000c000f7c4                Directory::Directory(char const*, Process*)
                0x00000000c000f828                Directory::open()
                0x00000000c000f884                Directory::close()
                0x00000000c000f8e4                Directory::unlink()
                0x00000000c000f930                Directory::rename(char const*)
                0x00000000c000f97e                Directory::exists()
                0x00000000c000f9bc                Directory::read(dirent*)
                0x00000000c000fa08                Directory::create()
                0x00000000c000fa54                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fa5a       0x84 hal/bus.32
                0x00000000c000fa5a                Bus::Bus(char const*)
                0x00000000c000fa5a                Bus::Bus(char const*)
                0x00000000c000fa90                Bus::~Bus()
                0x00000000c000fa90                Bus::~Bus()
                0x00000000c000fab4                Bus::~Bus()
 .text          0x00000000c000fade      0x14e hal/buzzer.32
                0x00000000c000fade                Buzzer::Buzzer(char const*)
                0x00000000c000fade                Buzzer::Buzzer(char const*)
                0x00000000c000fb22                Buzzer::~Buzzer()
                0x00000000c000fb22                Buzzer::~Buzzer()
                0x00000000c000fb46                Buzzer::~Buzzer()
                0x00000000c000fb70                Buzzer::stop()
                0x00000000c000fb83                beepThread(void*)
                0x00000000c000fbbe                Buzzer::beep(int, int, bool)
 .text          0x00000000c000fc2c      0x42f hal/clock.32
                0x00000000c000fc2c                loadClockSettings()
                0x00000000c000fc46                Clock::Clock(char const*)
                0x00000000c000fc46                Clock::Clock(char const*)
                0x00000000c000fc7c                Clock::~Clock()
                0x00000000c000fc7c                Clock::~Clock()
                0x00000000c000fca0                Clock::~Clock()
                0x00000000c000fcca                Clock::timeInSecondsLocal()
                0x00000000c000fd12                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c000fd6b                datetimeToSeconds(datetime_t)
                0x00000000c000fe92                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c000fef2                secondsToDatetime(unsigned long long)
                0x00000000c0010036                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c001005b        0x1 
 .text          0x00000000c001005c      0x504 hal/device.32
                0x00000000c001005c                Device::hibernate()
                0x00000000c001005e                Device::wake()
                0x00000000c0010060                Device::detect()
                0x00000000c0010062                Device::disableLegacy()
                0x00000000c0010064                Device::powerSaving(PowerSavingLevel)
                0x00000000c0010066                DriverlessDevice::close(int, int, void*)
                0x00000000c001006a                DriverlessDevice::detect()
                0x00000000c001006c                DriverlessDevice::open(int, int, void*)
                0x00000000c0010080                Device::~Device()
                0x00000000c0010080                Device::~Device()
                0x00000000c001008e                Device::~Device()
                0x00000000c00100b6                Device::findAndLoadDriver()
                0x00000000c00100b8                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00100de                Device::preOpenACPI(void*, char*, char*)
                0x00000000c0010132                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010190                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00101de                Device::addChild(Device*)
                0x00000000c0010222                Device::removeAllChildren()
                0x00000000c0010268                Device::hibernateAll()
                0x00000000c0010298                Device::wakeAll()
                0x00000000c00102c8                Device::detectAll()
                0x00000000c00102f8                Device::disableLegacyAll()
                0x00000000c0010328                Device::loadDriversForAll()
                0x00000000c0010354                Device::closeAll()
                0x00000000c001038a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c00103c0                Device::setName(char const*)
                0x00000000c00103ce                Device::Device(char const*)
                0x00000000c00103ce                Device::Device(char const*)
                0x00000000c00104c0                Device::getName()
                0x00000000c00104ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104ca                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c00104f2                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0010536                getDevicesOfType(DeviceType)
 .text          0x00000000c0010560       0x84 hal/diskctrl.32
                0x00000000c0010560                HardDiskController::HardDiskController(char const*)
                0x00000000c0010560                HardDiskController::HardDiskController(char const*)
                0x00000000c0010596                HardDiskController::~HardDiskController()
                0x00000000c0010596                HardDiskController::~HardDiskController()
                0x00000000c00105ba                HardDiskController::~HardDiskController()
 .text          0x00000000c00105e4       0xde hal/diskphys.32
                0x00000000c00105e4                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00105e4                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c001064c                PhysicalDisk::startCache()
                0x00000000c0010674                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010674                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010698                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c00106c2      0x142 hal/fpu.32
                0x00000000c00106c2                FPU::FPU(char const*)
                0x00000000c00106c2                FPU::FPU(char const*)
                0x00000000c00106f8                FPU::~FPU()
                0x00000000c00106f8                FPU::~FPU()
                0x00000000c001071c                FPU::~FPU()
                0x00000000c0010746                setupFPU()
 .text          0x00000000c0010804      0xc21 hal/intctrl.32
                0x00000000c0010804                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c001083c                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c001088e                doubleFault(regs*, void*)
                0x00000000c001089c                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010938                InterruptController::clearAllHandlers(int, bool)
                0x00000000c00109e0                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010a67                nmiHandler(regs*, void*)
                0x00000000c0010a75                int_handler
                0x00000000c0010b10                InterruptController::InterruptController(char const*)
                0x00000000c0010b10                InterruptController::InterruptController(char const*)
                0x00000000c0010bb6                InterruptController::~InterruptController()
                0x00000000c0010bb6                InterruptController::~InterruptController()
                0x00000000c0010bda                InterruptController::~InterruptController()
                0x00000000c0010c04                displayDebugInfo(regs*)
                0x00000000c001101b                x87EmulHandler(regs*, void*)
                0x00000000c001107e                gpFault(regs*, void*)
                0x00000000c00110b7                pgFault(regs*, void*)
                0x00000000c00110ce                otherISRHandler(regs*, void*)
                0x00000000c00110ed                opcodeFault(regs*, void*)
                0x00000000c0011157                displayProgramFault(char const*)
                0x00000000c0011180                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00111ca                setupInterruptController()
 *fill*         0x00000000c0011425        0x1 
 .text          0x00000000c0011426      0x608 hal/keybrd.32
                0x00000000c0011426                startGUI(void*)
                0x00000000c0011498                sendKeyToTerminal(unsigned char)
                0x00000000c0011504                sendKeyboardToken(KeyboardToken)
                0x00000000c00118df                clearInternalKeybuffer(VgaText*)
                0x00000000c0011914                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c00119a4                Keyboard::Keyboard(char const*)
                0x00000000c00119a4                Keyboard::Keyboard(char const*)
                0x00000000c00119e0                Keyboard::~Keyboard()
                0x00000000c00119e0                Keyboard::~Keyboard()
                0x00000000c0011a04                Keyboard::~Keyboard()
 .text          0x00000000c0011a2e      0x400 hal/logidisk.32
                0x00000000c0011a2e                LogicalDisk::close(int, int, void*)
                0x00000000c0011a32                LogicalDisk::~LogicalDisk()
                0x00000000c0011a32                LogicalDisk::~LogicalDisk()
                0x00000000c0011a56                LogicalDisk::~LogicalDisk()
                0x00000000c0011a80                LogicalDisk::open(int, int, void*)
                0x00000000c0011a94                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0011acc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0011b12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011b12                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011bc8                LogicalDisk::assignDriveLetter()
                0x00000000c0011c7e                LogicalDisk::mount()
                0x00000000c0011cf0                LogicalDisk::unmount()
                0x00000000c0011d00                LogicalDisk::unassignDriveLetter()
                0x00000000c0011d56                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0011dc2                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c0011e2e       0x84 hal/mouse.32
                0x00000000c0011e2e                Mouse::Mouse(char const*)
                0x00000000c0011e2e                Mouse::Mouse(char const*)
                0x00000000c0011e64                Mouse::~Mouse()
                0x00000000c0011e64                Mouse::~Mouse()
                0x00000000c0011e88                Mouse::~Mouse()
 .text          0x00000000c0011eb2      0x339 hal/partition.32
                0x00000000c0011eb2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0011f5a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00121eb        0x1 
 .text          0x00000000c00121ec      0x2e7 hal/timer.32
                0x00000000c00121ec                Timer::Timer(char const*)
                0x00000000c00121ec                Timer::Timer(char const*)
                0x00000000c0012222                Timer::~Timer()
                0x00000000c0012222                Timer::~Timer()
                0x00000000c0012246                Timer::~Timer()
                0x00000000c0012270                Timer::read()
                0x00000000c001227b                timerHandler(unsigned long long)
                0x00000000c00123b2                setupTimer(int)
 *fill*         0x00000000c00124d3        0x1 
 .text          0x00000000c00124d4      0x2d1 hal/vcache.32
                0x00000000c00124d4                VCache::VCache(PhysicalDisk*)
                0x00000000c00124d4                VCache::VCache(PhysicalDisk*)
                0x00000000c00125c4                VCache::writeWriteBuffer()
                0x00000000c0012600                VCache::~VCache()
                0x00000000c0012600                VCache::~VCache()
                0x00000000c0012640                VCache::~VCache()
                0x00000000c0012668                VCache::write(unsigned long long, int, void*)
                0x00000000c001274c                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c00127a5        0x1 
 .text          0x00000000c00127a6      0x26d hal/video.32
                0x00000000c00127a6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00127f0                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c001286e                Video::clearScreen(unsigned int)
                0x00000000c00128a2                Video::putpixel(int, int, unsigned int)
                0x00000000c00128b0                Video::Video(char const*)
                0x00000000c00128b0                Video::Video(char const*)
                0x00000000c00128e6                Video::~Video()
                0x00000000c00128e6                Video::~Video()
                0x00000000c001290a                Video::~Video()
                0x00000000c0012934                Video::isMonochrome()
                0x00000000c0012940                Video::getWidth()
                0x00000000c001294c                Video::getHeight()
                0x00000000c0012958                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0012a13        0x1 
 .text          0x00000000c0012a14      0xd28 hw/acpi.32
                0x00000000c0012a14                ACPI::close(int, int, void*)
                0x00000000c0012ac9                findRSDP()
                0x00000000c0012b53                loadACPITables(unsigned char*)
                0x00000000c0012d7a                findRSDT(unsigned char*)
                0x00000000c0012e98                findDataTable(unsigned char*, char*)
                0x00000000c0012f34                scanMADT()
                0x00000000c00132c8                ACPI::ACPI()
                0x00000000c00132c8                ACPI::ACPI()
                0x00000000c0013328                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c001340a                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013510                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013516                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c001355e                ACPI::open(int, int, void*)
                0x00000000c0013724                ACPI::sleep()
 .text          0x00000000c001373c     0x1796 hw/cpu.32
                0x00000000c001373c                CPU::close(int, int, void*)
                0x00000000c001373f                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c00138d3                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0013b81                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0013b9d                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0013bb5                AMD_K6_writeback(int, int, int)
                0x00000000c0013c28                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0013cab                cpuidCheckEDX(unsigned int)
                0x00000000c0013cd8                cpuidCheckECX(unsigned int)
                0x00000000c0013d05                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0013d32                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0013d5f                getCPUNumber()
                0x00000000c0013d62                thisCPU()
                0x00000000c0013d76                CPU::CPU()
                0x00000000c0013d76                CPU::CPU()
                0x00000000c0013e04                CPU::displayFeatures()
                0x00000000c0014080                CPU::detectFeatures()
                0x00000000c0014a72                CPU::setupSMEP()
                0x00000000c0014a8c                CPU::setupUMIP()
                0x00000000c0014aa4                CPU::setupTSC()
                0x00000000c0014abc                CPU::setupLargePages()
                0x00000000c0014ad4                CPU::setupPAT()
                0x00000000c0014b10                CPU::setupMTRR()
                0x00000000c0014b12                CPU::setupGlobalPages()
                0x00000000c0014b28                CPU::allowUsermodeDataAccess()
                0x00000000c0014b3a                CPU::prohibitUsermodeDataAccess()
                0x00000000c0014b4c                CPU::setupSMAP()
                0x00000000c0014b72                CPU::setupFeatures()
                0x00000000c0014c14                CPU::open(int, int, void*)
                0x00000000c0014cea                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c0014ed2        0x0 hw/ports.32
 .text          0x00000000c0014ed2      0x338 krnl/panic.32
                0x00000000c0014ed2                Krnl::panic(char const*)
 .text          0x00000000c001520a      0x503 reg/registry.32
                0x00000000c001520a                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015362                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c00154c1                Reg::getLine(char*, char*, char*)
                0x00000000c00154f8                Reg::readInt(char*, char*, int*)
                0x00000000c00155e3                Reg::readString(char*, char*, char*, int)
                0x00000000c0015664                Reg::readBool(char*, char*, bool*)
                0x00000000c0015689                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00156b5                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c00156e1                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c001570d       0x18 sys/sc_exit.32
                0x00000000c001570d                Sys::exit(regs*)
 .text          0x00000000c0015725       0x95 sys/sc_loaddll.32
                0x00000000c0015725                Sys::loadDLL(regs*)
 .text          0x00000000c00157ba       0x68 sys/sc_read.32
                0x00000000c00157ba                Sys::read(regs*)
 .text          0x00000000c0015822       0x55 sys/sc_sbrk.32
                0x00000000c0015822                Sys::sbrk(regs*)
 .text          0x00000000c0015877       0x83 sys/sc_write.32
                0x00000000c0015877                Sys::write(regs*)
 .text          0x00000000c00158fa       0x1a sys/sc_yield.32
                0x00000000c00158fa                Sys::yield(regs*)
 .text          0x00000000c0015914      0xf85 sys/syscalls.32
                0x00000000c0015914                sysCallGetPID(regs*)
                0x00000000c0015920                sysCallSeekDir(regs*)
                0x00000000c0015925                sysCallTellDir(regs*)
                0x00000000c001592a                sysCallVerify(regs*)
                0x00000000c0015934                sysCallFork(regs*)
                0x00000000c001593f                sysCallExecve(regs*)
                0x00000000c001594a                sysCallGetArgc(regs*)
                0x00000000c001595a                sysFormatDisk(regs*)
                0x00000000c00159c4                sysSetDiskVolumeLabel(regs*)
                0x00000000c0015a0a                sysGetDiskVolumeLabel(regs*)
                0x00000000c0015a5b                sysShutdown(regs*)
                0x00000000c0015ab9                sysCallGetCwd(regs*)
                0x00000000c0015ad8                sysCallSetCwd(regs*)
                0x00000000c0015af4                sysCallRealpath(regs*)
                0x00000000c0015b37                sysCallReadDir(regs*)
                0x00000000c0015bc5                sysCallIsATTY(regs*)
                0x00000000c0015c1f                sysCallSeek(regs*)
                0x00000000c0015c88                sysCallTell(regs*)
                0x00000000c0015d05                sysCallSizeFromFilename(regs*)
                0x00000000c0015db6                sysCallSize(regs*)
                0x00000000c0015e39                sysCallClose(regs*)
                0x00000000c0015ec1                sysCallOpenDir(regs*)
                0x00000000c0015f2e                sysCallMakeDir(regs*)
                0x00000000c0015f87                sysCallCloseDir(regs*)
                0x00000000c0015fed                sysCallWait(regs*)
                0x00000000c0016007                sysCallRmdir(regs*)
                0x00000000c0016059                sysCallUnlink(regs*)
                0x00000000c00160ab                sysCallGetArgv(regs*)
                0x00000000c00160f7                sysCallTTYName(regs*)
                0x00000000c001617a                sysCallGetEnv(regs*)
                0x00000000c00161cc                sysCallUSleep(regs*)
                0x00000000c00161f3                sysCallSpawn(regs*)
                0x00000000c001624b                sysAppSettings(regs*)
                0x00000000c001636a                sysSetFatAttrib(regs*)
                0x00000000c00163ca                sysPanic(regs*)
                0x00000000c00163f0                sysPipe(regs*)
                0x00000000c0016435                sysGetUnixTime(regs*)
                0x00000000c0016449                string_ends_with(char const*, char const*)
                0x00000000c0016491                sysCallOpen(regs*)
                0x00000000c001669e                setupSystemCalls()
                0x00000000c0016857                systemCall(regs*, void*)
 .text          0x00000000c0016899     0x11c7 thr/elf.32
                0x00000000c0016899                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c0016b16                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c0016d2c                Thr::runtimeReferenceHelper()
                0x00000000c0016d3f                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c0016d8e                Thr::loadKernelSymbolTable(char const*)
                0x00000000c001704f                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c00177ed                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c001781f                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c0017856                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c0017870                Thr::loadDLL(char const*, bool)
                0x00000000c0017a36                Thr::executeDLL(unsigned long, void*)
 .text          0x00000000c0017a60      0xfce thr/prcssthr.32
                0x00000000c0017a60                changeTSS
                0x00000000c0017a8e                Process::addArgs(char**)
                0x00000000c0017ae8                Process::Process(char const*, Process*, char**)
                0x00000000c0017ae8                Process::Process(char const*, Process*, char**)
                0x00000000c0017ca0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017ca0                Process::Process(bool, char const*, Process*, char**)
                0x00000000c0017e23                disableIRQs()
                0x00000000c0017e2b                getIRQNestingLevel()
                0x00000000c0017e31                enableIRQs()
                0x00000000c0017e40                lockScheduler()
                0x00000000c0017e42                unlockScheduler()
                0x00000000c0017e44                userModeEntryPoint(void*)
                0x00000000c0017e67                lockStuff()
                0x00000000c0017e73                taskStartupFunction
                0x00000000c0017e7c                updateTimeUsed()
                0x00000000c0017eda                switchToThread(ThreadControlBlock*)
                0x00000000c0017f2a                Semaphore::Semaphore(int)
                0x00000000c0017f2a                Semaphore::Semaphore(int)
                0x00000000c0017f58                Mutex::Mutex()
                0x00000000c0017f58                Mutex::Mutex()
                0x00000000c0017f6a                Process::createThread(void (*)(void*), void*, int)
                0x00000000c001804e                Process::createUserThread()
                0x00000000c001806a                setupMultitasking(void (*)())
                0x00000000c0018174                schedule()
                0x00000000c00181f9                unlockStuff()
                0x00000000c001822e                Semaphore::tryAcquire()
                0x00000000c001825c                Semaphore::assertLocked(char const*)
                0x00000000c001828c                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c00182ce                blockTask(TaskState)
                0x00000000c00182ef                waitTask(int, int*, int)
                0x00000000c0018331                nanoSleepUntil(unsigned long long)
                0x00000000c0018388                nanoSleep(unsigned long long)
                0x00000000c001839d                sleep(unsigned long long)
                0x00000000c00183ba                Semaphore::acquire()
                0x00000000c0018422                taskReturned
                0x00000000c0018450                unblockTask(ThreadControlBlock*)
                0x00000000c00184ff                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c00187a3                cleanerTaskFunction(void*)
                0x00000000c0018856                terminateTask(int)
                0x00000000c0018936                Thr::terminateFromIRQ(int)
                0x00000000c0018942                Semaphore::release()
 .text          0x00000000c0018a2e      0x8bf vm86/vm8086.32
                0x00000000c0018a2e                Vm::vm8086EntryPoint(void*)
                0x00000000c0018a59                Vm::inbv(unsigned short)
                0x00000000c0018a5f                Vm::outbv(unsigned short, unsigned char)
                0x00000000c0018a69                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c0018a79                Vm::getSegment(unsigned int)
                0x00000000c0018a81                Vm::getOffset(unsigned int)
                0x00000000c0018a86                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018bb5                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018c3f                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018c50                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018c62                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018c73                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018c88                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018c9e                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018cb3                Vm::faultHandler(regs*)
 *fill*         0x00000000c00192ed        0x1 
 .text          0x00000000c00192ee     0x10ed fs/fat/vfslink.32
                0x00000000c00192ee                FAT::getName()
                0x00000000c00192f4                FAT::tell(void*, unsigned long long*)
                0x00000000c0019328                FAT::stat(void*, unsigned long long*)
                0x00000000c001935c                FAT::~FAT()
                0x00000000c001935c                FAT::~FAT()
                0x00000000c0019380                FAT::~FAT()
                0x00000000c00193a8                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019446                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019500                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00196e4                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00198ea                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00199f0                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019a4a                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019aa4                FAT::close(void*)
                0x00000000c0019af0                FAT::closeDir(void*)
                0x00000000c0019b3c                FAT::seek(void*, unsigned long long)
                0x00000000c0019b90                fatWrapperReadDisk
                0x00000000c0019bd7                fatWrapperWriteDisk
                0x00000000c0019c1e                fatWrapperIoctl
                0x00000000c0019d22                FAT::FAT()
                0x00000000c0019d22                FAT::FAT()
                0x00000000c0019d74                FAT::fixFilepath(char*)
                0x00000000c0019dac                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019ed4                FAT::openDir(char const*, void**)
                0x00000000c0019f7a                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a064                FAT::unlink(char const*)
                0x00000000c001a0de                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a232                FAT::rename(char const*, char const*)
                0x00000000c001a2f6                FAT::mkdir(char const*)
                0x00000000c001a370                FAT::exists(char const*)
 *fill*         0x00000000c001a3db        0x1 
 .text          0x00000000c001a3dc      0xbdf fs/iso9660/vfslink.32
                0x00000000c001a3dc                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a3e2                ISO9660::seek(void*, unsigned long long)
                0x00000000c001a412                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001a436                ISO9660::getName()
                0x00000000c001a43c                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001a460                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001a466                ISO9660::unlink(char const*)
                0x00000000c001a46c                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001a472                ISO9660::rename(char const*, char const*)
                0x00000000c001a478                ISO9660::mkdir(char const*)
                0x00000000c001a47e                ISO9660::close(void*)
                0x00000000c001a4a0                ISO9660::closeDir(void*)
                0x00000000c001a4c2                ISO9660::~ISO9660()
                0x00000000c001a4c2                ISO9660::~ISO9660()
                0x00000000c001a4e6                ISO9660::~ISO9660()
                0x00000000c001a50d                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001a54f                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a5b6                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a606                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a84a                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001aad7                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001ab2c                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001acff                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001ad8e                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001ae28                ISO9660::exists(char const*)
                0x00000000c001ae4c                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001aee0                ISO9660::openDir(char const*, void**)
                0x00000000c001af98                ISO9660::ISO9660()
                0x00000000c001af98                ISO9660::ISO9660()
 *fill*         0x00000000c001afbb        0x1 
 .text          0x00000000c001afbc      0x244 hal/sound/sndchannel.32
                0x00000000c001afbc                SoundChannel::~SoundChannel()
                0x00000000c001afbc                SoundChannel::~SoundChannel()
                0x00000000c001afd8                SoundChannel::setSpeed(float)
                0x00000000c001afe4                SoundChannel::getSpeed()
                0x00000000c001afec                SoundChannel::setVolume(int)
                0x00000000c001b008                SoundChannel::getVolume()
                0x00000000c001b010                SoundChannel::pause()
                0x00000000c001b01a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001b01a                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001b110                SoundChannel::play()
                0x00000000c001b11a                SoundChannel::paused()
                0x00000000c001b122                SoundChannel::getSampleRate()
                0x00000000c001b12a                SoundChannel::getBits()
                0x00000000c001b132                SoundChannel::getBufferUsed()
                0x00000000c001b13a                SoundChannel::getBufferSize()
                0x00000000c001b142                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001b1b4                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001b200      0x317 hal/sound/sndhw.32
                0x00000000c001b200                SoundDevice::SoundDevice(char const*)
                0x00000000c001b200                SoundDevice::SoundDevice(char const*)
                0x00000000c001b26c                SoundDevice::~SoundDevice()
                0x00000000c001b26c                SoundDevice::~SoundDevice()
                0x00000000c001b2e6                SoundDevice::~SoundDevice()
                0x00000000c001b310                SoundDevice::getFreeChannelNum()
                0x00000000c001b32a                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001b39a                SoundDevice::removeChannel(int)
                0x00000000c001b3cc                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001b438                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001b517        0x0 hw/bus/isa.32
 *fill*         0x00000000c001b517        0x1 
 .text          0x00000000c001b518      0x6e5 hw/bus/pci.32
                0x00000000c001b518                PCI::open(int, int, void*)
                0x00000000c001b52c                PCI::close(int, int, void*)
                0x00000000c001b530                PCI::PCI()
                0x00000000c001b530                PCI::PCI()
                0x00000000c001b5b0                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b5f8                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b61a                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b63e                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b682                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6a6                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6c8                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b6ea                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b70e                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b76e                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b7da                PCI::checkBus(unsigned char)
                0x00000000c001b7fe                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b96e                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001bb3e                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001bbaa                PCI::detect()
 *fill*         0x00000000c001bbfd        0x1 
 .text          0x00000000c001bbfe      0xc70 hw/diskctrl/ide.32
                0x00000000c001bbfe                IDE::close(int, int, void*)
                0x00000000c001bc02                IDE::IDE()
                0x00000000c001bc02                IDE::IDE()
                0x00000000c001bc36                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bc48                selectDrive(unsigned char, unsigned char)
                0x00000000c001bc4a                IDE::getBase(unsigned char)
                0x00000000c001bc5c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bd1c                IDE::read(unsigned char, unsigned char)
                0x00000000c001bdca                IDE::waitInterrupt(unsigned char)
                0x00000000c001be30                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001be4c                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001be68                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001beae                IDE::open(int, int, void*)
                0x00000000c001c2be                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c38a                IDE::detect()
                0x00000000c001c672                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c808                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c86e      0x62b hw/diskphys/ata.32
                0x00000000c001c86e                ATA::close(int, int, void*)
                0x00000000c001c892                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c894                ATA::ATA()
                0x00000000c001c894                ATA::ATA()
                0x00000000c001c8c2                ATA::flush(bool)
                0x00000000c001c90c                ATA::readyForCommand()
                0x00000000c001c95c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001ccda                ATA::read(unsigned long long, int, void*)
                0x00000000c001cd42                ATA::write(unsigned long long, int, void*)
                0x00000000c001cdaa                ATA::detectCHS()
                0x00000000c001cdd4                ATA::open(int, int, void*)
 *fill*         0x00000000c001ce99        0x1 
 .text          0x00000000c001ce9a      0x5b3 hw/diskphys/atapi.32
                0x00000000c001ce9a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cea0                ATAPI::close(int, int, void*)
                0x00000000c001cec4                ATAPI::ATAPI()
                0x00000000c001cec4                ATAPI::ATAPI()
                0x00000000c001cef2                ATAPI::readyForCommand()
                0x00000000c001cf42                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d202                ATAPI::diskRemoved()
                0x00000000c001d21e                ATAPI::eject()
                0x00000000c001d264                ATAPI::diskInserted()
                0x00000000c001d292                ATAPI::detectMedia()
                0x00000000c001d34e                ATAPI::open(int, int, void*)
                0x00000000c001d3ce                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d44d        0x1 
 .text          0x00000000c001d44e       0x8e hw/fpu/avx.32
                0x00000000c001d44e                AVX::open(int, int, void*)
                0x00000000c001d460                AVX::close(int, int, void*)
                0x00000000c001d472                AVX::available()
                0x00000000c001d484                AVX::save(void*)
                0x00000000c001d49c                AVX::load(void*)
                0x00000000c001d4b4                AVX::AVX()
                0x00000000c001d4b4                AVX::AVX()
 .text          0x00000000c001d4dc       0x90 hw/fpu/mmx.32
                0x00000000c001d4dc                MMX::available()
                0x00000000c001d4f0                MMX::open(int, int, void*)
                0x00000000c001d502                MMX::close(int, int, void*)
                0x00000000c001d514                MMX::save(void*)
                0x00000000c001d52c                MMX::load(void*)
                0x00000000c001d544                MMX::MMX()
                0x00000000c001d544                MMX::MMX()
 .text          0x00000000c001d56c       0x96 hw/fpu/sse.32
                0x00000000c001d56c                SSE::open(int, int, void*)
                0x00000000c001d57e                SSE::close(int, int, void*)
                0x00000000c001d590                SSE::available()
                0x00000000c001d5aa                SSE::save(void*)
                0x00000000c001d5c2                SSE::load(void*)
                0x00000000c001d5da                SSE::SSE()
                0x00000000c001d5da                SSE::SSE()
 .text          0x00000000c001d602       0x8e hw/fpu/x87.32
                0x00000000c001d602                x87::open(int, int, void*)
                0x00000000c001d614                x87::close(int, int, void*)
                0x00000000c001d626                x87::available()
                0x00000000c001d638                x87::save(void*)
                0x00000000c001d650                x87::load(void*)
                0x00000000c001d668                x87::x87()
                0x00000000c001d668                x87::x87()
 .text          0x00000000c001d690      0x5f3 hw/intctrl/apic.32
                0x00000000c001d690                APIC::disable()
                0x00000000c001d692                APIC::close(int, int, void*)
                0x00000000c001d6b4                IOAPIC::close(int, int, void*)
                0x00000000c001d6ba                APIC::io_wait()
                0x00000000c001d6c0                APIC::getBase()
                0x00000000c001d702                APIC::eoi(unsigned char)
                0x00000000c001d730                APIC::open(int, int, void*)
                0x00000000c001d7ea                IOAPIC::IOAPIC()
                0x00000000c001d7ea                IOAPIC::IOAPIC()
                0x00000000c001d812                APIC::APIC()
                0x00000000c001d812                APIC::APIC()
                0x00000000c001d8e2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d914                IOAPIC::read(int)
                0x00000000c001d93c                IOAPIC::open(int, int, void*)
                0x00000000c001da32                IOAPIC::write(int, int)
                0x00000000c001da5e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001db18                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001dc83        0x1 
 .text          0x00000000c001dc84      0x3d3 hw/intctrl/pic.32
                0x00000000c001dc84                PIC::disable()
                0x00000000c001dcb2                PIC::close(int, int, void*)
                0x00000000c001dcd4                PIC::PIC()
                0x00000000c001dcd4                PIC::PIC()
                0x00000000c001ddaa                PIC::ioWait()
                0x00000000c001ddb0                PIC::getIRQReg(int)
                0x00000000c001de1a                PIC::eoi(unsigned char)
                0x00000000c001deac                PIC::remap()
                0x00000000c001e018                PIC::open(int, int, void*)
 *fill*         0x00000000c001e057        0x1 
 .text          0x00000000c001e058      0x252 hw/timer/apictimer.32
                0x00000000c001e058                APICTimer::close(int, int, void*)
                0x00000000c001e05e                apicTimerHandler(regs*, void*)
                0x00000000c001e08c                APICTimer::write(int)
                0x00000000c001e18a                APICTimer::open(int, int, void*)
                0x00000000c001e282                APICTimer::APICTimer()
                0x00000000c001e282                APICTimer::APICTimer()
 .text          0x00000000c001e2aa      0x1a7 hw/timer/pit.32
                0x00000000c001e2aa                PIT::write(int)
                0x00000000c001e328                pitHandler(regs*, void*)
                0x00000000c001e354                PIT::open(int, int, void*)
                0x00000000c001e3a2                PIT::close(int, int, void*)
                0x00000000c001e3d2                PIT::PIT()
                0x00000000c001e3d2                PIT::PIT()
 *fill*         0x00000000c001e451        0xf 
 .text          0x00000000c001e460        0xa hw/fpu/x86/avx.32
                0x00000000c001e460                avxDetect
                0x00000000c001e466                avxSave
                0x00000000c001e467                avxLoad
                0x00000000c001e468                avxInit
                0x00000000c001e469                avxClose
 *fill*         0x00000000c001e46a        0x6 
 .text          0x00000000c001e470       0x38 hw/fpu/x86/sse.32
                0x00000000c001e470                sseDetect
                0x00000000c001e48b                sseSave
                0x00000000c001e491                sseLoad
                0x00000000c001e497                sseInit
                0x00000000c001e4a7                sseClose
 *fill*         0x00000000c001e4a8        0x8 
 .text          0x00000000c001e4b0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e4b6                x87Detect
                0x00000000c001e4d1                x87Save
                0x00000000c001e4d7                x87Load
                0x00000000c001e4dc                x87Init
                0x00000000c001e4f6                x87Close
 *fill*         0x00000000c001e4f7        0x1 
 .text          0x00000000c001e4f8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e51d        0x0 crtn.32
 *fill*         0x00000000c001e51d        0x3 
 .text          0x00000000c001e520      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e520                __divdi3
 *fill*         0x00000000c001e66b        0x1 
 .text          0x00000000c001e66c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e66c                __moddi3
 *fill*         0x00000000c001e7ea        0x2 
 .text          0x00000000c001e7ec       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e7ec                __udivdi3
 *fill*         0x00000000c001e8eb        0x1 
 .text          0x00000000c001e8ec      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e8ec                __umoddi3
 *fill*         0x00000000c001ea06        0xa 
 .text          0x00000000c001ea10       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001ea10                fabs
 *fill*         0x00000000c001ea2e        0x2 
 .text          0x00000000c001ea30        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001ea30                lrint
 .text          0x00000000c001ea3c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001ea3c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001ea48        0x0
 .iplt          0x00000000c001ea48        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001ea48        0xf
 .init          0x00000000c001ea48        0x3 crti.32
                0x00000000c001ea48                _init
 .init          0x00000000c001ea4b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001ea50        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001ea55        0x2 crtn.32

.fini           0x00000000c001ea57        0xa
 .fini          0x00000000c001ea57        0x3 crti.32
                0x00000000c001ea57                _fini
 .fini          0x00000000c001ea5a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001ea5f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001ea62       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001ea62       0x23 core/computer.32
                0x00000000c001ea62                Computer::~Computer()
                0x00000000c001ea62                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001ea86       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001ea86       0x2a core/computer.32
                0x00000000c001ea86                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001eab0       0x15
 .text._Z10idleCommonv
                0x00000000c001eab0       0x15 core/idle.32
                0x00000000c001eab0                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001eac5       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001eac5       0x12 core/kheap.32
                0x00000000c001eac5                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001ead7        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001ead7        0x9 core/kheap.32
                0x00000000c001ead7                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001eae0        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001eae0        0x2 core/unixfile.32
                0x00000000c001eae0                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001eae0                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001eae2       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001eae2       0x58 core/unixfile.32
                0x00000000c001eae2                LinkedList<UnixFile>::LinkedList()
                0x00000000c001eae2                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001eb3a       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001eb3a       0xd3 core/unixfile.32
                0x00000000c001eb3a                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec0e        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec0e        0x7 core/unixfile.32
                0x00000000c001ec0e                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec16       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec16       0xa1 core/unixfile.32
                0x00000000c001ec16                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ecb8        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ecb8        0x8 core/unixfile.32
                0x00000000c001ecb8                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ecc0       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ecc0       0x1a hal/device.32
                0x00000000c001ecc0                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ecc0                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ecda       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ecda       0x2a hal/device.32
                0x00000000c001ecda                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ed04       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001ed04       0xdc hal/device.32
                0x00000000c001ed04                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ede0       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ede0       0x58 hal/device.32
                0x00000000c001ede0                LinkedList<Device>::LinkedList()
                0x00000000c001ede0                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001ee38       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001ee38       0x12 hal/fpu.32
                0x00000000c001ee38                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001ee4a        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001ee4a        0x9 hal/fpu.32
                0x00000000c001ee4a                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001ee53       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001ee53       0x12 hal/intctrl.32
                0x00000000c001ee53                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001ee65       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001ee65       0x12 hal/intctrl.32
                0x00000000c001ee65                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001ee77       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001ee77       0x12 hal/intctrl.32
                0x00000000c001ee77                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001ee89       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001ee89       0x12 hal/intctrl.32
                0x00000000c001ee89                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001ee9b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001ee9b       0x12 hal/intctrl.32
                0x00000000c001ee9b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001eead       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001eead       0x12 hal/intctrl.32
                0x00000000c001eead                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eec0        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001eec0        0x7 hal/timer.32
                0x00000000c001eec0                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eec8       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eec8       0x1c hal/timer.32
                0x00000000c001eec8                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eee4       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eee4       0xae hal/timer.32
                0x00000000c001eee4                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ef92       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ef92       0xd3 hal/timer.32
                0x00000000c001ef92                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001f066       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f066       0x23 hw/acpi.32
                0x00000000c001f066                ACPI::~ACPI()
                0x00000000c001f066                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f08a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f08a       0x2a hw/acpi.32
                0x00000000c001f08a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f0b4       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f0b4       0x23 hw/cpu.32
                0x00000000c001f0b4                CPU::~CPU()
                0x00000000c001f0b4                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f0d8       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f0d8       0x2a hw/cpu.32
                0x00000000c001f0d8                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001f102       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001f102       0x12 hw/cpu.32
                0x00000000c001f102                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f114        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f114        0x9 hw/cpu.32
                0x00000000c001f114                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f11d        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f11d        0x9 hw/cpu.32
                0x00000000c001f11d                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001f126       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001f126       0x12 krnl/panic.32
                0x00000000c001f126                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f138        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001f138        0x2 thr/prcssthr.32
                0x00000000c001f138                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001f138                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f13a       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001f13a       0x3e thr/prcssthr.32
                0x00000000c001f13a                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001f13a                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f178       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001f178       0x58 thr/prcssthr.32
                0x00000000c001f178                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001f178                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f1d0        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001f1d0        0x8 thr/prcssthr.32
                0x00000000c001f1d0                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001f1d8       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f1d8       0x23 hw/bus/pci.32
                0x00000000c001f1d8                PCI::~PCI()
                0x00000000c001f1d8                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f1fc       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f1fc       0x2a hw/bus/pci.32
                0x00000000c001f1fc                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f226       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f226       0x23 hw/diskctrl/ide.32
                0x00000000c001f226                IDE::~IDE()
                0x00000000c001f226                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f24a       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f24a       0x2a hw/diskctrl/ide.32
                0x00000000c001f24a                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f274       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f274       0x23 hw/diskphys/ata.32
                0x00000000c001f274                ATA::~ATA()
                0x00000000c001f274                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f298       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f298       0x2a hw/diskphys/ata.32
                0x00000000c001f298                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f2c2       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f2c2       0x23 hw/diskphys/atapi.32
                0x00000000c001f2c2                ATAPI::~ATAPI()
                0x00000000c001f2c2                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f2e6       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f2e6       0x2a hw/diskphys/atapi.32
                0x00000000c001f2e6                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f310       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f310       0x23 hw/fpu/avx.32
                0x00000000c001f310                AVX::~AVX()
                0x00000000c001f310                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f334       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f334       0x2a hw/fpu/avx.32
                0x00000000c001f334                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f35e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f35e       0x23 hw/fpu/mmx.32
                0x00000000c001f35e                MMX::~MMX()
                0x00000000c001f35e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f382       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f382       0x2a hw/fpu/mmx.32
                0x00000000c001f382                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f3ac       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f3ac       0x23 hw/fpu/sse.32
                0x00000000c001f3ac                SSE::~SSE()
                0x00000000c001f3ac                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f3d0       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f3d0       0x2a hw/fpu/sse.32
                0x00000000c001f3d0                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f3fa       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f3fa       0x23 hw/fpu/x87.32
                0x00000000c001f3fa                x87::~x87()
                0x00000000c001f3fa                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f41e       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f41e       0x2a hw/fpu/x87.32
                0x00000000c001f41e                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f448       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f448       0x23 hw/intctrl/apic.32
                0x00000000c001f448                IOAPIC::~IOAPIC()
                0x00000000c001f448                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f46c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f46c       0x2a hw/intctrl/apic.32
                0x00000000c001f46c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f496       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f496       0x23 hw/intctrl/apic.32
                0x00000000c001f496                APIC::~APIC()
                0x00000000c001f496                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f4ba       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f4ba       0x2a hw/intctrl/apic.32
                0x00000000c001f4ba                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f4e4       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f4e4       0x23 hw/intctrl/pic.32
                0x00000000c001f4e4                PIC::~PIC()
                0x00000000c001f4e4                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f508       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f508       0x2a hw/intctrl/pic.32
                0x00000000c001f508                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f532       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f532       0x23 hw/timer/apictimer.32
                0x00000000c001f532                APICTimer::~APICTimer()
                0x00000000c001f532                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f556       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f556       0x2a hw/timer/apictimer.32
                0x00000000c001f556                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f580       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f580       0x23 hw/timer/pit.32
                0x00000000c001f580                PIT::~PIT()
                0x00000000c001f580                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f5a4       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f5a4       0x2a hw/timer/pit.32
                0x00000000c001f5a4                PIT::~PIT()

.rodata         0x00000000c001f5ce     0x375e
                0x00000000c001f5ce                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c001f5ce        0x2 
 .ctors         0x00000000c001f5d0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f5d4        0x4 core/unixfile.32
 .ctors         0x00000000c001f5d8        0x4 thr/prcssthr.32
 .ctors         0x00000000c001f5dc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f5e0                end_ctors = .
                0x00000000c001f5e0                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f5e0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f5e4        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f5e4                __DTOR_END__
                0x00000000c001f5e8                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f5e8       0x18 
 .rodata        0x00000000c001f600      0x101 acpica/utclib.32
                0x00000000c001f600                AcpiGbl_Ctypes
 *fill*         0x00000000c001f701        0x3 
 .rodata        0x00000000c001f704       0x18 core/malloc.32
 *fill*         0x00000000c001f71c        0x4 
 .rodata        0x00000000c001f720      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f840       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f896        0xa 
 .rodata        0x00000000c001f8a0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fca0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fd56        0x2 
 .rodata.str1.4
                0x00000000c001fd58      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c00200fd        0x3 
 .rodata        0x00000000c0020100       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020160       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020180       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020194       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c00201d6        0x2 
 .rodata.cst8   0x00000000c00201d8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c00201e0       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c002024c       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020310       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c002035a        0x6 
 .rodata.cst8   0x00000000c0020360        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020368        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020374       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c00203bc       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c00203bc       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c002042f        0x1 
 .rodata._ZTV8Computer
                0x00000000c0020430       0x2c core/computer.32
                0x00000000c0020430                vtable for Computer
 .rodata.str1.1
                0x00000000c002045c       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0020478       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c00204a8        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00204b4       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00204cf       0x5f core/physmgr.32
 *fill*         0x00000000c002052e        0x2 
 .rodata.str1.4
                0x00000000c0020530       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c002057d       0x39 core/pipe.32
 *fill*         0x00000000c00205b6        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00205b8       0x1c core/pipe.32
                0x00000000c00205b8                vtable for Pipe
 .rodata.str1.1
                0x00000000c00205d4       0x9d core/terminal.32
 *fill*         0x00000000c0020671        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0020674       0x1c core/terminal.32
                0x00000000c0020674                vtable for VgaText
 .rodata        0x00000000c0020690       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c00206ae       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0020731       0x19 core/unixfile.32
 *fill*         0x00000000c002074a        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c002074c       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002076e       0x15 core/unixfile.32
 *fill*         0x00000000c0020783        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0020784       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00207cf        0x8 core/unixfile.32
 *fill*         0x00000000c00207d7        0x1 
 .rodata.str1.4
                0x00000000c00207d8       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00207f8       0x1c core/unixfile.32
                0x00000000c00207f8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0020814       0x1c core/unixfile.32
                0x00000000c0020814                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c0020830      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00209b7      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c0020aba       0x33 coreobjs/c++.32
 *fill*         0x00000000c0020aed        0x3 
 .rodata.str1.4
                0x00000000c0020af0       0x3f dbg/kconsole.32
 *fill*         0x00000000c0020b2f        0x1 
 .rodata        0x00000000c0020b30      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c0020c80       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c0020c80       0x64 fs/vfs.32
                0x00000000c0020c80                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0020ce4       0x1c fs/vfs.32
                0x00000000c0020ce4                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0020d00       0x1c fs/vfs.32
                0x00000000c0020d00                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0020d1c       0x2c hal/bus.32
                0x00000000c0020d1c                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0020d48       0x30 hal/buzzer.32
                0x00000000c0020d48                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0020d78       0x3c hal/clock.32
                0x00000000c0020d78                vtable for Clock
 *fill*         0x00000000c0020db4        0xc 
 .rodata        0x00000000c0020dc0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0020df0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0020e0e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0020e0e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0020e0e       0x19 hal/device.32
 *fill*         0x00000000c0020e0e        0x2 
 .rodata._ZTV6Device
                0x00000000c0020e10       0x2c hal/device.32
                0x00000000c0020e10                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0020e3c       0x2c hal/device.32
                0x00000000c0020e3c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0020e68       0x2c hal/diskctrl.32
                0x00000000c0020e68                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0020e94       0x34 hal/diskphys.32
                0x00000000c0020e94                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0020ec8        0x9 hal/fpu.32
 *fill*         0x00000000c0020ed1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0020ed4       0x38 hal/fpu.32
                0x00000000c0020ed4                vtable for FPU
 .rodata.str1.4
                0x00000000c0020f0c      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c002103c      0x193 hal/intctrl.32
                                        0x19e (size before relaxing)
 *fill*         0x00000000c00211cf        0x1 
 .rodata._ZTV19InterruptController
                0x00000000c00211d0       0x48 hal/intctrl.32
                0x00000000c00211d0                vtable for InterruptController
 .rodata        0x00000000c0021218       0x4e hal/keybrd.32
 *fill*         0x00000000c0021266        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021268       0x34 hal/keybrd.32
                0x00000000c0021268                vtable for Keyboard
 .rodata.str1.1
                0x00000000c002129c       0x7a hal/logidisk.32
 *fill*         0x00000000c0021316        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0021318       0x2c hal/logidisk.32
                0x00000000c0021318                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0021344       0x2c hal/mouse.32
                0x00000000c0021344                vtable for Mouse
 .rodata.str1.1
                0x00000000c0021370        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c002137b       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c002137b        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c002137b       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c002137b       0x15 hal/timer.32
 *fill*         0x00000000c002137b        0x1 
 .rodata._ZTV5Timer
                0x00000000c002137c       0x30 hal/timer.32
                0x00000000c002137c                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00213ac       0x10 hal/vcache.32
                0x00000000c00213ac                vtable for VCache
 .rodata.str1.1
                0x00000000c00213bc        0xf hal/video.32
 *fill*         0x00000000c00213cb        0x1 
 .rodata._ZTV5Video
                0x00000000c00213cc       0x40 hal/video.32
                0x00000000c00213cc                vtable for Video
 .rodata.str1.1
                0x00000000c002140c       0xd1 hw/acpi.32
 *fill*         0x00000000c00214dd        0x3 
 .rodata.str1.4
                0x00000000c00214e0       0xe5 hw/acpi.32
 *fill*         0x00000000c00215c5        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00215c8       0x2c hw/acpi.32
                0x00000000c00215c8                vtable for ACPI
 .rodata.str1.1
                0x00000000c00215f4      0x3c8 hw/cpu.32
                                        0x3ce (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c00219bc       0x2c hw/cpu.32
                0x00000000c00219bc                vtable for CPU
 .rodata.str1.1
                0x00000000c00219e8       0xb5 krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0021a9d        0x3 
 .rodata.str1.4
                0x00000000c0021aa0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c0021bb2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c0021bf7       0x3e sys/sc_write.32
 *fill*         0x00000000c0021c35        0x3 
 .rodata.str1.4
                0x00000000c0021c38       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c0021cf4       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0021db6      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c0021fc2       0xfb thr/prcssthr.32
 *fill*         0x00000000c00220bd        0x3 
 .rodata.str1.4
                0x00000000c00220c0      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0022367       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022367       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022367       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022367       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022367        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0022367       0x5f vm86/vm8086.32
 *fill*         0x00000000c00223c6        0x2 
 .rodata        0x00000000c00223c8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00223f8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002244b        0x1 
 .rodata.str1.4
                0x00000000c002244c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0022474       0x64 fs/fat/vfslink.32
                0x00000000c0022474                vtable for FAT
 .rodata.str1.1
                0x00000000c00224d8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0022521        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0022524       0x64 fs/iso9660/vfslink.32
                0x00000000c0022524                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0022588       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c00225a2        0x2 
 .rodata.cst4   0x00000000c00225a4        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c00225a8       0x38 hal/sound/sndhw.32
                0x00000000c00225a8                vtable for SoundDevice
 .rodata.cst4   0x00000000c00225e0       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00225f0       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0022694       0x2c hw/bus/pci.32
                0x00000000c0022694                vtable for PCI
 .rodata.str1.1
                0x00000000c00226c0      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00228f6        0x2 
 .rodata._ZTV3IDE
                0x00000000c00228f8       0x2c hw/diskctrl/ide.32
                0x00000000c00228f8                vtable for IDE
 .rodata.str1.1
                0x00000000c0022924       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0022945        0x3 
 .rodata._ZTV3ATA
                0x00000000c0022948       0x34 hw/diskphys/ata.32
                0x00000000c0022948                vtable for ATA
 .rodata.str1.1
                0x00000000c002297c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c00229b4       0x34 hw/diskphys/atapi.32
                0x00000000c00229b4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00229e8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00229f0       0x38 hw/fpu/avx.32
                0x00000000c00229f0                vtable for AVX
 .rodata.str1.1
                0x00000000c0022a28        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0022a30       0x38 hw/fpu/mmx.32
                0x00000000c0022a30                vtable for MMX
 .rodata.str1.1
                0x00000000c0022a68        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0022a70       0x38 hw/fpu/sse.32
                0x00000000c0022a70                vtable for SSE
 .rodata.str1.1
                0x00000000c0022aa8        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c0022ab0       0x38 hw/fpu/x87.32
                0x00000000c0022ab0                vtable for x87
 .rodata        0x00000000c0022ae8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c0022bc0       0x48 hw/intctrl/apic.32
                0x00000000c0022bc0                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0022c08       0x2c hw/intctrl/apic.32
                0x00000000c0022c08                vtable for IOAPIC
 .rodata        0x00000000c0022c34       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0022c56        0x2 
 .rodata._ZTV3PIC
                0x00000000c0022c58       0x48 hw/intctrl/pic.32
                0x00000000c0022c58                vtable for PIC
 .rodata.str1.1
                0x00000000c0022ca0        0xb hw/timer/apictimer.32
 *fill*         0x00000000c0022cab        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c0022cac       0x30 hw/timer/apictimer.32
                0x00000000c0022cac                vtable for APICTimer
 .rodata.str1.1
                0x00000000c0022cdc       0x1d hw/timer/pit.32
 *fill*         0x00000000c0022cf9        0x3 
 .rodata._ZTV3PIT
                0x00000000c0022cfc       0x30 hw/timer/pit.32
                0x00000000c0022cfc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0022d2c      0x5fd
 *(.data)
 .data          0x00000000c0022d2c        0x0 crti.32
 .data          0x00000000c0022d2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0022d2c                __dso_handle
 .data          0x00000000c0022d30        0x0 acpica/utclib.32
 .data          0x00000000c0022d30        0x0 core/malloc.32
 .data          0x00000000c0022d30        0x0 libk/string.32
 .data          0x00000000c0022d30        0x0 fs/fat/diskio.32
 .data          0x00000000c0022d30        0x0 fs/fat/ff.32
 .data          0x00000000c0022d30        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0022d30        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0022d30        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0022d30        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0022d30        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0022d30        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0022d30        0x0 core/computer.32
 .data          0x00000000c0022d30        0x0 core/gdt.32
 .data          0x00000000c0022d30        0x0 core/idle.32
 .data          0x00000000c0022d30        0x0 core/idt.32
 .data          0x00000000c0022d30        0x4 core/kheap.32
 .data          0x00000000c0022d34        0x0 core/main.32
 .data          0x00000000c0022d34        0x4 core/physmgr.32
                0x00000000c0022d34                Phys::bitmap
 .data          0x00000000c0022d38        0x0 core/pipe.32
 *fill*         0x00000000c0022d38        0x8 
 .data          0x00000000c0022d40       0x60 core/terminal.32
                0x00000000c0022d40                VgaText::hiddenOut
                0x00000000c0022d60                ansiToVGAMappings
 .data          0x00000000c0022da0        0x0 core/tss.32
 .data          0x00000000c0022da0        0x4 core/unixfile.32
                0x00000000c0022da0                UnixFile::nextFd
 .data          0x00000000c0022da4        0x8 core/virtmgr.32
                0x00000000c0022da4                Virt::pageAllocPtr
                0x00000000c0022da8                Virt::bitmap
 .data          0x00000000c0022dac        0x4 coreobjs/c++.32
                0x00000000c0022dac                __stack_chk_guard
 .data          0x00000000c0022db0        0x0 dbg/kconsole.32
 .data          0x00000000c0022db0        0x0 fs/vfs.32
 .data          0x00000000c0022db0        0x0 hal/bus.32
 .data          0x00000000c0022db0        0x0 hal/buzzer.32
 .data          0x00000000c0022db0        0x0 hal/clock.32
 .data          0x00000000c0022db0        0x0 hal/device.32
 .data          0x00000000c0022db0        0x0 hal/diskctrl.32
 .data          0x00000000c0022db0        0x0 hal/diskphys.32
 .data          0x00000000c0022db0        0x0 hal/fpu.32
 *fill*         0x00000000c0022db0       0x10 
 .data          0x00000000c0022dc0      0x2a0 hal/intctrl.32
                0x00000000c0022dc0                exceptionNames
 .data          0x00000000c0023060        0x0 hal/keybrd.32
 .data          0x00000000c0023060        0x0 hal/logidisk.32
 .data          0x00000000c0023060        0x0 hal/mouse.32
 .data          0x00000000c0023060        0x0 hal/partition.32
 .data          0x00000000c0023060        0x0 hal/timer.32
 .data          0x00000000c0023060        0x0 hal/vcache.32
 .data          0x00000000c0023060        0x0 hal/video.32
 .data          0x00000000c0023060       0x10 hw/acpi.32
                0x00000000c0023060                legacyIRQRemaps
 *fill*         0x00000000c0023070       0x10 
 .data          0x00000000c0023080      0x2a4 hw/cpu.32
                0x00000000c0023080                cpuNameList
                0x00000000c0023320                lastCode
 .data          0x00000000c0023324        0x0 hw/ports.32
 .data          0x00000000c0023324        0x0 krnl/panic.32
 .data          0x00000000c0023324        0x0 reg/registry.32
 .data          0x00000000c0023324        0x0 sys/sc_exit.32
 .data          0x00000000c0023324        0x0 sys/sc_loaddll.32
 .data          0x00000000c0023324        0x0 sys/sc_read.32
 .data          0x00000000c0023324        0x0 sys/sc_sbrk.32
 .data          0x00000000c0023324        0x0 sys/sc_write.32
 .data          0x00000000c0023324        0x0 sys/sc_yield.32
 .data          0x00000000c0023324        0x0 sys/syscalls.32
 .data          0x00000000c0023324        0x0 thr/elf.32
 .data          0x00000000c0023324        0x4 thr/prcssthr.32
                0x00000000c0023324                nextPID
 .data          0x00000000c0023328        0x0 vm86/vm8086.32
 .data          0x00000000c0023328        0x0 fs/fat/vfslink.32
 .data          0x00000000c0023328        0x1 fs/iso9660/vfslink.32
                0x00000000c0023328                recentDriveletter
 .data          0x00000000c0023329        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0023329        0x0 hal/sound/sndhw.32
 .data          0x00000000c0023329        0x0 hw/bus/isa.32
 .data          0x00000000c0023329        0x0 hw/bus/pci.32
 .data          0x00000000c0023329        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0023329        0x0 hw/diskphys/ata.32
 .data          0x00000000c0023329        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0023329        0x0 hw/fpu/avx.32
 .data          0x00000000c0023329        0x0 hw/fpu/mmx.32
 .data          0x00000000c0023329        0x0 hw/fpu/sse.32
 .data          0x00000000c0023329        0x0 hw/fpu/x87.32
 .data          0x00000000c0023329        0x0 hw/intctrl/apic.32
 .data          0x00000000c0023329        0x0 hw/intctrl/pic.32
 .data          0x00000000c0023329        0x0 hw/timer/apictimer.32
 .data          0x00000000c0023329        0x0 hw/timer/pit.32
 .data          0x00000000c0023329        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0023329        0x0 crtn.32
 .data          0x00000000c0023329        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0023329        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0023329        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0023329        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0023329        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0023329        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0023329        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002332c        0x0
 .got           0x00000000c002332c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002332c        0x0
 .got.plt       0x00000000c002332c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002332c        0x0
 .igot.plt      0x00000000c002332c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002332c        0x0
 .tm_clone_table
                0x00000000c002332c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002332c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0023329      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0023329        0x3 
 .eh_frame      0x00000000c002332c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002332c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002332c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0023384       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00233c4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0023430       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c00234b4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00234cc        0x0
 .rel.got       0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00234cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00234cc     0x223c
                0x00000000c00234cc                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00234cc        0x0 crti.32
 .bss           0x00000000c00234cc       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00234ec        0x4 acpica/utclib.32
 *fill*         0x00000000c00234f0       0x10 
 .bss           0x00000000c0023500      0x378 core/malloc.32
 .bss           0x00000000c0023878        0x0 libk/string.32
 .bss           0x00000000c0023878        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0023878        0x8 
 .bss           0x00000000c0023880       0x88 fs/fat/ff.32
 .bss           0x00000000c0023908        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0023908        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0023908        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0023908        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0023908        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0023908        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0023908        0x6 core/computer.32
                0x00000000c0023908                computer
                0x00000000c002390c                preemptionOn
                0x00000000c002390d                schedulingOn
 *fill*         0x00000000c002390e        0x2 
 .bss           0x00000000c0023910        0x6 core/gdt.32
                0x00000000c0023910                gdtDescr
 .bss           0x00000000c0023916        0x0 core/idle.32
 *fill*         0x00000000c0023916        0x2 
 .bss           0x00000000c0023918        0x6 core/idt.32
                0x00000000c0023918                idtDescr
 .bss           0x00000000c002391e        0x0 core/kheap.32
 *fill*         0x00000000c002391e        0x2 
 .bss           0x00000000c0023920        0x4 core/main.32
                0x00000000c0023920                sysBootSettings
 *fill*         0x00000000c0023924       0x1c 
 .bss           0x00000000c0023940       0x50 core/physmgr.32
                0x00000000c0023940                Phys::currentPagePointer
                0x00000000c0023944                Phys::highestMem
                0x00000000c0023948                Phys::oldPercent
                0x00000000c002394c                Phys::usedPages
                0x00000000c0023950                Phys::usablePages
                0x00000000c0023960                Phys::dmaUsage
 .bss           0x00000000c0023990        0x0 core/pipe.32
 *fill*         0x00000000c0023990       0x10 
 .bss           0x00000000c00239a0       0x29 core/terminal.32
                0x00000000c00239a0                textModeImplementation
                0x00000000c00239c0                terminalCycle
                0x00000000c00239c4                activeTerminal
                0x00000000c00239c8                VgaText::graphicMode
 *fill*         0x00000000c00239c9        0x1 
 .bss           0x00000000c00239ca        0x2 core/tss.32
                0x00000000c00239ca                doubleFaultSelector
 *fill*         0x00000000c00239cc       0x14 
 .bss           0x00000000c00239e0       0x84 core/unixfile.32
                0x00000000c00239e0                sfileLpt
                0x00000000c0023a20                sfileCom
                0x00000000c0023a44                sfileNul
                0x00000000c0023a48                sfilePnt
                0x00000000c0023a4c                sfileAux
                0x00000000c0023a50                sfileCon
                0x00000000c0023a54                initialFilesAdded
                0x00000000c0023a58                unixFileLinkedList
 .bss           0x00000000c0023a64        0x4 core/virtmgr.32
                0x00000000c0023a64                firstVAS
 .bss           0x00000000c0023a68        0x0 coreobjs/c++.32
 .bss           0x00000000c0023a68        0x0 dbg/kconsole.32
 .bss           0x00000000c0023a68        0x4 fs/vfs.32
                0x00000000c0023a68                installedFilesystems
 .bss           0x00000000c0023a6c        0x0 hal/bus.32
 .bss           0x00000000c0023a6c        0x4 hal/buzzer.32
                0x00000000c0023a6c                systemBuzzer
 .bss           0x00000000c0023a70        0x8 hal/clock.32
                0x00000000c0023a70                dstOn
                0x00000000c0023a71                timezoneHalfHourOffset
                0x00000000c0023a74                timezoneHourOffset
 .bss           0x00000000c0023a78        0x0 hal/device.32
 .bss           0x00000000c0023a78        0x0 hal/diskctrl.32
 .bss           0x00000000c0023a78        0x0 hal/diskphys.32
 .bss           0x00000000c0023a78        0x0 hal/fpu.32
 .bss           0x00000000c0023a78       0x20 hal/intctrl.32
                0x00000000c0023a78                pf5
                0x00000000c0023a7c                pf4
                0x00000000c0023a80                pf3
                0x00000000c0023a84                pf2
                0x00000000c0023a88                pf1
                0x00000000c0023a8c                pf0
                0x00000000c0023a90                gpFaultIntercept
                0x00000000c0023a94                x87FaultIntercept
 *fill*         0x00000000c0023a98        0x8 
 .bss           0x00000000c0023aa0      0x429 hal/keybrd.32
                0x00000000c0023aa0                keyboardWaitingTaskList
                0x00000000c0023aa4                keyboardSetupYet
                0x00000000c0023ac0                keystates
 *fill*         0x00000000c0023ec9       0x17 
 .bss           0x00000000c0023ee0       0x88 hal/logidisk.32
                0x00000000c0023ee0                diskAssignments
                0x00000000c0023f00                disks
 .bss           0x00000000c0023f68        0x4 hal/mouse.32
                0x00000000c0023f68                guiMouseHandler
 .bss           0x00000000c0023f6c        0x0 hal/partition.32
 *fill*         0x00000000c0023f6c        0x4 
 .bss           0x00000000c0023f70        0x8 hal/timer.32
                0x00000000c0023f70                nanoSinceBoot
 .bss           0x00000000c0023f78        0x0 hal/vcache.32
 .bss           0x00000000c0023f78        0x4 hal/video.32
                0x00000000c0023f78                screen
 *fill*         0x00000000c0023f7c        0x4 
 .bss           0x00000000c0023f80      0x3c0 hw/acpi.32
                0x00000000c0023f80                systemSleepFunction
                0x00000000c0023f84                systemResetFunction
                0x00000000c0023f88                systemShutdownFunction
                0x00000000c0023f8c                nextACPITable
                0x00000000c0023fa0                acpiTables
                0x00000000c00241a0                usingXSDT
                0x00000000c00241a4                MADTpointer
                0x00000000c00241a8                RSDTpointer
                0x00000000c00241ac                RSDPpointer
                0x00000000c00241b0                ioapicDiscoveryNumber
                0x00000000c00241c0                ioapicFoundInMADT
                0x00000000c00241e0                ioapicAddresses
                0x00000000c0024260                ioapicGSIBase
                0x00000000c00242e0                processorDiscoveryNumber
                0x00000000c0024300                matchingAPICID
                0x00000000c0024320                processorID
 .bss           0x00000000c0024340       0x10 hw/cpu.32
                0x00000000c0024340                lastD
                0x00000000c0024344                lastC
                0x00000000c0024348                lastB
                0x00000000c002434c                lastA
 .bss           0x00000000c0024350        0x0 hw/ports.32
 .bss           0x00000000c0024350        0x5 krnl/panic.32
                0x00000000c0024350                Krnl::guiPanicHandler
                0x00000000c0024354                Krnl::kernelInPanic
 .bss           0x00000000c0024355        0x0 reg/registry.32
 .bss           0x00000000c0024355        0x0 sys/sc_exit.32
 .bss           0x00000000c0024355        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0024355        0x0 sys/sc_read.32
 .bss           0x00000000c0024355        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0024355        0x0 sys/sc_write.32
 .bss           0x00000000c0024355        0x0 sys/sc_yield.32
 *fill*         0x00000000c0024355        0xb 
 .bss           0x00000000c0024360      0x200 sys/syscalls.32
                0x00000000c0024360                systemCallHandlers
 .bss           0x00000000c0024560      0x7a4 thr/elf.32
                0x00000000c0024560                Thr::driverLookupNext
                0x00000000c0024580                Thr::driverLookupLen
                0x00000000c0024780                Thr::driverLookupAddr
                0x00000000c0024980                Thr::driverNameLookup
                0x00000000c0024b80                Thr::kernelSymbols
                0x00000000c0024c00                Thr::kernelStringTable
                0x00000000c0024c80                Thr::kernelSymbolTable
                0x00000000c0024d00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0024d04        0x4 
 .bss           0x00000000c0024d08       0x68 thr/prcssthr.32
                0x00000000c0024d08                cleanerThread
                0x00000000c0024d0c                weNeedTheCleanerToNotBlock
                0x00000000c0024d10                xxxx
                0x00000000c0024d14                retValLockStuff
                0x00000000c0024d18                retValSchedLock
                0x00000000c0024d1c                lockStuffLock
                0x00000000c0024d20                schedulerLock
                0x00000000c0024d24                taskSwitchesPostponedFlag
                0x00000000c0024d28                postponeTaskSwitchesCounter
                0x00000000c0024d2c                irqDisableCounter
                0x00000000c0024d30                terminatedTaskList
                0x00000000c0024d3c                sleepingTaskList
                0x00000000c0024d48                taskList
                0x00000000c0024d54                kernelProcess
 .bss           0x00000000c0024d70        0x0 vm86/vm8086.32
 *fill*         0x00000000c0024d70       0x10 
 .bss           0x00000000c0024d80       0xf0 fs/fat/vfslink.32
                0x00000000c0024d80                FAT::fats
                0x00000000c0024da0                FAT::vfsToFatRemaps
                0x00000000c0024e20                fatToVFSRemaps
 *fill*         0x00000000c0024e70       0x10 
 .bss           0x00000000c0024e80      0x820 fs/iso9660/vfslink.32
                0x00000000c0024e80                recentSector
                0x00000000c0024ea0                recentBuffer
 .bss           0x00000000c00256a0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c00256a0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00256a0        0x0 hw/bus/isa.32
 .bss           0x00000000c00256a0        0x0 hw/bus/pci.32
 .bss           0x00000000c00256a0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00256a0        0x8 hw/diskphys/ata.32
                0x00000000c00256a0                ataSectorsWritten
                0x00000000c00256a4                ataSectorsRead
 .bss           0x00000000c00256a8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00256a8        0x0 hw/fpu/avx.32
 .bss           0x00000000c00256a8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00256a8        0x0 hw/fpu/sse.32
 .bss           0x00000000c00256a8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00256a8       0x18 
 .bss           0x00000000c00256c0       0x41 hw/intctrl/apic.32
                0x00000000c00256c0                noOfIOAPICs
                0x00000000c00256e0                ioapics
                0x00000000c0025700                IOAPICsSetupYet
 .bss           0x00000000c0025701        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0025701        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0025701        0x3 
 .bss           0x00000000c0025704        0x4 hw/timer/pit.32
                0x00000000c0025704                pitFreq
 .bss           0x00000000c0025708        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0025708        0x0 crtn.32
 .bss           0x00000000c0025708        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0025708        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0025708        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0025708        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0025708        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0025708        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0025708        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0025708                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0027944                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
