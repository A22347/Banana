Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/clock/rtc.32
 .comment       0x0000000000000000       0x12 hw/clock/rtc.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/clock/rtc.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e918
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x44c D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001e2                goToVM86
                0x00000000c0000213                goToUsermode
                0x00000000c000023e                switchToThreadASMFirstTime
                0x00000000c000024c                switchToThreadASM
                0x00000000c00002ec                detectCPUID
                0x00000000c0000302                asmQuickAcquireLock
                0x00000000c0000320                asmQuickReleaseLock
                0x00000000c000032c                asmAcquireLock
                0x00000000c000034d                asmReleaseLock
                0x00000000c0000360                loadGDT
                0x00000000c0000380                isr0
                0x00000000c0000390                isr1
                0x00000000c000039a                isr2
                0x00000000c00003a4                isr3
                0x00000000c00003ae                isr4
                0x00000000c00003b8                isr5
                0x00000000c00003c2                isr6
                0x00000000c00003cc                isr7
                0x00000000c00003d6                isr8
                0x00000000c00003de                isr9
                0x00000000c00003e8                isr10
                0x00000000c00003f0                isr11
                0x00000000c00003f8                isr12
                0x00000000c0000400                isr13
                0x00000000c0000408                isr14
                0x00000000c0000410                isr15
                0x00000000c000041a                isr16
                0x00000000c0000424                isr17
                0x00000000c000042e                isr18
                0x00000000c0000438                isr96
                0x00000000c0000442                irq0
                0x00000000c000044c                irq1
                0x00000000c0000456                irq2
                0x00000000c0000460                irq3
                0x00000000c000046a                irq4
                0x00000000c0000474                irq5
                0x00000000c000047e                irq6
                0x00000000c0000488                irq7
                0x00000000c0000492                irq8
                0x00000000c000049c                irq9
                0x00000000c00004a6                irq10
                0x00000000c00004b0                irq11
                0x00000000c00004ba                irq12
                0x00000000c00004c4                irq13
                0x00000000c00004ce                irq14
                0x00000000c00004d8                irq15
                0x00000000c00004e2                irq16
                0x00000000c00004ec                irq17
                0x00000000c00004f6                irq18
                0x00000000c0000500                irq19
                0x00000000c000050a                irq20
                0x00000000c0000514                irq21
                0x00000000c000051e                irq22
                0x00000000c0000528                irq23
                0x00000000c0000532                int_common_stub
                0x00000000c0000562                syscall_common_stub
 .text          0x00000000c000059c      0x6ff acpica/utclib.32
                0x00000000c000059c                memcmp
                0x00000000c00005f4                memmove
                0x00000000c0000661                memcpy
                0x00000000c00006d8                memset
                0x00000000c0000701                strlen
                0x00000000c0000724                strpbrk
                0x00000000c0000766                strtok
                0x00000000c00007f4                strcpy
                0x00000000c0000826                strncpy
                0x00000000c000087a                strcmp
                0x00000000c00008bc                strchr
                0x00000000c00008e5                strncmp
                0x00000000c0000941                strcat
                0x00000000c0000982                strncat
                0x00000000c00009de                strstr
                0x00000000c0000a31                toupper
                0x00000000c0000a57                tolower
                0x00000000c0000a7d                simple_strtoul
 .text          0x00000000c0000c9b      0xfbf core/malloc.32
                0x00000000c0000e06                dlfree
                0x00000000c0001161                dlmalloc
                0x00000000c000169e                dlrealloc
                0x00000000c0001853                dlmemalign
                0x00000000c0001976                dlcalloc
                0x00000000c0001a10                dlcfree
                0x00000000c0001a15                dlindependent_calloc
                0x00000000c0001a3a                dlindependent_comalloc
                0x00000000c0001a51                dlvalloc
                0x00000000c0001a7c                dlpvalloc
                0x00000000c0001ab2                dlmalloc_trim
                0x00000000c0001abf                dlmalloc_usable_size
                0x00000000c0001af0                dlmallinfo
                0x00000000c0001bbf                dlmalloc_stats
                0x00000000c0001bd0                dlmallopt
 .text          0x00000000c0001c5a        0x0 libk/string.32
 .text          0x00000000c0001c5a       0x51 fs/fat/diskio.32
                0x00000000c0001c5a                disk_status
                0x00000000c0001c5d                disk_initialize
                0x00000000c0001c60                disk_read
                0x00000000c0001c76                disk_write
                0x00000000c0001c8c                disk_ioctl
 .text          0x00000000c0001cab     0x6833 fs/fat/ff.32
                0x00000000c0004f79                f_mount
                0x00000000c0004fdb                f_open
                0x00000000c0005417                f_read
                0x00000000c0005697                f_write
                0x00000000c0005951                f_sync
                0x00000000c0005b2d                f_close
                0x00000000c0005b5c                f_lseek
                0x00000000c0006013                f_opendir
                0x00000000c0006115                f_closedir
                0x00000000c0006137                f_readdir
                0x00000000c00061d2                f_stat
                0x00000000c0006261                f_getfree
                0x00000000c000642c                f_truncate
                0x00000000c0006524                f_unlink
                0x00000000c00066a7                f_mkdir
                0x00000000c00068d3                f_rename
                0x00000000c0006bc6                f_chmod
                0x00000000c0006ca4                f_utime
                0x00000000c0006d82                f_getlabel
                0x00000000c0006f70                f_setlabel
                0x00000000c00071dd                f_forward
                0x00000000c00073bb                f_mkfs
 .text          0x00000000c00084de       0x2d fs/fat/ffsystem.32
                0x00000000c00084de                ff_memalloc
                0x00000000c00084f4                ff_memfree
 .text          0x00000000c000850b      0x253 fs/fat/ffunicode.32
                0x00000000c000850b                ff_uni2oem
                0x00000000c000859b                ff_oem2uni
                0x00000000c0008607                ff_wtoupper
 .text          0x00000000c000875e      0x70e hal/libresample/samplerate.32
                0x00000000c00087e6                src_delete
                0x00000000c0008822                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008aab                src_set_ratio
                0x00000000c0008b02                src_get_channels
                0x00000000c0008b24                src_reset
                0x00000000c0008b68                src_new
                0x00000000c0008bf6                src_callback_new
                0x00000000c0008c58                src_get_name
                0x00000000c0008c8f                src_get_description
                0x00000000c0008cc6                src_get_version
                0x00000000c0008ccc                src_is_valid_ratio
                0x00000000c0008ce6                src_error
                0x00000000c0008cf4                src_strerror
                0x00000000c0008d07                src_simple
                0x00000000c0008d5a                src_short_to_float_array
                0x00000000c0008d80                src_float_to_short_array
                0x00000000c0008de4                src_int_to_float_array
                0x00000000c0008e0a                src_float_to_int_array
 .text          0x00000000c0008e6c      0x3fd hal/libresample/src_linear.32
                0x00000000c00091c4                linear_get_name
                0x00000000c00091d3                linear_get_description
                0x00000000c00091e2                linear_set_converter
 .text          0x00000000c0009269     0x1b46 hal/libresample/src_sinc.32
                0x00000000c000abbf                sinc_get_name
                0x00000000c000abd2                sinc_get_description
                0x00000000c000abe5                sinc_set_converter
 .text          0x00000000c000adaf      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000b0dd                zoh_get_name
                0x00000000c000b0ec                zoh_get_description
                0x00000000c000b0fb                zoh_set_converter
 .text          0x00000000c000b182      0x68d core/computer.32
                0x00000000c000b182                Computer::close(int, int, void*)
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b322                Computer::setBootMessage(char const*)
                0x00000000c000b324                Computer::start()
                0x00000000c000b3fe                firstTask()
                0x00000000c000b40c                Computer::detectFeatures()
                0x00000000c000b5e6                Computer::displayFeatures()
                0x00000000c000b5e8                Computer::rdmsr(unsigned int)
                0x00000000c000b614                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b64c                Computer::nmiEnabled()
                0x00000000c000b658                Computer::readCMOS(unsigned char)
                0x00000000c000b672                Computer::enableNMI(bool)
                0x00000000c000b68a                Computer::open(int, int, void*)
                0x00000000c000b752                Computer::disableNMI()
                0x00000000c000b760                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b77e                Computer::handleNMI()
                0x00000000c000b7e4                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b80f      0xf3d core/elf.32
                0x00000000c000b80f                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000ba8c                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000bca2                runtimeReferenceHelper()
                0x00000000c000bcb5                getAddressOfKernelSymbol(char const*)
                0x00000000c000bd04                loadKernelSymbolTable(char const*)
                0x00000000c000bfc5                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c675                loadDLL(char const*)
                0x00000000c000c73e                executeDLL(unsigned long, void*)
 .text          0x00000000c000c74c      0x1b7 core/gdt.32
                0x00000000c000c74c                GDTEntry::setBase(unsigned int)
                0x00000000c000c768                GDTEntry::setLimit(unsigned int)
                0x00000000c000c786                GDT::GDT()
                0x00000000c000c786                GDT::GDT()
                0x00000000c000c79c                GDT::addEntry(GDTEntry)
                0x00000000c000c7d8                GDT::getNumberOfEntries()
                0x00000000c000c7e0                GDT::flush()
                0x00000000c000c802                GDT::setup()
 .text          0x00000000c000c903       0x61 core/idle.32
                0x00000000c000c903                idleFunction(void*)
 .text          0x00000000c000c964      0x45f core/idt.32
                0x00000000c000c964                IDTEntry::IDTEntry(bool)
                0x00000000c000c964                IDTEntry::IDTEntry(bool)
                0x00000000c000c9d2                IDTEntry::setOffset(unsigned int)
                0x00000000c000c9e6                IDT::IDT()
                0x00000000c000c9e6                IDT::IDT()
                0x00000000c000c9e8                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000c9f0                IDT::addEntry(IDTEntry, int)
                0x00000000c000ca0a                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ca42                IDT::flush()
                0x00000000c000ca5c                IDT::setup()
 .text          0x00000000c000cdc3      0x519 core/kconsole.32
                0x00000000c000cdc3                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ce24                logc(char)
                0x00000000c000ce3b                logs(char*)
                0x00000000c000ce58                logWriteInt(unsigned int)
                0x00000000c000ce75                logWriteIntBase(unsigned int, int)
                0x00000000c000ce94                kprintf(char const*, ...)
                0x00000000c000cfb2                panic(char const*)
 .text          0x00000000c000d2dc      0x20d core/kheap.32
                0x00000000c000d2dc                sbrk
                0x00000000c000d3f4                mmap
                0x00000000c000d40a                munmap
                0x00000000c000d420                liballoc_lock()
                0x00000000c000d431                liballoc_unlock()
                0x00000000c000d442                liballoc_alloc(int)
                0x00000000c000d45d                liballoc_free(void*, int)
                0x00000000c000d47b                realloc
                0x00000000c000d48f                malloc
                0x00000000c000d49f                free
                0x00000000c000d4af                rfree
                0x00000000c000d4bf                calloc
 .text          0x00000000c000d4e9      0x38d core/main.32
                0x00000000c000d4e9                hwTextMode_loadInData(VgaText*)
                0x00000000c000d52e                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d570                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d5c4                hwTextMode_update(VgaText*)
                0x00000000c000d5c5                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d60d                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d649                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d6cf                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d72d                setupTextMode()
                0x00000000c000d77e                kernel_main
 .text          0x00000000c000d876      0x46c core/physmgr.32
                0x00000000c000d876                Phys::allocateDMA(unsigned long)
                0x00000000c000d919                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d961                Phys::setPageState(unsigned long, bool)
                0x00000000c000d993                Phys::getPageState(unsigned long)
                0x00000000c000d9af                Phys::freePage(unsigned long)
                0x00000000c000da39                Phys::allocatePage()
                0x00000000c000daf5                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000db2d                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000dce2      0x273 core/pipe.32
                0x00000000c000dce2                Pipe::isAtty()
                0x00000000c000dce6                Pipe::~Pipe()
                0x00000000c000dce6                Pipe::~Pipe()
                0x00000000c000dd0a                Pipe::~Pipe()
                0x00000000c000dd32                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000de26                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000deee                Pipe::Pipe(int)
                0x00000000c000deee                Pipe::Pipe(int)
 *fill*         0x00000000c000df55        0x1 
 .text          0x00000000c000df56     0x1154 core/prcssthr.32
                0x00000000c000df56                changeTSS
                0x00000000c000df84                Process::addArgs(char**)
                0x00000000c000dfde                Process::Process(char const*, Process*, char**)
                0x00000000c000dfde                Process::Process(char const*, Process*, char**)
                0x00000000c000e196                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e196                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e319                disableIRQs()
                0x00000000c000e321                getIRQNestingLevel()
                0x00000000c000e327                enableIRQs()
                0x00000000c000e336                lockScheduler()
                0x00000000c000e338                unlockScheduler()
                0x00000000c000e33a                userModeEntryPoint(void*)
                0x00000000c000e35d                lockStuff()
                0x00000000c000e369                taskStartupFunction
                0x00000000c000e372                updateTimeUsed()
                0x00000000c000e3d0                switchToThread(ThreadControlBlock*)
                0x00000000c000e420                Semaphore::Semaphore(int)
                0x00000000c000e420                Semaphore::Semaphore(int)
                0x00000000c000e44e                Mutex::Mutex()
                0x00000000c000e44e                Mutex::Mutex()
                0x00000000c000e460                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e544                Process::createUserThread()
                0x00000000c000e560                setupMultitasking(void (*)())
                0x00000000c000e66a                schedule()
                0x00000000c000e6ef                unlockStuff()
                0x00000000c000e724                forkProcess(regs*)
                0x00000000c000e892                Semaphore::tryAcquire()
                0x00000000c000e8c0                Semaphore::assertLocked(char const*)
                0x00000000c000e8f3                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e935                blockTask(TaskState)
                0x00000000c000e956                waitTask(int, int*, int)
                0x00000000c000e998                nanoSleepUntil(unsigned long long)
                0x00000000c000e9ef                nanoSleep(unsigned long long)
                0x00000000c000ea04                sleep(unsigned long long)
                0x00000000c000ea22                Semaphore::acquire()
                0x00000000c000ea8a                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000eb18                taskReturned
                0x00000000c000eb5a                unblockTask(ThreadControlBlock*)
                0x00000000c000ec09                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000eea6                cleanerTaskFunction(void*)
                0x00000000c000ef36                terminateTask(int)
                0x00000000c000efbe                Semaphore::release()
 .text          0x00000000c000f0aa      0xd8a core/syscalls.32
                0x00000000c000f0aa                sysCallGetPID(regs*)
                0x00000000c000f0b6                sysCallSeekDir(regs*)
                0x00000000c000f0bb                sysCallTellDir(regs*)
                0x00000000c000f0c0                sysCallVerify(regs*)
                0x00000000c000f0ca                sysCallGetArgc(regs*)
                0x00000000c000f0da                sysFormatDisk(regs*)
                0x00000000c000f144                sysSetDiskVolumeLabel(regs*)
                0x00000000c000f18a                sysGetDiskVolumeLabel(regs*)
                0x00000000c000f1db                sysShutdown(regs*)
                0x00000000c000f223                sysCallGetCwd(regs*)
                0x00000000c000f242                sysCallSetCwd(regs*)
                0x00000000c000f25e                sysCallRealpath(regs*)
                0x00000000c000f2a1                sysCallOpen(regs*)
                0x00000000c000f391                sysCallReadDir(regs*)
                0x00000000c000f400                sysCallIsATTY(regs*)
                0x00000000c000f453                sysCallSeek(regs*)
                0x00000000c000f4a4                sysCallTell(regs*)
                0x00000000c000f4f0                sysCallSizeFromFilename(regs*)
                0x00000000c000f569                sysCallSize(regs*)
                0x00000000c000f5bb                sysCallClose(regs*)
                0x00000000c000f609                sysCallOpenDir(regs*)
                0x00000000c000f676                sysCallMakeDir(regs*)
                0x00000000c000f6cf                sysCallCloseDir(regs*)
                0x00000000c000f71d                sysCallWait(regs*)
                0x00000000c000f737                sysCallFork(regs*)
                0x00000000c000f753                sysCallExecve(regs*)
                0x00000000c000f7a8                sysCallRmdir(regs*)
                0x00000000c000f7fa                sysCallUnlink(regs*)
                0x00000000c000f84c                sysCallGetArgv(regs*)
                0x00000000c000f898                sysCallTTYName(regs*)
                0x00000000c000f914                sysCallGetEnv(regs*)
                0x00000000c000f966                sysCallUSleep(regs*)
                0x00000000c000f98d                sysCallSpawn(regs*)
                0x00000000c000f9fd                sysAppSettings(regs*)
                0x00000000c000fb1c                sysSetFatAttrib(regs*)
                0x00000000c000fb7c                sysPanic(regs*)
                0x00000000c000fba2                sysPipe(regs*)
                0x00000000c000fbe7                sysGetUnixTime(regs*)
                0x00000000c000fbfb                string_ends_with(char const*, char const*)
                0x00000000c000fc43                setupSystemCalls()
                0x00000000c000fdf2                systemCall(regs*, void*)
 .text          0x00000000c000fe34      0xf65 core/terminal.32
                0x00000000c000fe34                VgaText::isAtty()
                0x00000000c000fe38                VgaText::~VgaText()
                0x00000000c000fe38                VgaText::~VgaText()
                0x00000000c000fe5c                VgaText::~VgaText()
                0x00000000c000fe86                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fea6                setTerminalScrollLock(bool)
                0x00000000c000fea7                addToTerminalCycle(VgaText*)
                0x00000000c000fed4                installVgaTextImplementation()
                0x00000000c000fee9                scrollTerminalScrollLock(int)
                0x00000000c000feea                VgaText::load()
                0x00000000c000ff3e                VgaText::updateCursor()
                0x00000000c000ff58                VgaText::showCursor(bool)
                0x00000000c000ff68                VgaText::disableBlink(bool)
                0x00000000c000ffa2                VgaText::doANSI_SGR(int)
                0x00000000c001002e                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c0010044                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c001005a                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c001007a                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c001008c                VgaText::scrollScreen()
                0x00000000c0010120                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010132                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c0010192                VgaText::getCursorX()
                0x00000000c001019e                VgaText::getCursorY()
                0x00000000c00101aa                VgaText::setCursor(int, int)
                0x00000000c00101c8                VgaText::setCursorX(int)
                0x00000000c00101e4                VgaText::setCursorY(int)
                0x00000000c0010200                VgaText::incrementCursor(bool)
                0x00000000c0010268                VgaText::updateRAMUsageDisplay(int)
                0x00000000c00102c2                VgaText::updateDiskUsage()
                0x00000000c0010428                VgaText::updateTitle()
                0x00000000c001046e                VgaText::setTitleTextColour(VgaColour)
                0x00000000c001047e                VgaText::setTitleColour(VgaColour)
                0x00000000c001048e                VgaText::setTitle(char*)
                0x00000000c00104b4                VgaText::decrementCursor(bool)
                0x00000000c00104dc                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c00105d8                VgaText::isShowingCursor()
                0x00000000c00105e4                VgaText::isBlinkDisabled()
                0x00000000c00105f2                VgaText::setCursorHeight(int)
                0x00000000c0010610                VgaText::getCursorHeight()
                0x00000000c001061b                setActiveTerminal(VgaText*)
                0x00000000c00106cd                doTerminalCycle()
                0x00000000c00106ea                VgaText::doUpdate()
                0x00000000c00106fc                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c00108bc                VgaText::clearScreen()
                0x00000000c0010920                VgaText::putchar(char)
                0x00000000c0010a3a                VgaText::puts(char const*)
                0x00000000c0010a60                VgaText::putx(unsigned int)
                0x00000000c0010aa6                VgaText::VgaText(char const*)
                0x00000000c0010aa6                VgaText::VgaText(char const*)
                0x00000000c0010c38                VgaText::receiveKey(unsigned char)
                0x00000000c0010d20                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0010d74                newTerminal(char*)
 *fill*         0x00000000c0010d99        0x1 
 .text          0x00000000c0010d9a      0x18f core/tss.32
                0x00000000c0010d9a                TSS::TSS()
                0x00000000c0010d9a                TSS::TSS()
                0x00000000c0010da8                TSS::setESP(unsigned long)
                0x00000000c0010dba                TSS::flush()
                0x00000000c0010dda                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010f29        0x1 
 .text          0x00000000c0010f2a      0x32f core/unixfile.32
                0x00000000c0010f2a                ReservedFilename::isAtty()
                0x00000000c0010f40                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0010fd2                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c0011068                UnixFile::getFileDescriptor()
                0x00000000c0011070                UnixFile::UnixFile(int)
                0x00000000c0011070                UnixFile::UnixFile(int)
                0x00000000c00110ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00110ac                ReservedFilename::ReservedFilename(int)
                0x00000000c00110d4                UnixFile::~UnixFile()
                0x00000000c00110d4                UnixFile::~UnixFile()
                0x00000000c001115a                UnixFile::~UnixFile()
                0x00000000c0011182                ReservedFilename::~ReservedFilename()
                0x00000000c0011182                ReservedFilename::~ReservedFilename()
                0x00000000c00111a6                ReservedFilename::~ReservedFilename()
                0x00000000c00111cd                getFromFileDescriptor(int)
 *fill*         0x00000000c0011259        0x1 
 .text          0x00000000c001125a     0x1175 core/virtmgr.32
                0x00000000c001125a                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c001128f                Virt::getPageState(unsigned long)
                0x00000000c00112b3                Virt::allocateKernelVirtualPages(int)
                0x00000000c00113c4                Virt::virtualMemorySetup()
                0x00000000c0011443                Virt::getAKernelVAS()
                0x00000000c0011449                Virt::setupPageSwapping(int)
                0x00000000c001156e                VAS::VAS()
                0x00000000c001156e                VAS::VAS()
                0x00000000c001159e                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c00115ca                VAS::getPageTableEntry(unsigned long)
                0x00000000c00115e9                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c001170c                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0011730                VAS::virtualToPhysical(unsigned long)
                0x00000000c0011748                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c001177e                VAS::~VAS()
                0x00000000c001177e                VAS::~VAS()
                0x00000000c00118ea                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c00119ea                VAS::allocatePages(int, int)
                0x00000000c0011bba                VAS::setCPUSpecific(unsigned long)
                0x00000000c0011bd6                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0011ca0                VAS::VAS(VAS*)
                0x00000000c0011ca0                VAS::VAS(VAS*)
                0x00000000c0011fea                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c00120d8                VAS::VAS(bool)
                0x00000000c00120d8                VAS::VAS(bool)
                0x00000000c0012308                mapVASFirstTime
 .text          0x00000000c00123cf       0x93 coreobjs/c++.32
                0x00000000c00123cf                __cxa_atexit
                0x00000000c00123d2                __cxa_finalize
                0x00000000c00123d3                __stack_chk_fail
                0x00000000c0012433                __cxa_pure_virtual
                0x00000000c0012444                operator new(unsigned long)
                0x00000000c0012449                operator new[](unsigned long)
                0x00000000c001244e                operator delete(void*)
                0x00000000c0012453                operator delete(void*, unsigned long)
                0x00000000c0012458                operator delete[](void*)
                0x00000000c001245d                operator delete[](void*, unsigned long)
 .text          0x00000000c0012462        0x0 debugger/debug.32
 .text          0x00000000c0012462      0xb68 fs/vfs.32
                0x00000000c0012462                File::read(unsigned long long, void*, int*)
                0x00000000c00124ba                File::write(unsigned long long, void*, int*)
                0x00000000c0012512                Directory::read(unsigned long long, void*, int*)
                0x00000000c001256a                Directory::write(unsigned long long, void*, int*)
                0x00000000c0012598                File::isAtty()
                0x00000000c001259c                Directory::isAtty()
                0x00000000c00125a0                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00125a6                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c00125ac                File::~File()
                0x00000000c00125ac                File::~File()
                0x00000000c00125d0                File::~File()
                0x00000000c00125fa                Directory::~Directory()
                0x00000000c00125fa                Directory::~Directory()
                0x00000000c001261e                Directory::~Directory()
                0x00000000c0012648                Filesystem::Filesystem()
                0x00000000c0012648                Filesystem::Filesystem()
                0x00000000c001266c                Filesystem::~Filesystem()
                0x00000000c001266c                Filesystem::~Filesystem()
                0x00000000c001267a                Filesystem::~Filesystem()
                0x00000000c001269e                initVFS()
                0x00000000c00126c8                standardiseFiles(char*, char const*, char const*)
                0x00000000c0012872                File::File(char const*, Process*)
                0x00000000c0012872                File::File(char const*, Process*)
                0x00000000c00128d6                File::open(FileOpenMode)
                0x00000000c0012934                File::close()
                0x00000000c0012994                File::seek(unsigned long long)
                0x00000000c00129ea                File::tell(unsigned long long*)
                0x00000000c0012a3a                File::rewind()
                0x00000000c0012a4e                File::unlink()
                0x00000000c0012a9a                File::rename(char const*)
                0x00000000c0012ae8                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012b44                File::exists()
                0x00000000c0012b82                File::stat(unsigned long long*, bool*)
                0x00000000c0012be3                getcwd(Process*, char*, int)
                0x00000000c0012c0d                setcwd(Process*, char*)
                0x00000000c0012d34                Directory::Directory(char const*, Process*)
                0x00000000c0012d34                Directory::Directory(char const*, Process*)
                0x00000000c0012d98                Directory::open()
                0x00000000c0012df4                Directory::close()
                0x00000000c0012e54                Directory::unlink()
                0x00000000c0012ea0                Directory::rename(char const*)
                0x00000000c0012eee                Directory::exists()
                0x00000000c0012f2c                Directory::read(dirent*)
                0x00000000c0012f78                Directory::create()
                0x00000000c0012fc4                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0012fca       0x84 hal/bus.32
                0x00000000c0012fca                Bus::Bus(char const*)
                0x00000000c0012fca                Bus::Bus(char const*)
                0x00000000c0013000                Bus::~Bus()
                0x00000000c0013000                Bus::~Bus()
                0x00000000c0013024                Bus::~Bus()
 .text          0x00000000c001304e      0x14e hal/buzzer.32
                0x00000000c001304e                Buzzer::Buzzer(char const*)
                0x00000000c001304e                Buzzer::Buzzer(char const*)
                0x00000000c0013092                Buzzer::~Buzzer()
                0x00000000c0013092                Buzzer::~Buzzer()
                0x00000000c00130b6                Buzzer::~Buzzer()
                0x00000000c00130e0                Buzzer::stop()
                0x00000000c00130f3                beepThread(void*)
                0x00000000c001312e                Buzzer::beep(int, int, bool)
 .text          0x00000000c001319c      0x42f hal/clock.32
                0x00000000c001319c                loadClockSettings()
                0x00000000c00131b6                Clock::Clock(char const*)
                0x00000000c00131b6                Clock::Clock(char const*)
                0x00000000c00131ec                Clock::~Clock()
                0x00000000c00131ec                Clock::~Clock()
                0x00000000c0013210                Clock::~Clock()
                0x00000000c001323a                Clock::timeInSecondsLocal()
                0x00000000c0013282                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00132db                datetimeToSeconds(datetime_t)
                0x00000000c0013402                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0013462                secondsToDatetime(unsigned long long)
                0x00000000c00135a6                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00135cb        0x1 
 .text          0x00000000c00135cc      0x504 hal/device.32
                0x00000000c00135cc                Device::hibernate()
                0x00000000c00135ce                Device::wake()
                0x00000000c00135d0                Device::detect()
                0x00000000c00135d2                Device::disableLegacy()
                0x00000000c00135d4                Device::powerSaving(PowerSavingLevel)
                0x00000000c00135d6                DriverlessDevice::close(int, int, void*)
                0x00000000c00135da                DriverlessDevice::detect()
                0x00000000c00135dc                DriverlessDevice::open(int, int, void*)
                0x00000000c00135f0                Device::~Device()
                0x00000000c00135f0                Device::~Device()
                0x00000000c00135fe                Device::~Device()
                0x00000000c0013626                Device::findAndLoadDriver()
                0x00000000c0013628                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001364e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00136a2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013700                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001374e                Device::addChild(Device*)
                0x00000000c0013792                Device::removeAllChildren()
                0x00000000c00137d8                Device::hibernateAll()
                0x00000000c0013808                Device::wakeAll()
                0x00000000c0013838                Device::detectAll()
                0x00000000c0013868                Device::disableLegacyAll()
                0x00000000c0013898                Device::loadDriversForAll()
                0x00000000c00138c4                Device::closeAll()
                0x00000000c00138fa                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0013930                Device::setName(char const*)
                0x00000000c001393e                Device::Device(char const*)
                0x00000000c001393e                Device::Device(char const*)
                0x00000000c0013a30                Device::getName()
                0x00000000c0013a3a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a3a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a62                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0013aa6                getDevicesOfType(DeviceType)
 .text          0x00000000c0013ad0       0x84 hal/diskctrl.32
                0x00000000c0013ad0                HardDiskController::HardDiskController(char const*)
                0x00000000c0013ad0                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b06                HardDiskController::~HardDiskController()
                0x00000000c0013b06                HardDiskController::~HardDiskController()
                0x00000000c0013b2a                HardDiskController::~HardDiskController()
 .text          0x00000000c0013b54       0xde hal/diskphys.32
                0x00000000c0013b54                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013b54                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013bbc                PhysicalDisk::startCache()
                0x00000000c0013be4                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013be4                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c08                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013c32      0x128 hal/fpu.32
                0x00000000c0013c32                FPU::FPU(char const*)
                0x00000000c0013c32                FPU::FPU(char const*)
                0x00000000c0013c68                FPU::~FPU()
                0x00000000c0013c68                FPU::~FPU()
                0x00000000c0013c8c                FPU::~FPU()
                0x00000000c0013cb6                setupFPU()
 .text          0x00000000c0013d5a      0xb89 hal/intctrl.32
                0x00000000c0013d5a                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0013d92                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013de4                doubleFault(regs*, void*)
                0x00000000c0013df2                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013e8e                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013f36                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0013fbd                nmiHandler(regs*, void*)
                0x00000000c0013fcb                int_handler
                0x00000000c0014066                InterruptController::InterruptController(char const*)
                0x00000000c0014066                InterruptController::InterruptController(char const*)
                0x00000000c001410c                InterruptController::~InterruptController()
                0x00000000c001410c                InterruptController::~InterruptController()
                0x00000000c0014130                InterruptController::~InterruptController()
                0x00000000c001415a                displayDebugInfo(regs*)
                0x00000000c001453c                gpFault(regs*, void*)
                0x00000000c0014575                pgFault(regs*, void*)
                0x00000000c001458c                otherISRHandler(regs*, void*)
                0x00000000c00145ab                opcodeFault(regs*, void*)
                0x00000000c0014615                displayProgramFault(char const*)
                0x00000000c001463e                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c0014688                setupInterruptController()
 *fill*         0x00000000c00148e3        0x1 
 .text          0x00000000c00148e4      0x604 hal/keybrd.32
                0x00000000c00148e4                startGUI(void*)
                0x00000000c0014952                sendKeyToTerminal(unsigned char)
                0x00000000c00149be                sendKeyboardToken(KeyboardToken)
                0x00000000c0014d99                clearInternalKeybuffer(VgaText*)
                0x00000000c0014dce                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014e5e                Keyboard::Keyboard(char const*)
                0x00000000c0014e5e                Keyboard::Keyboard(char const*)
                0x00000000c0014e9a                Keyboard::~Keyboard()
                0x00000000c0014e9a                Keyboard::~Keyboard()
                0x00000000c0014ebe                Keyboard::~Keyboard()
 .text          0x00000000c0014ee8      0x400 hal/logidisk.32
                0x00000000c0014ee8                LogicalDisk::close(int, int, void*)
                0x00000000c0014eec                LogicalDisk::~LogicalDisk()
                0x00000000c0014eec                LogicalDisk::~LogicalDisk()
                0x00000000c0014f10                LogicalDisk::~LogicalDisk()
                0x00000000c0014f3a                LogicalDisk::open(int, int, void*)
                0x00000000c0014f4e                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014f86                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0014fcc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0014fcc                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015082                LogicalDisk::assignDriveLetter()
                0x00000000c0015138                LogicalDisk::mount()
                0x00000000c00151aa                LogicalDisk::unmount()
                0x00000000c00151ba                LogicalDisk::unassignDriveLetter()
                0x00000000c0015210                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c001527c                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00152e8       0x84 hal/mouse.32
                0x00000000c00152e8                Mouse::Mouse(char const*)
                0x00000000c00152e8                Mouse::Mouse(char const*)
                0x00000000c001531e                Mouse::~Mouse()
                0x00000000c001531e                Mouse::~Mouse()
                0x00000000c0015342                Mouse::~Mouse()
 .text          0x00000000c001536c      0x339 hal/partition.32
                0x00000000c001536c                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015414                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00156a5        0x1 
 .text          0x00000000c00156a6      0x2e7 hal/timer.32
                0x00000000c00156a6                Timer::Timer(char const*)
                0x00000000c00156a6                Timer::Timer(char const*)
                0x00000000c00156dc                Timer::~Timer()
                0x00000000c00156dc                Timer::~Timer()
                0x00000000c0015700                Timer::~Timer()
                0x00000000c001572a                Timer::read()
                0x00000000c0015735                timerHandler(unsigned long long)
                0x00000000c001586c                setupTimer(int)
 *fill*         0x00000000c001598d        0x1 
 .text          0x00000000c001598e      0x2d1 hal/vcache.32
                0x00000000c001598e                VCache::VCache(PhysicalDisk*)
                0x00000000c001598e                VCache::VCache(PhysicalDisk*)
                0x00000000c0015a7e                VCache::writeWriteBuffer()
                0x00000000c0015aba                VCache::~VCache()
                0x00000000c0015aba                VCache::~VCache()
                0x00000000c0015afa                VCache::~VCache()
                0x00000000c0015b22                VCache::write(unsigned long long, int, void*)
                0x00000000c0015c06                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015c5f        0x1 
 .text          0x00000000c0015c60      0x26d hal/video.32
                0x00000000c0015c60                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0015caa                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0015d28                Video::clearScreen(unsigned int)
                0x00000000c0015d5c                Video::putpixel(int, int, unsigned int)
                0x00000000c0015d6a                Video::Video(char const*)
                0x00000000c0015d6a                Video::Video(char const*)
                0x00000000c0015da0                Video::~Video()
                0x00000000c0015da0                Video::~Video()
                0x00000000c0015dc4                Video::~Video()
                0x00000000c0015dee                Video::isMonochrome()
                0x00000000c0015dfa                Video::getWidth()
                0x00000000c0015e06                Video::getHeight()
                0x00000000c0015e12                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015ecd        0x1 
 .text          0x00000000c0015ece      0xc56 hw/acpi.32
                0x00000000c0015ece                ACPI::close(int, int, void*)
                0x00000000c0015f83                findRSDP()
                0x00000000c001600d                loadACPITables(unsigned char*)
                0x00000000c0016234                findRSDT(unsigned char*)
                0x00000000c0016352                findDataTable(unsigned char*, char*)
                0x00000000c00163ee                scanMADT()
                0x00000000c0016782                ACPI::ACPI()
                0x00000000c0016782                ACPI::ACPI()
                0x00000000c00167e2                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c00168c4                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c001698a                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0016990                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c00169d8                ACPI::open(int, int, void*)
                0x00000000c0016b0c                ACPI::sleep()
 .text          0x00000000c0016b24     0x132c hw/cpu.32
                0x00000000c0016b24                CPU::close(int, int, void*)
                0x00000000c0016b27                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016cbb                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016f69                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016f85                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016f9d                AMD_K6_writeback(int, int, int)
                0x00000000c0017010                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c0017093                cpuidCheckEDX(unsigned int)
                0x00000000c00170c0                cpuidCheckECX(unsigned int)
                0x00000000c00170ed                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c001711a                cpuidCheckExtendedECX(unsigned int)
                0x00000000c0017147                getCPUNumber()
                0x00000000c001714a                thisCPU()
                0x00000000c001715e                CPU::CPU()
                0x00000000c001715e                CPU::CPU()
                0x00000000c00171ec                CPU::displayFeatures()
                0x00000000c00171ee                CPU::detectFeatures()
                0x00000000c0017be0                CPU::setupSMEP()
                0x00000000c0017bfa                CPU::setupUMIP()
                0x00000000c0017c12                CPU::setupTSC()
                0x00000000c0017c2a                CPU::setupLargePages()
                0x00000000c0017c42                CPU::setupPAT()
                0x00000000c0017c7e                CPU::setupMTRR()
                0x00000000c0017c80                CPU::setupGlobalPages()
                0x00000000c0017c96                CPU::allowUsermodeDataAccess()
                0x00000000c0017ca8                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017cba                CPU::setupSMAP()
                0x00000000c0017ce0                CPU::setupFeatures()
                0x00000000c0017d82                CPU::open(int, int, void*)
 .text          0x00000000c0017e50        0x0 hw/ports.32
 .text          0x00000000c0017e50      0x503 registry/registry.32
                0x00000000c0017e50                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0017fa8                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0018107                Reg::getLine(char*, char*, char*)
                0x00000000c001813e                Reg::readInt(char*, char*, int*)
                0x00000000c0018229                Reg::readString(char*, char*, char*, int)
                0x00000000c00182aa                Reg::readBool(char*, char*, bool*)
                0x00000000c00182cf                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00182fb                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0018327                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0018353       0x18 syscalls/sc_exit.32
                0x00000000c0018353                Sys::exit(regs*)
 .text          0x00000000c001836b       0x68 syscalls/sc_read.32
                0x00000000c001836b                Sys::read(regs*)
 .text          0x00000000c00183d3       0x55 syscalls/sc_sbrk.32
                0x00000000c00183d3                Sys::sbrk(regs*)
 .text          0x00000000c0018428       0x68 syscalls/sc_write.32
                0x00000000c0018428                Sys::write(regs*)
 .text          0x00000000c0018490       0x1a syscalls/sc_yield.32
                0x00000000c0018490                Sys::yield(regs*)
 .text          0x00000000c00184aa      0x8bf vm86/vm8086.32
                0x00000000c00184aa                vm8086EntryPoint(void*)
                0x00000000c00184d5                inbv(unsigned short)
                0x00000000c00184db                outbv(unsigned short, unsigned char)
                0x00000000c00184e5                realToLinear(unsigned short, unsigned short)
                0x00000000c00184f5                getSegment(unsigned int)
                0x00000000c00184fd                getOffset(unsigned int)
                0x00000000c0018502                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018631                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c00186bb                readByteFromReal(unsigned short, unsigned short)
                0x00000000c00186cc                readWordFromReal(unsigned short, unsigned short)
                0x00000000c00186de                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c00186ef                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c0018704                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c001871a                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c001872f                vm8086FaultHandler(regs*)
 *fill*         0x00000000c0018d69        0x1 
 .text          0x00000000c0018d6a     0x1088 fs/fat/vfslink.32
                0x00000000c0018d6a                FAT::getName()
                0x00000000c0018d70                FAT::tell(void*, unsigned long long*)
                0x00000000c0018da4                FAT::stat(void*, unsigned long long*)
                0x00000000c0018dd8                FAT::exists(char const*)
                0x00000000c0018ddc                FAT::~FAT()
                0x00000000c0018ddc                FAT::~FAT()
                0x00000000c0018e00                FAT::~FAT()
                0x00000000c0018e28                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018ec6                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018f80                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019164                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001936a                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c0019472                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c00194cc                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c0019526                FAT::close(void*)
                0x00000000c0019572                FAT::closeDir(void*)
                0x00000000c00195be                FAT::seek(void*, unsigned long long)
                0x00000000c0019612                fatWrapperReadDisk
                0x00000000c0019659                fatWrapperWriteDisk
                0x00000000c00196a0                fatWrapperIoctl
                0x00000000c00197a4                FAT::FAT()
                0x00000000c00197a4                FAT::FAT()
                0x00000000c00197f6                FAT::fixFilepath(char*)
                0x00000000c001982e                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c0019956                FAT::openDir(char const*, void**)
                0x00000000c00199fc                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019ae6                FAT::unlink(char const*)
                0x00000000c0019b60                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019cb4                FAT::rename(char const*, char const*)
                0x00000000c0019d78                FAT::mkdir(char const*)
 .text          0x00000000c0019df2      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019df2                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019df8                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019e28                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019e4c                ISO9660::getName()
                0x00000000c0019e52                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019e76                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019e7c                ISO9660::unlink(char const*)
                0x00000000c0019e82                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019e88                ISO9660::rename(char const*, char const*)
                0x00000000c0019e8e                ISO9660::mkdir(char const*)
                0x00000000c0019e94                ISO9660::close(void*)
                0x00000000c0019eb6                ISO9660::closeDir(void*)
                0x00000000c0019ed8                ISO9660::~ISO9660()
                0x00000000c0019ed8                ISO9660::~ISO9660()
                0x00000000c0019efc                ISO9660::~ISO9660()
                0x00000000c0019f23                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019f65                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c0019fcc                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a01c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a260                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4ee                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a543                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a716                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a7a4                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a83e                ISO9660::exists(char const*)
                0x00000000c001a862                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a8f6                ISO9660::openDir(char const*, void**)
                0x00000000c001a9ae                ISO9660::ISO9660()
                0x00000000c001a9ae                ISO9660::ISO9660()
 *fill*         0x00000000c001a9d1        0x1 
 .text          0x00000000c001a9d2      0x244 hal/sound/sndchannel.32
                0x00000000c001a9d2                SoundChannel::~SoundChannel()
                0x00000000c001a9d2                SoundChannel::~SoundChannel()
                0x00000000c001a9ee                SoundChannel::setSpeed(float)
                0x00000000c001a9fa                SoundChannel::getSpeed()
                0x00000000c001aa02                SoundChannel::setVolume(int)
                0x00000000c001aa1e                SoundChannel::getVolume()
                0x00000000c001aa26                SoundChannel::pause()
                0x00000000c001aa30                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aa30                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ab26                SoundChannel::play()
                0x00000000c001ab30                SoundChannel::paused()
                0x00000000c001ab38                SoundChannel::getSampleRate()
                0x00000000c001ab40                SoundChannel::getBits()
                0x00000000c001ab48                SoundChannel::getBufferUsed()
                0x00000000c001ab50                SoundChannel::getBufferSize()
                0x00000000c001ab58                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001abca                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ac16      0x317 hal/sound/sndhw.32
                0x00000000c001ac16                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac16                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac82                SoundDevice::~SoundDevice()
                0x00000000c001ac82                SoundDevice::~SoundDevice()
                0x00000000c001acfc                SoundDevice::~SoundDevice()
                0x00000000c001ad26                SoundDevice::getFreeChannelNum()
                0x00000000c001ad40                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001adb0                SoundDevice::removeChannel(int)
                0x00000000c001ade2                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001ae4e                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001af2d        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af2d        0x1 
 .text          0x00000000c001af2e      0x6e5 hw/bus/pci.32
                0x00000000c001af2e                PCI::open(int, int, void*)
                0x00000000c001af42                PCI::close(int, int, void*)
                0x00000000c001af46                PCI::PCI()
                0x00000000c001af46                PCI::PCI()
                0x00000000c001afc6                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b00e                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b030                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b054                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b098                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0bc                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0de                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b100                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b124                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b184                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b1f0                PCI::checkBus(unsigned char)
                0x00000000c001b214                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b384                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b554                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b5c0                PCI::detect()
 *fill*         0x00000000c001b613        0x1 
 .text          0x00000000c001b614      0x4b9 hw/clock/rtc.32
                0x00000000c001b614                RTC::open(int, int, void*)
                0x00000000c001b618                RTC::close(int, int, void*)
                0x00000000c001b61c                RTC::timeInSecondsUTC()
                0x00000000c001b62e                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b632                RTC::timeInDatetimeUTC()
                0x00000000c001b658                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b696                RTC::~RTC()
                0x00000000c001b696                RTC::~RTC()
                0x00000000c001b6ba                RTC::~RTC()
                0x00000000c001b6e4                RTC::get_update_in_progress_flag()
                0x00000000c001b6fc                RTC::completeRTCRefresh()
                0x00000000c001b9e8                rtcIRQHandler(regs*, void*)
                0x00000000c001ba2e                RTC::RTC()
                0x00000000c001ba2e                RTC::RTC()
 *fill*         0x00000000c001bacd        0x1 
 .text          0x00000000c001bace      0xc70 hw/diskctrl/ide.32
                0x00000000c001bace                IDE::close(int, int, void*)
                0x00000000c001bad2                IDE::IDE()
                0x00000000c001bad2                IDE::IDE()
                0x00000000c001bb06                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb18                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb1a                IDE::getBase(unsigned char)
                0x00000000c001bb2c                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bbec                IDE::read(unsigned char, unsigned char)
                0x00000000c001bc9a                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd00                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd1c                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bd38                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bd7e                IDE::open(int, int, void*)
                0x00000000c001c18e                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c25a                IDE::detect()
                0x00000000c001c542                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c6d8                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c73e      0x62b hw/diskphys/ata.32
                0x00000000c001c73e                ATA::close(int, int, void*)
                0x00000000c001c762                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c764                ATA::ATA()
                0x00000000c001c764                ATA::ATA()
                0x00000000c001c792                ATA::flush(bool)
                0x00000000c001c7dc                ATA::readyForCommand()
                0x00000000c001c82c                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cbaa                ATA::read(unsigned long long, int, void*)
                0x00000000c001cc12                ATA::write(unsigned long long, int, void*)
                0x00000000c001cc7a                ATA::detectCHS()
                0x00000000c001cca4                ATA::open(int, int, void*)
 *fill*         0x00000000c001cd69        0x1 
 .text          0x00000000c001cd6a      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cd6a                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cd70                ATAPI::close(int, int, void*)
                0x00000000c001cd94                ATAPI::ATAPI()
                0x00000000c001cd94                ATAPI::ATAPI()
                0x00000000c001cdc2                ATAPI::readyForCommand()
                0x00000000c001ce12                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d0d2                ATAPI::diskRemoved()
                0x00000000c001d0ee                ATAPI::eject()
                0x00000000c001d134                ATAPI::diskInserted()
                0x00000000c001d162                ATAPI::detectMedia()
                0x00000000c001d21e                ATAPI::open(int, int, void*)
                0x00000000c001d29e                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d31d        0x1 
 .text          0x00000000c001d31e       0x8e hw/fpu/avx.32
                0x00000000c001d31e                AVX::open(int, int, void*)
                0x00000000c001d330                AVX::close(int, int, void*)
                0x00000000c001d342                AVX::available()
                0x00000000c001d354                AVX::save(void*)
                0x00000000c001d36c                AVX::load(void*)
                0x00000000c001d384                AVX::AVX()
                0x00000000c001d384                AVX::AVX()
 .text          0x00000000c001d3ac       0x90 hw/fpu/mmx.32
                0x00000000c001d3ac                MMX::available()
                0x00000000c001d3c0                MMX::open(int, int, void*)
                0x00000000c001d3d2                MMX::close(int, int, void*)
                0x00000000c001d3e4                MMX::save(void*)
                0x00000000c001d3fc                MMX::load(void*)
                0x00000000c001d414                MMX::MMX()
                0x00000000c001d414                MMX::MMX()
 .text          0x00000000c001d43c       0x96 hw/fpu/sse.32
                0x00000000c001d43c                SSE::open(int, int, void*)
                0x00000000c001d44e                SSE::close(int, int, void*)
                0x00000000c001d460                SSE::available()
                0x00000000c001d47a                SSE::save(void*)
                0x00000000c001d492                SSE::load(void*)
                0x00000000c001d4aa                SSE::SSE()
                0x00000000c001d4aa                SSE::SSE()
 .text          0x00000000c001d4d2       0x8e hw/fpu/x87.32
                0x00000000c001d4d2                x87::open(int, int, void*)
                0x00000000c001d4e4                x87::close(int, int, void*)
                0x00000000c001d4f6                x87::available()
                0x00000000c001d508                x87::save(void*)
                0x00000000c001d520                x87::load(void*)
                0x00000000c001d538                x87::x87()
                0x00000000c001d538                x87::x87()
 .text          0x00000000c001d560      0x5f3 hw/intctrl/apic.32
                0x00000000c001d560                APIC::disable()
                0x00000000c001d562                APIC::close(int, int, void*)
                0x00000000c001d584                IOAPIC::close(int, int, void*)
                0x00000000c001d58a                APIC::io_wait()
                0x00000000c001d590                APIC::getBase()
                0x00000000c001d5d2                APIC::eoi(unsigned char)
                0x00000000c001d600                APIC::open(int, int, void*)
                0x00000000c001d6ba                IOAPIC::IOAPIC()
                0x00000000c001d6ba                IOAPIC::IOAPIC()
                0x00000000c001d6e2                APIC::APIC()
                0x00000000c001d6e2                APIC::APIC()
                0x00000000c001d7b2                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d7e4                IOAPIC::read(int)
                0x00000000c001d80c                IOAPIC::open(int, int, void*)
                0x00000000c001d902                IOAPIC::write(int, int)
                0x00000000c001d92e                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001d9e8                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001db53        0x1 
 .text          0x00000000c001db54      0x3d3 hw/intctrl/pic.32
                0x00000000c001db54                PIC::disable()
                0x00000000c001db82                PIC::close(int, int, void*)
                0x00000000c001dba4                PIC::PIC()
                0x00000000c001dba4                PIC::PIC()
                0x00000000c001dc7a                PIC::ioWait()
                0x00000000c001dc80                PIC::getIRQReg(int)
                0x00000000c001dcea                PIC::eoi(unsigned char)
                0x00000000c001dd7c                PIC::remap()
                0x00000000c001dee8                PIC::open(int, int, void*)
 *fill*         0x00000000c001df27        0x1 
 .text          0x00000000c001df28      0x252 hw/timer/apictimer.32
                0x00000000c001df28                APICTimer::close(int, int, void*)
                0x00000000c001df2e                apicTimerHandler(regs*, void*)
                0x00000000c001df5c                APICTimer::write(int)
                0x00000000c001e05a                APICTimer::open(int, int, void*)
                0x00000000c001e152                APICTimer::APICTimer()
                0x00000000c001e152                APICTimer::APICTimer()
 .text          0x00000000c001e17a      0x1a7 hw/timer/pit.32
                0x00000000c001e17a                PIT::write(int)
                0x00000000c001e1f8                pitHandler(regs*, void*)
                0x00000000c001e224                PIT::open(int, int, void*)
                0x00000000c001e272                PIT::close(int, int, void*)
                0x00000000c001e2a2                PIT::PIT()
                0x00000000c001e2a2                PIT::PIT()
 *fill*         0x00000000c001e321        0xf 
 .text          0x00000000c001e330        0xa hw/fpu/x86/avx.32
                0x00000000c001e330                avxDetect
                0x00000000c001e336                avxSave
                0x00000000c001e337                avxLoad
                0x00000000c001e338                avxInit
                0x00000000c001e339                avxClose
 *fill*         0x00000000c001e33a        0x6 
 .text          0x00000000c001e340       0x38 hw/fpu/x86/sse.32
                0x00000000c001e340                sseDetect
                0x00000000c001e35b                sseSave
                0x00000000c001e361                sseLoad
                0x00000000c001e367                sseInit
                0x00000000c001e377                sseClose
 *fill*         0x00000000c001e378        0x8 
 .text          0x00000000c001e380       0x47 hw/fpu/x86/x87.32
                0x00000000c001e386                x87Detect
                0x00000000c001e3a1                x87Save
                0x00000000c001e3a7                x87Load
                0x00000000c001e3ac                x87Init
                0x00000000c001e3c6                x87Close
 *fill*         0x00000000c001e3c7        0x1 
 .text          0x00000000c001e3c8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e3ed        0x0 crtn.32
 *fill*         0x00000000c001e3ed        0x3 
 .text          0x00000000c001e3f0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e3f0                __divdi3
 *fill*         0x00000000c001e53b        0x1 
 .text          0x00000000c001e53c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e53c                __moddi3
 *fill*         0x00000000c001e6ba        0x2 
 .text          0x00000000c001e6bc       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e6bc                __udivdi3
 *fill*         0x00000000c001e7bb        0x1 
 .text          0x00000000c001e7bc      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e7bc                __umoddi3
 *fill*         0x00000000c001e8d6        0xa 
 .text          0x00000000c001e8e0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e8e0                fabs
 *fill*         0x00000000c001e8fe        0x2 
 .text          0x00000000c001e900        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e900                lrint
 .text          0x00000000c001e90c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e90c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e918        0x0
 .iplt          0x00000000c001e918        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e918        0xf
 .init          0x00000000c001e918        0x3 crti.32
                0x00000000c001e918                _init
 .init          0x00000000c001e91b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e920        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e925        0x2 crtn.32

.fini           0x00000000c001e927        0xa
 .fini          0x00000000c001e927        0x3 crti.32
                0x00000000c001e927                _fini
 .fini          0x00000000c001e92a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e92f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e932       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e932       0x23 core/computer.32
                0x00000000c001e932                Computer::~Computer()
                0x00000000c001e932                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e956       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e956       0x2a core/computer.32
                0x00000000c001e956                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e980       0x15
 .text._Z10idleCommonv
                0x00000000c001e980       0x15 core/idle.32
                0x00000000c001e980                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e995       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e995       0x12 core/kconsole.32
                0x00000000c001e995                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e9a7       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e9a7       0x12 core/kconsole.32
                0x00000000c001e9a7                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001e9b9       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001e9b9       0x12 core/kconsole.32
                0x00000000c001e9b9                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001e9cb       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001e9cb       0x12 core/kconsole.32
                0x00000000c001e9cb                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001e9dd        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001e9dd        0x9 core/kheap.32
                0x00000000c001e9dd                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e9e6        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001e9e6        0x2 core/prcssthr.32
                0x00000000c001e9e6                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001e9e6                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e9e8       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001e9e8       0x3e core/prcssthr.32
                0x00000000c001e9e8                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001e9e8                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea26       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea26       0x58 core/prcssthr.32
                0x00000000c001ea26                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ea26                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea7e       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001ea7e       0xd3 core/prcssthr.32
                0x00000000c001ea7e                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb52       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eb52       0x1c core/prcssthr.32
                0x00000000c001eb52                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb6e       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001eb6e       0xae core/prcssthr.32
                0x00000000c001eb6e                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec1c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec1c        0x7 core/prcssthr.32
                0x00000000c001ec1c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec24        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec24        0x8 core/prcssthr.32
                0x00000000c001ec24                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec2c        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec2c        0x2 core/unixfile.32
                0x00000000c001ec2c                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ec2c                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec2e       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec2e       0x58 core/unixfile.32
                0x00000000c001ec2e                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ec2e                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec86        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ec86        0x7 core/unixfile.32
                0x00000000c001ec86                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec8e       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ec8e       0xa1 core/unixfile.32
                0x00000000c001ec8e                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed30        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed30        0x8 core/unixfile.32
                0x00000000c001ed30                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed38      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed38      0x130 core/unixfile.32
                0x00000000c001ed38                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee68       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001ee68       0x1a hal/device.32
                0x00000000c001ee68                DriverlessDevice::~DriverlessDevice()
                0x00000000c001ee68                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ee82       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001ee82       0x2a hal/device.32
                0x00000000c001ee82                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eeac       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eeac       0xdc hal/device.32
                0x00000000c001eeac                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ef88       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001ef88       0x58 hal/device.32
                0x00000000c001ef88                LinkedList<Device>::LinkedList()
                0x00000000c001ef88                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001efe0       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001efe0       0x12 hal/intctrl.32
                0x00000000c001efe0                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001eff2       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001eff2       0x12 hal/intctrl.32
                0x00000000c001eff2                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f004       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f004       0x12 hal/intctrl.32
                0x00000000c001f004                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f016       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f016       0x12 hal/intctrl.32
                0x00000000c001f016                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f028       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f028       0x12 hal/intctrl.32
                0x00000000c001f028                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f03a       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f03a       0x12 hal/intctrl.32
                0x00000000c001f03a                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001f04c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f04c       0x23 hw/acpi.32
                0x00000000c001f04c                ACPI::~ACPI()
                0x00000000c001f04c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f070       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f070       0x2a hw/acpi.32
                0x00000000c001f070                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f09a       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f09a       0x23 hw/cpu.32
                0x00000000c001f09a                CPU::~CPU()
                0x00000000c001f09a                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f0be       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f0be       0x2a hw/cpu.32
                0x00000000c001f0be                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f0e8        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f0e8        0x9 hw/cpu.32
                0x00000000c001f0e8                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f0f1        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f0f1        0x9 hw/cpu.32
                0x00000000c001f0f1                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001f0fa       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f0fa       0x23 hw/bus/pci.32
                0x00000000c001f0fa                PCI::~PCI()
                0x00000000c001f0fa                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f11e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f11e       0x2a hw/bus/pci.32
                0x00000000c001f11e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f148       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f148       0x23 hw/diskctrl/ide.32
                0x00000000c001f148                IDE::~IDE()
                0x00000000c001f148                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f16c       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f16c       0x2a hw/diskctrl/ide.32
                0x00000000c001f16c                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f196       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f196       0x23 hw/diskphys/ata.32
                0x00000000c001f196                ATA::~ATA()
                0x00000000c001f196                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f1ba       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f1ba       0x2a hw/diskphys/ata.32
                0x00000000c001f1ba                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f1e4       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f1e4       0x23 hw/diskphys/atapi.32
                0x00000000c001f1e4                ATAPI::~ATAPI()
                0x00000000c001f1e4                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f208       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f208       0x2a hw/diskphys/atapi.32
                0x00000000c001f208                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f232       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f232       0x23 hw/fpu/avx.32
                0x00000000c001f232                AVX::~AVX()
                0x00000000c001f232                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f256       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f256       0x2a hw/fpu/avx.32
                0x00000000c001f256                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f280       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f280       0x23 hw/fpu/mmx.32
                0x00000000c001f280                MMX::~MMX()
                0x00000000c001f280                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f2a4       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f2a4       0x2a hw/fpu/mmx.32
                0x00000000c001f2a4                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f2ce       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f2ce       0x23 hw/fpu/sse.32
                0x00000000c001f2ce                SSE::~SSE()
                0x00000000c001f2ce                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f2f2       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f2f2       0x2a hw/fpu/sse.32
                0x00000000c001f2f2                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f31c       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f31c       0x23 hw/fpu/x87.32
                0x00000000c001f31c                x87::~x87()
                0x00000000c001f31c                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f340       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f340       0x2a hw/fpu/x87.32
                0x00000000c001f340                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f36a       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f36a       0x23 hw/intctrl/apic.32
                0x00000000c001f36a                IOAPIC::~IOAPIC()
                0x00000000c001f36a                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f38e       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f38e       0x2a hw/intctrl/apic.32
                0x00000000c001f38e                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f3b8       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f3b8       0x23 hw/intctrl/apic.32
                0x00000000c001f3b8                APIC::~APIC()
                0x00000000c001f3b8                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f3dc       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f3dc       0x2a hw/intctrl/apic.32
                0x00000000c001f3dc                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f406       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f406       0x23 hw/intctrl/pic.32
                0x00000000c001f406                PIC::~PIC()
                0x00000000c001f406                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f42a       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f42a       0x2a hw/intctrl/pic.32
                0x00000000c001f42a                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f454       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f454       0x23 hw/timer/apictimer.32
                0x00000000c001f454                APICTimer::~APICTimer()
                0x00000000c001f454                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f478       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f478       0x2a hw/timer/apictimer.32
                0x00000000c001f478                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f4a2       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f4a2       0x23 hw/timer/pit.32
                0x00000000c001f4a2                PIT::~PIT()
                0x00000000c001f4a2                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f4c6       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f4c6       0x2a hw/timer/pit.32
                0x00000000c001f4c6                PIT::~PIT()

.rodata         0x00000000c001f4f0    0x1b8f8
                0x00000000c001f4f0                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f4f0        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f4f4        0x4 core/prcssthr.32
 .ctors         0x00000000c001f4f8        0x4 core/unixfile.32
 .ctors         0x00000000c001f4fc        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f500                end_ctors = .
                0x00000000c001f500                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f500        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f504        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f504                __DTOR_END__
                0x00000000c001f508                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f508       0x18 
 .rodata        0x00000000c001f520      0x101 acpica/utclib.32
                0x00000000c001f520                AcpiGbl_Ctypes
 *fill*         0x00000000c001f621        0x3 
 .rodata        0x00000000c001f624       0x18 core/malloc.32
 *fill*         0x00000000c001f63c        0x4 
 .rodata        0x00000000c001f640      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f760       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f7b6        0xa 
 .rodata        0x00000000c001f7c0      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fbc0       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fc76        0x2 
 .rodata.str1.4
                0x00000000c001fc78      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c002001d        0x3 
 .rodata        0x00000000c0020020       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020080       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c00200a0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c00200b4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c00200f6        0x2 
 .rodata.cst8   0x00000000c00200f8        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020100    0x185a4 hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c00386a4       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038768       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c00387b2        0x6 
 .rodata.cst8   0x00000000c00387b8        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c00387c0       0x14 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00387d4       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c003881c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c003881c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c003888f        0x1 
 .rodata._ZTV8Computer
                0x00000000c0038890       0x2c core/computer.32
                0x00000000c0038890                vtable for Computer
 .rodata.str1.1
                0x00000000c00388bc      0x220 core/elf.32
                                        0x222 (size before relaxing)
 .rodata.str1.1
                0x00000000c0038adc       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0038af8      0x152 core/kconsole.32
 *fill*         0x00000000c0038c4a        0x2 
 .rodata        0x00000000c0038c4c      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c0038d9c       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0038e51        0x3 
 .rodata.str1.4
                0x00000000c0038e54       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0038e84        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0038e90       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038eab       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c0038ef9       0x39 core/pipe.32
 *fill*         0x00000000c0038f32        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0038f34       0x1c core/pipe.32
                0x00000000c0038f34                vtable for Pipe
 .rodata.str1.1
                0x00000000c0038f50       0x53 core/prcssthr.32
 *fill*         0x00000000c0038fa3        0x1 
 .rodata.str1.4
                0x00000000c0038fa4      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0039224       0x19 core/prcssthr.32
 *fill*         0x00000000c003923d        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039240       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039262       0x15 core/prcssthr.32
 *fill*         0x00000000c0039277        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039278       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c00392c3        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c00392cb       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c0039328       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c0039374       0x9d core/terminal.32
 *fill*         0x00000000c0039411        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0039414       0x1c core/terminal.32
                0x00000000c0039414                vtable for VgaText
 .rodata        0x00000000c0039430       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c003944e       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c0039468       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0039468       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c0039468        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c0039468       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0039497       0x22 core/unixfile.32
 *fill*         0x00000000c0039497        0x1 
 .rodata.str1.4
                0x00000000c0039498       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00394b8       0x1c core/unixfile.32
                0x00000000c00394b8                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c00394d4       0x1c core/unixfile.32
                0x00000000c00394d4                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c00394f0      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c003969b      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c003981f       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c0039852       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c0039852        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c0039854       0x64 fs/vfs.32
                0x00000000c0039854                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00398b8       0x1c fs/vfs.32
                0x00000000c00398b8                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00398d4       0x1c fs/vfs.32
                0x00000000c00398d4                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c00398f0       0x2c hal/bus.32
                0x00000000c00398f0                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c003991c       0x30 hal/buzzer.32
                0x00000000c003991c                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c003994c       0x3c hal/clock.32
                0x00000000c003994c                vtable for Clock
 *fill*         0x00000000c0039988       0x18 
 .rodata        0x00000000c00399a0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c00399d0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c00399ee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c00399ee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c00399ee       0x19 hal/device.32
 *fill*         0x00000000c00399ee        0x2 
 .rodata._ZTV6Device
                0x00000000c00399f0       0x2c hal/device.32
                0x00000000c00399f0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0039a1c       0x2c hal/device.32
                0x00000000c0039a1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0039a48       0x2c hal/diskctrl.32
                0x00000000c0039a48                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0039a74       0x34 hal/diskphys.32
                0x00000000c0039a74                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0039aa8        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0039ab0       0x38 hal/fpu.32
                0x00000000c0039ab0                vtable for FPU
 .rodata.str1.4
                0x00000000c0039ae8      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0039c18      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0039d85        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0039d88       0x48 hal/intctrl.32
                0x00000000c0039d88                vtable for InterruptController
 .rodata        0x00000000c0039dd0       0x4e hal/keybrd.32
 *fill*         0x00000000c0039e1e        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0039e20       0x34 hal/keybrd.32
                0x00000000c0039e20                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0039e54       0x7a hal/logidisk.32
 *fill*         0x00000000c0039ece        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0039ed0       0x2c hal/logidisk.32
                0x00000000c0039ed0                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0039efc       0x2c hal/mouse.32
                0x00000000c0039efc                vtable for Mouse
 .rodata.str1.1
                0x00000000c0039f28        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039f33       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039f33        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039f33       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039f33       0x22 hal/timer.32
 *fill*         0x00000000c0039f33        0x1 
 .rodata._ZTV5Timer
                0x00000000c0039f34       0x30 hal/timer.32
                0x00000000c0039f34                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0039f64       0x10 hal/vcache.32
                0x00000000c0039f64                vtable for VCache
 .rodata.str1.1
                0x00000000c0039f74        0xf hal/video.32
 *fill*         0x00000000c0039f83        0x1 
 .rodata._ZTV5Video
                0x00000000c0039f84       0x40 hal/video.32
                0x00000000c0039f84                vtable for Video
 .rodata.str1.1
                0x00000000c0039fc4       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c003a078       0x82 hw/acpi.32
 *fill*         0x00000000c003a0fa        0x2 
 .rodata._ZTV4ACPI
                0x00000000c003a0fc       0x2c hw/acpi.32
                0x00000000c003a0fc                vtable for ACPI
 .rodata.str1.1
                0x00000000c003a128      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c003a34c       0x2c hw/cpu.32
                0x00000000c003a34c                vtable for CPU
 .rodata.str1.1
                0x00000000c003a378       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c003a3bd       0x5f vm86/vm8086.32
 .rodata        0x00000000c003a41c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c003a44c       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c003a49f        0x1 
 .rodata.str1.4
                0x00000000c003a4a0       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c003a4c8       0x64 fs/fat/vfslink.32
                0x00000000c003a4c8                vtable for FAT
 .rodata.str1.1
                0x00000000c003a52c       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c003a575        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c003a578       0x64 fs/iso9660/vfslink.32
                0x00000000c003a578                vtable for ISO9660
 .rodata.str1.1
                0x00000000c003a5dc       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c003a5f6        0x2 
 .rodata.cst4   0x00000000c003a5f8        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c003a5fc       0x38 hal/sound/sndhw.32
                0x00000000c003a5fc                vtable for SoundDevice
 .rodata.cst4   0x00000000c003a634       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c003a644       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c003a6e8       0x2c hw/bus/pci.32
                0x00000000c003a6e8                vtable for PCI
 .rodata.str1.1
                0x00000000c003a714       0x2b hw/clock/rtc.32
 *fill*         0x00000000c003a73f        0x1 
 .rodata._ZTV3RTC
                0x00000000c003a740       0x3c hw/clock/rtc.32
                0x00000000c003a740                vtable for RTC
 .rodata.str1.1
                0x00000000c003a77c      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c003a9b2        0x2 
 .rodata._ZTV3IDE
                0x00000000c003a9b4       0x2c hw/diskctrl/ide.32
                0x00000000c003a9b4                vtable for IDE
 .rodata.str1.1
                0x00000000c003a9e0       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c003aa01        0x3 
 .rodata._ZTV3ATA
                0x00000000c003aa04       0x34 hw/diskphys/ata.32
                0x00000000c003aa04                vtable for ATA
 .rodata.str1.1
                0x00000000c003aa38       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c003aa70       0x34 hw/diskphys/atapi.32
                0x00000000c003aa70                vtable for ATAPI
 .rodata.str1.1
                0x00000000c003aaa4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c003aaac       0x38 hw/fpu/avx.32
                0x00000000c003aaac                vtable for AVX
 .rodata.str1.1
                0x00000000c003aae4        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c003aaec       0x38 hw/fpu/mmx.32
                0x00000000c003aaec                vtable for MMX
 .rodata.str1.1
                0x00000000c003ab24        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c003ab2c       0x38 hw/fpu/sse.32
                0x00000000c003ab2c                vtable for SSE
 .rodata.str1.1
                0x00000000c003ab64        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c003ab6c       0x38 hw/fpu/x87.32
                0x00000000c003ab6c                vtable for x87
 .rodata        0x00000000c003aba4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c003ac7c       0x48 hw/intctrl/apic.32
                0x00000000c003ac7c                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c003acc4       0x2c hw/intctrl/apic.32
                0x00000000c003acc4                vtable for IOAPIC
 .rodata        0x00000000c003acf0       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c003ad12        0x2 
 .rodata._ZTV3PIC
                0x00000000c003ad14       0x48 hw/intctrl/pic.32
                0x00000000c003ad14                vtable for PIC
 .rodata.str1.1
                0x00000000c003ad5c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c003ad67        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c003ad68       0x30 hw/timer/apictimer.32
                0x00000000c003ad68                vtable for APICTimer
 .rodata.str1.1
                0x00000000c003ad98       0x1d hw/timer/pit.32
 *fill*         0x00000000c003adb5        0x3 
 .rodata._ZTV3PIT
                0x00000000c003adb8       0x30 hw/timer/pit.32
                0x00000000c003adb8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c003ade8      0x5fd
 *(.data)
 .data          0x00000000c003ade8        0x0 crti.32
 .data          0x00000000c003ade8        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c003ade8                __dso_handle
 .data          0x00000000c003adec        0x0 acpica/utclib.32
 .data          0x00000000c003adec        0x0 core/malloc.32
 .data          0x00000000c003adec        0x0 libk/string.32
 .data          0x00000000c003adec        0x0 fs/fat/diskio.32
 .data          0x00000000c003adec        0x0 fs/fat/ff.32
 .data          0x00000000c003adec        0x0 fs/fat/ffsystem.32
 .data          0x00000000c003adec        0x0 fs/fat/ffunicode.32
 .data          0x00000000c003adec        0x0 hal/libresample/samplerate.32
 .data          0x00000000c003adec        0x0 hal/libresample/src_linear.32
 .data          0x00000000c003adec        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c003adec        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c003adec        0x0 core/computer.32
 .data          0x00000000c003adec        0x0 core/elf.32
 .data          0x00000000c003adec        0x0 core/gdt.32
 .data          0x00000000c003adec        0x0 core/idle.32
 .data          0x00000000c003adec        0x0 core/idt.32
 .data          0x00000000c003adec        0x0 core/kconsole.32
 .data          0x00000000c003adec        0x4 core/kheap.32
 .data          0x00000000c003adf0        0x0 core/main.32
 .data          0x00000000c003adf0        0x4 core/physmgr.32
                0x00000000c003adf0                Phys::bitmap
 .data          0x00000000c003adf4        0x0 core/pipe.32
 .data          0x00000000c003adf4        0x4 core/prcssthr.32
                0x00000000c003adf4                nextPID
 .data          0x00000000c003adf8        0x0 core/syscalls.32
 *fill*         0x00000000c003adf8        0x8 
 .data          0x00000000c003ae00       0x60 core/terminal.32
                0x00000000c003ae00                VgaText::hiddenOut
                0x00000000c003ae20                ansiToVGAMappings
 .data          0x00000000c003ae60        0x0 core/tss.32
 .data          0x00000000c003ae60        0x4 core/unixfile.32
                0x00000000c003ae60                UnixFile::nextFd
 .data          0x00000000c003ae64        0x8 core/virtmgr.32
                0x00000000c003ae64                Virt::pageAllocPtr
                0x00000000c003ae68                Virt::bitmap
 .data          0x00000000c003ae6c        0x4 coreobjs/c++.32
                0x00000000c003ae6c                __stack_chk_guard
 .data          0x00000000c003ae70        0x0 debugger/debug.32
 .data          0x00000000c003ae70        0x0 fs/vfs.32
 .data          0x00000000c003ae70        0x0 hal/bus.32
 .data          0x00000000c003ae70        0x0 hal/buzzer.32
 .data          0x00000000c003ae70        0x0 hal/clock.32
 .data          0x00000000c003ae70        0x0 hal/device.32
 .data          0x00000000c003ae70        0x0 hal/diskctrl.32
 .data          0x00000000c003ae70        0x0 hal/diskphys.32
 .data          0x00000000c003ae70        0x0 hal/fpu.32
 *fill*         0x00000000c003ae70       0x10 
 .data          0x00000000c003ae80      0x2a0 hal/intctrl.32
                0x00000000c003ae80                exceptionNames
 .data          0x00000000c003b120        0x0 hal/keybrd.32
 .data          0x00000000c003b120        0x0 hal/logidisk.32
 .data          0x00000000c003b120        0x0 hal/mouse.32
 .data          0x00000000c003b120        0x0 hal/partition.32
 .data          0x00000000c003b120        0x0 hal/timer.32
 .data          0x00000000c003b120        0x0 hal/vcache.32
 .data          0x00000000c003b120        0x0 hal/video.32
 .data          0x00000000c003b120       0x10 hw/acpi.32
                0x00000000c003b120                legacyIRQRemaps
 *fill*         0x00000000c003b130       0x10 
 .data          0x00000000c003b140      0x2a4 hw/cpu.32
                0x00000000c003b140                cpuNameList
                0x00000000c003b3e0                lastCode
 .data          0x00000000c003b3e4        0x0 hw/ports.32
 .data          0x00000000c003b3e4        0x0 registry/registry.32
 .data          0x00000000c003b3e4        0x0 syscalls/sc_exit.32
 .data          0x00000000c003b3e4        0x0 syscalls/sc_read.32
 .data          0x00000000c003b3e4        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c003b3e4        0x0 syscalls/sc_write.32
 .data          0x00000000c003b3e4        0x0 syscalls/sc_yield.32
 .data          0x00000000c003b3e4        0x0 vm86/vm8086.32
 .data          0x00000000c003b3e4        0x0 fs/fat/vfslink.32
 .data          0x00000000c003b3e4        0x1 fs/iso9660/vfslink.32
                0x00000000c003b3e4                recentDriveletter
 .data          0x00000000c003b3e5        0x0 hal/sound/sndchannel.32
 .data          0x00000000c003b3e5        0x0 hal/sound/sndhw.32
 .data          0x00000000c003b3e5        0x0 hw/bus/isa.32
 .data          0x00000000c003b3e5        0x0 hw/bus/pci.32
 .data          0x00000000c003b3e5        0x0 hw/clock/rtc.32
 .data          0x00000000c003b3e5        0x0 hw/diskctrl/ide.32
 .data          0x00000000c003b3e5        0x0 hw/diskphys/ata.32
 .data          0x00000000c003b3e5        0x0 hw/diskphys/atapi.32
 .data          0x00000000c003b3e5        0x0 hw/fpu/avx.32
 .data          0x00000000c003b3e5        0x0 hw/fpu/mmx.32
 .data          0x00000000c003b3e5        0x0 hw/fpu/sse.32
 .data          0x00000000c003b3e5        0x0 hw/fpu/x87.32
 .data          0x00000000c003b3e5        0x0 hw/intctrl/apic.32
 .data          0x00000000c003b3e5        0x0 hw/intctrl/pic.32
 .data          0x00000000c003b3e5        0x0 hw/timer/apictimer.32
 .data          0x00000000c003b3e5        0x0 hw/timer/pit.32
 .data          0x00000000c003b3e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c003b3e5        0x0 crtn.32
 .data          0x00000000c003b3e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c003b3e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c003b3e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c003b3e5        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c003b3e5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c003b3e5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c003b3e5        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c003b3e8        0x0
 .got           0x00000000c003b3e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c003b3e8        0x0
 .got.plt       0x00000000c003b3e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c003b3e8        0x0
 .igot.plt      0x00000000c003b3e8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c003b3e8        0x0
 .tm_clone_table
                0x00000000c003b3e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c003b3e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c003b3e5      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c003b3e5        0x3 
 .eh_frame      0x00000000c003b3e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c003b3e8        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c003b3e8       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c003b440       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c003b480       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c003b4ec       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c003b570       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c003b588        0x0
 .rel.got       0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c003b588        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c003b588     0x1b80
                0x00000000c003b588                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c003b588        0x0 crti.32
 .bss           0x00000000c003b588       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c003b5a8        0x4 acpica/utclib.32
 *fill*         0x00000000c003b5ac       0x14 
 .bss           0x00000000c003b5c0      0x378 core/malloc.32
 .bss           0x00000000c003b938        0x0 libk/string.32
 .bss           0x00000000c003b938        0x0 fs/fat/diskio.32
 *fill*         0x00000000c003b938        0x8 
 .bss           0x00000000c003b940       0x88 fs/fat/ff.32
 .bss           0x00000000c003b9c8        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c003b9c8        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c003b9c8        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c003b9c8        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c003b9c8        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c003b9c8        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c003b9c8        0x6 core/computer.32
                0x00000000c003b9c8                computer
                0x00000000c003b9cc                preemptionOn
                0x00000000c003b9cd                schedulingOn
 *fill*         0x00000000c003b9ce       0x12 
 .bss           0x00000000c003b9e0      0x184 core/elf.32
                0x00000000c003b9e0                kernelSymbols
                0x00000000c003ba60                kernelStringTable
                0x00000000c003bae0                kernelSymbolTable
                0x00000000c003bb60                nextDLLSymbolIndex
 .bss           0x00000000c003bb64        0x6 core/gdt.32
                0x00000000c003bb64                gdtDescr
 .bss           0x00000000c003bb6a        0x0 core/idle.32
 *fill*         0x00000000c003bb6a        0x2 
 .bss           0x00000000c003bb6c        0x6 core/idt.32
                0x00000000c003bb6c                idtDescr
 .bss           0x00000000c003bb72        0x1 core/kconsole.32
                0x00000000c003bb72                kernelInPanic
 .bss           0x00000000c003bb73        0x0 core/kheap.32
 *fill*         0x00000000c003bb73        0x1 
 .bss           0x00000000c003bb74        0x4 core/main.32
                0x00000000c003bb74                sysBootSettings
 *fill*         0x00000000c003bb78        0x8 
 .bss           0x00000000c003bb80       0x50 core/physmgr.32
                0x00000000c003bb80                Phys::currentPagePointer
                0x00000000c003bb84                Phys::highestMem
                0x00000000c003bb88                Phys::oldPercent
                0x00000000c003bb8c                Phys::usedPages
                0x00000000c003bb90                Phys::usablePages
                0x00000000c003bba0                Phys::dmaUsage
 .bss           0x00000000c003bbd0        0x0 core/pipe.32
 .bss           0x00000000c003bbd0       0x68 core/prcssthr.32
                0x00000000c003bbd0                cleanerThread
                0x00000000c003bbd4                weNeedTheCleanerToNotBlock
                0x00000000c003bbd8                xxxx
                0x00000000c003bbdc                retValLockStuff
                0x00000000c003bbe0                retValSchedLock
                0x00000000c003bbe4                lockStuffLock
                0x00000000c003bbe8                schedulerLock
                0x00000000c003bbec                taskSwitchesPostponedFlag
                0x00000000c003bbf0                postponeTaskSwitchesCounter
                0x00000000c003bbf4                irqDisableCounter
                0x00000000c003bbf8                terminatedTaskList
                0x00000000c003bc04                sleepingTaskList
                0x00000000c003bc10                taskList
                0x00000000c003bc1c                kernelProcess
 *fill*         0x00000000c003bc38        0x8 
 .bss           0x00000000c003bc40      0x200 core/syscalls.32
                0x00000000c003bc40                systemCallHandlers
 .bss           0x00000000c003be40       0x29 core/terminal.32
                0x00000000c003be40                textModeImplementation
                0x00000000c003be60                terminalCycle
                0x00000000c003be64                activeTerminal
                0x00000000c003be68                VgaText::graphicMode
 *fill*         0x00000000c003be69        0x1 
 .bss           0x00000000c003be6a        0x2 core/tss.32
                0x00000000c003be6a                doubleFaultSelector
 .bss           0x00000000c003be6c       0x10 core/unixfile.32
                0x00000000c003be6c                initialFilesAdded
                0x00000000c003be70                unixFileLinkedList
 .bss           0x00000000c003be7c        0x4 core/virtmgr.32
                0x00000000c003be7c                firstVAS
 .bss           0x00000000c003be80        0x0 coreobjs/c++.32
 .bss           0x00000000c003be80        0x0 debugger/debug.32
 .bss           0x00000000c003be80        0x4 fs/vfs.32
                0x00000000c003be80                installedFilesystems
 .bss           0x00000000c003be84        0x0 hal/bus.32
 .bss           0x00000000c003be84        0x4 hal/buzzer.32
                0x00000000c003be84                systemBuzzer
 .bss           0x00000000c003be88        0x8 hal/clock.32
                0x00000000c003be88                dstOn
                0x00000000c003be89                timezoneHalfHourOffset
                0x00000000c003be8c                timezoneHourOffset
 .bss           0x00000000c003be90        0x0 hal/device.32
 .bss           0x00000000c003be90        0x0 hal/diskctrl.32
 .bss           0x00000000c003be90        0x0 hal/diskphys.32
 .bss           0x00000000c003be90        0x0 hal/fpu.32
 .bss           0x00000000c003be90       0x1c hal/intctrl.32
                0x00000000c003be90                pf5
                0x00000000c003be94                pf4
                0x00000000c003be98                pf3
                0x00000000c003be9c                pf2
                0x00000000c003bea0                pf1
                0x00000000c003bea4                pf0
                0x00000000c003bea8                gpFaultIntercept
 *fill*         0x00000000c003beac       0x14 
 .bss           0x00000000c003bec0      0x429 hal/keybrd.32
                0x00000000c003bec0                keyboardWaitingTaskList
                0x00000000c003bec4                keyboardSetupYet
                0x00000000c003bee0                keystates
 *fill*         0x00000000c003c2e9       0x17 
 .bss           0x00000000c003c300       0x88 hal/logidisk.32
                0x00000000c003c300                diskAssignments
                0x00000000c003c320                disks
 .bss           0x00000000c003c388        0x4 hal/mouse.32
                0x00000000c003c388                guiMouseHandler
 .bss           0x00000000c003c38c        0x0 hal/partition.32
 *fill*         0x00000000c003c38c        0x4 
 .bss           0x00000000c003c390        0x8 hal/timer.32
                0x00000000c003c390                nanoSinceBoot
 .bss           0x00000000c003c398        0x0 hal/vcache.32
 .bss           0x00000000c003c398        0x4 hal/video.32
                0x00000000c003c398                screen
 *fill*         0x00000000c003c39c        0x4 
 .bss           0x00000000c003c3a0      0x3c0 hw/acpi.32
                0x00000000c003c3a0                systemSleepFunction
                0x00000000c003c3a4                systemResetFunction
                0x00000000c003c3a8                systemShutdownFunction
                0x00000000c003c3ac                nextACPITable
                0x00000000c003c3c0                acpiTables
                0x00000000c003c5c0                usingXSDT
                0x00000000c003c5c4                MADTpointer
                0x00000000c003c5c8                RSDTpointer
                0x00000000c003c5cc                RSDPpointer
                0x00000000c003c5d0                ioapicDiscoveryNumber
                0x00000000c003c5e0                ioapicFoundInMADT
                0x00000000c003c600                ioapicAddresses
                0x00000000c003c680                ioapicGSIBase
                0x00000000c003c700                processorDiscoveryNumber
                0x00000000c003c720                matchingAPICID
                0x00000000c003c740                processorID
 .bss           0x00000000c003c760       0x10 hw/cpu.32
                0x00000000c003c760                lastD
                0x00000000c003c764                lastC
                0x00000000c003c768                lastB
                0x00000000c003c76c                lastA
 .bss           0x00000000c003c770        0x0 hw/ports.32
 .bss           0x00000000c003c770        0x0 registry/registry.32
 .bss           0x00000000c003c770        0x0 syscalls/sc_exit.32
 .bss           0x00000000c003c770        0x0 syscalls/sc_read.32
 .bss           0x00000000c003c770        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c003c770        0x0 syscalls/sc_write.32
 .bss           0x00000000c003c770        0x0 syscalls/sc_yield.32
 .bss           0x00000000c003c770        0x0 vm86/vm8086.32
 *fill*         0x00000000c003c770       0x10 
 .bss           0x00000000c003c780       0xf0 fs/fat/vfslink.32
                0x00000000c003c780                FAT::fats
                0x00000000c003c7a0                FAT::vfsToFatRemaps
                0x00000000c003c820                fatToVFSRemaps
 *fill*         0x00000000c003c870       0x10 
 .bss           0x00000000c003c880      0x820 fs/iso9660/vfslink.32
                0x00000000c003c880                recentSector
                0x00000000c003c8a0                recentBuffer
 .bss           0x00000000c003d0a0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c003d0a0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c003d0a0        0x0 hw/bus/isa.32
 .bss           0x00000000c003d0a0        0x0 hw/bus/pci.32
 .bss           0x00000000c003d0a0        0x2 hw/clock/rtc.32
 .bss           0x00000000c003d0a2        0x0 hw/diskctrl/ide.32
 *fill*         0x00000000c003d0a2        0x2 
 .bss           0x00000000c003d0a4        0x8 hw/diskphys/ata.32
                0x00000000c003d0a4                ataSectorsWritten
                0x00000000c003d0a8                ataSectorsRead
 .bss           0x00000000c003d0ac        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003d0ac        0x0 hw/fpu/avx.32
 .bss           0x00000000c003d0ac        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003d0ac        0x0 hw/fpu/sse.32
 .bss           0x00000000c003d0ac        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003d0ac       0x14 
 .bss           0x00000000c003d0c0       0x41 hw/intctrl/apic.32
                0x00000000c003d0c0                noOfIOAPICs
                0x00000000c003d0e0                ioapics
                0x00000000c003d100                IOAPICsSetupYet
 .bss           0x00000000c003d101        0x0 hw/intctrl/pic.32
 .bss           0x00000000c003d101        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c003d101        0x3 
 .bss           0x00000000c003d104        0x4 hw/timer/pit.32
                0x00000000c003d104                pitFreq
 .bss           0x00000000c003d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003d108        0x0 crtn.32
 .bss           0x00000000c003d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c003d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c003d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c003d108        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c003d108        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c003d108        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c003d108        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003d108                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003ec88                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
