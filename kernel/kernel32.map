Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              thr/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/pipe.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 dbg/kconsole.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/fpu.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .group         0x0000000000000000        0x8 krnl/panic.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 krnl/panic.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 krnl/panic.32
 .comment       0x0000000000000000       0x12 reg/registry.32
 .comment       0x0000000000000000       0x12 sys/sc_exit.32
 .comment       0x0000000000000000       0x12 sys/sc_loaddll.32
 .comment       0x0000000000000000       0x12 sys/sc_read.32
 .comment       0x0000000000000000       0x12 sys/sc_sbrk.32
 .comment       0x0000000000000000       0x12 sys/sc_write.32
 .comment       0x0000000000000000       0x12 sys/sc_yield.32
 .comment       0x0000000000000000       0x12 sys/syscalls.32
 .comment       0x0000000000000000       0x12 thr/elf.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0xc thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .group         0x0000000000000000        0x8 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000       0xd3 thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae thr/prcssthr.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 thr/prcssthr.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD dbg/kconsole.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD krnl/panic.32
LOAD reg/registry.32
LOAD sys/sc_exit.32
LOAD sys/sc_loaddll.32
LOAD sys/sc_read.32
LOAD sys/sc_sbrk.32
LOAD sys/sc_write.32
LOAD sys/sc_yield.32
LOAD sys/syscalls.32
LOAD thr/elf.32
LOAD thr/prcssthr.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1f5f8
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x41f D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001b5                goToVM86
                0x00000000c00001e6                goToUsermode
                0x00000000c0000211                switchToThreadASMFirstTime
                0x00000000c000021f                switchToThreadASM
                0x00000000c00002bf                detectCPUID
                0x00000000c00002d5                asmQuickAcquireLock
                0x00000000c00002f3                asmQuickReleaseLock
                0x00000000c00002ff                asmAcquireLock
                0x00000000c0000320                asmReleaseLock
                0x00000000c0000333                loadGDT
                0x00000000c0000353                isr0
                0x00000000c0000363                isr1
                0x00000000c000036d                isr2
                0x00000000c0000377                isr3
                0x00000000c0000381                isr4
                0x00000000c000038b                isr5
                0x00000000c0000395                isr6
                0x00000000c000039f                isr7
                0x00000000c00003a9                isr8
                0x00000000c00003b1                isr9
                0x00000000c00003bb                isr10
                0x00000000c00003c3                isr11
                0x00000000c00003cb                isr12
                0x00000000c00003d3                isr13
                0x00000000c00003db                isr14
                0x00000000c00003e3                isr15
                0x00000000c00003ed                isr16
                0x00000000c00003f7                isr17
                0x00000000c0000401                isr18
                0x00000000c000040b                isr96
                0x00000000c0000415                irq0
                0x00000000c000041f                irq1
                0x00000000c0000429                irq2
                0x00000000c0000433                irq3
                0x00000000c000043d                irq4
                0x00000000c0000447                irq5
                0x00000000c0000451                irq6
                0x00000000c000045b                irq7
                0x00000000c0000465                irq8
                0x00000000c000046f                irq9
                0x00000000c0000479                irq10
                0x00000000c0000483                irq11
                0x00000000c000048d                irq12
                0x00000000c0000497                irq13
                0x00000000c00004a1                irq14
                0x00000000c00004ab                irq15
                0x00000000c00004b5                irq16
                0x00000000c00004bf                irq17
                0x00000000c00004c9                irq18
                0x00000000c00004d3                irq19
                0x00000000c00004dd                irq20
                0x00000000c00004e7                irq21
                0x00000000c00004f1                irq22
                0x00000000c00004fb                irq23
                0x00000000c0000505                int_common_stub
                0x00000000c0000535                syscall_common_stub
 .text          0x00000000c000056f      0x411 acpica/utclib.32
                0x00000000c000056f                memcmp
                0x00000000c000059a                memmove
                0x00000000c00005d2                memcpy
                0x00000000c0000608                memset
                0x00000000c0000625                strlen
                0x00000000c0000635                strpbrk
                0x00000000c0000658                strtok
                0x00000000c00006a7                strcpy
                0x00000000c00006c7                strncpy
                0x00000000c00006f8                strcmp
                0x00000000c0000719                strchr
                0x00000000c000072f                strncmp
                0x00000000c000075e                strcat
                0x00000000c0000785                strncat
                0x00000000c00007bf                strstr
                0x00000000c00007fc                toupper
                0x00000000c0000810                tolower
                0x00000000c0000824                simple_strtoul
 .text          0x00000000c0000980      0xfc2 core/malloc.32
                0x00000000c0000aeb                dlfree
                0x00000000c0000e49                dlmalloc
                0x00000000c0001386                dlrealloc
                0x00000000c000153b                dlmemalign
                0x00000000c000165e                dlcalloc
                0x00000000c00016f8                dlcfree
                0x00000000c00016fd                dlindependent_calloc
                0x00000000c0001722                dlindependent_comalloc
                0x00000000c0001739                dlvalloc
                0x00000000c0001764                dlpvalloc
                0x00000000c000179a                dlmalloc_trim
                0x00000000c00017a7                dlmalloc_usable_size
                0x00000000c00017d8                dlmallinfo
                0x00000000c00018a7                dlmalloc_stats
                0x00000000c00018b8                dlmallopt
 .text          0x00000000c0001942        0x0 libk/string.32
 .text          0x00000000c0001942       0x51 fs/fat/diskio.32
                0x00000000c0001942                disk_status
                0x00000000c0001945                disk_initialize
                0x00000000c0001948                disk_read
                0x00000000c000195e                disk_write
                0x00000000c0001974                disk_ioctl
 .text          0x00000000c0001993     0x67e6 fs/fat/ff.32
                0x00000000c0004c49                f_mount
                0x00000000c0004cab                f_open
                0x00000000c00050e7                f_read
                0x00000000c0005367                f_write
                0x00000000c0005621                f_sync
                0x00000000c00057fd                f_close
                0x00000000c000582c                f_lseek
                0x00000000c0005c91                f_opendir
                0x00000000c0005d93                f_closedir
                0x00000000c0005db5                f_readdir
                0x00000000c0005e50                f_stat
                0x00000000c0005edf                f_getfree
                0x00000000c00060c7                f_truncate
                0x00000000c00061bf                f_unlink
                0x00000000c0006340                f_mkdir
                0x00000000c000656c                f_rename
                0x00000000c000685f                f_chmod
                0x00000000c000693d                f_utime
                0x00000000c0006a1b                f_getlabel
                0x00000000c0006c0f                f_setlabel
                0x00000000c0006e7c                f_forward
                0x00000000c000705a                f_mkfs
 .text          0x00000000c0008179       0x2d fs/fat/ffsystem.32
                0x00000000c0008179                ff_memalloc
                0x00000000c000818f                ff_memfree
 .text          0x00000000c00081a6      0x280 fs/fat/ffunicode.32
                0x00000000c00081a6                ff_uni2oem
                0x00000000c000823c                ff_oem2uni
                0x00000000c00082ab                ff_wtoupper
 .text          0x00000000c0008426      0x70e hal/libresample/samplerate.32
                0x00000000c00084ae                src_delete
                0x00000000c00084ea                src_process
                0x00000000c0008612                src_callback_read
                0x00000000c0008773                src_set_ratio
                0x00000000c00087ca                src_get_channels
                0x00000000c00087ec                src_reset
                0x00000000c0008830                src_new
                0x00000000c00088be                src_callback_new
                0x00000000c0008920                src_get_name
                0x00000000c0008957                src_get_description
                0x00000000c000898e                src_get_version
                0x00000000c0008994                src_is_valid_ratio
                0x00000000c00089ae                src_error
                0x00000000c00089bc                src_strerror
                0x00000000c00089cf                src_simple
                0x00000000c0008a22                src_short_to_float_array
                0x00000000c0008a48                src_float_to_short_array
                0x00000000c0008aac                src_int_to_float_array
                0x00000000c0008ad2                src_float_to_int_array
 .text          0x00000000c0008b34      0x3f9 hal/libresample/src_linear.32
                0x00000000c0008e88                linear_get_name
                0x00000000c0008e97                linear_get_description
                0x00000000c0008ea6                linear_set_converter
 .text          0x00000000c0008f2d     0x1a31 hal/libresample/src_sinc.32
                0x00000000c000a875                sinc_get_name
                0x00000000c000a888                sinc_get_description
                0x00000000c000a89b                sinc_set_converter
 .text          0x00000000c000a95e      0x3cf hal/libresample/src_zoh.32
                0x00000000c000ac88                zoh_get_name
                0x00000000c000ac97                zoh_get_description
                0x00000000c000aca6                zoh_set_converter
 *fill*         0x00000000c000ad2d        0x1 
 .text          0x00000000c000ad2e      0x9d0 core/computer.32
                0x00000000c000ad2e                Computer::close(int, int, void*)
                0x00000000c000ad74                Computer::Computer()
                0x00000000c000ad74                Computer::Computer()
                0x00000000c000aeda                Computer::setBootMessage(char const*)
                0x00000000c000aedc                Computer::start()
                0x00000000c000afdf                firstTask()
                0x00000000c000afee                Computer::detectFeatures()
                0x00000000c000b1e8                Computer::displayFeatures()
                0x00000000c000b4c4                Computer::rdmsr(unsigned int)
                0x00000000c000b4f0                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b528                Computer::nmiEnabled()
                0x00000000c000b534                Computer::readCMOS(unsigned char)
                0x00000000c000b550                Computer::enableNMI(bool)
                0x00000000c000b568                Computer::open(int, int, void*)
                0x00000000c000b63c                Computer::disableNMI()
                0x00000000c000b64c                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b66c                Computer::handleNMI()
                0x00000000c000b6d2                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b6fe      0x1b7 core/gdt.32
                0x00000000c000b6fe                GDTEntry::setBase(unsigned int)
                0x00000000c000b71a                GDTEntry::setLimit(unsigned int)
                0x00000000c000b738                GDT::GDT()
                0x00000000c000b738                GDT::GDT()
                0x00000000c000b74e                GDT::addEntry(GDTEntry)
                0x00000000c000b78a                GDT::getNumberOfEntries()
                0x00000000c000b792                GDT::flush()
                0x00000000c000b7b4                GDT::setup()
 .text          0x00000000c000b8b5       0x61 core/idle.32
                0x00000000c000b8b5                idleFunction(void*)
 .text          0x00000000c000b916      0x45f core/idt.32
                0x00000000c000b916                IDTEntry::IDTEntry(bool)
                0x00000000c000b916                IDTEntry::IDTEntry(bool)
                0x00000000c000b984                IDTEntry::setOffset(unsigned int)
                0x00000000c000b998                IDT::IDT()
                0x00000000c000b998                IDT::IDT()
                0x00000000c000b99a                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000b9a2                IDT::addEntry(IDTEntry, int)
                0x00000000c000b9bc                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000b9f4                IDT::flush()
                0x00000000c000ba0e                IDT::setup()
 .text          0x00000000c000bd75      0x20c core/kheap.32
                0x00000000c000bd75                sbrk
                0x00000000c000be8c                mmap
                0x00000000c000bea2                munmap
                0x00000000c000beb8                liballoc_lock()
                0x00000000c000bec9                liballoc_unlock()
                0x00000000c000beda                liballoc_alloc(int)
                0x00000000c000bef5                liballoc_free(void*, int)
                0x00000000c000bf13                realloc
                0x00000000c000bf27                malloc
                0x00000000c000bf37                free
                0x00000000c000bf47                rfree
                0x00000000c000bf57                calloc
 .text          0x00000000c000bf81      0x3a9 core/main.32
                0x00000000c000bf81                hwTextMode_loadInData(VgaText*)
                0x00000000c000bfc6                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000c010                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000c064                hwTextMode_update(VgaText*)
                0x00000000c000c065                hwTextMode_updateCursor(VgaText*)
                0x00000000c000c0b3                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000c0ef                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000c17b                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000c1e1                setupTextMode()
                0x00000000c000c232                kernel_main
 .text          0x00000000c000c32a      0x504 core/physmgr.32
                0x00000000c000c32a                Phys::allocateDMA(unsigned long)
                0x00000000c000c3ce                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000c416                Phys::setPageState(unsigned long, bool)
                0x00000000c000c44f                Phys::getPageState(unsigned long)
                0x00000000c000c470                Phys::freePage(unsigned long)
                0x00000000c000c4fd                Phys::allocatePage()
                0x00000000c000c5c9                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000c601                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000c82e      0x273 core/pipe.32
                0x00000000c000c82e                Pipe::isAtty()
                0x00000000c000c832                Pipe::~Pipe()
                0x00000000c000c832                Pipe::~Pipe()
                0x00000000c000c856                Pipe::~Pipe()
                0x00000000c000c87e                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000c972                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000ca3a                Pipe::Pipe(int)
                0x00000000c000ca3a                Pipe::Pipe(int)
 *fill*         0x00000000c000caa1        0x1 
 .text          0x00000000c000caa2      0xf67 core/terminal.32
                0x00000000c000caa2                VgaText::isAtty()
                0x00000000c000caa6                VgaText::~VgaText()
                0x00000000c000caa6                VgaText::~VgaText()
                0x00000000c000caca                VgaText::~VgaText()
                0x00000000c000caf4                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000cb14                setTerminalScrollLock(bool)
                0x00000000c000cb15                addToTerminalCycle(VgaText*)
                0x00000000c000cb42                installVgaTextImplementation()
                0x00000000c000cb57                scrollTerminalScrollLock(int)
                0x00000000c000cb58                VgaText::load()
                0x00000000c000cbac                VgaText::updateCursor()
                0x00000000c000cbc6                VgaText::showCursor(bool)
                0x00000000c000cbd6                VgaText::disableBlink(bool)
                0x00000000c000cc10                VgaText::doANSI_SGR(int)
                0x00000000c000cc9c                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c000ccb2                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c000ccc8                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c000cce8                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c000ccfa                VgaText::scrollScreen()
                0x00000000c000cd8e                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c000cda0                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c000ce00                VgaText::getCursorX()
                0x00000000c000ce0c                VgaText::getCursorY()
                0x00000000c000ce18                VgaText::setCursor(int, int)
                0x00000000c000ce36                VgaText::setCursorX(int)
                0x00000000c000ce52                VgaText::setCursorY(int)
                0x00000000c000ce6e                VgaText::incrementCursor(bool)
                0x00000000c000ced6                VgaText::updateRAMUsageDisplay(int)
                0x00000000c000cf30                VgaText::updateDiskUsage()
                0x00000000c000d096                VgaText::updateTitle()
                0x00000000c000d0dc                VgaText::setTitleTextColour(VgaColour)
                0x00000000c000d0ec                VgaText::setTitleColour(VgaColour)
                0x00000000c000d0fc                VgaText::setTitle(char*)
                0x00000000c000d122                VgaText::decrementCursor(bool)
                0x00000000c000d14a                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c000d246                VgaText::isShowingCursor()
                0x00000000c000d252                VgaText::isBlinkDisabled()
                0x00000000c000d260                VgaText::setCursorHeight(int)
                0x00000000c000d27e                VgaText::getCursorHeight()
                0x00000000c000d289                setActiveTerminal(VgaText*)
                0x00000000c000d33b                doTerminalCycle()
                0x00000000c000d358                VgaText::doUpdate()
                0x00000000c000d36a                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c000d52c                VgaText::clearScreen()
                0x00000000c000d590                VgaText::putchar(char)
                0x00000000c000d6aa                VgaText::puts(char const*)
                0x00000000c000d6d0                VgaText::putx(unsigned int)
                0x00000000c000d716                VgaText::VgaText(char const*)
                0x00000000c000d716                VgaText::VgaText(char const*)
                0x00000000c000d8a8                VgaText::receiveKey(unsigned char)
                0x00000000c000d990                VgaText::write(unsigned long long, void*, int*)
                0x00000000c000d9e4                newTerminal(char*)
 *fill*         0x00000000c000da09        0x1 
 .text          0x00000000c000da0a      0x18f core/tss.32
                0x00000000c000da0a                TSS::TSS()
                0x00000000c000da0a                TSS::TSS()
                0x00000000c000da18                TSS::setESP(unsigned long)
                0x00000000c000da2a                TSS::flush()
                0x00000000c000da4a                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c000db99        0x1 
 .text          0x00000000c000db9a      0x545 core/unixfile.32
                0x00000000c000db9a                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c000dc30                ReservedFilename::isAtty()
                0x00000000c000dc66                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c000dd00                UnixFile::getFileDescriptor()
                0x00000000c000dd08                UnixFile::UnixFile(int)
                0x00000000c000dd08                UnixFile::UnixFile(int)
                0x00000000c000de78                ReservedFilename::ReservedFilename(int)
                0x00000000c000de78                ReservedFilename::ReservedFilename(int)
                0x00000000c000deaa                UnixFile::~UnixFile()
                0x00000000c000deaa                UnixFile::~UnixFile()
                0x00000000c000df42                UnixFile::~UnixFile()
                0x00000000c000df6a                ReservedFilename::~ReservedFilename()
                0x00000000c000df6a                ReservedFilename::~ReservedFilename()
                0x00000000c000df8e                ReservedFilename::~ReservedFilename()
                0x00000000c000dfb5                getFromFileDescriptor(int)
 *fill*         0x00000000c000e0df        0x1 
 .text          0x00000000c000e0e0      0xecf core/virtmgr.32
                0x00000000c000e0e0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c000e117                Virt::getPageState(unsigned long)
                0x00000000c000e13e                Virt::allocateKernelVirtualPages(int)
                0x00000000c000e24f                Virt::virtualMemorySetup()
                0x00000000c000e2cb                Virt::getAKernelVAS()
                0x00000000c000e2d1                Virt::setupPageSwapping(int)
                0x00000000c000e3ec                VAS::VAS()
                0x00000000c000e3ec                VAS::VAS()
                0x00000000c000e41c                VAS::VAS(VAS*)
                0x00000000c000e41c                VAS::VAS(VAS*)
                0x00000000c000e440                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c000e46c                VAS::getPageTableEntry(unsigned long)
                0x00000000c000e48b                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c000e5ac                VAS::freeAllocatedPages(unsigned long)
                0x00000000c000e5d0                VAS::virtualToPhysical(unsigned long)
                0x00000000c000e5ea                VAS::reflagRange(unsigned long, int, int, int)
                0x00000000c000e62e                VAS::setToWriteCombining(unsigned long, int)
                0x00000000c000e668                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c000e69e                VAS::~VAS()
                0x00000000c000e69e                VAS::~VAS()
                0x00000000c000e80a                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c000e90c                VAS::allocatePages(int, int)
                0x00000000c000eade                VAS::setCPUSpecific(unsigned long)
                0x00000000c000eafc                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c000ebc6                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c000ecb8                VAS::VAS(bool)
                0x00000000c000ecb8                VAS::VAS(bool)
                0x00000000c000eee8                mapVASFirstTime
 .text          0x00000000c000efaf       0x93 coreobjs/c++.32
                0x00000000c000efaf                __cxa_atexit
                0x00000000c000efb2                __cxa_finalize
                0x00000000c000efb3                __stack_chk_fail
                0x00000000c000f013                __cxa_pure_virtual
                0x00000000c000f024                operator new(unsigned long)
                0x00000000c000f029                operator new[](unsigned long)
                0x00000000c000f02e                operator delete(void*)
                0x00000000c000f033                operator delete(void*, unsigned long)
                0x00000000c000f038                operator delete[](void*)
                0x00000000c000f03d                operator delete[](void*, unsigned long)
 .text          0x00000000c000f042      0x23d dbg/kconsole.32
                0x00000000c000f042                Dbg::stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000f0e6                Dbg::logc(char)
                0x00000000c000f0fd                Dbg::logs(char*)
                0x00000000c000f11a                Dbg::logWriteInt(unsigned int)
                0x00000000c000f138                Dbg::logWriteIntBase(unsigned int, int)
                0x00000000c000f159                Dbg::kprintf(char const*, ...)
 *fill*         0x00000000c000f27f        0x1 
 .text          0x00000000c000f280      0xb68 fs/vfs.32
                0x00000000c000f280                File::read(unsigned long long, void*, int*)
                0x00000000c000f2d8                File::write(unsigned long long, void*, int*)
                0x00000000c000f330                Directory::read(unsigned long long, void*, int*)
                0x00000000c000f388                Directory::write(unsigned long long, void*, int*)
                0x00000000c000f3b6                File::isAtty()
                0x00000000c000f3ba                Directory::isAtty()
                0x00000000c000f3be                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c000f3c4                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c000f3ca                File::~File()
                0x00000000c000f3ca                File::~File()
                0x00000000c000f3ee                File::~File()
                0x00000000c000f418                Directory::~Directory()
                0x00000000c000f418                Directory::~Directory()
                0x00000000c000f43c                Directory::~Directory()
                0x00000000c000f466                Filesystem::Filesystem()
                0x00000000c000f466                Filesystem::Filesystem()
                0x00000000c000f48a                Filesystem::~Filesystem()
                0x00000000c000f48a                Filesystem::~Filesystem()
                0x00000000c000f498                Filesystem::~Filesystem()
                0x00000000c000f4bc                initVFS()
                0x00000000c000f4e6                standardiseFiles(char*, char const*, char const*)
                0x00000000c000f690                File::File(char const*, Process*)
                0x00000000c000f690                File::File(char const*, Process*)
                0x00000000c000f6f4                File::open(FileOpenMode)
                0x00000000c000f752                File::close()
                0x00000000c000f7b2                File::seek(unsigned long long)
                0x00000000c000f808                File::tell(unsigned long long*)
                0x00000000c000f858                File::rewind()
                0x00000000c000f86c                File::unlink()
                0x00000000c000f8b8                File::rename(char const*)
                0x00000000c000f906                File::chfatattr(unsigned char, unsigned char)
                0x00000000c000f962                File::exists()
                0x00000000c000f9a0                File::stat(unsigned long long*, bool*)
                0x00000000c000fa01                getcwd(Process*, char*, int)
                0x00000000c000fa2b                setcwd(Process*, char*)
                0x00000000c000fb52                Directory::Directory(char const*, Process*)
                0x00000000c000fb52                Directory::Directory(char const*, Process*)
                0x00000000c000fbb6                Directory::open()
                0x00000000c000fc12                Directory::close()
                0x00000000c000fc72                Directory::unlink()
                0x00000000c000fcbe                Directory::rename(char const*)
                0x00000000c000fd0c                Directory::exists()
                0x00000000c000fd4a                Directory::read(dirent*)
                0x00000000c000fd96                Directory::create()
                0x00000000c000fde2                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c000fde8       0x84 hal/bus.32
                0x00000000c000fde8                Bus::Bus(char const*)
                0x00000000c000fde8                Bus::Bus(char const*)
                0x00000000c000fe1e                Bus::~Bus()
                0x00000000c000fe1e                Bus::~Bus()
                0x00000000c000fe42                Bus::~Bus()
 .text          0x00000000c000fe6c      0x14e hal/buzzer.32
                0x00000000c000fe6c                Buzzer::Buzzer(char const*)
                0x00000000c000fe6c                Buzzer::Buzzer(char const*)
                0x00000000c000feb0                Buzzer::~Buzzer()
                0x00000000c000feb0                Buzzer::~Buzzer()
                0x00000000c000fed4                Buzzer::~Buzzer()
                0x00000000c000fefe                Buzzer::stop()
                0x00000000c000ff11                beepThread(void*)
                0x00000000c000ff4c                Buzzer::beep(int, int, bool)
 .text          0x00000000c000ffba      0x435 hal/clock.32
                0x00000000c000ffba                loadClockSettings()
                0x00000000c000ffd4                Clock::Clock(char const*)
                0x00000000c000ffd4                Clock::Clock(char const*)
                0x00000000c001000a                Clock::~Clock()
                0x00000000c001000a                Clock::~Clock()
                0x00000000c001002e                Clock::~Clock()
                0x00000000c0010058                Clock::timeInSecondsLocal()
                0x00000000c00100a0                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c00100f9                datetimeToSeconds(datetime_t)
                0x00000000c0010226                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c0010286                secondsToDatetime(unsigned long long)
                0x00000000c00103ca                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c00103ef        0x1 
 .text          0x00000000c00103f0      0x500 hal/device.32
                0x00000000c00103f0                Device::hibernate()
                0x00000000c00103f2                Device::wake()
                0x00000000c00103f4                Device::detect()
                0x00000000c00103f6                Device::disableLegacy()
                0x00000000c00103f8                Device::powerSaving(PowerSavingLevel)
                0x00000000c00103fa                DriverlessDevice::close(int, int, void*)
                0x00000000c00103fe                DriverlessDevice::detect()
                0x00000000c0010400                DriverlessDevice::open(int, int, void*)
                0x00000000c0010414                Device::~Device()
                0x00000000c0010414                Device::~Device()
                0x00000000c0010422                Device::~Device()
                0x00000000c001044a                Device::findAndLoadDriver()
                0x00000000c001044c                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c001046e                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00104c2                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010520                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c001056e                Device::addChild(Device*)
                0x00000000c00105b2                Device::removeAllChildren()
                0x00000000c00105f8                Device::hibernateAll()
                0x00000000c0010628                Device::wakeAll()
                0x00000000c0010658                Device::detectAll()
                0x00000000c0010688                Device::disableLegacyAll()
                0x00000000c00106b8                Device::loadDriversForAll()
                0x00000000c00106e4                Device::closeAll()
                0x00000000c001071a                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0010750                Device::setName(char const*)
                0x00000000c001075e                Device::Device(char const*)
                0x00000000c001075e                Device::Device(char const*)
                0x00000000c0010850                Device::getName()
                0x00000000c001085a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c001085a                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0010882                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c00108c6                getDevicesOfType(DeviceType)
 .text          0x00000000c00108f0       0x84 hal/diskctrl.32
                0x00000000c00108f0                HardDiskController::HardDiskController(char const*)
                0x00000000c00108f0                HardDiskController::HardDiskController(char const*)
                0x00000000c0010926                HardDiskController::~HardDiskController()
                0x00000000c0010926                HardDiskController::~HardDiskController()
                0x00000000c001094a                HardDiskController::~HardDiskController()
 .text          0x00000000c0010974       0xde hal/diskphys.32
                0x00000000c0010974                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0010974                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c00109dc                PhysicalDisk::startCache()
                0x00000000c0010a04                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010a04                PhysicalDisk::~PhysicalDisk()
                0x00000000c0010a28                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0010a52      0x142 hal/fpu.32
                0x00000000c0010a52                FPU::FPU(char const*)
                0x00000000c0010a52                FPU::FPU(char const*)
                0x00000000c0010a88                FPU::~FPU()
                0x00000000c0010a88                FPU::~FPU()
                0x00000000c0010aac                FPU::~FPU()
                0x00000000c0010ad6                setupFPU()
 .text          0x00000000c0010b94     0x122f hal/intctrl.32
                0x00000000c0010b94                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0010bcc                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0010c1e                doubleFault(regs*, void*)
                0x00000000c0010c38                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0010cd4                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0010d7c                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0010e03                nmiHandler(regs*, void*)
                0x00000000c0010e11                int_handler
                0x00000000c0010eac                InterruptController::InterruptController(char const*)
                0x00000000c0010eac                InterruptController::InterruptController(char const*)
                0x00000000c0010f52                InterruptController::~InterruptController()
                0x00000000c0010f52                InterruptController::~InterruptController()
                0x00000000c0010f76                InterruptController::~InterruptController()
                0x00000000c0010fa0                displayDebugInfo(regs*)
                0x00000000c00113b7                x87EmulHandler(regs*, void*)
                0x00000000c001141a                gpFault(regs*, void*)
                0x00000000c0011453                pgFault(regs*, void*)
                0x00000000c001146a                otherISRHandler(regs*, void*)
                0x00000000c0011489                opcodeFault(regs*, void*)
                0x00000000c0011996                displayProgramFault(char const*)
                0x00000000c00119be                setupInterruptController()
                0x00000000c0011d76                InterruptController::convertLegacyIRQNumber(int)
 *fill*         0x00000000c0011dc3        0x1 
 .text          0x00000000c0011dc4      0x61c hal/keybrd.32
                0x00000000c0011dc4                startGUI(void*)
                0x00000000c0011e36                sendKeyToTerminal(unsigned char)
                0x00000000c0011ea7                sendKeyboardToken(KeyboardToken)
                0x00000000c0012290                clearInternalKeybuffer(VgaText*)
                0x00000000c00122c5                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0012356                Keyboard::Keyboard(char const*)
                0x00000000c0012356                Keyboard::Keyboard(char const*)
                0x00000000c0012392                Keyboard::~Keyboard()
                0x00000000c0012392                Keyboard::~Keyboard()
                0x00000000c00123b6                Keyboard::~Keyboard()
 .text          0x00000000c00123e0      0x400 hal/logidisk.32
                0x00000000c00123e0                LogicalDisk::close(int, int, void*)
                0x00000000c00123e4                LogicalDisk::~LogicalDisk()
                0x00000000c00123e4                LogicalDisk::~LogicalDisk()
                0x00000000c0012408                LogicalDisk::~LogicalDisk()
                0x00000000c0012432                LogicalDisk::open(int, int, void*)
                0x00000000c0012446                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c001247e                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c00124c4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00124c4                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001257a                LogicalDisk::assignDriveLetter()
                0x00000000c0012630                LogicalDisk::mount()
                0x00000000c00126a2                LogicalDisk::unmount()
                0x00000000c00126b2                LogicalDisk::unassignDriveLetter()
                0x00000000c0012708                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c0012774                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c00127e0       0x84 hal/mouse.32
                0x00000000c00127e0                Mouse::Mouse(char const*)
                0x00000000c00127e0                Mouse::Mouse(char const*)
                0x00000000c0012816                Mouse::~Mouse()
                0x00000000c0012816                Mouse::~Mouse()
                0x00000000c001283a                Mouse::~Mouse()
 .text          0x00000000c0012864      0x339 hal/partition.32
                0x00000000c0012864                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001290c                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c0012b9d        0x1 
 .text          0x00000000c0012b9e      0x2e7 hal/timer.32
                0x00000000c0012b9e                Timer::Timer(char const*)
                0x00000000c0012b9e                Timer::Timer(char const*)
                0x00000000c0012bd4                Timer::~Timer()
                0x00000000c0012bd4                Timer::~Timer()
                0x00000000c0012bf8                Timer::~Timer()
                0x00000000c0012c22                Timer::read()
                0x00000000c0012c2d                timerHandler(unsigned long long)
                0x00000000c0012d64                setupTimer(int)
 *fill*         0x00000000c0012e85        0x1 
 .text          0x00000000c0012e86      0x2d1 hal/vcache.32
                0x00000000c0012e86                VCache::VCache(PhysicalDisk*)
                0x00000000c0012e86                VCache::VCache(PhysicalDisk*)
                0x00000000c0012f76                VCache::writeWriteBuffer()
                0x00000000c0012fb2                VCache::~VCache()
                0x00000000c0012fb2                VCache::~VCache()
                0x00000000c0012ff2                VCache::~VCache()
                0x00000000c001301a                VCache::write(unsigned long long, int, void*)
                0x00000000c00130fe                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0013157        0x1 
 .text          0x00000000c0013158      0x26d hal/video.32
                0x00000000c0013158                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c00131a2                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0013220                Video::clearScreen(unsigned int)
                0x00000000c0013254                Video::putpixel(int, int, unsigned int)
                0x00000000c0013262                Video::Video(char const*)
                0x00000000c0013262                Video::Video(char const*)
                0x00000000c0013298                Video::~Video()
                0x00000000c0013298                Video::~Video()
                0x00000000c00132bc                Video::~Video()
                0x00000000c00132e6                Video::isMonochrome()
                0x00000000c00132f2                Video::getWidth()
                0x00000000c00132fe                Video::getHeight()
                0x00000000c001330a                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c00133c5        0x1 
 .text          0x00000000c00133c6      0xd68 hw/acpi.32
                0x00000000c00133c6                ACPI::close(int, int, void*)
                0x00000000c001347f                findRSDP()
                0x00000000c0013509                loadACPITables(unsigned char*)
                0x00000000c0013730                findRSDT(unsigned char*)
                0x00000000c001384e                findDataTable(unsigned char*, char*)
                0x00000000c00138ea                scanMADT()
                0x00000000c0013ca6                ACPI::ACPI()
                0x00000000c0013ca6                ACPI::ACPI()
                0x00000000c0013d06                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c0013de8                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c0013ef8                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c0013efe                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0013f50                ACPI::open(int, int, void*)
                0x00000000c0014116                ACPI::sleep()
 .text          0x00000000c001412e     0x17ae hw/cpu.32
                0x00000000c001412e                CPU::close(int, int, void*)
                0x00000000c0014131                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c00142d6                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c001458f                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c00145ab                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c00145c3                AMD_K6_writeback(int, int, int)
                0x00000000c0014636                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00146b9                cpuidCheckEDX(unsigned int)
                0x00000000c00146e6                cpuidCheckECX(unsigned int)
                0x00000000c0014713                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0014740                cpuidCheckExtendedECX(unsigned int)
                0x00000000c001476d                getCPUNumber()
                0x00000000c0014770                thisCPU()
                0x00000000c0014784                CPU::CPU()
                0x00000000c0014784                CPU::CPU()
                0x00000000c0014812                CPU::displayFeatures()
                0x00000000c0014a8e                CPU::detectFeatures()
                0x00000000c0015464                CPU::setupSMEP()
                0x00000000c001547e                CPU::setupUMIP()
                0x00000000c0015496                CPU::setupTSC()
                0x00000000c00154ae                CPU::setupLargePages()
                0x00000000c00154c6                CPU::setupPAT()
                0x00000000c0015502                CPU::setupMTRR()
                0x00000000c0015504                CPU::setupGlobalPages()
                0x00000000c001551a                CPU::allowUsermodeDataAccess()
                0x00000000c001552c                CPU::prohibitUsermodeDataAccess()
                0x00000000c001553e                CPU::setupSMAP()
                0x00000000c0015564                CPU::setupFeatures()
                0x00000000c0015606                CPU::open(int, int, void*)
                0x00000000c00156dc                CPU::decodeAddress(regs*, int*, bool*, unsigned char*)
 .text          0x00000000c00158dc        0x0 hw/ports.32
 .text          0x00000000c00158dc      0x354 krnl/panic.32
                0x00000000c00158dc                Krnl::panic(char const*)
 .text          0x00000000c0015c30      0x511 reg/registry.32
                0x00000000c0015c30                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0015d97                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c0015ef6                Reg::getLine(char*, char*, char*)
                0x00000000c0015f2d                Reg::readInt(char*, char*, int*)
                0x00000000c0016017                Reg::readString(char*, char*, char*, int)
                0x00000000c0016098                Reg::readBool(char*, char*, bool*)
                0x00000000c00160bd                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c00160e9                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c0016115                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c0016141       0x18 sys/sc_exit.32
                0x00000000c0016141                Sys::exit(regs*)
 .text          0x00000000c0016159       0x95 sys/sc_loaddll.32
                0x00000000c0016159                Sys::loadDLL(regs*)
 .text          0x00000000c00161ee       0x68 sys/sc_read.32
                0x00000000c00161ee                Sys::read(regs*)
 .text          0x00000000c0016256       0x55 sys/sc_sbrk.32
                0x00000000c0016256                Sys::sbrk(regs*)
 .text          0x00000000c00162ab       0x83 sys/sc_write.32
                0x00000000c00162ab                Sys::write(regs*)
 .text          0x00000000c001632e       0x1a sys/sc_yield.32
                0x00000000c001632e                Sys::yield(regs*)
 .text          0x00000000c0016348      0xfe6 sys/syscalls.32
                0x00000000c0016348                sysCallGetPID(regs*)
                0x00000000c0016358                sysCallSeekDir(regs*)
                0x00000000c001635d                sysCallTellDir(regs*)
                0x00000000c0016362                sysCallVerify(regs*)
                0x00000000c001636c                sysCallFork(regs*)
                0x00000000c0016373                sysCallExecve(regs*)
                0x00000000c001637a                sysCallGetArgc(regs*)
                0x00000000c001638e                sysFormatDisk(regs*)
                0x00000000c00163f1                sysSetDiskVolumeLabel(regs*)
                0x00000000c0016439                sysGetDiskVolumeLabel(regs*)
                0x00000000c001648c                sysShutdown(regs*)
                0x00000000c0016507                sysCallGetCwd(regs*)
                0x00000000c001652d                sysCallSetCwd(regs*)
                0x00000000c001654f                sysCallRealpath(regs*)
                0x00000000c001659c                sysCallReadDir(regs*)
                0x00000000c001662f                sysCallIsATTY(regs*)
                0x00000000c0016687                sysCallSeek(regs*)
                0x00000000c00166ed                sysCallTell(regs*)
                0x00000000c0016768                sysCallSizeFromFilename(regs*)
                0x00000000c0016816                sysCallSize(regs*)
                0x00000000c0016897                sysCallClose(regs*)
                0x00000000c001691a                sysCallOpenDir(regs*)
                0x00000000c0016985                sysCallMakeDir(regs*)
                0x00000000c00169e0                sysCallCloseDir(regs*)
                0x00000000c0016a41                sysCallWait(regs*)
                0x00000000c0016a62                sysCallRmdir(regs*)
                0x00000000c0016ab5                sysCallUnlink(regs*)
                0x00000000c0016b08                sysCallGetArgv(regs*)
                0x00000000c0016b54                sysCallTTYName(regs*)
                0x00000000c0016bd5                sysCallGetEnv(regs*)
                0x00000000c0016c2c                sysCallUSleep(regs*)
                0x00000000c0016c6e                sysCallSpawn(regs*)
                0x00000000c0016ccd                sysAppSettings(regs*)
                0x00000000c0016df2                sysSetFatAttrib(regs*)
                0x00000000c0016e55                sysPanic(regs*)
                0x00000000c0016e7c                sysPipe(regs*)
                0x00000000c0016ec1                sysGetUnixTime(regs*)
                0x00000000c0016ed5                string_ends_with(char const*, char const*)
                0x00000000c0016f1f                sysCallOpen(regs*)
                0x00000000c0017133                setupSystemCalls()
                0x00000000c00172ec                systemCall(regs*, void*)
 .text          0x00000000c001732e     0x11c1 thr/elf.32
                0x00000000c001732e                Thr::allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c00175a5                Thr::loadProgramIntoMemory(Process*, char const*)
                0x00000000c00177bb                Thr::runtimeReferenceHelper()
                0x00000000c00177ce                Thr::getAddressOfKernelSymbol(char const*)
                0x00000000c001781d                Thr::loadKernelSymbolTable(char const*)
                0x00000000c0017ade                Thr::loadDriverIntoMemory(char const*, unsigned long, bool)
                0x00000000c001827c                Thr::getDriverBaseFromAddress(unsigned long)
                0x00000000c00182ae                Thr::getDriverNameFromAddress(unsigned long)
                0x00000000c00182e5                Thr::getDriverOffsetFromAddress(unsigned long)
                0x00000000c00182ff                Thr::loadDLL(char const*, bool)
                0x00000000c00184c5                Thr::executeDLL(unsigned long, void*)
 *fill*         0x00000000c00184ef        0x1 
 .text          0x00000000c00184f0     0x1002 thr/prcssthr.32
                0x00000000c00184f0                changeTSS
                0x00000000c001851e                Process::addArgs(char**)
                0x00000000c0018580                Process::Process(char const*, Process*, char**)
                0x00000000c0018580                Process::Process(char const*, Process*, char**)
                0x00000000c001873c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c001873c                Process::Process(bool, char const*, Process*, char**)
                0x00000000c00188c3                disableIRQs()
                0x00000000c00188d0                getIRQNestingLevel()
                0x00000000c00188d6                enableIRQs()
                0x00000000c00188e5                lockScheduler()
                0x00000000c00188e7                unlockScheduler()
                0x00000000c00188e9                userModeEntryPoint(void*)
                0x00000000c001890c                lockStuff()
                0x00000000c001891d                taskStartupFunction
                0x00000000c0018926                updateTimeUsed()
                0x00000000c0018984                switchToThread(ThreadControlBlock*)
                0x00000000c00189da                Semaphore::Semaphore(int)
                0x00000000c00189da                Semaphore::Semaphore(int)
                0x00000000c0018a08                Mutex::Mutex()
                0x00000000c0018a08                Mutex::Mutex()
                0x00000000c0018a1a                Process::createThread(void (*)(void*), void*, int)
                0x00000000c0018afc                Process::createUserThread()
                0x00000000c0018b19                setupMultitasking(void (*)())
                0x00000000c0018c2e                schedule()
                0x00000000c0018cb3                unlockStuff()
                0x00000000c0018ce8                Semaphore::tryAcquire()
                0x00000000c0018d16                Semaphore::assertLocked(char const*)
                0x00000000c0018d46                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c0018d87                blockTask(TaskState)
                0x00000000c0018da8                waitTask(int, int*, int)
                0x00000000c0018dea                nanoSleepUntil(unsigned long long)
                0x00000000c0018e43                nanoSleep(unsigned long long)
                0x00000000c0018e58                sleep(unsigned long long)
                0x00000000c0018e76                Semaphore::acquire()
                0x00000000c0018edb                taskReturned
                0x00000000c0018f09                unblockTask(ThreadControlBlock*)
                0x00000000c0018fb6                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c001925f                cleanerTaskFunction(void*)
                0x00000000c0019312                terminateTask(int)
                0x00000000c00193f4                Thr::terminateFromIRQ(int)
                0x00000000c0019402                Semaphore::release()
 .text          0x00000000c00194f2      0x8bf vm86/vm8086.32
                0x00000000c00194f2                Vm::vm8086EntryPoint(void*)
                0x00000000c001951d                Vm::inbv(unsigned short)
                0x00000000c0019523                Vm::outbv(unsigned short, unsigned char)
                0x00000000c001952d                Vm::realToLinear(unsigned short, unsigned short)
                0x00000000c001953d                Vm::getSegment(unsigned int)
                0x00000000c0019545                Vm::getOffset(unsigned int)
                0x00000000c001954a                Vm::loadFileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0019679                Vm::doISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0019703                Vm::readByteFromReal(unsigned short, unsigned short)
                0x00000000c0019714                Vm::readWordFromReal(unsigned short, unsigned short)
                0x00000000c0019726                Vm::readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0019737                Vm::writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001974c                Vm::writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0019762                Vm::writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0019777                Vm::faultHandler(regs*)
 *fill*         0x00000000c0019db1        0x1 
 .text          0x00000000c0019db2     0x112f fs/fat/vfslink.32
                0x00000000c0019db2                FAT::getName()
                0x00000000c0019db8                FAT::tell(void*, unsigned long long*)
                0x00000000c0019dec                FAT::stat(void*, unsigned long long*)
                0x00000000c0019e20                FAT::~FAT()
                0x00000000c0019e20                FAT::~FAT()
                0x00000000c0019e44                FAT::~FAT()
                0x00000000c0019e6c                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0019f0a                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0019fc4                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c001a1a8                FAT::tryMount(LogicalDisk*, int)
                0x00000000c001a3ae                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a4b6                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c001a510                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001a56a                FAT::close(void*)
                0x00000000c001a5b6                FAT::closeDir(void*)
                0x00000000c001a602                FAT::seek(void*, unsigned long long)
                0x00000000c001a656                fatWrapperReadDisk
                0x00000000c001a6a1                fatWrapperWriteDisk
                0x00000000c001a6ec                fatWrapperIoctl
                0x00000000c001a7fc                FAT::FAT()
                0x00000000c001a7fc                FAT::FAT()
                0x00000000c001a84e                FAT::fixFilepath(char*)
                0x00000000c001a886                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c001a9b2                FAT::openDir(char const*, void**)
                0x00000000c001aa58                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c001ab44                FAT::unlink(char const*)
                0x00000000c001abbe                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001ad38                FAT::rename(char const*, char const*)
                0x00000000c001adfc                FAT::mkdir(char const*)
                0x00000000c001ae76                FAT::exists(char const*)
 *fill*         0x00000000c001aee1        0x1 
 .text          0x00000000c001aee2      0xbdd fs/iso9660/vfslink.32
                0x00000000c001aee2                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c001aee8                ISO9660::seek(void*, unsigned long long)
                0x00000000c001af18                ISO9660::tell(void*, unsigned long long*)
                0x00000000c001af3c                ISO9660::getName()
                0x00000000c001af42                ISO9660::stat(void*, unsigned long long*)
                0x00000000c001af66                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c001af6c                ISO9660::unlink(char const*)
                0x00000000c001af72                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c001af78                ISO9660::rename(char const*, char const*)
                0x00000000c001af7e                ISO9660::mkdir(char const*)
                0x00000000c001af84                ISO9660::close(void*)
                0x00000000c001afa6                ISO9660::closeDir(void*)
                0x00000000c001afc8                ISO9660::~ISO9660()
                0x00000000c001afc8                ISO9660::~ISO9660()
                0x00000000c001afec                ISO9660::~ISO9660()
                0x00000000c001b013                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c001b055                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001b0bc                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001b10c                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001b350                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001b5db                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001b630                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b803                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001b892                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001b92c                ISO9660::exists(char const*)
                0x00000000c001b950                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001b9e4                ISO9660::openDir(char const*, void**)
                0x00000000c001ba9c                ISO9660::ISO9660()
                0x00000000c001ba9c                ISO9660::ISO9660()
 *fill*         0x00000000c001babf        0x1 
 .text          0x00000000c001bac0      0x248 hal/sound/sndchannel.32
                0x00000000c001bac0                SoundChannel::~SoundChannel()
                0x00000000c001bac0                SoundChannel::~SoundChannel()
                0x00000000c001badc                SoundChannel::setSpeed(float)
                0x00000000c001bae8                SoundChannel::getSpeed()
                0x00000000c001baf0                SoundChannel::setVolume(int)
                0x00000000c001bb0c                SoundChannel::getVolume()
                0x00000000c001bb14                SoundChannel::pause()
                0x00000000c001bb1e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bb1e                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001bc18                SoundChannel::play()
                0x00000000c001bc22                SoundChannel::paused()
                0x00000000c001bc2a                SoundChannel::getSampleRate()
                0x00000000c001bc32                SoundChannel::getBits()
                0x00000000c001bc3a                SoundChannel::getBufferUsed()
                0x00000000c001bc42                SoundChannel::getBufferSize()
                0x00000000c001bc4a                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001bcbc                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001bd08      0x30f hal/sound/sndhw.32
                0x00000000c001bd08                SoundDevice::SoundDevice(char const*)
                0x00000000c001bd08                SoundDevice::SoundDevice(char const*)
                0x00000000c001bd74                SoundDevice::~SoundDevice()
                0x00000000c001bd74                SoundDevice::~SoundDevice()
                0x00000000c001bdee                SoundDevice::~SoundDevice()
                0x00000000c001be18                SoundDevice::getFreeChannelNum()
                0x00000000c001be32                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001bea2                SoundDevice::removeChannel(int)
                0x00000000c001bed4                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001bf40                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001c017        0x0 hw/bus/isa.32
 *fill*         0x00000000c001c017        0x1 
 .text          0x00000000c001c018      0x6e9 hw/bus/pci.32
                0x00000000c001c018                PCI::open(int, int, void*)
                0x00000000c001c02c                PCI::close(int, int, void*)
                0x00000000c001c030                PCI::PCI()
                0x00000000c001c030                PCI::PCI()
                0x00000000c001c0b2                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c0fa                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c11c                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001c140                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001c184                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1a8                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1ca                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001c1ec                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001c210                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001c270                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001c2dc                PCI::checkBus(unsigned char)
                0x00000000c001c302                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001c472                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001c642                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001c6ae                PCI::detect()
 *fill*         0x00000000c001c701        0x1 
 .text          0x00000000c001c702      0xc84 hw/diskctrl/ide.32
                0x00000000c001c702                IDE::close(int, int, void*)
                0x00000000c001c706                IDE::IDE()
                0x00000000c001c706                IDE::IDE()
                0x00000000c001c73a                IDE::prepareInterrupt(unsigned char)
                0x00000000c001c74c                selectDrive(unsigned char, unsigned char)
                0x00000000c001c74e                IDE::getBase(unsigned char)
                0x00000000c001c760                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001c820                IDE::read(unsigned char, unsigned char)
                0x00000000c001c8ce                IDE::waitInterrupt(unsigned char)
                0x00000000c001c93a                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001c956                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001c972                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001c9b8                IDE::open(int, int, void*)
                0x00000000c001cdca                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001ce96                IDE::detect()
                0x00000000c001d180                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001d316                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001d386      0x64f hw/diskphys/ata.32
                0x00000000c001d386                ATA::close(int, int, void*)
                0x00000000c001d3aa                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001d3ac                ATA::ATA()
                0x00000000c001d3ac                ATA::ATA()
                0x00000000c001d3da                ATA::flush(bool)
                0x00000000c001d424                ATA::readyForCommand()
                0x00000000c001d474                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001d816                ATA::read(unsigned long long, int, void*)
                0x00000000c001d87e                ATA::write(unsigned long long, int, void*)
                0x00000000c001d8e6                ATA::detectCHS()
                0x00000000c001d910                ATA::open(int, int, void*)
 *fill*         0x00000000c001d9d5        0x1 
 .text          0x00000000c001d9d6      0x5ae hw/diskphys/atapi.32
                0x00000000c001d9d6                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001d9dc                ATAPI::close(int, int, void*)
                0x00000000c001da00                ATAPI::ATAPI()
                0x00000000c001da00                ATAPI::ATAPI()
                0x00000000c001da2e                ATAPI::readyForCommand()
                0x00000000c001da7e                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001dd3e                ATAPI::diskRemoved()
                0x00000000c001dd5a                ATAPI::eject()
                0x00000000c001dda0                ATAPI::diskInserted()
                0x00000000c001ddce                ATAPI::detectMedia()
                0x00000000c001de8a                ATAPI::open(int, int, void*)
                0x00000000c001df0a                ATAPI::read(unsigned long long, int, void*)
 .text          0x00000000c001df84       0x8e hw/fpu/avx.32
                0x00000000c001df84                AVX::open(int, int, void*)
                0x00000000c001df96                AVX::close(int, int, void*)
                0x00000000c001dfa8                AVX::available()
                0x00000000c001dfba                AVX::save(void*)
                0x00000000c001dfd2                AVX::load(void*)
                0x00000000c001dfea                AVX::AVX()
                0x00000000c001dfea                AVX::AVX()
 .text          0x00000000c001e012       0x90 hw/fpu/mmx.32
                0x00000000c001e012                MMX::available()
                0x00000000c001e026                MMX::open(int, int, void*)
                0x00000000c001e038                MMX::close(int, int, void*)
                0x00000000c001e04a                MMX::save(void*)
                0x00000000c001e062                MMX::load(void*)
                0x00000000c001e07a                MMX::MMX()
                0x00000000c001e07a                MMX::MMX()
 .text          0x00000000c001e0a2       0x96 hw/fpu/sse.32
                0x00000000c001e0a2                SSE::open(int, int, void*)
                0x00000000c001e0b4                SSE::close(int, int, void*)
                0x00000000c001e0c6                SSE::available()
                0x00000000c001e0e0                SSE::save(void*)
                0x00000000c001e0f8                SSE::load(void*)
                0x00000000c001e110                SSE::SSE()
                0x00000000c001e110                SSE::SSE()
 .text          0x00000000c001e138       0x8e hw/fpu/x87.32
                0x00000000c001e138                x87::open(int, int, void*)
                0x00000000c001e14a                x87::close(int, int, void*)
                0x00000000c001e15c                x87::available()
                0x00000000c001e16e                x87::save(void*)
                0x00000000c001e186                x87::load(void*)
                0x00000000c001e19e                x87::x87()
                0x00000000c001e19e                x87::x87()
 .text          0x00000000c001e1c6      0x63b hw/intctrl/apic.32
                0x00000000c001e1c6                APIC::disable()
                0x00000000c001e1c8                APIC::close(int, int, void*)
                0x00000000c001e1ea                IOAPIC::close(int, int, void*)
                0x00000000c001e1f0                APIC::io_wait()
                0x00000000c001e1f6                APIC::getBase()
                0x00000000c001e238                APIC::eoi(unsigned char)
                0x00000000c001e266                APIC::open(int, int, void*)
                0x00000000c001e330                IOAPIC::IOAPIC()
                0x00000000c001e330                IOAPIC::IOAPIC()
                0x00000000c001e358                APIC::APIC()
                0x00000000c001e358                APIC::APIC()
                0x00000000c001e434                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001e466                IOAPIC::read(int)
                0x00000000c001e48e                IOAPIC::open(int, int, void*)
                0x00000000c001e596                IOAPIC::write(int, int)
                0x00000000c001e5c2                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001e688                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001e801        0x1 
 .text          0x00000000c001e802      0x3f3 hw/intctrl/pic.32
                0x00000000c001e802                PIC::disable()
                0x00000000c001e830                PIC::close(int, int, void*)
                0x00000000c001e852                PIC::PIC()
                0x00000000c001e852                PIC::PIC()
                0x00000000c001e92e                PIC::ioWait()
                0x00000000c001e934                PIC::getIRQReg(int)
                0x00000000c001e9a6                PIC::eoi(unsigned char)
                0x00000000c001ea3e                PIC::remap()
                0x00000000c001ebb6                PIC::open(int, int, void*)
 *fill*         0x00000000c001ebf5        0x1 
 .text          0x00000000c001ebf6      0x264 hw/timer/apictimer.32
                0x00000000c001ebf6                APICTimer::close(int, int, void*)
                0x00000000c001ebfc                apicTimerHandler(regs*, void*)
                0x00000000c001ec2e                APICTimer::write(int)
                0x00000000c001ed2c                APICTimer::open(int, int, void*)
                0x00000000c001ee32                APICTimer::APICTimer()
                0x00000000c001ee32                APICTimer::APICTimer()
 .text          0x00000000c001ee5a      0x1b6 hw/timer/pit.32
                0x00000000c001ee5a                PIT::write(int)
                0x00000000c001eee0                pitHandler(regs*, void*)
                0x00000000c001ef10                PIT::open(int, int, void*)
                0x00000000c001ef5e                PIT::close(int, int, void*)
                0x00000000c001ef8e                PIT::PIT()
                0x00000000c001ef8e                PIT::PIT()
 .text          0x00000000c001f010        0xa hw/fpu/x86/avx.32
                0x00000000c001f010                avxDetect
                0x00000000c001f016                avxSave
                0x00000000c001f017                avxLoad
                0x00000000c001f018                avxInit
                0x00000000c001f019                avxClose
 *fill*         0x00000000c001f01a        0x6 
 .text          0x00000000c001f020       0x38 hw/fpu/x86/sse.32
                0x00000000c001f020                sseDetect
                0x00000000c001f03b                sseSave
                0x00000000c001f041                sseLoad
                0x00000000c001f047                sseInit
                0x00000000c001f057                sseClose
 *fill*         0x00000000c001f058        0x8 
 .text          0x00000000c001f060       0x47 hw/fpu/x86/x87.32
                0x00000000c001f066                x87Detect
                0x00000000c001f081                x87Save
                0x00000000c001f087                x87Load
                0x00000000c001f08c                x87Init
                0x00000000c001f0a6                x87Close
 *fill*         0x00000000c001f0a7        0x1 
 .text          0x00000000c001f0a8       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001f0cd        0x0 crtn.32
 *fill*         0x00000000c001f0cd        0x3 
 .text          0x00000000c001f0d0      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001f0d0                __divdi3
 *fill*         0x00000000c001f21b        0x1 
 .text          0x00000000c001f21c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001f21c                __moddi3
 *fill*         0x00000000c001f39a        0x2 
 .text          0x00000000c001f39c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001f39c                __udivdi3
 *fill*         0x00000000c001f49b        0x1 
 .text          0x00000000c001f49c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001f49c                __umoddi3
 *fill*         0x00000000c001f5b6        0xa 
 .text          0x00000000c001f5c0       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001f5c0                fabs
 *fill*         0x00000000c001f5de        0x2 
 .text          0x00000000c001f5e0        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001f5e0                lrint
 .text          0x00000000c001f5ec        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001f5ec                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001f5f8        0x0
 .iplt          0x00000000c001f5f8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001f5f8        0xf
 .init          0x00000000c001f5f8        0x3 crti.32
                0x00000000c001f5f8                _init
 .init          0x00000000c001f5fb        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001f600        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001f605        0x2 crtn.32

.fini           0x00000000c001f607        0xa
 .fini          0x00000000c001f607        0x3 crti.32
                0x00000000c001f607                _fini
 .fini          0x00000000c001f60a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001f60f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001f612       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001f612       0x23 core/computer.32
                0x00000000c001f612                Computer::~Computer()
                0x00000000c001f612                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001f636       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001f636       0x2a core/computer.32
                0x00000000c001f636                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001f660       0x15
 .text._Z10idleCommonv
                0x00000000c001f660       0x15 core/idle.32
                0x00000000c001f660                idleCommon()

.text._ZN3CPU7readCR3Ev
                0x00000000c001f675       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001f675       0x12 core/kheap.32
                0x00000000c001f675                CPU::readCR3()

.text._ZN3CPU8writeCR3Em
                0x00000000c001f687        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001f687        0x9 core/kheap.32
                0x00000000c001f687                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f690        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001f690        0x2 core/unixfile.32
                0x00000000c001f690                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001f690                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f692       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001f692       0x58 core/unixfile.32
                0x00000000c001f692                LinkedList<UnixFile>::LinkedList()
                0x00000000c001f692                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f6ea       0xd3
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001f6ea       0xd3 core/unixfile.32
                0x00000000c001f6ea                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f7be        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001f7be        0x7 core/unixfile.32
                0x00000000c001f7be                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f7c6       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001f7c6       0xa1 core/unixfile.32
                0x00000000c001f7c6                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f868        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001f868        0x8 core/unixfile.32
                0x00000000c001f868                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f870       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001f870       0x1a hal/device.32
                0x00000000c001f870                DriverlessDevice::~DriverlessDevice()
                0x00000000c001f870                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f88a       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001f88a       0x2a hal/device.32
                0x00000000c001f88a                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f8b4       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001f8b4       0xdc hal/device.32
                0x00000000c001f8b4                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f990       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001f990       0x58 hal/device.32
                0x00000000c001f990                LinkedList<Device>::LinkedList()
                0x00000000c001f990                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readCR0Ev
                0x00000000c001f9e8       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001f9e8       0x12 hal/fpu.32
                0x00000000c001f9e8                CPU::readCR0()

.text._ZN3CPU8writeCR0Em
                0x00000000c001f9fa        0x9
 .text._ZN3CPU8writeCR0Em
                0x00000000c001f9fa        0x9 hal/fpu.32
                0x00000000c001f9fa                CPU::writeCR0(unsigned long)

.text._ZN3CPU7readDR0Ev
                0x00000000c001fa03       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001fa03       0x12 hal/intctrl.32
                0x00000000c001fa03                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001fa15       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001fa15       0x12 hal/intctrl.32
                0x00000000c001fa15                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001fa27       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001fa27       0x12 hal/intctrl.32
                0x00000000c001fa27                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001fa39       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001fa39       0x12 hal/intctrl.32
                0x00000000c001fa39                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001fa4b       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001fa4b       0x12 hal/intctrl.32
                0x00000000c001fa4b                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001fa5d       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001fa5d       0x12 hal/intctrl.32
                0x00000000c001fa5d                CPU::readDR7()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fa70        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001fa70        0x7 hal/timer.32
                0x00000000c001fa70                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fa78       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001fa78       0x1c hal/timer.32
                0x00000000c001fa78                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fa94       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001fa94       0xae hal/timer.32
                0x00000000c001fa94                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fb42       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001fb42       0xd3 hal/timer.32
                0x00000000c001fb42                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN4ACPID2Ev
                0x00000000c001fc16       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001fc16       0x23 hw/acpi.32
                0x00000000c001fc16                ACPI::~ACPI()
                0x00000000c001fc16                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001fc3a       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001fc3a       0x2a hw/acpi.32
                0x00000000c001fc3a                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001fc64       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001fc64       0x23 hw/cpu.32
                0x00000000c001fc64                CPU::~CPU()
                0x00000000c001fc64                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001fc88       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001fc88       0x2a hw/cpu.32
                0x00000000c001fc88                CPU::~CPU()

.text._ZN3CPU7readCR4Ev
                0x00000000c001fcb2       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001fcb2       0x12 hw/cpu.32
                0x00000000c001fcb2                CPU::readCR4()

.text._ZN3CPU8writeDR7Em
                0x00000000c001fcc4        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001fcc4        0x9 hw/cpu.32
                0x00000000c001fcc4                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001fccd        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001fccd        0x9 hw/cpu.32
                0x00000000c001fccd                CPU::writeCR4(unsigned long)

.text._ZN3CPU7readCR2Ev
                0x00000000c001fcd6       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001fcd6       0x12 krnl/panic.32
                0x00000000c001fcd6                CPU::readCR2()

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fce8        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001fce8        0x2 thr/prcssthr.32
                0x00000000c001fce8                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001fce8                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fcea       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001fcea       0x3e thr/prcssthr.32
                0x00000000c001fcea                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001fcea                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd28       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001fd28       0x58 thr/prcssthr.32
                0x00000000c001fd28                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001fd28                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fd80        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001fd80        0x8 thr/prcssthr.32
                0x00000000c001fd80                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN3PCID2Ev
                0x00000000c001fd88       0x23
 .text._ZN3PCID2Ev
                0x00000000c001fd88       0x23 hw/bus/pci.32
                0x00000000c001fd88                PCI::~PCI()
                0x00000000c001fd88                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001fdac       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001fdac       0x2a hw/bus/pci.32
                0x00000000c001fdac                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001fdd6       0x23
 .text._ZN3IDED2Ev
                0x00000000c001fdd6       0x23 hw/diskctrl/ide.32
                0x00000000c001fdd6                IDE::~IDE()
                0x00000000c001fdd6                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001fdfa       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001fdfa       0x2a hw/diskctrl/ide.32
                0x00000000c001fdfa                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001fe24       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001fe24       0x23 hw/diskphys/ata.32
                0x00000000c001fe24                ATA::~ATA()
                0x00000000c001fe24                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001fe48       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001fe48       0x2a hw/diskphys/ata.32
                0x00000000c001fe48                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001fe72       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001fe72       0x23 hw/diskphys/atapi.32
                0x00000000c001fe72                ATAPI::~ATAPI()
                0x00000000c001fe72                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001fe96       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001fe96       0x2a hw/diskphys/atapi.32
                0x00000000c001fe96                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001fec0       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001fec0       0x23 hw/fpu/avx.32
                0x00000000c001fec0                AVX::~AVX()
                0x00000000c001fec0                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001fee4       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001fee4       0x2a hw/fpu/avx.32
                0x00000000c001fee4                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001ff0e       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001ff0e       0x23 hw/fpu/mmx.32
                0x00000000c001ff0e                MMX::~MMX()
                0x00000000c001ff0e                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001ff32       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001ff32       0x2a hw/fpu/mmx.32
                0x00000000c001ff32                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001ff5c       0x23
 .text._ZN3SSED2Ev
                0x00000000c001ff5c       0x23 hw/fpu/sse.32
                0x00000000c001ff5c                SSE::~SSE()
                0x00000000c001ff5c                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001ff80       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001ff80       0x2a hw/fpu/sse.32
                0x00000000c001ff80                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001ffaa       0x23
 .text._ZN3x87D2Ev
                0x00000000c001ffaa       0x23 hw/fpu/x87.32
                0x00000000c001ffaa                x87::~x87()
                0x00000000c001ffaa                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001ffce       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001ffce       0x2a hw/fpu/x87.32
                0x00000000c001ffce                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001fff8       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001fff8       0x23 hw/intctrl/apic.32
                0x00000000c001fff8                IOAPIC::~IOAPIC()
                0x00000000c001fff8                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c002001c       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c002001c       0x2a hw/intctrl/apic.32
                0x00000000c002001c                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c0020046       0x23
 .text._ZN4APICD2Ev
                0x00000000c0020046       0x23 hw/intctrl/apic.32
                0x00000000c0020046                APIC::~APIC()
                0x00000000c0020046                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c002006a       0x2a
 .text._ZN4APICD0Ev
                0x00000000c002006a       0x2a hw/intctrl/apic.32
                0x00000000c002006a                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c0020094       0x23
 .text._ZN3PICD2Ev
                0x00000000c0020094       0x23 hw/intctrl/pic.32
                0x00000000c0020094                PIC::~PIC()
                0x00000000c0020094                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c00200b8       0x2a
 .text._ZN3PICD0Ev
                0x00000000c00200b8       0x2a hw/intctrl/pic.32
                0x00000000c00200b8                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c00200e2       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c00200e2       0x23 hw/timer/apictimer.32
                0x00000000c00200e2                APICTimer::~APICTimer()
                0x00000000c00200e2                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c0020106       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c0020106       0x2a hw/timer/apictimer.32
                0x00000000c0020106                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c0020130       0x23
 .text._ZN3PITD2Ev
                0x00000000c0020130       0x23 hw/timer/pit.32
                0x00000000c0020130                PIT::~PIT()
                0x00000000c0020130                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c0020154       0x2a
 .text._ZN3PITD0Ev
                0x00000000c0020154       0x2a hw/timer/pit.32
                0x00000000c0020154                PIT::~PIT()

.rodata         0x00000000c002017e     0x38ae
                0x00000000c002017e                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 *fill*         0x00000000c002017e        0x2 
 .ctors         0x00000000c0020180        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c0020184        0x4 core/unixfile.32
 .ctors         0x00000000c0020188        0x4 thr/prcssthr.32
 .ctors         0x00000000c002018c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020190                end_ctors = .
                0x00000000c0020190                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c0020190        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c0020194        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c0020194                __DTOR_END__
                0x00000000c0020198                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c0020198        0x8 
 .rodata        0x00000000c00201a0      0x101 acpica/utclib.32
                0x00000000c00201a0                AcpiGbl_Ctypes
 *fill*         0x00000000c00202a1        0x3 
 .rodata        0x00000000c00202a4       0x18 core/malloc.32
 *fill*         0x00000000c00202bc        0x4 
 .rodata        0x00000000c00202c0      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c00203e0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c0020436        0xa 
 .rodata        0x00000000c0020440      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c0020840       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c00208f6        0x2 
 .rodata.str1.4
                0x00000000c00208f8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c0020c9d        0x3 
 .rodata        0x00000000c0020ca0       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c0020d00       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c0020d20       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c0020d34       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020d76        0x2 
 .rodata.cst8   0x00000000c0020d78        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020d80       0x6c hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c0020dec       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020eb0       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c0020efa        0x6 
 .rodata.cst8   0x00000000c0020f00        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0020f08        0xc hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0020f14       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c0020f5c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c0020f5c      0x1bf core/computer.32
                                        0x1c8 (size before relaxing)
 *fill*         0x00000000c002111b        0x1 
 .rodata._ZTV8Computer
                0x00000000c002111c       0x2c core/computer.32
                0x00000000c002111c                vtable for Computer
 .rodata.str1.1
                0x00000000c0021148       0x1c core/gdt.32
 .rodata.str1.4
                0x00000000c0021164       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0021194        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c00211a0       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c00211bb       0x5f core/physmgr.32
 *fill*         0x00000000c002121a        0x2 
 .rodata.str1.4
                0x00000000c002121c       0x4d core/physmgr.32
 .rodata.str1.1
                0x00000000c0021269       0x39 core/pipe.32
 *fill*         0x00000000c00212a2        0x2 
 .rodata._ZTV4Pipe
                0x00000000c00212a4       0x1c core/pipe.32
                0x00000000c00212a4                vtable for Pipe
 .rodata.str1.1
                0x00000000c00212c0       0x9d core/terminal.32
 *fill*         0x00000000c002135d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0021360       0x1c core/terminal.32
                0x00000000c0021360                vtable for VgaText
 .rodata        0x00000000c002137c       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c002139a       0x83 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c002141d       0x19 core/unixfile.32
 *fill*         0x00000000c0021436        0x2 
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c0021438       0x22 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c002145a       0x15 core/unixfile.32
 *fill*         0x00000000c002146f        0x1 
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c0021470       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00214bb        0x8 core/unixfile.32
 *fill*         0x00000000c00214c3        0x1 
 .rodata.str1.4
                0x00000000c00214c4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c00214e4       0x1c core/unixfile.32
                0x00000000c00214e4                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0021500       0x1c core/unixfile.32
                0x00000000c0021500                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c002151c      0x187 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00216a3      0x103 core/virtmgr.32
 .rodata.str1.1
                0x00000000c00217a6       0x33 coreobjs/c++.32
 *fill*         0x00000000c00217d9        0x3 
 .rodata.str1.4
                0x00000000c00217dc       0x3f dbg/kconsole.32
 *fill*         0x00000000c002181b        0x1 
 .rodata        0x00000000c002181c      0x150 dbg/kconsole.32
 .rodata.str1.1
                0x00000000c002196c       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 .rodata._ZTV10Filesystem
                0x00000000c002196c       0x64 fs/vfs.32
                0x00000000c002196c                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c00219d0       0x1c fs/vfs.32
                0x00000000c00219d0                vtable for File
 .rodata._ZTV9Directory
                0x00000000c00219ec       0x1c fs/vfs.32
                0x00000000c00219ec                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c0021a08       0x2c hal/bus.32
                0x00000000c0021a08                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0021a34       0x30 hal/buzzer.32
                0x00000000c0021a34                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0021a64       0x3c hal/clock.32
                0x00000000c0021a64                vtable for Clock
 .rodata        0x00000000c0021aa0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0021ad0       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0021aee       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0021aee       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0021aee       0x19 hal/device.32
 *fill*         0x00000000c0021aee        0x2 
 .rodata._ZTV6Device
                0x00000000c0021af0       0x2c hal/device.32
                0x00000000c0021af0                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0021b1c       0x2c hal/device.32
                0x00000000c0021b1c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0021b48       0x2c hal/diskctrl.32
                0x00000000c0021b48                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0021b74       0x34 hal/diskphys.32
                0x00000000c0021b74                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0021ba8        0x9 hal/fpu.32
 *fill*         0x00000000c0021bb1        0x3 
 .rodata._ZTV3FPU
                0x00000000c0021bb4       0x38 hal/fpu.32
                0x00000000c0021bb4                vtable for FPU
 .rodata        0x00000000c0021bec      0x2e0 hal/intctrl.32
 .rodata._ZTV19InterruptController
                0x00000000c0021ecc       0x48 hal/intctrl.32
                0x00000000c0021ecc                vtable for InterruptController
 .rodata        0x00000000c0021f14       0x4e hal/keybrd.32
 *fill*         0x00000000c0021f62        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0021f64       0x34 hal/keybrd.32
                0x00000000c0021f64                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0021f98       0x7a hal/logidisk.32
 *fill*         0x00000000c0022012        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0022014       0x2c hal/logidisk.32
                0x00000000c0022014                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0022040       0x2c hal/mouse.32
                0x00000000c0022040                vtable for Mouse
 .rodata.str1.1
                0x00000000c002206c        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0022077       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0022077        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0022077       0x22 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0022077       0x15 hal/timer.32
 *fill*         0x00000000c0022077        0x1 
 .rodata._ZTV5Timer
                0x00000000c0022078       0x30 hal/timer.32
                0x00000000c0022078                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c00220a8       0x10 hal/vcache.32
                0x00000000c00220a8                vtable for VCache
 .rodata.str1.1
                0x00000000c00220b8        0xf hal/video.32
 *fill*         0x00000000c00220c7        0x1 
 .rodata._ZTV5Video
                0x00000000c00220c8       0x40 hal/video.32
                0x00000000c00220c8                vtable for Video
 .rodata.str1.1
                0x00000000c0022108       0xd1 hw/acpi.32
 *fill*         0x00000000c00221d9        0x3 
 .rodata.str1.4
                0x00000000c00221dc       0xe5 hw/acpi.32
 *fill*         0x00000000c00222c1        0x3 
 .rodata._ZTV4ACPI
                0x00000000c00222c4       0x2c hw/acpi.32
                0x00000000c00222c4                vtable for ACPI
 .rodata.str1.1
                0x00000000c00222f0      0x3c1 hw/cpu.32
                                        0x3ce (size before relaxing)
 *fill*         0x00000000c00226b1        0x3 
 .rodata._ZTV3CPU
                0x00000000c00226b4       0x2c hw/cpu.32
                0x00000000c00226b4                vtable for CPU
 .rodata.str1.1
                0x00000000c00226e0       0xbe krnl/panic.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c002279e        0x2 
 .rodata.str1.4
                0x00000000c00227a0      0x112 krnl/panic.32
 .rodata.str1.1
                0x00000000c00228b2       0x45 reg/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c00228f7       0x3e sys/sc_write.32
 *fill*         0x00000000c0022935        0x3 
 .rodata.str1.4
                0x00000000c0022938       0xbc sys/syscalls.32
 .rodata.str1.1
                0x00000000c00229f4       0xc2 sys/syscalls.32
                                         0xca (size before relaxing)
 .rodata.str1.1
                0x00000000c0022ab6      0x20c thr/elf.32
                                        0x20e (size before relaxing)
 .rodata.str1.1
                0x00000000c0022cc2       0xfb thr/prcssthr.32
 *fill*         0x00000000c0022dbd        0x3 
 .rodata.str1.4
                0x00000000c0022dc0      0x2a7 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0023067       0x19 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0023067       0x22 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0023067       0x15 thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0023067       0x4b thr/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0023067        0x8 thr/prcssthr.32
 .rodata.str1.1
                0x00000000c0023067       0x5f vm86/vm8086.32
 *fill*         0x00000000c00230c6        0x2 
 .rodata        0x00000000c00230c8       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c00230f8       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c002314b        0x1 
 .rodata.str1.4
                0x00000000c002314c       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c0023174       0x64 fs/fat/vfslink.32
                0x00000000c0023174                vtable for FAT
 .rodata.str1.1
                0x00000000c00231d8       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c0023221        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c0023224       0x64 fs/iso9660/vfslink.32
                0x00000000c0023224                vtable for ISO9660
 .rodata.str1.1
                0x00000000c0023288       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c00232a2        0x2 
 .rodata.cst4   0x00000000c00232a4        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c00232a8       0x38 hal/sound/sndhw.32
                0x00000000c00232a8                vtable for SoundDevice
 .rodata.cst4   0x00000000c00232e0       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c00232f0       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c0023394       0x2c hw/bus/pci.32
                0x00000000c0023394                vtable for PCI
 .rodata.str1.1
                0x00000000c00233c0      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c00235f6        0x2 
 .rodata._ZTV3IDE
                0x00000000c00235f8       0x2c hw/diskctrl/ide.32
                0x00000000c00235f8                vtable for IDE
 .rodata.str1.1
                0x00000000c0023624       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c0023645        0x3 
 .rodata._ZTV3ATA
                0x00000000c0023648       0x34 hw/diskphys/ata.32
                0x00000000c0023648                vtable for ATA
 .rodata.str1.1
                0x00000000c002367c       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c00236b4       0x34 hw/diskphys/atapi.32
                0x00000000c00236b4                vtable for ATAPI
 .rodata.str1.1
                0x00000000c00236e8        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c00236f0       0x38 hw/fpu/avx.32
                0x00000000c00236f0                vtable for AVX
 .rodata.str1.1
                0x00000000c0023728        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c0023730       0x38 hw/fpu/mmx.32
                0x00000000c0023730                vtable for MMX
 .rodata.str1.1
                0x00000000c0023768        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c0023770       0x38 hw/fpu/sse.32
                0x00000000c0023770                vtable for SSE
 .rodata.str1.1
                0x00000000c00237a8        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c00237b0       0x38 hw/fpu/x87.32
                0x00000000c00237b0                vtable for x87
 .rodata        0x00000000c00237e8       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c00238c0       0x48 hw/intctrl/apic.32
                0x00000000c00238c0                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c0023908       0x2c hw/intctrl/apic.32
                0x00000000c0023908                vtable for IOAPIC
 .rodata        0x00000000c0023934       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c0023956        0x2 
 .rodata._ZTV3PIC
                0x00000000c0023958       0x48 hw/intctrl/pic.32
                0x00000000c0023958                vtable for PIC
 .rodata.str1.1
                0x00000000c00239a0        0xb hw/timer/apictimer.32
 *fill*         0x00000000c00239ab        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c00239ac       0x30 hw/timer/apictimer.32
                0x00000000c00239ac                vtable for APICTimer
 .rodata.str1.1
                0x00000000c00239dc       0x1d hw/timer/pit.32
 *fill*         0x00000000c00239f9        0x3 
 .rodata._ZTV3PIT
                0x00000000c00239fc       0x30 hw/timer/pit.32
                0x00000000c00239fc                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c0023a2c      0x5fd
 *(.data)
 .data          0x00000000c0023a2c        0x0 crti.32
 .data          0x00000000c0023a2c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c0023a2c                __dso_handle
 .data          0x00000000c0023a30        0x0 acpica/utclib.32
 .data          0x00000000c0023a30        0x0 core/malloc.32
 .data          0x00000000c0023a30        0x0 libk/string.32
 .data          0x00000000c0023a30        0x0 fs/fat/diskio.32
 .data          0x00000000c0023a30        0x0 fs/fat/ff.32
 .data          0x00000000c0023a30        0x0 fs/fat/ffsystem.32
 .data          0x00000000c0023a30        0x0 fs/fat/ffunicode.32
 .data          0x00000000c0023a30        0x0 hal/libresample/samplerate.32
 .data          0x00000000c0023a30        0x0 hal/libresample/src_linear.32
 .data          0x00000000c0023a30        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c0023a30        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c0023a30        0x0 core/computer.32
 .data          0x00000000c0023a30        0x0 core/gdt.32
 .data          0x00000000c0023a30        0x0 core/idle.32
 .data          0x00000000c0023a30        0x0 core/idt.32
 .data          0x00000000c0023a30        0x4 core/kheap.32
 .data          0x00000000c0023a34        0x0 core/main.32
 .data          0x00000000c0023a34        0x4 core/physmgr.32
                0x00000000c0023a34                Phys::bitmap
 .data          0x00000000c0023a38        0x0 core/pipe.32
 *fill*         0x00000000c0023a38        0x8 
 .data          0x00000000c0023a40       0x60 core/terminal.32
                0x00000000c0023a40                VgaText::hiddenOut
                0x00000000c0023a60                ansiToVGAMappings
 .data          0x00000000c0023aa0        0x0 core/tss.32
 .data          0x00000000c0023aa0        0x4 core/unixfile.32
                0x00000000c0023aa0                UnixFile::nextFd
 .data          0x00000000c0023aa4        0x8 core/virtmgr.32
                0x00000000c0023aa4                Virt::pageAllocPtr
                0x00000000c0023aa8                Virt::bitmap
 .data          0x00000000c0023aac        0x4 coreobjs/c++.32
                0x00000000c0023aac                __stack_chk_guard
 .data          0x00000000c0023ab0        0x0 dbg/kconsole.32
 .data          0x00000000c0023ab0        0x0 fs/vfs.32
 .data          0x00000000c0023ab0        0x0 hal/bus.32
 .data          0x00000000c0023ab0        0x0 hal/buzzer.32
 .data          0x00000000c0023ab0        0x0 hal/clock.32
 .data          0x00000000c0023ab0        0x0 hal/device.32
 .data          0x00000000c0023ab0        0x0 hal/diskctrl.32
 .data          0x00000000c0023ab0        0x0 hal/diskphys.32
 .data          0x00000000c0023ab0        0x0 hal/fpu.32
 *fill*         0x00000000c0023ab0       0x10 
 .data          0x00000000c0023ac0      0x2a0 hal/intctrl.32
                0x00000000c0023ac0                exceptionNames
 .data          0x00000000c0023d60        0x0 hal/keybrd.32
 .data          0x00000000c0023d60        0x0 hal/logidisk.32
 .data          0x00000000c0023d60        0x0 hal/mouse.32
 .data          0x00000000c0023d60        0x0 hal/partition.32
 .data          0x00000000c0023d60        0x0 hal/timer.32
 .data          0x00000000c0023d60        0x0 hal/vcache.32
 .data          0x00000000c0023d60        0x0 hal/video.32
 .data          0x00000000c0023d60       0x10 hw/acpi.32
                0x00000000c0023d60                legacyIRQRemaps
 *fill*         0x00000000c0023d70       0x10 
 .data          0x00000000c0023d80      0x2a4 hw/cpu.32
                0x00000000c0023d80                cpuNameList
                0x00000000c0024020                lastCode
 .data          0x00000000c0024024        0x0 hw/ports.32
 .data          0x00000000c0024024        0x0 krnl/panic.32
 .data          0x00000000c0024024        0x0 reg/registry.32
 .data          0x00000000c0024024        0x0 sys/sc_exit.32
 .data          0x00000000c0024024        0x0 sys/sc_loaddll.32
 .data          0x00000000c0024024        0x0 sys/sc_read.32
 .data          0x00000000c0024024        0x0 sys/sc_sbrk.32
 .data          0x00000000c0024024        0x0 sys/sc_write.32
 .data          0x00000000c0024024        0x0 sys/sc_yield.32
 .data          0x00000000c0024024        0x0 sys/syscalls.32
 .data          0x00000000c0024024        0x0 thr/elf.32
 .data          0x00000000c0024024        0x4 thr/prcssthr.32
                0x00000000c0024024                nextPID
 .data          0x00000000c0024028        0x0 vm86/vm8086.32
 .data          0x00000000c0024028        0x0 fs/fat/vfslink.32
 .data          0x00000000c0024028        0x1 fs/iso9660/vfslink.32
                0x00000000c0024028                recentDriveletter
 .data          0x00000000c0024029        0x0 hal/sound/sndchannel.32
 .data          0x00000000c0024029        0x0 hal/sound/sndhw.32
 .data          0x00000000c0024029        0x0 hw/bus/isa.32
 .data          0x00000000c0024029        0x0 hw/bus/pci.32
 .data          0x00000000c0024029        0x0 hw/diskctrl/ide.32
 .data          0x00000000c0024029        0x0 hw/diskphys/ata.32
 .data          0x00000000c0024029        0x0 hw/diskphys/atapi.32
 .data          0x00000000c0024029        0x0 hw/fpu/avx.32
 .data          0x00000000c0024029        0x0 hw/fpu/mmx.32
 .data          0x00000000c0024029        0x0 hw/fpu/sse.32
 .data          0x00000000c0024029        0x0 hw/fpu/x87.32
 .data          0x00000000c0024029        0x0 hw/intctrl/apic.32
 .data          0x00000000c0024029        0x0 hw/intctrl/pic.32
 .data          0x00000000c0024029        0x0 hw/timer/apictimer.32
 .data          0x00000000c0024029        0x0 hw/timer/pit.32
 .data          0x00000000c0024029        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c0024029        0x0 crtn.32
 .data          0x00000000c0024029        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c0024029        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c0024029        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c0024029        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c0024029        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c0024029        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c0024029        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c002402c        0x0
 .got           0x00000000c002402c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c002402c        0x0
 .got.plt       0x00000000c002402c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c002402c        0x0
 .igot.plt      0x00000000c002402c        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c002402c        0x0
 .tm_clone_table
                0x00000000c002402c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c002402c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c0024029      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c0024029        0x3 
 .eh_frame      0x00000000c002402c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c002402c        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c002402c       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c0024084       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c00240c4       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c0024130       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c00241b4       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c00241cc        0x0
 .rel.got       0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c00241cc        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c00241cc     0x223c
                0x00000000c00241cc                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c00241cc        0x0 crti.32
 .bss           0x00000000c00241cc       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c00241ec        0x4 acpica/utclib.32
 *fill*         0x00000000c00241f0       0x10 
 .bss           0x00000000c0024200      0x378 core/malloc.32
 .bss           0x00000000c0024578        0x0 libk/string.32
 .bss           0x00000000c0024578        0x0 fs/fat/diskio.32
 *fill*         0x00000000c0024578        0x8 
 .bss           0x00000000c0024580       0x88 fs/fat/ff.32
 .bss           0x00000000c0024608        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c0024608        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c0024608        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c0024608        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c0024608        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c0024608        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c0024608        0x6 core/computer.32
                0x00000000c0024608                computer
                0x00000000c002460c                preemptionOn
                0x00000000c002460d                schedulingOn
 *fill*         0x00000000c002460e        0x2 
 .bss           0x00000000c0024610        0x6 core/gdt.32
                0x00000000c0024610                gdtDescr
 .bss           0x00000000c0024616        0x0 core/idle.32
 *fill*         0x00000000c0024616        0x2 
 .bss           0x00000000c0024618        0x6 core/idt.32
                0x00000000c0024618                idtDescr
 .bss           0x00000000c002461e        0x0 core/kheap.32
 *fill*         0x00000000c002461e        0x2 
 .bss           0x00000000c0024620        0x4 core/main.32
                0x00000000c0024620                sysBootSettings
 *fill*         0x00000000c0024624       0x1c 
 .bss           0x00000000c0024640       0x50 core/physmgr.32
                0x00000000c0024640                Phys::currentPagePointer
                0x00000000c0024644                Phys::highestMem
                0x00000000c0024648                Phys::oldPercent
                0x00000000c002464c                Phys::usedPages
                0x00000000c0024650                Phys::usablePages
                0x00000000c0024660                Phys::dmaUsage
 .bss           0x00000000c0024690        0x0 core/pipe.32
 *fill*         0x00000000c0024690       0x10 
 .bss           0x00000000c00246a0       0x29 core/terminal.32
                0x00000000c00246a0                textModeImplementation
                0x00000000c00246c0                terminalCycle
                0x00000000c00246c4                activeTerminal
                0x00000000c00246c8                VgaText::graphicMode
 *fill*         0x00000000c00246c9        0x1 
 .bss           0x00000000c00246ca        0x2 core/tss.32
                0x00000000c00246ca                doubleFaultSelector
 *fill*         0x00000000c00246cc       0x14 
 .bss           0x00000000c00246e0       0x84 core/unixfile.32
                0x00000000c00246e0                sfileLpt
                0x00000000c0024720                sfileCom
                0x00000000c0024744                sfileNul
                0x00000000c0024748                sfilePnt
                0x00000000c002474c                sfileAux
                0x00000000c0024750                sfileCon
                0x00000000c0024754                initialFilesAdded
                0x00000000c0024758                unixFileLinkedList
 .bss           0x00000000c0024764        0x4 core/virtmgr.32
                0x00000000c0024764                firstVAS
 .bss           0x00000000c0024768        0x0 coreobjs/c++.32
 .bss           0x00000000c0024768        0x0 dbg/kconsole.32
 .bss           0x00000000c0024768        0x4 fs/vfs.32
                0x00000000c0024768                installedFilesystems
 .bss           0x00000000c002476c        0x0 hal/bus.32
 .bss           0x00000000c002476c        0x4 hal/buzzer.32
                0x00000000c002476c                systemBuzzer
 .bss           0x00000000c0024770        0x8 hal/clock.32
                0x00000000c0024770                dstOn
                0x00000000c0024771                timezoneHalfHourOffset
                0x00000000c0024774                timezoneHourOffset
 .bss           0x00000000c0024778        0x0 hal/device.32
 .bss           0x00000000c0024778        0x0 hal/diskctrl.32
 .bss           0x00000000c0024778        0x0 hal/diskphys.32
 .bss           0x00000000c0024778        0x0 hal/fpu.32
 .bss           0x00000000c0024778       0x20 hal/intctrl.32
                0x00000000c0024778                pf5
                0x00000000c002477c                pf4
                0x00000000c0024780                pf3
                0x00000000c0024784                pf2
                0x00000000c0024788                pf1
                0x00000000c002478c                pf0
                0x00000000c0024790                gpFaultIntercept
                0x00000000c0024794                x87FaultIntercept
 *fill*         0x00000000c0024798        0x8 
 .bss           0x00000000c00247a0      0x429 hal/keybrd.32
                0x00000000c00247a0                keyboardWaitingTaskList
                0x00000000c00247a4                keyboardSetupYet
                0x00000000c00247c0                keystates
 *fill*         0x00000000c0024bc9       0x17 
 .bss           0x00000000c0024be0       0x88 hal/logidisk.32
                0x00000000c0024be0                diskAssignments
                0x00000000c0024c00                disks
 .bss           0x00000000c0024c68        0x4 hal/mouse.32
                0x00000000c0024c68                guiMouseHandler
 .bss           0x00000000c0024c6c        0x0 hal/partition.32
 *fill*         0x00000000c0024c6c        0x4 
 .bss           0x00000000c0024c70        0x8 hal/timer.32
                0x00000000c0024c70                nanoSinceBoot
 .bss           0x00000000c0024c78        0x0 hal/vcache.32
 .bss           0x00000000c0024c78        0x4 hal/video.32
                0x00000000c0024c78                screen
 *fill*         0x00000000c0024c7c        0x4 
 .bss           0x00000000c0024c80      0x3c0 hw/acpi.32
                0x00000000c0024c80                systemSleepFunction
                0x00000000c0024c84                systemResetFunction
                0x00000000c0024c88                systemShutdownFunction
                0x00000000c0024c8c                nextACPITable
                0x00000000c0024ca0                acpiTables
                0x00000000c0024ea0                usingXSDT
                0x00000000c0024ea4                MADTpointer
                0x00000000c0024ea8                RSDTpointer
                0x00000000c0024eac                RSDPpointer
                0x00000000c0024eb0                ioapicDiscoveryNumber
                0x00000000c0024ec0                ioapicFoundInMADT
                0x00000000c0024ee0                ioapicAddresses
                0x00000000c0024f60                ioapicGSIBase
                0x00000000c0024fe0                processorDiscoveryNumber
                0x00000000c0025000                matchingAPICID
                0x00000000c0025020                processorID
 .bss           0x00000000c0025040       0x10 hw/cpu.32
                0x00000000c0025040                lastD
                0x00000000c0025044                lastC
                0x00000000c0025048                lastB
                0x00000000c002504c                lastA
 .bss           0x00000000c0025050        0x0 hw/ports.32
 .bss           0x00000000c0025050        0x5 krnl/panic.32
                0x00000000c0025050                Krnl::guiPanicHandler
                0x00000000c0025054                Krnl::kernelInPanic
 .bss           0x00000000c0025055        0x0 reg/registry.32
 .bss           0x00000000c0025055        0x0 sys/sc_exit.32
 .bss           0x00000000c0025055        0x0 sys/sc_loaddll.32
 .bss           0x00000000c0025055        0x0 sys/sc_read.32
 .bss           0x00000000c0025055        0x0 sys/sc_sbrk.32
 .bss           0x00000000c0025055        0x0 sys/sc_write.32
 .bss           0x00000000c0025055        0x0 sys/sc_yield.32
 *fill*         0x00000000c0025055        0xb 
 .bss           0x00000000c0025060      0x200 sys/syscalls.32
                0x00000000c0025060                systemCallHandlers
 .bss           0x00000000c0025260      0x7a4 thr/elf.32
                0x00000000c0025260                Thr::driverLookupNext
                0x00000000c0025280                Thr::driverLookupLen
                0x00000000c0025480                Thr::driverLookupAddr
                0x00000000c0025680                Thr::driverNameLookup
                0x00000000c0025880                Thr::kernelSymbols
                0x00000000c0025900                Thr::kernelStringTable
                0x00000000c0025980                Thr::kernelSymbolTable
                0x00000000c0025a00                Thr::nextDLLSymbolIndex
 *fill*         0x00000000c0025a04        0x4 
 .bss           0x00000000c0025a08       0x68 thr/prcssthr.32
                0x00000000c0025a08                cleanerThread
                0x00000000c0025a0c                weNeedTheCleanerToNotBlock
                0x00000000c0025a10                xxxx
                0x00000000c0025a14                retValLockStuff
                0x00000000c0025a18                retValSchedLock
                0x00000000c0025a1c                lockStuffLock
                0x00000000c0025a20                schedulerLock
                0x00000000c0025a24                taskSwitchesPostponedFlag
                0x00000000c0025a28                postponeTaskSwitchesCounter
                0x00000000c0025a2c                irqDisableCounter
                0x00000000c0025a30                terminatedTaskList
                0x00000000c0025a3c                sleepingTaskList
                0x00000000c0025a48                taskList
                0x00000000c0025a54                kernelProcess
 .bss           0x00000000c0025a70        0x0 vm86/vm8086.32
 *fill*         0x00000000c0025a70       0x10 
 .bss           0x00000000c0025a80       0xf0 fs/fat/vfslink.32
                0x00000000c0025a80                FAT::fats
                0x00000000c0025aa0                FAT::vfsToFatRemaps
                0x00000000c0025b20                fatToVFSRemaps
 *fill*         0x00000000c0025b70       0x10 
 .bss           0x00000000c0025b80      0x820 fs/iso9660/vfslink.32
                0x00000000c0025b80                recentSector
                0x00000000c0025ba0                recentBuffer
 .bss           0x00000000c00263a0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c00263a0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c00263a0        0x0 hw/bus/isa.32
 .bss           0x00000000c00263a0        0x0 hw/bus/pci.32
 .bss           0x00000000c00263a0        0x0 hw/diskctrl/ide.32
 .bss           0x00000000c00263a0        0x8 hw/diskphys/ata.32
                0x00000000c00263a0                ataSectorsWritten
                0x00000000c00263a4                ataSectorsRead
 .bss           0x00000000c00263a8        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c00263a8        0x0 hw/fpu/avx.32
 .bss           0x00000000c00263a8        0x0 hw/fpu/mmx.32
 .bss           0x00000000c00263a8        0x0 hw/fpu/sse.32
 .bss           0x00000000c00263a8        0x0 hw/fpu/x87.32
 *fill*         0x00000000c00263a8       0x18 
 .bss           0x00000000c00263c0       0x41 hw/intctrl/apic.32
                0x00000000c00263c0                noOfIOAPICs
                0x00000000c00263e0                ioapics
                0x00000000c0026400                IOAPICsSetupYet
 .bss           0x00000000c0026401        0x0 hw/intctrl/pic.32
 .bss           0x00000000c0026401        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c0026401        0x3 
 .bss           0x00000000c0026404        0x4 hw/timer/pit.32
                0x00000000c0026404                pitFreq
 .bss           0x00000000c0026408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c0026408        0x0 crtn.32
 .bss           0x00000000c0026408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c0026408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c0026408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c0026408        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c0026408        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c0026408        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c0026408        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c0026408                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c0028644                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
