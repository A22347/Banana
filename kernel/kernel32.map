Archive member included to satisfy reference by file (symbol)

/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                              fs/fat/ff.32 (__divdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                              core/elf.32 (__moddi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                              fs/fat/ff.32 (__udivdi3)
/cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                              core/elf.32 (__umoddi3)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                              hal/libresample/samplerate.32 (fabs)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                              hal/libresample/samplerate.32 (lrint)
D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                              hal/sound/sndhw.32 (lrintf)

Discarded input sections

 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .comment       0x0000000000000000       0x12 acpica/utclib.32
 .comment       0x0000000000000000       0x12 core/malloc.32
 .comment       0x0000000000000000       0x12 libk/string.32
 .comment       0x0000000000000000       0x12 fs/fat/diskio.32
 .comment       0x0000000000000000       0x12 fs/fat/ff.32
 .comment       0x0000000000000000       0x12 fs/fat/ffsystem.32
 .comment       0x0000000000000000       0x12 fs/fat/ffunicode.32
 .comment       0x0000000000000000       0x12 hal/libresample/samplerate.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_linear.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_sinc.32
 .comment       0x0000000000000000       0x12 hal/libresample/src_zoh.32
 .group         0x0000000000000000       0x14 core/computer.32
 .group         0x0000000000000000        0xc core/computer.32
 .comment       0x0000000000000000       0x12 core/computer.32
 .comment       0x0000000000000000       0x12 core/elf.32
 .comment       0x0000000000000000       0x12 core/gdt.32
 .group         0x0000000000000000        0xc core/idle.32
 .comment       0x0000000000000000       0x12 core/idle.32
 .comment       0x0000000000000000       0x12 core/idt.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kconsole.32
 .comment       0x0000000000000000       0x12 core/kconsole.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .group         0x0000000000000000        0x8 core/kheap.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/kheap.32
 .comment       0x0000000000000000       0x12 core/main.32
 .comment       0x0000000000000000       0x12 core/physmgr.32
 .group         0x0000000000000000        0xc core/pipe.32
 .comment       0x0000000000000000       0x12 core/pipe.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0xc core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .group         0x0000000000000000        0x8 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/prcssthr.32
 .comment       0x0000000000000000       0x12 core/syscalls.32
 .group         0x0000000000000000        0xc core/terminal.32
 .comment       0x0000000000000000       0x12 core/terminal.32
 .group         0x0000000000000000        0x8 core/tss.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/tss.32
 .comment       0x0000000000000000       0x12 core/tss.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0x8 core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .group         0x0000000000000000        0xc core/unixfile.32
 .comment       0x0000000000000000       0x12 core/unixfile.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .group         0x0000000000000000        0x8 core/virtmgr.32
 .text._ZN3CPU7readCR3Ev
                0x0000000000000000       0x12 core/virtmgr.32
 .text._ZN3CPU8writeCR3Em
                0x0000000000000000        0x9 core/virtmgr.32
 .comment       0x0000000000000000       0x12 core/virtmgr.32
 .comment       0x0000000000000000       0x12 coreobjs/c++.32
 .comment       0x0000000000000000       0x12 debugger/debug.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .group         0x0000000000000000        0xc fs/vfs.32
 .comment       0x0000000000000000       0x12 fs/vfs.32
 .group         0x0000000000000000        0xc hal/bus.32
 .comment       0x0000000000000000       0x12 hal/bus.32
 .group         0x0000000000000000        0xc hal/buzzer.32
 .comment       0x0000000000000000       0x12 hal/buzzer.32
 .group         0x0000000000000000        0xc hal/clock.32
 .comment       0x0000000000000000       0x12 hal/clock.32
 .group         0x0000000000000000       0x14 hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .group         0x0000000000000000        0xc hal/device.32
 .comment       0x0000000000000000       0x12 hal/device.32
 .group         0x0000000000000000        0xc hal/diskctrl.32
 .comment       0x0000000000000000       0x12 hal/diskctrl.32
 .group         0x0000000000000000        0xc hal/diskphys.32
 .comment       0x0000000000000000       0x12 hal/diskphys.32
 .group         0x0000000000000000        0xc hal/fpu.32
 .comment       0x0000000000000000       0x12 hal/fpu.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0x8 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/intctrl.32
 .comment       0x0000000000000000       0x12 hal/intctrl.32
 .group         0x0000000000000000        0xc hal/keybrd.32
 .comment       0x0000000000000000       0x12 hal/keybrd.32
 .group         0x0000000000000000        0xc hal/logidisk.32
 .comment       0x0000000000000000       0x12 hal/logidisk.32
 .group         0x0000000000000000        0xc hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/mouse.32
 .comment       0x0000000000000000       0x12 hal/partition.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0x8 hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .group         0x0000000000000000        0xc hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x0000000000000000        0x7 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x0000000000000000       0x1c hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x0000000000000000       0xae hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x0000000000000000        0x8 hal/timer.32
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x0000000000000000      0x130 hal/timer.32
 .comment       0x0000000000000000       0x12 hal/timer.32
 .group         0x0000000000000000        0xc hal/vcache.32
 .comment       0x0000000000000000       0x12 hal/vcache.32
 .group         0x0000000000000000        0xc hal/video.32
 .comment       0x0000000000000000       0x12 hal/video.32
 .group         0x0000000000000000       0x14 hw/acpi.32
 .group         0x0000000000000000        0xc hw/acpi.32
 .comment       0x0000000000000000       0x12 hw/acpi.32
 .group         0x0000000000000000       0x14 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0x8 hw/cpu.32
 .group         0x0000000000000000        0xc hw/cpu.32
 .text._ZN3CPU7readCR0Ev
                0x0000000000000000       0x12 hw/cpu.32
 .text._ZN3CPU7readCR4Ev
                0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/cpu.32
 .comment       0x0000000000000000       0x12 hw/ports.32
 .comment       0x0000000000000000       0x12 registry/registry.32
 .comment       0x0000000000000000       0x12 syscalls/sc_exit.32
 .comment       0x0000000000000000       0x12 syscalls/sc_read.32
 .comment       0x0000000000000000       0x12 syscalls/sc_sbrk.32
 .comment       0x0000000000000000       0x12 syscalls/sc_write.32
 .comment       0x0000000000000000       0x12 syscalls/sc_yield.32
 .comment       0x0000000000000000       0x12 vm86/vm8086.32
 .group         0x0000000000000000        0xc fs/fat/vfslink.32
 .comment       0x0000000000000000       0x12 fs/fat/vfslink.32
 .group         0x0000000000000000        0xc fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 fs/iso9660/vfslink.32
 .comment       0x0000000000000000       0x12 hal/sound/sndchannel.32
 .group         0x0000000000000000        0xc hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hal/sound/sndhw.32
 .comment       0x0000000000000000       0x12 hw/bus/isa.32
 .group         0x0000000000000000       0x14 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/bus/pci.32
 .comment       0x0000000000000000       0x12 hw/bus/pci.32
 .group         0x0000000000000000        0xc hw/clock/rtc.32
 .comment       0x0000000000000000       0x12 hw/clock/rtc.32
 .group         0x0000000000000000       0x14 hw/diskctrl/ide.32
 .group         0x0000000000000000        0xc hw/diskctrl/ide.32
 .comment       0x0000000000000000       0x12 hw/diskctrl/ide.32
 .group         0x0000000000000000       0x14 hw/diskphys/ata.32
 .group         0x0000000000000000        0xc hw/diskphys/ata.32
 .comment       0x0000000000000000       0x12 hw/diskphys/ata.32
 .group         0x0000000000000000       0x14 hw/diskphys/atapi.32
 .group         0x0000000000000000        0xc hw/diskphys/atapi.32
 .comment       0x0000000000000000       0x12 hw/diskphys/atapi.32
 .group         0x0000000000000000       0x14 hw/fpu/avx.32
 .group         0x0000000000000000        0xc hw/fpu/avx.32
 .comment       0x0000000000000000       0x12 hw/fpu/avx.32
 .group         0x0000000000000000       0x14 hw/fpu/mmx.32
 .group         0x0000000000000000        0xc hw/fpu/mmx.32
 .comment       0x0000000000000000       0x12 hw/fpu/mmx.32
 .group         0x0000000000000000       0x14 hw/fpu/sse.32
 .group         0x0000000000000000        0xc hw/fpu/sse.32
 .comment       0x0000000000000000       0x12 hw/fpu/sse.32
 .group         0x0000000000000000       0x14 hw/fpu/x87.32
 .group         0x0000000000000000        0xc hw/fpu/x87.32
 .comment       0x0000000000000000       0x12 hw/fpu/x87.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .group         0x0000000000000000        0xc hw/intctrl/apic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/apic.32
 .group         0x0000000000000000       0x14 hw/intctrl/pic.32
 .group         0x0000000000000000        0xc hw/intctrl/pic.32
 .comment       0x0000000000000000       0x12 hw/intctrl/pic.32
 .group         0x0000000000000000       0x14 hw/timer/apictimer.32
 .group         0x0000000000000000        0xc hw/timer/apictimer.32
 .comment       0x0000000000000000       0x12 hw/timer/apictimer.32
 .group         0x0000000000000000       0x14 hw/timer/pit.32
 .group         0x0000000000000000        0xc hw/timer/pit.32
 .comment       0x0000000000000000       0x12 hw/timer/pit.32
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000000       0x12 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000000       0x12 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD D:/Users/Alex/Desktop/Banana/kernel/boot.32
LOAD crti.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
LOAD D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
LOAD acpica/utclib.32
LOAD core/malloc.32
LOAD libk/string.32
LOAD fs/fat/diskio.32
LOAD fs/fat/ff.32
LOAD fs/fat/ffsystem.32
LOAD fs/fat/ffunicode.32
LOAD hal/libresample/samplerate.32
LOAD hal/libresample/src_linear.32
LOAD hal/libresample/src_sinc.32
LOAD hal/libresample/src_zoh.32
LOAD core/computer.32
LOAD core/elf.32
LOAD core/gdt.32
LOAD core/idle.32
LOAD core/idt.32
LOAD core/kconsole.32
LOAD core/kheap.32
LOAD core/main.32
LOAD core/physmgr.32
LOAD core/pipe.32
LOAD core/prcssthr.32
LOAD core/syscalls.32
LOAD core/terminal.32
LOAD core/tss.32
LOAD core/unixfile.32
LOAD core/virtmgr.32
LOAD coreobjs/c++.32
LOAD debugger/debug.32
LOAD fs/vfs.32
LOAD hal/bus.32
LOAD hal/buzzer.32
LOAD hal/clock.32
LOAD hal/device.32
LOAD hal/diskctrl.32
LOAD hal/diskphys.32
LOAD hal/fpu.32
LOAD hal/intctrl.32
LOAD hal/keybrd.32
LOAD hal/logidisk.32
LOAD hal/mouse.32
LOAD hal/partition.32
LOAD hal/timer.32
LOAD hal/vcache.32
LOAD hal/video.32
LOAD hw/acpi.32
LOAD hw/cpu.32
LOAD hw/ports.32
LOAD registry/registry.32
LOAD syscalls/sc_exit.32
LOAD syscalls/sc_read.32
LOAD syscalls/sc_sbrk.32
LOAD syscalls/sc_write.32
LOAD syscalls/sc_yield.32
LOAD vm86/vm8086.32
LOAD fs/fat/vfslink.32
LOAD fs/iso9660/vfslink.32
LOAD hal/sound/sndchannel.32
LOAD hal/sound/sndhw.32
LOAD hw/bus/isa.32
LOAD hw/bus/pci.32
LOAD hw/clock/rtc.32
LOAD hw/diskctrl/ide.32
LOAD hw/diskphys/ata.32
LOAD hw/diskphys/atapi.32
LOAD hw/fpu/avx.32
LOAD hw/fpu/mmx.32
LOAD hw/fpu/sse.32
LOAD hw/fpu/x87.32
LOAD hw/intctrl/apic.32
LOAD hw/intctrl/pic.32
LOAD hw/timer/apictimer.32
LOAD hw/timer/pit.32
LOAD hw/fpu/x86/avx.32
LOAD hw/fpu/x86/sse.32
LOAD hw/fpu/x86/x87.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
LOAD crtn.32
LOAD /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a
LOAD D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a
                0x00000000c0000000                . = 0xc0000000

.text           0x00000000c0000000    0x1e968
 *(.text)
 .text          0x00000000c0000000       0x41 D:/Users/Alex/Desktop/Banana/kernel/boot.32
                0x00000000c0000020                callGlobalConstructors
 .text          0x00000000c0000041        0x0 crti.32
 *fill*         0x00000000c0000041        0x3 
 .text          0x00000000c0000044      0x101 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 *fill*         0x00000000c0000145        0xb 
 .text          0x00000000c0000150      0x44c D:/Users/Alex/Desktop/Banana/kernel/morenasm.32
                0x00000000c0000150                doTPAUSE
                0x00000000c000015a                hasLegacyFPU
                0x00000000c000017f                is486
                0x00000000c00001e2                goToVM86
                0x00000000c0000213                goToUsermode
                0x00000000c000023e                switchToThreadASMFirstTime
                0x00000000c000024c                switchToThreadASM
                0x00000000c00002ec                detectCPUID
                0x00000000c0000302                asmQuickAcquireLock
                0x00000000c0000320                asmQuickReleaseLock
                0x00000000c000032c                asmAcquireLock
                0x00000000c000034d                asmReleaseLock
                0x00000000c0000360                loadGDT
                0x00000000c0000380                isr0
                0x00000000c0000390                isr1
                0x00000000c000039a                isr2
                0x00000000c00003a4                isr3
                0x00000000c00003ae                isr4
                0x00000000c00003b8                isr5
                0x00000000c00003c2                isr6
                0x00000000c00003cc                isr7
                0x00000000c00003d6                isr8
                0x00000000c00003de                isr9
                0x00000000c00003e8                isr10
                0x00000000c00003f0                isr11
                0x00000000c00003f8                isr12
                0x00000000c0000400                isr13
                0x00000000c0000408                isr14
                0x00000000c0000410                isr15
                0x00000000c000041a                isr16
                0x00000000c0000424                isr17
                0x00000000c000042e                isr18
                0x00000000c0000438                isr96
                0x00000000c0000442                irq0
                0x00000000c000044c                irq1
                0x00000000c0000456                irq2
                0x00000000c0000460                irq3
                0x00000000c000046a                irq4
                0x00000000c0000474                irq5
                0x00000000c000047e                irq6
                0x00000000c0000488                irq7
                0x00000000c0000492                irq8
                0x00000000c000049c                irq9
                0x00000000c00004a6                irq10
                0x00000000c00004b0                irq11
                0x00000000c00004ba                irq12
                0x00000000c00004c4                irq13
                0x00000000c00004ce                irq14
                0x00000000c00004d8                irq15
                0x00000000c00004e2                irq16
                0x00000000c00004ec                irq17
                0x00000000c00004f6                irq18
                0x00000000c0000500                irq19
                0x00000000c000050a                irq20
                0x00000000c0000514                irq21
                0x00000000c000051e                irq22
                0x00000000c0000528                irq23
                0x00000000c0000532                int_common_stub
                0x00000000c0000562                syscall_common_stub
 .text          0x00000000c000059c      0x6ff acpica/utclib.32
                0x00000000c000059c                memcmp
                0x00000000c00005f4                memmove
                0x00000000c0000661                memcpy
                0x00000000c00006d8                memset
                0x00000000c0000701                strlen
                0x00000000c0000724                strpbrk
                0x00000000c0000766                strtok
                0x00000000c00007f4                strcpy
                0x00000000c0000826                strncpy
                0x00000000c000087a                strcmp
                0x00000000c00008bc                strchr
                0x00000000c00008e5                strncmp
                0x00000000c0000941                strcat
                0x00000000c0000982                strncat
                0x00000000c00009de                strstr
                0x00000000c0000a31                toupper
                0x00000000c0000a57                tolower
                0x00000000c0000a7d                simple_strtoul
 .text          0x00000000c0000c9b      0xfbf core/malloc.32
                0x00000000c0000e06                dlfree
                0x00000000c0001161                dlmalloc
                0x00000000c000169e                dlrealloc
                0x00000000c0001853                dlmemalign
                0x00000000c0001976                dlcalloc
                0x00000000c0001a10                dlcfree
                0x00000000c0001a15                dlindependent_calloc
                0x00000000c0001a3a                dlindependent_comalloc
                0x00000000c0001a51                dlvalloc
                0x00000000c0001a7c                dlpvalloc
                0x00000000c0001ab2                dlmalloc_trim
                0x00000000c0001abf                dlmalloc_usable_size
                0x00000000c0001af0                dlmallinfo
                0x00000000c0001bbf                dlmalloc_stats
                0x00000000c0001bd0                dlmallopt
 .text          0x00000000c0001c5a        0x0 libk/string.32
 .text          0x00000000c0001c5a       0x51 fs/fat/diskio.32
                0x00000000c0001c5a                disk_status
                0x00000000c0001c5d                disk_initialize
                0x00000000c0001c60                disk_read
                0x00000000c0001c76                disk_write
                0x00000000c0001c8c                disk_ioctl
 .text          0x00000000c0001cab     0x6833 fs/fat/ff.32
                0x00000000c0004f79                f_mount
                0x00000000c0004fdb                f_open
                0x00000000c0005417                f_read
                0x00000000c0005697                f_write
                0x00000000c0005951                f_sync
                0x00000000c0005b2d                f_close
                0x00000000c0005b5c                f_lseek
                0x00000000c0006013                f_opendir
                0x00000000c0006115                f_closedir
                0x00000000c0006137                f_readdir
                0x00000000c00061d2                f_stat
                0x00000000c0006261                f_getfree
                0x00000000c000642c                f_truncate
                0x00000000c0006524                f_unlink
                0x00000000c00066a7                f_mkdir
                0x00000000c00068d3                f_rename
                0x00000000c0006bc6                f_chmod
                0x00000000c0006ca4                f_utime
                0x00000000c0006d82                f_getlabel
                0x00000000c0006f70                f_setlabel
                0x00000000c00071dd                f_forward
                0x00000000c00073bb                f_mkfs
 .text          0x00000000c00084de       0x2d fs/fat/ffsystem.32
                0x00000000c00084de                ff_memalloc
                0x00000000c00084f4                ff_memfree
 .text          0x00000000c000850b      0x253 fs/fat/ffunicode.32
                0x00000000c000850b                ff_uni2oem
                0x00000000c000859b                ff_oem2uni
                0x00000000c0008607                ff_wtoupper
 .text          0x00000000c000875e      0x70e hal/libresample/samplerate.32
                0x00000000c00087e6                src_delete
                0x00000000c0008822                src_process
                0x00000000c000894a                src_callback_read
                0x00000000c0008aab                src_set_ratio
                0x00000000c0008b02                src_get_channels
                0x00000000c0008b24                src_reset
                0x00000000c0008b68                src_new
                0x00000000c0008bf6                src_callback_new
                0x00000000c0008c58                src_get_name
                0x00000000c0008c8f                src_get_description
                0x00000000c0008cc6                src_get_version
                0x00000000c0008ccc                src_is_valid_ratio
                0x00000000c0008ce6                src_error
                0x00000000c0008cf4                src_strerror
                0x00000000c0008d07                src_simple
                0x00000000c0008d5a                src_short_to_float_array
                0x00000000c0008d80                src_float_to_short_array
                0x00000000c0008de4                src_int_to_float_array
                0x00000000c0008e0a                src_float_to_int_array
 .text          0x00000000c0008e6c      0x3fd hal/libresample/src_linear.32
                0x00000000c00091c4                linear_get_name
                0x00000000c00091d3                linear_get_description
                0x00000000c00091e2                linear_set_converter
 .text          0x00000000c0009269     0x1b46 hal/libresample/src_sinc.32
                0x00000000c000abbf                sinc_get_name
                0x00000000c000abd2                sinc_get_description
                0x00000000c000abe5                sinc_set_converter
 .text          0x00000000c000adaf      0x3d3 hal/libresample/src_zoh.32
                0x00000000c000b0dd                zoh_get_name
                0x00000000c000b0ec                zoh_get_description
                0x00000000c000b0fb                zoh_set_converter
 .text          0x00000000c000b182      0x68d core/computer.32
                0x00000000c000b182                Computer::close(int, int, void*)
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b1c6                Computer::Computer()
                0x00000000c000b322                Computer::setBootMessage(char const*)
                0x00000000c000b324                Computer::start()
                0x00000000c000b3fe                firstTask()
                0x00000000c000b40c                Computer::detectFeatures()
                0x00000000c000b5e6                Computer::displayFeatures()
                0x00000000c000b5e8                Computer::rdmsr(unsigned int)
                0x00000000c000b614                Computer::wrmsr(unsigned int, unsigned long long)
                0x00000000c000b64c                Computer::nmiEnabled()
                0x00000000c000b658                Computer::readCMOS(unsigned char)
                0x00000000c000b672                Computer::enableNMI(bool)
                0x00000000c000b68a                Computer::open(int, int, void*)
                0x00000000c000b752                Computer::disableNMI()
                0x00000000c000b760                Computer::writeCMOS(unsigned char, unsigned char)
                0x00000000c000b77e                Computer::handleNMI()
                0x00000000c000b7e4                Computer::setDiskActivityLight(int, bool)
 .text          0x00000000c000b80f      0xf93 core/elf.32
                0x00000000c000b80f                allocateMemoryForTask(Process*, File*, unsigned long, unsigned long, unsigned long)
                0x00000000c000ba8c                loadProgramIntoMemory(Process*, char const*)
                0x00000000c000bca2                runtimeReferenceHelper()
                0x00000000c000bcb5                getAddressOfKernelSymbol(char const*)
                0x00000000c000bd04                loadKernelSymbolTable(char const*)
                0x00000000c000bfc5                loadDriverIntoMemory(char const*, unsigned long)
                0x00000000c000c6cb                loadDLL(char const*)
                0x00000000c000c794                executeDLL(unsigned long, void*)
 .text          0x00000000c000c7a2      0x1b7 core/gdt.32
                0x00000000c000c7a2                GDTEntry::setBase(unsigned int)
                0x00000000c000c7be                GDTEntry::setLimit(unsigned int)
                0x00000000c000c7dc                GDT::GDT()
                0x00000000c000c7dc                GDT::GDT()
                0x00000000c000c7f2                GDT::addEntry(GDTEntry)
                0x00000000c000c82e                GDT::getNumberOfEntries()
                0x00000000c000c836                GDT::flush()
                0x00000000c000c858                GDT::setup()
 .text          0x00000000c000c959       0x61 core/idle.32
                0x00000000c000c959                idleFunction(void*)
 .text          0x00000000c000c9ba      0x45f core/idt.32
                0x00000000c000c9ba                IDTEntry::IDTEntry(bool)
                0x00000000c000c9ba                IDTEntry::IDTEntry(bool)
                0x00000000c000ca28                IDTEntry::setOffset(unsigned int)
                0x00000000c000ca3c                IDT::IDT()
                0x00000000c000ca3c                IDT::IDT()
                0x00000000c000ca3e                IDT::getPointerToInvalidOpcodeEntryForF00F()
                0x00000000c000ca46                IDT::addEntry(IDTEntry, int)
                0x00000000c000ca60                IDT::addEntry(int, void (*)(), bool)
                0x00000000c000ca98                IDT::flush()
                0x00000000c000cab2                IDT::setup()
 .text          0x00000000c000ce19      0x519 core/kconsole.32
                0x00000000c000ce19                stringifyxWithBase(unsigned int, char*, int)
                0x00000000c000ce7a                logc(char)
                0x00000000c000ce91                logs(char*)
                0x00000000c000ceae                logWriteInt(unsigned int)
                0x00000000c000cecb                logWriteIntBase(unsigned int, int)
                0x00000000c000ceea                kprintf(char const*, ...)
                0x00000000c000d008                panic(char const*)
 .text          0x00000000c000d332      0x20d core/kheap.32
                0x00000000c000d332                sbrk
                0x00000000c000d44a                mmap
                0x00000000c000d460                munmap
                0x00000000c000d476                liballoc_lock()
                0x00000000c000d487                liballoc_unlock()
                0x00000000c000d498                liballoc_alloc(int)
                0x00000000c000d4b3                liballoc_free(void*, int)
                0x00000000c000d4d1                realloc
                0x00000000c000d4e5                malloc
                0x00000000c000d4f5                free
                0x00000000c000d505                rfree
                0x00000000c000d515                calloc
 .text          0x00000000c000d53f      0x38d core/main.32
                0x00000000c000d53f                hwTextMode_loadInData(VgaText*)
                0x00000000c000d584                hwTextMode_loadInTitle(VgaText*, char*)
                0x00000000c000d5c6                hwTextMode_showCursor(VgaText*, bool)
                0x00000000c000d61a                hwTextMode_update(VgaText*)
                0x00000000c000d61b                hwTextMode_updateCursor(VgaText*)
                0x00000000c000d663                hwTextMode_disableBlink(VgaText*, bool)
                0x00000000c000d69f                hwTextMode_scrollScreen(VgaText*)
                0x00000000c000d725                hwTextMode_writeCharacter(VgaText*, char, VgaColour, VgaColour, int, int)
                0x00000000c000d783                setupTextMode()
                0x00000000c000d7d4                kernel_main
 .text          0x00000000c000d8cc      0x46c core/physmgr.32
                0x00000000c000d8cc                Phys::allocateDMA(unsigned long)
                0x00000000c000d96f                Phys::freeDMA(unsigned long, unsigned long)
                0x00000000c000d9b7                Phys::setPageState(unsigned long, bool)
                0x00000000c000d9e9                Phys::getPageState(unsigned long)
                0x00000000c000da05                Phys::freePage(unsigned long)
                0x00000000c000da8f                Phys::allocatePage()
                0x00000000c000db4b                Phys::allowSegmentToBeUsed(unsigned long, unsigned long)
                0x00000000c000db83                Phys::physicalMemorySetup(unsigned int)
 .text          0x00000000c000dd38      0x273 core/pipe.32
                0x00000000c000dd38                Pipe::isAtty()
                0x00000000c000dd3c                Pipe::~Pipe()
                0x00000000c000dd3c                Pipe::~Pipe()
                0x00000000c000dd60                Pipe::~Pipe()
                0x00000000c000dd88                Pipe::read(unsigned long long, void*, int*)
                0x00000000c000de7c                Pipe::write(unsigned long long, void*, int*)
                0x00000000c000df44                Pipe::Pipe(int)
                0x00000000c000df44                Pipe::Pipe(int)
 *fill*         0x00000000c000dfab        0x1 
 .text          0x00000000c000dfac     0x1154 core/prcssthr.32
                0x00000000c000dfac                changeTSS
                0x00000000c000dfda                Process::addArgs(char**)
                0x00000000c000e034                Process::Process(char const*, Process*, char**)
                0x00000000c000e034                Process::Process(char const*, Process*, char**)
                0x00000000c000e1ec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e1ec                Process::Process(bool, char const*, Process*, char**)
                0x00000000c000e36f                disableIRQs()
                0x00000000c000e377                getIRQNestingLevel()
                0x00000000c000e37d                enableIRQs()
                0x00000000c000e38c                lockScheduler()
                0x00000000c000e38e                unlockScheduler()
                0x00000000c000e390                userModeEntryPoint(void*)
                0x00000000c000e3b3                lockStuff()
                0x00000000c000e3bf                taskStartupFunction
                0x00000000c000e3c8                updateTimeUsed()
                0x00000000c000e426                switchToThread(ThreadControlBlock*)
                0x00000000c000e476                Semaphore::Semaphore(int)
                0x00000000c000e476                Semaphore::Semaphore(int)
                0x00000000c000e4a4                Mutex::Mutex()
                0x00000000c000e4a4                Mutex::Mutex()
                0x00000000c000e4b6                Process::createThread(void (*)(void*), void*, int)
                0x00000000c000e59a                Process::createUserThread()
                0x00000000c000e5b6                setupMultitasking(void (*)())
                0x00000000c000e6c0                schedule()
                0x00000000c000e745                unlockStuff()
                0x00000000c000e77a                forkProcess(regs*)
                0x00000000c000e8e8                Semaphore::tryAcquire()
                0x00000000c000e916                Semaphore::assertLocked(char const*)
                0x00000000c000e949                blockTaskWithSchedulerLockAlreadyHeld(TaskState)
                0x00000000c000e98b                blockTask(TaskState)
                0x00000000c000e9ac                waitTask(int, int*, int)
                0x00000000c000e9ee                nanoSleepUntil(unsigned long long)
                0x00000000c000ea45                nanoSleep(unsigned long long)
                0x00000000c000ea5a                sleep(unsigned long long)
                0x00000000c000ea78                Semaphore::acquire()
                0x00000000c000eae0                execveProcess(char const*, char* const*, char* const*)
                0x00000000c000eb6e                taskReturned
                0x00000000c000ebb0                unblockTask(ThreadControlBlock*)
                0x00000000c000ec5f                cleanupTerminatedTask(ThreadControlBlock*)
                0x00000000c000eefc                cleanerTaskFunction(void*)
                0x00000000c000ef8c                terminateTask(int)
                0x00000000c000f014                Semaphore::release()
 .text          0x00000000c000f100      0xd8a core/syscalls.32
                0x00000000c000f100                sysCallGetPID(regs*)
                0x00000000c000f10c                sysCallSeekDir(regs*)
                0x00000000c000f111                sysCallTellDir(regs*)
                0x00000000c000f116                sysCallVerify(regs*)
                0x00000000c000f120                sysCallGetArgc(regs*)
                0x00000000c000f130                sysFormatDisk(regs*)
                0x00000000c000f19a                sysSetDiskVolumeLabel(regs*)
                0x00000000c000f1e0                sysGetDiskVolumeLabel(regs*)
                0x00000000c000f231                sysShutdown(regs*)
                0x00000000c000f279                sysCallGetCwd(regs*)
                0x00000000c000f298                sysCallSetCwd(regs*)
                0x00000000c000f2b4                sysCallRealpath(regs*)
                0x00000000c000f2f7                sysCallOpen(regs*)
                0x00000000c000f3e7                sysCallReadDir(regs*)
                0x00000000c000f456                sysCallIsATTY(regs*)
                0x00000000c000f4a9                sysCallSeek(regs*)
                0x00000000c000f4fa                sysCallTell(regs*)
                0x00000000c000f546                sysCallSizeFromFilename(regs*)
                0x00000000c000f5bf                sysCallSize(regs*)
                0x00000000c000f611                sysCallClose(regs*)
                0x00000000c000f65f                sysCallOpenDir(regs*)
                0x00000000c000f6cc                sysCallMakeDir(regs*)
                0x00000000c000f725                sysCallCloseDir(regs*)
                0x00000000c000f773                sysCallWait(regs*)
                0x00000000c000f78d                sysCallFork(regs*)
                0x00000000c000f7a9                sysCallExecve(regs*)
                0x00000000c000f7fe                sysCallRmdir(regs*)
                0x00000000c000f850                sysCallUnlink(regs*)
                0x00000000c000f8a2                sysCallGetArgv(regs*)
                0x00000000c000f8ee                sysCallTTYName(regs*)
                0x00000000c000f96a                sysCallGetEnv(regs*)
                0x00000000c000f9bc                sysCallUSleep(regs*)
                0x00000000c000f9e3                sysCallSpawn(regs*)
                0x00000000c000fa53                sysAppSettings(regs*)
                0x00000000c000fb72                sysSetFatAttrib(regs*)
                0x00000000c000fbd2                sysPanic(regs*)
                0x00000000c000fbf8                sysPipe(regs*)
                0x00000000c000fc3d                sysGetUnixTime(regs*)
                0x00000000c000fc51                string_ends_with(char const*, char const*)
                0x00000000c000fc99                setupSystemCalls()
                0x00000000c000fe48                systemCall(regs*, void*)
 .text          0x00000000c000fe8a      0xf65 core/terminal.32
                0x00000000c000fe8a                VgaText::isAtty()
                0x00000000c000fe8e                VgaText::~VgaText()
                0x00000000c000fe8e                VgaText::~VgaText()
                0x00000000c000feb2                VgaText::~VgaText()
                0x00000000c000fedc                VgaText::read(unsigned long long, void*, int*)
                0x00000000c000fefc                setTerminalScrollLock(bool)
                0x00000000c000fefd                addToTerminalCycle(VgaText*)
                0x00000000c000ff2a                installVgaTextImplementation()
                0x00000000c000ff3f                scrollTerminalScrollLock(int)
                0x00000000c000ff40                VgaText::load()
                0x00000000c000ff94                VgaText::updateCursor()
                0x00000000c000ffae                VgaText::showCursor(bool)
                0x00000000c000ffbe                VgaText::disableBlink(bool)
                0x00000000c000fff8                VgaText::doANSI_SGR(int)
                0x00000000c0010084                VgaText::setDefaultBgColour(VgaColour)
                0x00000000c001009a                VgaText::setDefaultFgColour(VgaColour)
                0x00000000c00100b0                VgaText::setDefaultColours(VgaColour, VgaColour)
                0x00000000c00100d0                VgaText::combineColours(unsigned char, unsigned char)
                0x00000000c00100e2                VgaText::scrollScreen()
                0x00000000c0010176                VgaText::combineCharAndColour(char, unsigned char)
                0x00000000c0010188                VgaText::writeCharacter(char, VgaColour, VgaColour, int, int)
                0x00000000c00101e8                VgaText::getCursorX()
                0x00000000c00101f4                VgaText::getCursorY()
                0x00000000c0010200                VgaText::setCursor(int, int)
                0x00000000c001021e                VgaText::setCursorX(int)
                0x00000000c001023a                VgaText::setCursorY(int)
                0x00000000c0010256                VgaText::incrementCursor(bool)
                0x00000000c00102be                VgaText::updateRAMUsageDisplay(int)
                0x00000000c0010318                VgaText::updateDiskUsage()
                0x00000000c001047e                VgaText::updateTitle()
                0x00000000c00104c4                VgaText::setTitleTextColour(VgaColour)
                0x00000000c00104d4                VgaText::setTitleColour(VgaColour)
                0x00000000c00104e4                VgaText::setTitle(char*)
                0x00000000c001050a                VgaText::decrementCursor(bool)
                0x00000000c0010532                VgaText::putchar(char, VgaColour, VgaColour)
                0x00000000c001062e                VgaText::isShowingCursor()
                0x00000000c001063a                VgaText::isBlinkDisabled()
                0x00000000c0010648                VgaText::setCursorHeight(int)
                0x00000000c0010666                VgaText::getCursorHeight()
                0x00000000c0010671                setActiveTerminal(VgaText*)
                0x00000000c0010723                doTerminalCycle()
                0x00000000c0010740                VgaText::doUpdate()
                0x00000000c0010752                VgaText::puts(char const*, VgaColour, VgaColour)
                0x00000000c0010912                VgaText::clearScreen()
                0x00000000c0010976                VgaText::putchar(char)
                0x00000000c0010a90                VgaText::puts(char const*)
                0x00000000c0010ab6                VgaText::putx(unsigned int)
                0x00000000c0010afc                VgaText::VgaText(char const*)
                0x00000000c0010afc                VgaText::VgaText(char const*)
                0x00000000c0010c8e                VgaText::receiveKey(unsigned char)
                0x00000000c0010d76                VgaText::write(unsigned long long, void*, int*)
                0x00000000c0010dca                newTerminal(char*)
 *fill*         0x00000000c0010def        0x1 
 .text          0x00000000c0010df0      0x18f core/tss.32
                0x00000000c0010df0                TSS::TSS()
                0x00000000c0010df0                TSS::TSS()
                0x00000000c0010dfe                TSS::setESP(unsigned long)
                0x00000000c0010e10                TSS::flush()
                0x00000000c0010e30                TSS::setup(unsigned long, unsigned long)
 *fill*         0x00000000c0010f7f        0x1 
 .text          0x00000000c0010f80      0x32f core/unixfile.32
                0x00000000c0010f80                ReservedFilename::isAtty()
                0x00000000c0010f96                ReservedFilename::read(unsigned long long, void*, int*)
                0x00000000c0011028                ReservedFilename::write(unsigned long long, void*, int*)
                0x00000000c00110be                UnixFile::getFileDescriptor()
                0x00000000c00110c6                UnixFile::UnixFile(int)
                0x00000000c00110c6                UnixFile::UnixFile(int)
                0x00000000c0011102                ReservedFilename::ReservedFilename(int)
                0x00000000c0011102                ReservedFilename::ReservedFilename(int)
                0x00000000c001112a                UnixFile::~UnixFile()
                0x00000000c001112a                UnixFile::~UnixFile()
                0x00000000c00111b0                UnixFile::~UnixFile()
                0x00000000c00111d8                ReservedFilename::~ReservedFilename()
                0x00000000c00111d8                ReservedFilename::~ReservedFilename()
                0x00000000c00111fc                ReservedFilename::~ReservedFilename()
                0x00000000c0011223                getFromFileDescriptor(int)
 *fill*         0x00000000c00112af        0x1 
 .text          0x00000000c00112b0     0x1175 core/virtmgr.32
                0x00000000c00112b0                Virt::setPageState(unsigned long, Virt::VirtPageState)
                0x00000000c00112e5                Virt::getPageState(unsigned long)
                0x00000000c0011309                Virt::allocateKernelVirtualPages(int)
                0x00000000c001141a                Virt::virtualMemorySetup()
                0x00000000c0011499                Virt::getAKernelVAS()
                0x00000000c001149f                Virt::setupPageSwapping(int)
                0x00000000c00115c4                VAS::VAS()
                0x00000000c00115c4                VAS::VAS()
                0x00000000c00115f4                VAS::getForeignPageTableEntry(bool, unsigned long)
                0x00000000c0011620                VAS::getPageTableEntry(unsigned long)
                0x00000000c001163f                Virt::freeKernelVirtualPages(unsigned long)
                0x00000000c0011762                VAS::freeAllocatedPages(unsigned long)
                0x00000000c0011786                VAS::virtualToPhysical(unsigned long)
                0x00000000c001179e                VAS::mapOtherVASIn(bool, VAS*)
                0x00000000c00117d4                VAS::~VAS()
                0x00000000c00117d4                VAS::~VAS()
                0x00000000c0011940                VAS::mapPage(unsigned long, unsigned long, int)
                0x00000000c0011a40                VAS::allocatePages(int, int)
                0x00000000c0011c10                VAS::setCPUSpecific(unsigned long)
                0x00000000c0011c2c                VAS::mapRange(unsigned long, unsigned long, int, int)
                0x00000000c0011cf6                VAS::VAS(VAS*)
                0x00000000c0011cf6                VAS::VAS(VAS*)
                0x00000000c0012040                VAS::mapForeignPage(bool, VAS*, unsigned long, unsigned long, int)
                0x00000000c001212e                VAS::VAS(bool)
                0x00000000c001212e                VAS::VAS(bool)
                0x00000000c001235e                mapVASFirstTime
 .text          0x00000000c0012425       0x93 coreobjs/c++.32
                0x00000000c0012425                __cxa_atexit
                0x00000000c0012428                __cxa_finalize
                0x00000000c0012429                __stack_chk_fail
                0x00000000c0012489                __cxa_pure_virtual
                0x00000000c001249a                operator new(unsigned long)
                0x00000000c001249f                operator new[](unsigned long)
                0x00000000c00124a4                operator delete(void*)
                0x00000000c00124a9                operator delete(void*, unsigned long)
                0x00000000c00124ae                operator delete[](void*)
                0x00000000c00124b3                operator delete[](void*, unsigned long)
 .text          0x00000000c00124b8        0x0 debugger/debug.32
 .text          0x00000000c00124b8      0xb68 fs/vfs.32
                0x00000000c00124b8                File::read(unsigned long long, void*, int*)
                0x00000000c0012510                File::write(unsigned long long, void*, int*)
                0x00000000c0012568                Directory::read(unsigned long long, void*, int*)
                0x00000000c00125c0                Directory::write(unsigned long long, void*, int*)
                0x00000000c00125ee                File::isAtty()
                0x00000000c00125f2                Directory::isAtty()
                0x00000000c00125f6                Filesystem::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c00125fc                Filesystem::setlabel(LogicalDisk*, int, char*)
                0x00000000c0012602                File::~File()
                0x00000000c0012602                File::~File()
                0x00000000c0012626                File::~File()
                0x00000000c0012650                Directory::~Directory()
                0x00000000c0012650                Directory::~Directory()
                0x00000000c0012674                Directory::~Directory()
                0x00000000c001269e                Filesystem::Filesystem()
                0x00000000c001269e                Filesystem::Filesystem()
                0x00000000c00126c2                Filesystem::~Filesystem()
                0x00000000c00126c2                Filesystem::~Filesystem()
                0x00000000c00126d0                Filesystem::~Filesystem()
                0x00000000c00126f4                initVFS()
                0x00000000c001271e                standardiseFiles(char*, char const*, char const*)
                0x00000000c00128c8                File::File(char const*, Process*)
                0x00000000c00128c8                File::File(char const*, Process*)
                0x00000000c001292c                File::open(FileOpenMode)
                0x00000000c001298a                File::close()
                0x00000000c00129ea                File::seek(unsigned long long)
                0x00000000c0012a40                File::tell(unsigned long long*)
                0x00000000c0012a90                File::rewind()
                0x00000000c0012aa4                File::unlink()
                0x00000000c0012af0                File::rename(char const*)
                0x00000000c0012b3e                File::chfatattr(unsigned char, unsigned char)
                0x00000000c0012b9a                File::exists()
                0x00000000c0012bd8                File::stat(unsigned long long*, bool*)
                0x00000000c0012c39                getcwd(Process*, char*, int)
                0x00000000c0012c63                setcwd(Process*, char*)
                0x00000000c0012d8a                Directory::Directory(char const*, Process*)
                0x00000000c0012d8a                Directory::Directory(char const*, Process*)
                0x00000000c0012dee                Directory::open()
                0x00000000c0012e4a                Directory::close()
                0x00000000c0012eaa                Directory::unlink()
                0x00000000c0012ef6                Directory::rename(char const*)
                0x00000000c0012f44                Directory::exists()
                0x00000000c0012f82                Directory::read(dirent*)
                0x00000000c0012fce                Directory::create()
                0x00000000c001301a                Filesystem::chfatattr(char const*, unsigned char, unsigned char)
 .text          0x00000000c0013020       0x84 hal/bus.32
                0x00000000c0013020                Bus::Bus(char const*)
                0x00000000c0013020                Bus::Bus(char const*)
                0x00000000c0013056                Bus::~Bus()
                0x00000000c0013056                Bus::~Bus()
                0x00000000c001307a                Bus::~Bus()
 .text          0x00000000c00130a4      0x14e hal/buzzer.32
                0x00000000c00130a4                Buzzer::Buzzer(char const*)
                0x00000000c00130a4                Buzzer::Buzzer(char const*)
                0x00000000c00130e8                Buzzer::~Buzzer()
                0x00000000c00130e8                Buzzer::~Buzzer()
                0x00000000c001310c                Buzzer::~Buzzer()
                0x00000000c0013136                Buzzer::stop()
                0x00000000c0013149                beepThread(void*)
                0x00000000c0013184                Buzzer::beep(int, int, bool)
 .text          0x00000000c00131f2      0x42f hal/clock.32
                0x00000000c00131f2                loadClockSettings()
                0x00000000c001320c                Clock::Clock(char const*)
                0x00000000c001320c                Clock::Clock(char const*)
                0x00000000c0013242                Clock::~Clock()
                0x00000000c0013242                Clock::~Clock()
                0x00000000c0013266                Clock::~Clock()
                0x00000000c0013290                Clock::timeInSecondsLocal()
                0x00000000c00132d8                Clock::setTimeInSecondsLocal(unsigned long long)
                0x00000000c0013331                datetimeToSeconds(datetime_t)
                0x00000000c0013458                Clock::setTimeInDatetimeLocal(datetime_t)
                0x00000000c00134b8                secondsToDatetime(unsigned long long)
                0x00000000c00135fc                Clock::timeInDatetimeLocal()
 *fill*         0x00000000c0013621        0x1 
 .text          0x00000000c0013622      0x504 hal/device.32
                0x00000000c0013622                Device::hibernate()
                0x00000000c0013624                Device::wake()
                0x00000000c0013626                Device::detect()
                0x00000000c0013628                Device::disableLegacy()
                0x00000000c001362a                Device::powerSaving(PowerSavingLevel)
                0x00000000c001362c                DriverlessDevice::close(int, int, void*)
                0x00000000c0013630                DriverlessDevice::detect()
                0x00000000c0013632                DriverlessDevice::open(int, int, void*)
                0x00000000c0013646                Device::~Device()
                0x00000000c0013646                Device::~Device()
                0x00000000c0013654                Device::~Device()
                0x00000000c001367c                Device::findAndLoadDriver()
                0x00000000c001367e                Device::preOpenPCI(PCIDeviceInfo)
                0x00000000c00136a4                Device::preOpenACPI(void*, char*, char*)
                0x00000000c00136f8                Device::addIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013756                Device::removeIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c00137a4                Device::addChild(Device*)
                0x00000000c00137e8                Device::removeAllChildren()
                0x00000000c001382e                Device::hibernateAll()
                0x00000000c001385e                Device::wakeAll()
                0x00000000c001388e                Device::detectAll()
                0x00000000c00138be                Device::disableLegacyAll()
                0x00000000c00138ee                Device::loadDriversForAll()
                0x00000000c001391a                Device::closeAll()
                0x00000000c0013950                Device::powerSavingAll(PowerSavingLevel)
                0x00000000c0013986                Device::setName(char const*)
                0x00000000c0013994                Device::Device(char const*)
                0x00000000c0013994                Device::Device(char const*)
                0x00000000c0013a86                Device::getName()
                0x00000000c0013a90                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013a90                DriverlessDevice::DriverlessDevice(char const*)
                0x00000000c0013ab8                Device::addToLinkedList(LinkedList<Device>&, DeviceType)
                0x00000000c0013afc                getDevicesOfType(DeviceType)
 .text          0x00000000c0013b26       0x84 hal/diskctrl.32
                0x00000000c0013b26                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b26                HardDiskController::HardDiskController(char const*)
                0x00000000c0013b5c                HardDiskController::~HardDiskController()
                0x00000000c0013b5c                HardDiskController::~HardDiskController()
                0x00000000c0013b80                HardDiskController::~HardDiskController()
 .text          0x00000000c0013baa       0xde hal/diskphys.32
                0x00000000c0013baa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013baa                PhysicalDisk::PhysicalDisk(char const*, int)
                0x00000000c0013c12                PhysicalDisk::startCache()
                0x00000000c0013c3a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c3a                PhysicalDisk::~PhysicalDisk()
                0x00000000c0013c5e                PhysicalDisk::~PhysicalDisk()
 .text          0x00000000c0013c88      0x128 hal/fpu.32
                0x00000000c0013c88                FPU::FPU(char const*)
                0x00000000c0013c88                FPU::FPU(char const*)
                0x00000000c0013cbe                FPU::~FPU()
                0x00000000c0013cbe                FPU::~FPU()
                0x00000000c0013ce2                FPU::~FPU()
                0x00000000c0013d0c                setupFPU()
 .text          0x00000000c0013db0      0xb89 hal/intctrl.32
                0x00000000c0013db0                InterruptController::uninstallISRHandler(int, void (*)(regs*, void*))
                0x00000000c0013de8                InterruptController::installISRHandler(int, void (*)(regs*, void*), void*)
                0x00000000c0013e3a                doubleFault(regs*, void*)
                0x00000000c0013e48                InterruptController::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
                0x00000000c0013ee4                InterruptController::clearAllHandlers(int, bool)
                0x00000000c0013f8c                InterruptController::uninstallIRQHandler(int, void (*)(regs*, void*), bool)
                0x00000000c0014013                nmiHandler(regs*, void*)
                0x00000000c0014021                int_handler
                0x00000000c00140bc                InterruptController::InterruptController(char const*)
                0x00000000c00140bc                InterruptController::InterruptController(char const*)
                0x00000000c0014162                InterruptController::~InterruptController()
                0x00000000c0014162                InterruptController::~InterruptController()
                0x00000000c0014186                InterruptController::~InterruptController()
                0x00000000c00141b0                displayDebugInfo(regs*)
                0x00000000c0014592                gpFault(regs*, void*)
                0x00000000c00145cb                pgFault(regs*, void*)
                0x00000000c00145e2                otherISRHandler(regs*, void*)
                0x00000000c0014601                opcodeFault(regs*, void*)
                0x00000000c001466b                displayProgramFault(char const*)
                0x00000000c0014694                InterruptController::convertLegacyIRQNumber(int)
                0x00000000c00146de                setupInterruptController()
 *fill*         0x00000000c0014939        0x1 
 .text          0x00000000c001493a      0x604 hal/keybrd.32
                0x00000000c001493a                startGUI(void*)
                0x00000000c00149a8                sendKeyToTerminal(unsigned char)
                0x00000000c0014a14                sendKeyboardToken(KeyboardToken)
                0x00000000c0014def                clearInternalKeybuffer(VgaText*)
                0x00000000c0014e24                readKeyboard(VgaText*, char*, unsigned long)
                0x00000000c0014eb4                Keyboard::Keyboard(char const*)
                0x00000000c0014eb4                Keyboard::Keyboard(char const*)
                0x00000000c0014ef0                Keyboard::~Keyboard()
                0x00000000c0014ef0                Keyboard::~Keyboard()
                0x00000000c0014f14                Keyboard::~Keyboard()
 .text          0x00000000c0014f3e      0x400 hal/logidisk.32
                0x00000000c0014f3e                LogicalDisk::close(int, int, void*)
                0x00000000c0014f42                LogicalDisk::~LogicalDisk()
                0x00000000c0014f42                LogicalDisk::~LogicalDisk()
                0x00000000c0014f66                LogicalDisk::~LogicalDisk()
                0x00000000c0014f90                LogicalDisk::open(int, int, void*)
                0x00000000c0014fa4                LogicalDisk::absoluteToRelative(unsigned long long)
                0x00000000c0014fdc                LogicalDisk::relativeToAbsolute(unsigned long long)
                0x00000000c0015022                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c0015022                LogicalDisk::LogicalDisk(char const*, PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c00150d8                LogicalDisk::assignDriveLetter()
                0x00000000c001518e                LogicalDisk::mount()
                0x00000000c0015200                LogicalDisk::unmount()
                0x00000000c0015210                LogicalDisk::unassignDriveLetter()
                0x00000000c0015266                LogicalDisk::read(unsigned long long, int, void*)
                0x00000000c00152d2                LogicalDisk::write(unsigned long long, int, void*)
 .text          0x00000000c001533e       0x84 hal/mouse.32
                0x00000000c001533e                Mouse::Mouse(char const*)
                0x00000000c001533e                Mouse::Mouse(char const*)
                0x00000000c0015374                Mouse::~Mouse()
                0x00000000c0015374                Mouse::~Mouse()
                0x00000000c0015398                Mouse::~Mouse()
 .text          0x00000000c00153c2      0x339 hal/partition.32
                0x00000000c00153c2                makePartition(PhysicalDisk*, unsigned long long, unsigned long long)
                0x00000000c001546a                createPartitionsForDisk(PhysicalDisk*)
 *fill*         0x00000000c00156fb        0x1 
 .text          0x00000000c00156fc      0x2e7 hal/timer.32
                0x00000000c00156fc                Timer::Timer(char const*)
                0x00000000c00156fc                Timer::Timer(char const*)
                0x00000000c0015732                Timer::~Timer()
                0x00000000c0015732                Timer::~Timer()
                0x00000000c0015756                Timer::~Timer()
                0x00000000c0015780                Timer::read()
                0x00000000c001578b                timerHandler(unsigned long long)
                0x00000000c00158c2                setupTimer(int)
 *fill*         0x00000000c00159e3        0x1 
 .text          0x00000000c00159e4      0x2d1 hal/vcache.32
                0x00000000c00159e4                VCache::VCache(PhysicalDisk*)
                0x00000000c00159e4                VCache::VCache(PhysicalDisk*)
                0x00000000c0015ad4                VCache::writeWriteBuffer()
                0x00000000c0015b10                VCache::~VCache()
                0x00000000c0015b10                VCache::~VCache()
                0x00000000c0015b50                VCache::~VCache()
                0x00000000c0015b78                VCache::write(unsigned long long, int, void*)
                0x00000000c0015c5c                VCache::read(unsigned long long, int, void*)
 *fill*         0x00000000c0015cb5        0x1 
 .text          0x00000000c0015cb6      0x26d hal/video.32
                0x00000000c0015cb6                Video::putrect(int, int, int, int, unsigned int)
                0x00000000c0015d00                Video::blit(unsigned int*, int, int, int, int)
                0x00000000c0015d7e                Video::clearScreen(unsigned int)
                0x00000000c0015db2                Video::putpixel(int, int, unsigned int)
                0x00000000c0015dc0                Video::Video(char const*)
                0x00000000c0015dc0                Video::Video(char const*)
                0x00000000c0015df6                Video::~Video()
                0x00000000c0015df6                Video::~Video()
                0x00000000c0015e1a                Video::~Video()
                0x00000000c0015e44                Video::isMonochrome()
                0x00000000c0015e50                Video::getWidth()
                0x00000000c0015e5c                Video::getHeight()
                0x00000000c0015e68                Video::drawCursor(int, int, unsigned char*, int)
 *fill*         0x00000000c0015f23        0x1 
 .text          0x00000000c0015f24      0xc56 hw/acpi.32
                0x00000000c0015f24                ACPI::close(int, int, void*)
                0x00000000c0015fd9                findRSDP()
                0x00000000c0016063                loadACPITables(unsigned char*)
                0x00000000c001628a                findRSDT(unsigned char*)
                0x00000000c00163a8                findDataTable(unsigned char*, char*)
                0x00000000c0016444                scanMADT()
                0x00000000c00167d8                ACPI::ACPI()
                0x00000000c00167d8                ACPI::ACPI()
                0x00000000c0016838                ACPI::getPCIIRQAssignment(unsigned char, unsigned short, unsigned char)
                0x00000000c001691a                ACPI::registerPCIIRQAssignment(void*, unsigned short, unsigned char, unsigned char)
                0x00000000c00169e0                ACPI::setScreenBrightnessLevel(void*, int)
                0x00000000c00169e6                ACPI::writeSimpleBootFlag(SimpleBootFlagTable*)
                0x00000000c0016a2e                ACPI::open(int, int, void*)
                0x00000000c0016b62                ACPI::sleep()
 .text          0x00000000c0016b7a     0x132c hw/cpu.32
                0x00000000c0016b7a                CPU::close(int, int, void*)
                0x00000000c0016b7d                lookupAMDCPUName(unsigned char, unsigned char)
                0x00000000c0016d11                lookupIntelCPUName(unsigned char, unsigned char)
                0x00000000c0016fbf                AMD_K6_write_msr(unsigned int, unsigned int, unsigned int, REGS*)
                0x00000000c0016fdb                AMD_K6_read_msr(unsigned int, REGS*)
                0x00000000c0016ff3                AMD_K6_writeback(int, int, int)
                0x00000000c0017066                cpuid(int, unsigned long*, unsigned long*, unsigned long*, unsigned long*)
                0x00000000c00170e9                cpuidCheckEDX(unsigned int)
                0x00000000c0017116                cpuidCheckECX(unsigned int)
                0x00000000c0017143                cpuidCheckExtendedEBX(unsigned int)
                0x00000000c0017170                cpuidCheckExtendedECX(unsigned int)
                0x00000000c001719d                getCPUNumber()
                0x00000000c00171a0                thisCPU()
                0x00000000c00171b4                CPU::CPU()
                0x00000000c00171b4                CPU::CPU()
                0x00000000c0017242                CPU::displayFeatures()
                0x00000000c0017244                CPU::detectFeatures()
                0x00000000c0017c36                CPU::setupSMEP()
                0x00000000c0017c50                CPU::setupUMIP()
                0x00000000c0017c68                CPU::setupTSC()
                0x00000000c0017c80                CPU::setupLargePages()
                0x00000000c0017c98                CPU::setupPAT()
                0x00000000c0017cd4                CPU::setupMTRR()
                0x00000000c0017cd6                CPU::setupGlobalPages()
                0x00000000c0017cec                CPU::allowUsermodeDataAccess()
                0x00000000c0017cfe                CPU::prohibitUsermodeDataAccess()
                0x00000000c0017d10                CPU::setupSMAP()
                0x00000000c0017d36                CPU::setupFeatures()
                0x00000000c0017dd8                CPU::open(int, int, void*)
 .text          0x00000000c0017ea6        0x0 hw/ports.32
 .text          0x00000000c0017ea6      0x503 registry/registry.32
                0x00000000c0017ea6                Reg::findLineFromLoadedData(char*, char*, char*)
                0x00000000c0017ffe                Reg::getLineFromRegistry(char*, char*, char*, char*)
                0x00000000c001815d                Reg::getLine(char*, char*, char*)
                0x00000000c0018194                Reg::readInt(char*, char*, int*)
                0x00000000c001827f                Reg::readString(char*, char*, char*, int)
                0x00000000c0018300                Reg::readBool(char*, char*, bool*)
                0x00000000c0018325                Reg::readBoolWithDefault(char*, char*, bool)
                0x00000000c0018351                Reg::readIntWithDefault(char*, char*, int)
                0x00000000c001837d                Reg::readStringWithDefault(char*, char*, char*, int, char*)
 .text          0x00000000c00183a9       0x18 syscalls/sc_exit.32
                0x00000000c00183a9                Sys::exit(regs*)
 .text          0x00000000c00183c1       0x68 syscalls/sc_read.32
                0x00000000c00183c1                Sys::read(regs*)
 .text          0x00000000c0018429       0x55 syscalls/sc_sbrk.32
                0x00000000c0018429                Sys::sbrk(regs*)
 .text          0x00000000c001847e       0x68 syscalls/sc_write.32
                0x00000000c001847e                Sys::write(regs*)
 .text          0x00000000c00184e6       0x1a syscalls/sc_yield.32
                0x00000000c00184e6                Sys::yield(regs*)
 .text          0x00000000c0018500      0x8bf vm86/vm8086.32
                0x00000000c0018500                vm8086EntryPoint(void*)
                0x00000000c001852b                inbv(unsigned short)
                0x00000000c0018531                outbv(unsigned short, unsigned char)
                0x00000000c001853b                realToLinear(unsigned short, unsigned short)
                0x00000000c001854b                getSegment(unsigned int)
                0x00000000c0018553                getOffset(unsigned int)
                0x00000000c0018558                loadVM8086FileAsThread(Process*, char const*, unsigned short, unsigned short, unsigned short, unsigned short)
                0x00000000c0018687                vm8086DoISR(regs*, int, unsigned char*, unsigned short, unsigned short)
                0x00000000c0018711                readByteFromReal(unsigned short, unsigned short)
                0x00000000c0018722                readWordFromReal(unsigned short, unsigned short)
                0x00000000c0018734                readDwordFromReal(unsigned short, unsigned short)
                0x00000000c0018745                writeByteFromReal(unsigned short, unsigned short, unsigned char)
                0x00000000c001875a                writeWordFromReal(unsigned short, unsigned short, unsigned short)
                0x00000000c0018770                writeDwordFromReal(unsigned short, unsigned short, unsigned int)
                0x00000000c0018785                vm8086FaultHandler(regs*)
 *fill*         0x00000000c0018dbf        0x1 
 .text          0x00000000c0018dc0     0x1088 fs/fat/vfslink.32
                0x00000000c0018dc0                FAT::getName()
                0x00000000c0018dc6                FAT::tell(void*, unsigned long long*)
                0x00000000c0018dfa                FAT::stat(void*, unsigned long long*)
                0x00000000c0018e2e                FAT::exists(char const*)
                0x00000000c0018e32                FAT::~FAT()
                0x00000000c0018e32                FAT::~FAT()
                0x00000000c0018e56                FAT::~FAT()
                0x00000000c0018e7e                FAT::getlabel(LogicalDisk*, int, char*, unsigned int*)
                0x00000000c0018f1c                FAT::setlabel(LogicalDisk*, int, char*)
                0x00000000c0018fd6                FAT::format(LogicalDisk*, int, char const*, int)
                0x00000000c00191ba                FAT::tryMount(LogicalDisk*, int)
                0x00000000c00193c0                FAT::readDir(void*, unsigned long, void*, int*)
                0x00000000c00194c8                FAT::read(void*, unsigned long, void*, int*)
                0x00000000c0019522                FAT::write(void*, unsigned long, void*, int*)
                0x00000000c001957c                FAT::close(void*)
                0x00000000c00195c8                FAT::closeDir(void*)
                0x00000000c0019614                FAT::seek(void*, unsigned long long)
                0x00000000c0019668                fatWrapperReadDisk
                0x00000000c00196af                fatWrapperWriteDisk
                0x00000000c00196f6                fatWrapperIoctl
                0x00000000c00197fa                FAT::FAT()
                0x00000000c00197fa                FAT::FAT()
                0x00000000c001984c                FAT::fixFilepath(char*)
                0x00000000c0019884                FAT::open(char const*, void**, FileOpenMode)
                0x00000000c00199ac                FAT::openDir(char const*, void**)
                0x00000000c0019a52                FAT::stat(char const*, unsigned long long*, bool*)
                0x00000000c0019b3c                FAT::unlink(char const*)
                0x00000000c0019bb6                FAT::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019d0a                FAT::rename(char const*, char const*)
                0x00000000c0019dce                FAT::mkdir(char const*)
 .text          0x00000000c0019e48      0xbdf fs/iso9660/vfslink.32
                0x00000000c0019e48                ISO9660::format(LogicalDisk*, int, char const*, int)
                0x00000000c0019e4e                ISO9660::seek(void*, unsigned long long)
                0x00000000c0019e7e                ISO9660::tell(void*, unsigned long long*)
                0x00000000c0019ea2                ISO9660::getName()
                0x00000000c0019ea8                ISO9660::stat(void*, unsigned long long*)
                0x00000000c0019ecc                ISO9660::chfatattr(char const*, unsigned char, unsigned char)
                0x00000000c0019ed2                ISO9660::unlink(char const*)
                0x00000000c0019ed8                ISO9660::write(void*, unsigned long, void*, int*)
                0x00000000c0019ede                ISO9660::rename(char const*, char const*)
                0x00000000c0019ee4                ISO9660::mkdir(char const*)
                0x00000000c0019eea                ISO9660::close(void*)
                0x00000000c0019f0c                ISO9660::closeDir(void*)
                0x00000000c0019f2e                ISO9660::~ISO9660()
                0x00000000c0019f2e                ISO9660::~ISO9660()
                0x00000000c0019f52                ISO9660::~ISO9660()
                0x00000000c0019f79                __memmem(unsigned char*, int, unsigned char*, int)
                0x00000000c0019fbb                readSectorFromCDROM(unsigned int, unsigned char*, char)
                0x00000000c001a022                ISO9660::tryMount(LogicalDisk*, int)
                0x00000000c001a072                ISO9660::read(void*, unsigned long, void*, int*)
                0x00000000c001a2b6                ISO9660::readDir(void*, unsigned long, void*, int*)
                0x00000000c001a544                readRoot(unsigned int*, unsigned int*, char)
                0x00000000c001a599                readRecursively(char*, unsigned int, unsigned int, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a76c                getFileData(char*, unsigned int*, unsigned int*, char, int*)
                0x00000000c001a7fa                ISO9660::open(char const*, void**, FileOpenMode)
                0x00000000c001a894                ISO9660::exists(char const*)
                0x00000000c001a8b8                ISO9660::stat(char const*, unsigned long long*, bool*)
                0x00000000c001a94c                ISO9660::openDir(char const*, void**)
                0x00000000c001aa04                ISO9660::ISO9660()
                0x00000000c001aa04                ISO9660::ISO9660()
 *fill*         0x00000000c001aa27        0x1 
 .text          0x00000000c001aa28      0x244 hal/sound/sndchannel.32
                0x00000000c001aa28                SoundChannel::~SoundChannel()
                0x00000000c001aa28                SoundChannel::~SoundChannel()
                0x00000000c001aa44                SoundChannel::setSpeed(float)
                0x00000000c001aa50                SoundChannel::getSpeed()
                0x00000000c001aa58                SoundChannel::setVolume(int)
                0x00000000c001aa74                SoundChannel::getVolume()
                0x00000000c001aa7c                SoundChannel::pause()
                0x00000000c001aa86                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001aa86                SoundChannel::SoundChannel(int, int, int, int)
                0x00000000c001ab7c                SoundChannel::play()
                0x00000000c001ab86                SoundChannel::paused()
                0x00000000c001ab8e                SoundChannel::getSampleRate()
                0x00000000c001ab96                SoundChannel::getBits()
                0x00000000c001ab9e                SoundChannel::getBufferUsed()
                0x00000000c001aba6                SoundChannel::getBufferSize()
                0x00000000c001abae                SoundChannel::unbuffer(float*, int, int)
                0x00000000c001ac20                SoundChannel::buffer8(unsigned char*, int)
 .text          0x00000000c001ac6c      0x317 hal/sound/sndhw.32
                0x00000000c001ac6c                SoundDevice::SoundDevice(char const*)
                0x00000000c001ac6c                SoundDevice::SoundDevice(char const*)
                0x00000000c001acd8                SoundDevice::~SoundDevice()
                0x00000000c001acd8                SoundDevice::~SoundDevice()
                0x00000000c001ad52                SoundDevice::~SoundDevice()
                0x00000000c001ad7c                SoundDevice::getFreeChannelNum()
                0x00000000c001ad96                SoundDevice::addChannel(SoundChannel*)
                0x00000000c001ae06                SoundDevice::removeChannel(int)
                0x00000000c001ae38                SoundDevice::floatTo8(float*, unsigned char*, int)
                0x00000000c001aea4                SoundDevice::getAudio(int, float*, float*)
 .text          0x00000000c001af83        0x0 hw/bus/isa.32
 *fill*         0x00000000c001af83        0x1 
 .text          0x00000000c001af84      0x6e5 hw/bus/pci.32
                0x00000000c001af84                PCI::open(int, int, void*)
                0x00000000c001af98                PCI::close(int, int, void*)
                0x00000000c001af9c                PCI::PCI()
                0x00000000c001af9c                PCI::PCI()
                0x00000000c001b01c                PCI::pciReadWord(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b064                PCI::getVendorID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b086                PCI::getHeaderType(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0aa                PCI::getClassCode(unsigned char, unsigned char, unsigned char)
                0x00000000c001b0ee                PCI::getProgIF(unsigned char, unsigned char, unsigned char)
                0x00000000c001b112                PCI::getRevisionID(unsigned char, unsigned char, unsigned char)
                0x00000000c001b134                PCI::getInterruptNumber(unsigned char, unsigned char, unsigned char)
                0x00000000c001b156                PCI::getSecondaryBus(unsigned char, unsigned char, unsigned char)
                0x00000000c001b17a                PCI::getBARAddress(unsigned char, unsigned char, unsigned char, unsigned char)
                0x00000000c001b1da                PCI::pciWriteWord(unsigned char, unsigned char, unsigned char, unsigned char, unsigned short)
                0x00000000c001b246                PCI::checkBus(unsigned char)
                0x00000000c001b26a                PCI::foundDevice(PCIDeviceInfo)
                0x00000000c001b3da                PCI::getDeviceData(unsigned char, unsigned char, unsigned char)
                0x00000000c001b5aa                PCI::checkDevice(unsigned char, unsigned char)
                0x00000000c001b616                PCI::detect()
 *fill*         0x00000000c001b669        0x1 
 .text          0x00000000c001b66a      0x4b9 hw/clock/rtc.32
                0x00000000c001b66a                RTC::open(int, int, void*)
                0x00000000c001b66e                RTC::close(int, int, void*)
                0x00000000c001b672                RTC::timeInSecondsUTC()
                0x00000000c001b684                RTC::setTimeInDatetimeUTC(datetime_t)
                0x00000000c001b688                RTC::timeInDatetimeUTC()
                0x00000000c001b6ae                RTC::setTimeInSecondsUTC(unsigned long long)
                0x00000000c001b6ec                RTC::~RTC()
                0x00000000c001b6ec                RTC::~RTC()
                0x00000000c001b710                RTC::~RTC()
                0x00000000c001b73a                RTC::get_update_in_progress_flag()
                0x00000000c001b752                RTC::completeRTCRefresh()
                0x00000000c001ba3e                rtcIRQHandler(regs*, void*)
                0x00000000c001ba84                RTC::RTC()
                0x00000000c001ba84                RTC::RTC()
 *fill*         0x00000000c001bb23        0x1 
 .text          0x00000000c001bb24      0xc70 hw/diskctrl/ide.32
                0x00000000c001bb24                IDE::close(int, int, void*)
                0x00000000c001bb28                IDE::IDE()
                0x00000000c001bb28                IDE::IDE()
                0x00000000c001bb5c                IDE::prepareInterrupt(unsigned char)
                0x00000000c001bb6e                selectDrive(unsigned char, unsigned char)
                0x00000000c001bb70                IDE::getBase(unsigned char)
                0x00000000c001bb82                IDE::write(unsigned char, unsigned char, unsigned char)
                0x00000000c001bc42                IDE::read(unsigned char, unsigned char)
                0x00000000c001bcf0                IDE::waitInterrupt(unsigned char)
                0x00000000c001bd56                ideChannel0IRQHandler(regs*, void*)
                0x00000000c001bd72                ideChannel1IRQHandler(regs*, void*)
                0x00000000c001bd8e                IDE::enableIRQs(unsigned char, bool)
                0x00000000c001bdd4                IDE::open(int, int, void*)
                0x00000000c001c1e4                IDE::readBuffer(unsigned char, unsigned char, unsigned int, unsigned int)
                0x00000000c001c2b0                IDE::detect()
                0x00000000c001c598                IDE::printError(unsigned char, unsigned char, unsigned char)
                0x00000000c001c72e                IDE::polling(unsigned char, unsigned int)
 .text          0x00000000c001c794      0x62b hw/diskphys/ata.32
                0x00000000c001c794                ATA::close(int, int, void*)
                0x00000000c001c7b8                ATA::powerSaving(PowerSavingLevel)
                0x00000000c001c7ba                ATA::ATA()
                0x00000000c001c7ba                ATA::ATA()
                0x00000000c001c7e8                ATA::flush(bool)
                0x00000000c001c832                ATA::readyForCommand()
                0x00000000c001c882                ATA::access(unsigned long long, int, void*, bool)
                0x00000000c001cc00                ATA::read(unsigned long long, int, void*)
                0x00000000c001cc68                ATA::write(unsigned long long, int, void*)
                0x00000000c001ccd0                ATA::detectCHS()
                0x00000000c001ccfa                ATA::open(int, int, void*)
 *fill*         0x00000000c001cdbf        0x1 
 .text          0x00000000c001cdc0      0x5b3 hw/diskphys/atapi.32
                0x00000000c001cdc0                ATAPI::write(unsigned long long, int, void*)
                0x00000000c001cdc6                ATAPI::close(int, int, void*)
                0x00000000c001cdea                ATAPI::ATAPI()
                0x00000000c001cdea                ATAPI::ATAPI()
                0x00000000c001ce18                ATAPI::readyForCommand()
                0x00000000c001ce68                ATAPI::sendPacket(unsigned char*, int, bool, unsigned short*, int)
                0x00000000c001d128                ATAPI::diskRemoved()
                0x00000000c001d144                ATAPI::eject()
                0x00000000c001d18a                ATAPI::diskInserted()
                0x00000000c001d1b8                ATAPI::detectMedia()
                0x00000000c001d274                ATAPI::open(int, int, void*)
                0x00000000c001d2f4                ATAPI::read(unsigned long long, int, void*)
 *fill*         0x00000000c001d373        0x1 
 .text          0x00000000c001d374       0x8e hw/fpu/avx.32
                0x00000000c001d374                AVX::open(int, int, void*)
                0x00000000c001d386                AVX::close(int, int, void*)
                0x00000000c001d398                AVX::available()
                0x00000000c001d3aa                AVX::save(void*)
                0x00000000c001d3c2                AVX::load(void*)
                0x00000000c001d3da                AVX::AVX()
                0x00000000c001d3da                AVX::AVX()
 .text          0x00000000c001d402       0x90 hw/fpu/mmx.32
                0x00000000c001d402                MMX::available()
                0x00000000c001d416                MMX::open(int, int, void*)
                0x00000000c001d428                MMX::close(int, int, void*)
                0x00000000c001d43a                MMX::save(void*)
                0x00000000c001d452                MMX::load(void*)
                0x00000000c001d46a                MMX::MMX()
                0x00000000c001d46a                MMX::MMX()
 .text          0x00000000c001d492       0x96 hw/fpu/sse.32
                0x00000000c001d492                SSE::open(int, int, void*)
                0x00000000c001d4a4                SSE::close(int, int, void*)
                0x00000000c001d4b6                SSE::available()
                0x00000000c001d4d0                SSE::save(void*)
                0x00000000c001d4e8                SSE::load(void*)
                0x00000000c001d500                SSE::SSE()
                0x00000000c001d500                SSE::SSE()
 .text          0x00000000c001d528       0x8e hw/fpu/x87.32
                0x00000000c001d528                x87::open(int, int, void*)
                0x00000000c001d53a                x87::close(int, int, void*)
                0x00000000c001d54c                x87::available()
                0x00000000c001d55e                x87::save(void*)
                0x00000000c001d576                x87::load(void*)
                0x00000000c001d58e                x87::x87()
                0x00000000c001d58e                x87::x87()
 .text          0x00000000c001d5b6      0x5f3 hw/intctrl/apic.32
                0x00000000c001d5b6                APIC::disable()
                0x00000000c001d5b8                APIC::close(int, int, void*)
                0x00000000c001d5da                IOAPIC::close(int, int, void*)
                0x00000000c001d5e0                APIC::io_wait()
                0x00000000c001d5e6                APIC::getBase()
                0x00000000c001d628                APIC::eoi(unsigned char)
                0x00000000c001d656                APIC::open(int, int, void*)
                0x00000000c001d710                IOAPIC::IOAPIC()
                0x00000000c001d710                IOAPIC::IOAPIC()
                0x00000000c001d738                APIC::APIC()
                0x00000000c001d738                APIC::APIC()
                0x00000000c001d808                IOAPIC::handlesGSIWithNumber(unsigned int)
                0x00000000c001d83a                IOAPIC::read(int)
                0x00000000c001d862                IOAPIC::open(int, int, void*)
                0x00000000c001d958                IOAPIC::write(int, int)
                0x00000000c001d984                IOAPIC::redirect(unsigned char, unsigned long long, unsigned char)
                0x00000000c001da3e                APIC::installIRQHandler(int, void (*)(regs*, void*), bool, void*)
 *fill*         0x00000000c001dba9        0x1 
 .text          0x00000000c001dbaa      0x3d3 hw/intctrl/pic.32
                0x00000000c001dbaa                PIC::disable()
                0x00000000c001dbd8                PIC::close(int, int, void*)
                0x00000000c001dbfa                PIC::PIC()
                0x00000000c001dbfa                PIC::PIC()
                0x00000000c001dcd0                PIC::ioWait()
                0x00000000c001dcd6                PIC::getIRQReg(int)
                0x00000000c001dd40                PIC::eoi(unsigned char)
                0x00000000c001ddd2                PIC::remap()
                0x00000000c001df3e                PIC::open(int, int, void*)
 *fill*         0x00000000c001df7d        0x1 
 .text          0x00000000c001df7e      0x252 hw/timer/apictimer.32
                0x00000000c001df7e                APICTimer::close(int, int, void*)
                0x00000000c001df84                apicTimerHandler(regs*, void*)
                0x00000000c001dfb2                APICTimer::write(int)
                0x00000000c001e0b0                APICTimer::open(int, int, void*)
                0x00000000c001e1a8                APICTimer::APICTimer()
                0x00000000c001e1a8                APICTimer::APICTimer()
 .text          0x00000000c001e1d0      0x1a7 hw/timer/pit.32
                0x00000000c001e1d0                PIT::write(int)
                0x00000000c001e24e                pitHandler(regs*, void*)
                0x00000000c001e27a                PIT::open(int, int, void*)
                0x00000000c001e2c8                PIT::close(int, int, void*)
                0x00000000c001e2f8                PIT::PIT()
                0x00000000c001e2f8                PIT::PIT()
 *fill*         0x00000000c001e377        0x9 
 .text          0x00000000c001e380        0xa hw/fpu/x86/avx.32
                0x00000000c001e380                avxDetect
                0x00000000c001e386                avxSave
                0x00000000c001e387                avxLoad
                0x00000000c001e388                avxInit
                0x00000000c001e389                avxClose
 *fill*         0x00000000c001e38a        0x6 
 .text          0x00000000c001e390       0x38 hw/fpu/x86/sse.32
                0x00000000c001e390                sseDetect
                0x00000000c001e3ab                sseSave
                0x00000000c001e3b1                sseLoad
                0x00000000c001e3b7                sseInit
                0x00000000c001e3c7                sseClose
 *fill*         0x00000000c001e3c8        0x8 
 .text          0x00000000c001e3d0       0x47 hw/fpu/x86/x87.32
                0x00000000c001e3d6                x87Detect
                0x00000000c001e3f1                x87Save
                0x00000000c001e3f7                x87Load
                0x00000000c001e3fc                x87Init
                0x00000000c001e416                x87Close
 *fill*         0x00000000c001e417        0x1 
 .text          0x00000000c001e418       0x25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .text          0x00000000c001e43d        0x0 crtn.32
 *fill*         0x00000000c001e43d        0x3 
 .text          0x00000000c001e440      0x14b /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                0x00000000c001e440                __divdi3
 *fill*         0x00000000c001e58b        0x1 
 .text          0x00000000c001e58c      0x17e /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                0x00000000c001e58c                __moddi3
 *fill*         0x00000000c001e70a        0x2 
 .text          0x00000000c001e70c       0xff /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                0x00000000c001e70c                __udivdi3
 *fill*         0x00000000c001e80b        0x1 
 .text          0x00000000c001e80c      0x11a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                0x00000000c001e80c                __umoddi3
 *fill*         0x00000000c001e926        0xa 
 .text          0x00000000c001e930       0x1e D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                0x00000000c001e930                fabs
 *fill*         0x00000000c001e94e        0x2 
 .text          0x00000000c001e950        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
                0x00000000c001e950                lrint
 .text          0x00000000c001e95c        0xc D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
                0x00000000c001e95c                lrintf
 *(.gnu.linkonce.t*)

.iplt           0x00000000c001e968        0x0
 .iplt          0x00000000c001e968        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.init           0x00000000c001e968        0xf
 .init          0x00000000c001e968        0x3 crti.32
                0x00000000c001e968                _init
 .init          0x00000000c001e96b        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .init          0x00000000c001e970        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .init          0x00000000c001e975        0x2 crtn.32

.fini           0x00000000c001e977        0xa
 .fini          0x00000000c001e977        0x3 crti.32
                0x00000000c001e977                _fini
 .fini          0x00000000c001e97a        0x5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .fini          0x00000000c001e97f        0x2 crtn.32

.text._ZN8ComputerD2Ev
                0x00000000c001e982       0x23
 .text._ZN8ComputerD2Ev
                0x00000000c001e982       0x23 core/computer.32
                0x00000000c001e982                Computer::~Computer()
                0x00000000c001e982                Computer::~Computer()

.text._ZN8ComputerD0Ev
                0x00000000c001e9a6       0x2a
 .text._ZN8ComputerD0Ev
                0x00000000c001e9a6       0x2a core/computer.32
                0x00000000c001e9a6                Computer::~Computer()

.text._Z10idleCommonv
                0x00000000c001e9d0       0x15
 .text._Z10idleCommonv
                0x00000000c001e9d0       0x15 core/idle.32
                0x00000000c001e9d0                idleCommon()

.text._ZN3CPU7readCR0Ev
                0x00000000c001e9e5       0x12
 .text._ZN3CPU7readCR0Ev
                0x00000000c001e9e5       0x12 core/kconsole.32
                0x00000000c001e9e5                CPU::readCR0()

.text._ZN3CPU7readCR2Ev
                0x00000000c001e9f7       0x12
 .text._ZN3CPU7readCR2Ev
                0x00000000c001e9f7       0x12 core/kconsole.32
                0x00000000c001e9f7                CPU::readCR2()

.text._ZN3CPU7readCR3Ev
                0x00000000c001ea09       0x12
 .text._ZN3CPU7readCR3Ev
                0x00000000c001ea09       0x12 core/kconsole.32
                0x00000000c001ea09                CPU::readCR3()

.text._ZN3CPU7readCR4Ev
                0x00000000c001ea1b       0x12
 .text._ZN3CPU7readCR4Ev
                0x00000000c001ea1b       0x12 core/kconsole.32
                0x00000000c001ea1b                CPU::readCR4()

.text._ZN3CPU8writeCR3Em
                0x00000000c001ea2d        0x9
 .text._ZN3CPU8writeCR3Em
                0x00000000c001ea2d        0x9 core/kheap.32
                0x00000000c001ea2d                CPU::writeCR3(unsigned long)

.text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea36        0x2
 .text._ZN10LinkedListIV18ThreadControlBlockED2Ev
                0x00000000c001ea36        0x2 core/prcssthr.32
                0x00000000c001ea36                LinkedList<ThreadControlBlock volatile>::~LinkedList()
                0x00000000c001ea36                LinkedList<ThreadControlBlock volatile>::~LinkedList()

.text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea38       0x3e
 .text._ZN18ThreadControlBlockC2Ev
                0x00000000c001ea38       0x3e core/prcssthr.32
                0x00000000c001ea38                ThreadControlBlock::ThreadControlBlock()
                0x00000000c001ea38                ThreadControlBlock::ThreadControlBlock()

.text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea76       0x58
 .text._ZN10LinkedListIV18ThreadControlBlockEC2Ev
                0x00000000c001ea76       0x58 core/prcssthr.32
                0x00000000c001ea76                LinkedList<ThreadControlBlock volatile>::LinkedList()
                0x00000000c001ea76                LinkedList<ThreadControlBlock volatile>::LinkedList()

.text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eace       0xd3
 .text._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_
                0x00000000c001eace       0xd3 core/prcssthr.32
                0x00000000c001eace                LinkedList<ThreadControlBlock volatile>::addElement(ThreadControlBlock volatile*)

.text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eba2       0x1c
 .text._ZN10LinkedListIV18ThreadControlBlockE7isEmptyEv
                0x00000000c001eba2       0x1c core/prcssthr.32
                0x00000000c001eba2                LinkedList<ThreadControlBlock volatile>::isEmpty()

.text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebbe       0xae
 .text._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv
                0x00000000c001ebbe       0xae core/prcssthr.32
                0x00000000c001ebbe                LinkedList<ThreadControlBlock volatile>::removeFirst()

.text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec6c        0x7
 .text._ZN10LinkedListIV18ThreadControlBlockE15getFirstElementEv
                0x00000000c001ec6c        0x7 core/prcssthr.32
                0x00000000c001ec6c                LinkedList<ThreadControlBlock volatile>::getFirstElement()

.text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec74        0x8
 .text._ZN10LinkedListIV18ThreadControlBlockE7getNextEPS1_
                0x00000000c001ec74        0x8 core/prcssthr.32
                0x00000000c001ec74                LinkedList<ThreadControlBlock volatile>::getNext(ThreadControlBlock volatile*)

.text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec7c        0x2
 .text._ZN10LinkedListI8UnixFileED2Ev
                0x00000000c001ec7c        0x2 core/unixfile.32
                0x00000000c001ec7c                LinkedList<UnixFile>::~LinkedList()
                0x00000000c001ec7c                LinkedList<UnixFile>::~LinkedList()

.text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec7e       0x58
 .text._ZN10LinkedListI8UnixFileEC2Ev
                0x00000000c001ec7e       0x58 core/unixfile.32
                0x00000000c001ec7e                LinkedList<UnixFile>::LinkedList()
                0x00000000c001ec7e                LinkedList<UnixFile>::LinkedList()

.text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ecd6        0x7
 .text._ZN10LinkedListI8UnixFileE15getFirstElementEv
                0x00000000c001ecd6        0x7 core/unixfile.32
                0x00000000c001ecd6                LinkedList<UnixFile>::getFirstElement()

.text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecde       0xa1
 .text._ZN10LinkedListI8UnixFileE11removeFirstEv
                0x00000000c001ecde       0xa1 core/unixfile.32
                0x00000000c001ecde                LinkedList<UnixFile>::removeFirst()

.text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed80        0x8
 .text._ZN10LinkedListI8UnixFileE7getNextEPS0_
                0x00000000c001ed80        0x8 core/unixfile.32
                0x00000000c001ed80                LinkedList<UnixFile>::getNext(UnixFile*)

.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed88      0x130
 .text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c001ed88      0x130 core/unixfile.32
                0x00000000c001ed88                LinkedList<UnixFile>::addElement(UnixFile*)

.text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eeb8       0x1a
 .text._ZN16DriverlessDeviceD2Ev
                0x00000000c001eeb8       0x1a hal/device.32
                0x00000000c001eeb8                DriverlessDevice::~DriverlessDevice()
                0x00000000c001eeb8                DriverlessDevice::~DriverlessDevice()

.text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eed2       0x2a
 .text._ZN16DriverlessDeviceD0Ev
                0x00000000c001eed2       0x2a hal/device.32
                0x00000000c001eed2                DriverlessDevice::~DriverlessDevice()

.text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eefc       0xdc
 .text._ZN10LinkedListI6DeviceE10addElementEPS0_
                0x00000000c001eefc       0xdc hal/device.32
                0x00000000c001eefc                LinkedList<Device>::addElement(Device*)

.text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efd8       0x58
 .text._ZN10LinkedListI6DeviceEC2Ev
                0x00000000c001efd8       0x58 hal/device.32
                0x00000000c001efd8                LinkedList<Device>::LinkedList()
                0x00000000c001efd8                LinkedList<Device>::LinkedList()

.text._ZN3CPU7readDR0Ev
                0x00000000c001f030       0x12
 .text._ZN3CPU7readDR0Ev
                0x00000000c001f030       0x12 hal/intctrl.32
                0x00000000c001f030                CPU::readDR0()

.text._ZN3CPU7readDR1Ev
                0x00000000c001f042       0x12
 .text._ZN3CPU7readDR1Ev
                0x00000000c001f042       0x12 hal/intctrl.32
                0x00000000c001f042                CPU::readDR1()

.text._ZN3CPU7readDR2Ev
                0x00000000c001f054       0x12
 .text._ZN3CPU7readDR2Ev
                0x00000000c001f054       0x12 hal/intctrl.32
                0x00000000c001f054                CPU::readDR2()

.text._ZN3CPU7readDR3Ev
                0x00000000c001f066       0x12
 .text._ZN3CPU7readDR3Ev
                0x00000000c001f066       0x12 hal/intctrl.32
                0x00000000c001f066                CPU::readDR3()

.text._ZN3CPU7readDR6Ev
                0x00000000c001f078       0x12
 .text._ZN3CPU7readDR6Ev
                0x00000000c001f078       0x12 hal/intctrl.32
                0x00000000c001f078                CPU::readDR6()

.text._ZN3CPU7readDR7Ev
                0x00000000c001f08a       0x12
 .text._ZN3CPU7readDR7Ev
                0x00000000c001f08a       0x12 hal/intctrl.32
                0x00000000c001f08a                CPU::readDR7()

.text._ZN4ACPID2Ev
                0x00000000c001f09c       0x23
 .text._ZN4ACPID2Ev
                0x00000000c001f09c       0x23 hw/acpi.32
                0x00000000c001f09c                ACPI::~ACPI()
                0x00000000c001f09c                ACPI::~ACPI()

.text._ZN4ACPID0Ev
                0x00000000c001f0c0       0x2a
 .text._ZN4ACPID0Ev
                0x00000000c001f0c0       0x2a hw/acpi.32
                0x00000000c001f0c0                ACPI::~ACPI()

.text._ZN3CPUD2Ev
                0x00000000c001f0ea       0x23
 .text._ZN3CPUD2Ev
                0x00000000c001f0ea       0x23 hw/cpu.32
                0x00000000c001f0ea                CPU::~CPU()
                0x00000000c001f0ea                CPU::~CPU()

.text._ZN3CPUD0Ev
                0x00000000c001f10e       0x2a
 .text._ZN3CPUD0Ev
                0x00000000c001f10e       0x2a hw/cpu.32
                0x00000000c001f10e                CPU::~CPU()

.text._ZN3CPU8writeDR7Em
                0x00000000c001f138        0x9
 .text._ZN3CPU8writeDR7Em
                0x00000000c001f138        0x9 hw/cpu.32
                0x00000000c001f138                CPU::writeDR7(unsigned long)

.text._ZN3CPU8writeCR4Em
                0x00000000c001f141        0x9
 .text._ZN3CPU8writeCR4Em
                0x00000000c001f141        0x9 hw/cpu.32
                0x00000000c001f141                CPU::writeCR4(unsigned long)

.text._ZN3PCID2Ev
                0x00000000c001f14a       0x23
 .text._ZN3PCID2Ev
                0x00000000c001f14a       0x23 hw/bus/pci.32
                0x00000000c001f14a                PCI::~PCI()
                0x00000000c001f14a                PCI::~PCI()

.text._ZN3PCID0Ev
                0x00000000c001f16e       0x2a
 .text._ZN3PCID0Ev
                0x00000000c001f16e       0x2a hw/bus/pci.32
                0x00000000c001f16e                PCI::~PCI()

.text._ZN3IDED2Ev
                0x00000000c001f198       0x23
 .text._ZN3IDED2Ev
                0x00000000c001f198       0x23 hw/diskctrl/ide.32
                0x00000000c001f198                IDE::~IDE()
                0x00000000c001f198                IDE::~IDE()

.text._ZN3IDED0Ev
                0x00000000c001f1bc       0x2a
 .text._ZN3IDED0Ev
                0x00000000c001f1bc       0x2a hw/diskctrl/ide.32
                0x00000000c001f1bc                IDE::~IDE()

.text._ZN3ATAD2Ev
                0x00000000c001f1e6       0x23
 .text._ZN3ATAD2Ev
                0x00000000c001f1e6       0x23 hw/diskphys/ata.32
                0x00000000c001f1e6                ATA::~ATA()
                0x00000000c001f1e6                ATA::~ATA()

.text._ZN3ATAD0Ev
                0x00000000c001f20a       0x2a
 .text._ZN3ATAD0Ev
                0x00000000c001f20a       0x2a hw/diskphys/ata.32
                0x00000000c001f20a                ATA::~ATA()

.text._ZN5ATAPID2Ev
                0x00000000c001f234       0x23
 .text._ZN5ATAPID2Ev
                0x00000000c001f234       0x23 hw/diskphys/atapi.32
                0x00000000c001f234                ATAPI::~ATAPI()
                0x00000000c001f234                ATAPI::~ATAPI()

.text._ZN5ATAPID0Ev
                0x00000000c001f258       0x2a
 .text._ZN5ATAPID0Ev
                0x00000000c001f258       0x2a hw/diskphys/atapi.32
                0x00000000c001f258                ATAPI::~ATAPI()

.text._ZN3AVXD2Ev
                0x00000000c001f282       0x23
 .text._ZN3AVXD2Ev
                0x00000000c001f282       0x23 hw/fpu/avx.32
                0x00000000c001f282                AVX::~AVX()
                0x00000000c001f282                AVX::~AVX()

.text._ZN3AVXD0Ev
                0x00000000c001f2a6       0x2a
 .text._ZN3AVXD0Ev
                0x00000000c001f2a6       0x2a hw/fpu/avx.32
                0x00000000c001f2a6                AVX::~AVX()

.text._ZN3MMXD2Ev
                0x00000000c001f2d0       0x23
 .text._ZN3MMXD2Ev
                0x00000000c001f2d0       0x23 hw/fpu/mmx.32
                0x00000000c001f2d0                MMX::~MMX()
                0x00000000c001f2d0                MMX::~MMX()

.text._ZN3MMXD0Ev
                0x00000000c001f2f4       0x2a
 .text._ZN3MMXD0Ev
                0x00000000c001f2f4       0x2a hw/fpu/mmx.32
                0x00000000c001f2f4                MMX::~MMX()

.text._ZN3SSED2Ev
                0x00000000c001f31e       0x23
 .text._ZN3SSED2Ev
                0x00000000c001f31e       0x23 hw/fpu/sse.32
                0x00000000c001f31e                SSE::~SSE()
                0x00000000c001f31e                SSE::~SSE()

.text._ZN3SSED0Ev
                0x00000000c001f342       0x2a
 .text._ZN3SSED0Ev
                0x00000000c001f342       0x2a hw/fpu/sse.32
                0x00000000c001f342                SSE::~SSE()

.text._ZN3x87D2Ev
                0x00000000c001f36c       0x23
 .text._ZN3x87D2Ev
                0x00000000c001f36c       0x23 hw/fpu/x87.32
                0x00000000c001f36c                x87::~x87()
                0x00000000c001f36c                x87::~x87()

.text._ZN3x87D0Ev
                0x00000000c001f390       0x2a
 .text._ZN3x87D0Ev
                0x00000000c001f390       0x2a hw/fpu/x87.32
                0x00000000c001f390                x87::~x87()

.text._ZN6IOAPICD2Ev
                0x00000000c001f3ba       0x23
 .text._ZN6IOAPICD2Ev
                0x00000000c001f3ba       0x23 hw/intctrl/apic.32
                0x00000000c001f3ba                IOAPIC::~IOAPIC()
                0x00000000c001f3ba                IOAPIC::~IOAPIC()

.text._ZN6IOAPICD0Ev
                0x00000000c001f3de       0x2a
 .text._ZN6IOAPICD0Ev
                0x00000000c001f3de       0x2a hw/intctrl/apic.32
                0x00000000c001f3de                IOAPIC::~IOAPIC()

.text._ZN4APICD2Ev
                0x00000000c001f408       0x23
 .text._ZN4APICD2Ev
                0x00000000c001f408       0x23 hw/intctrl/apic.32
                0x00000000c001f408                APIC::~APIC()
                0x00000000c001f408                APIC::~APIC()

.text._ZN4APICD0Ev
                0x00000000c001f42c       0x2a
 .text._ZN4APICD0Ev
                0x00000000c001f42c       0x2a hw/intctrl/apic.32
                0x00000000c001f42c                APIC::~APIC()

.text._ZN3PICD2Ev
                0x00000000c001f456       0x23
 .text._ZN3PICD2Ev
                0x00000000c001f456       0x23 hw/intctrl/pic.32
                0x00000000c001f456                PIC::~PIC()
                0x00000000c001f456                PIC::~PIC()

.text._ZN3PICD0Ev
                0x00000000c001f47a       0x2a
 .text._ZN3PICD0Ev
                0x00000000c001f47a       0x2a hw/intctrl/pic.32
                0x00000000c001f47a                PIC::~PIC()

.text._ZN9APICTimerD2Ev
                0x00000000c001f4a4       0x23
 .text._ZN9APICTimerD2Ev
                0x00000000c001f4a4       0x23 hw/timer/apictimer.32
                0x00000000c001f4a4                APICTimer::~APICTimer()
                0x00000000c001f4a4                APICTimer::~APICTimer()

.text._ZN9APICTimerD0Ev
                0x00000000c001f4c8       0x2a
 .text._ZN9APICTimerD0Ev
                0x00000000c001f4c8       0x2a hw/timer/apictimer.32
                0x00000000c001f4c8                APICTimer::~APICTimer()

.text._ZN3PITD2Ev
                0x00000000c001f4f2       0x23
 .text._ZN3PITD2Ev
                0x00000000c001f4f2       0x23 hw/timer/pit.32
                0x00000000c001f4f2                PIT::~PIT()
                0x00000000c001f4f2                PIT::~PIT()

.text._ZN3PITD0Ev
                0x00000000c001f516       0x2a
 .text._ZN3PITD0Ev
                0x00000000c001f516       0x2a hw/timer/pit.32
                0x00000000c001f516                PIT::~PIT()

.rodata         0x00000000c001f540    0x1b8e8
                0x00000000c001f540                start_ctors = .
 *(SORT_BY_NAME(.ctors*))
 .ctors         0x00000000c001f540        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .ctors         0x00000000c001f544        0x4 core/prcssthr.32
 .ctors         0x00000000c001f548        0x4 core/unixfile.32
 .ctors         0x00000000c001f54c        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f550                end_ctors = .
                0x00000000c001f550                start_dtors = .
 *(SORT_BY_NAME(.dtors*))
 .dtors         0x00000000c001f550        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .dtors         0x00000000c001f554        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                0x00000000c001f554                __DTOR_END__
                0x00000000c001f558                end_dtors = .
 *(.rodata*)
 *fill*         0x00000000c001f558        0x8 
 .rodata        0x00000000c001f560      0x101 acpica/utclib.32
                0x00000000c001f560                AcpiGbl_Ctypes
 *fill*         0x00000000c001f661        0x3 
 .rodata        0x00000000c001f664       0x18 core/malloc.32
 *fill*         0x00000000c001f67c        0x4 
 .rodata        0x00000000c001f680      0x120 fs/fat/ff.32
 .rodata.str1.1
                0x00000000c001f7a0       0x56 fs/fat/ff.32
                                         0x5a (size before relaxing)
 *fill*         0x00000000c001f7f6        0xa 
 .rodata        0x00000000c001f800      0x400 fs/fat/ffunicode.32
 .rodata.str1.1
                0x00000000c001fc00       0xb6 hal/libresample/samplerate.32
 *fill*         0x00000000c001fcb6        0x2 
 .rodata.str1.4
                0x00000000c001fcb8      0x3a5 hal/libresample/samplerate.32
 *fill*         0x00000000c002005d        0x3 
 .rodata        0x00000000c0020060       0x60 hal/libresample/samplerate.32
 .rodata.cst8   0x00000000c00200c0       0x20 hal/libresample/samplerate.32
 .rodata.cst4   0x00000000c00200e0       0x14 hal/libresample/samplerate.32
 .rodata.str1.1
                0x00000000c00200f4       0x42 hal/libresample/src_linear.32
 *fill*         0x00000000c0020136        0x2 
 .rodata.cst8   0x00000000c0020138        0x8 hal/libresample/src_linear.32
                                         0x18 (size before relaxing)
 .rodata        0x00000000c0020140    0x185a4 hal/libresample/src_sinc.32
 .rodata.str1.4
                0x00000000c00386e4       0xc4 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c00387a8       0x4a hal/libresample/src_sinc.32
 *fill*         0x00000000c00387f2        0x6 
 .rodata.cst8   0x00000000c00387f8        0x8 hal/libresample/src_sinc.32
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000c0038800       0x14 hal/libresample/src_sinc.32
 .rodata.str1.1
                0x00000000c0038814       0x48 hal/libresample/src_zoh.32
 .rodata.cst8   0x00000000c003885c       0x18 hal/libresample/src_zoh.32
 .rodata.str1.1
                0x00000000c003885c       0x73 core/computer.32
                                         0x7a (size before relaxing)
 *fill*         0x00000000c00388cf        0x1 
 .rodata._ZTV8Computer
                0x00000000c00388d0       0x2c core/computer.32
                0x00000000c00388d0                vtable for Computer
 .rodata.str1.1
                0x00000000c00388fc      0x22a core/elf.32
                                        0x22c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038b26       0x1c core/gdt.32
 *fill*         0x00000000c0038b42        0x2 
 .rodata.str1.4
                0x00000000c0038b44      0x152 core/kconsole.32
 *fill*         0x00000000c0038c96        0x2 
 .rodata        0x00000000c0038c98      0x150 core/kconsole.32
 .rodata.str1.1
                0x00000000c0038de8       0xb5 core/kconsole.32
                                         0xc5 (size before relaxing)
 *fill*         0x00000000c0038e9d        0x3 
 .rodata.str1.4
                0x00000000c0038ea0       0x30 core/kheap.32
 .rodata.str1.1
                0x00000000c0038ed0        0xc core/kheap.32
 .rodata.str1.1
                0x00000000c0038edc       0x1b core/main.32
                                         0x1c (size before relaxing)
 .rodata.str1.1
                0x00000000c0038ef7       0x4e core/physmgr.32
 .rodata.str1.1
                0x00000000c0038f45       0x39 core/pipe.32
 *fill*         0x00000000c0038f7e        0x2 
 .rodata._ZTV4Pipe
                0x00000000c0038f80       0x1c core/pipe.32
                0x00000000c0038f80                vtable for Pipe
 .rodata.str1.1
                0x00000000c0038f9c       0x53 core/prcssthr.32
 *fill*         0x00000000c0038fef        0x1 
 .rodata.str1.4
                0x00000000c0038ff0      0x280 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockEC2Ev.str1.1
                0x00000000c0039270       0x19 core/prcssthr.32
 *fill*         0x00000000c0039289        0x3 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c003928c       0x22 core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c00392ae       0x15 core/prcssthr.32
 *fill*         0x00000000c00392c3        0x1 
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c00392c4       0x4b core/prcssthr.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c003930f        0x8 core/prcssthr.32
 .rodata.str1.1
                0x00000000c0039317       0x5d core/syscalls.32
 .rodata.str1.4
                0x00000000c0039374       0x4c core/syscalls.32
 .rodata.str1.1
                0x00000000c00393c0       0x9d core/terminal.32
 *fill*         0x00000000c003945d        0x3 
 .rodata._ZTV7VgaText
                0x00000000c0039460       0x1c core/terminal.32
                0x00000000c0039460                vtable for VgaText
 .rodata        0x00000000c003947c       0x1e core/tss.32
 .rodata.str1.1
                0x00000000c003949a       0x1a core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileEC2Ev.str1.1
                0x00000000c00394b4       0x19 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.4
                0x00000000c00394b4       0x4b core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE11removeFirstEv.str1.1
                0x00000000c00394b4        0x8 core/unixfile.32
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.1
                0x00000000c00394b4       0x2f core/unixfile.32
                                         0x44 (size before relaxing)
 .rodata._ZN10LinkedListI8UnixFileE10addElementEPS0_.str1.4
                0x00000000c00394e3       0x22 core/unixfile.32
 *fill*         0x00000000c00394e3        0x1 
 .rodata.str1.4
                0x00000000c00394e4       0x20 core/unixfile.32
 .rodata._ZTV8UnixFile
                0x00000000c0039504       0x1c core/unixfile.32
                0x00000000c0039504                vtable for UnixFile
 .rodata._ZTV16ReservedFilename
                0x00000000c0039520       0x1c core/unixfile.32
                0x00000000c0039520                vtable for ReservedFilename
 .rodata.str1.4
                0x00000000c003953c      0x1ab core/virtmgr.32
 .rodata.str1.1
                0x00000000c00396e7      0x184 core/virtmgr.32
                                        0x194 (size before relaxing)
 .rodata.str1.1
                0x00000000c003986b       0x33 coreobjs/c++.32
 .rodata.str1.1
                0x00000000c003989e       0x33 fs/vfs.32
                                          0x2 (size before relaxing)
 *fill*         0x00000000c003989e        0x2 
 .rodata._ZTV10Filesystem
                0x00000000c00398a0       0x64 fs/vfs.32
                0x00000000c00398a0                vtable for Filesystem
 .rodata._ZTV4File
                0x00000000c0039904       0x1c fs/vfs.32
                0x00000000c0039904                vtable for File
 .rodata._ZTV9Directory
                0x00000000c0039920       0x1c fs/vfs.32
                0x00000000c0039920                vtable for Directory
 .rodata._ZTV3Bus
                0x00000000c003993c       0x2c hal/bus.32
                0x00000000c003993c                vtable for Bus
 .rodata._ZTV6Buzzer
                0x00000000c0039968       0x30 hal/buzzer.32
                0x00000000c0039968                vtable for Buzzer
 .rodata._ZTV5Clock
                0x00000000c0039998       0x3c hal/clock.32
                0x00000000c0039998                vtable for Clock
 *fill*         0x00000000c00399d4        0xc 
 .rodata        0x00000000c00399e0       0x30 hal/clock.32
 .rodata.str1.1
                0x00000000c0039a10       0x1e hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.4
                0x00000000c0039a2e       0x22 hal/device.32
 .rodata._ZN10LinkedListI6DeviceE10addElementEPS0_.str1.1
                0x00000000c0039a2e       0x15 hal/device.32
 .rodata._ZN10LinkedListI6DeviceEC2Ev.str1.1
                0x00000000c0039a2e       0x19 hal/device.32
 *fill*         0x00000000c0039a2e        0x2 
 .rodata._ZTV6Device
                0x00000000c0039a30       0x2c hal/device.32
                0x00000000c0039a30                vtable for Device
 .rodata._ZTV16DriverlessDevice
                0x00000000c0039a5c       0x2c hal/device.32
                0x00000000c0039a5c                vtable for DriverlessDevice
 .rodata._ZTV18HardDiskController
                0x00000000c0039a88       0x2c hal/diskctrl.32
                0x00000000c0039a88                vtable for HardDiskController
 .rodata._ZTV12PhysicalDisk
                0x00000000c0039ab4       0x34 hal/diskphys.32
                0x00000000c0039ab4                vtable for PhysicalDisk
 .rodata.str1.1
                0x00000000c0039ae8        0x8 hal/fpu.32
 .rodata._ZTV3FPU
                0x00000000c0039af0       0x38 hal/fpu.32
                0x00000000c0039af0                vtable for FPU
 .rodata.str1.4
                0x00000000c0039b28      0x130 hal/intctrl.32
 .rodata.str1.1
                0x00000000c0039c58      0x16d hal/intctrl.32
                                        0x178 (size before relaxing)
 *fill*         0x00000000c0039dc5        0x3 
 .rodata._ZTV19InterruptController
                0x00000000c0039dc8       0x48 hal/intctrl.32
                0x00000000c0039dc8                vtable for InterruptController
 .rodata        0x00000000c0039e10       0x4e hal/keybrd.32
 *fill*         0x00000000c0039e5e        0x2 
 .rodata._ZTV8Keyboard
                0x00000000c0039e60       0x34 hal/keybrd.32
                0x00000000c0039e60                vtable for Keyboard
 .rodata.str1.1
                0x00000000c0039e94       0x7a hal/logidisk.32
 *fill*         0x00000000c0039f0e        0x2 
 .rodata._ZTV11LogicalDisk
                0x00000000c0039f10       0x2c hal/logidisk.32
                0x00000000c0039f10                vtable for LogicalDisk
 .rodata._ZTV5Mouse
                0x00000000c0039f3c       0x2c hal/mouse.32
                0x00000000c0039f3c                vtable for Mouse
 .rodata.str1.1
                0x00000000c0039f68        0xb hal/partition.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.4
                0x00000000c0039f73       0x4b hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE11removeFirstEv.str1.1
                0x00000000c0039f73        0x8 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.1
                0x00000000c0039f73       0x44 hal/timer.32
 .rodata._ZN10LinkedListIV18ThreadControlBlockE10addElementEPS1_.str1.4
                0x00000000c0039f73       0x22 hal/timer.32
 *fill*         0x00000000c0039f73        0x1 
 .rodata._ZTV5Timer
                0x00000000c0039f74       0x30 hal/timer.32
                0x00000000c0039f74                vtable for Timer
 .rodata._ZTV6VCache
                0x00000000c0039fa4       0x10 hal/vcache.32
                0x00000000c0039fa4                vtable for VCache
 .rodata.str1.1
                0x00000000c0039fb4        0xf hal/video.32
 *fill*         0x00000000c0039fc3        0x1 
 .rodata._ZTV5Video
                0x00000000c0039fc4       0x40 hal/video.32
                0x00000000c0039fc4                vtable for Video
 .rodata.str1.1
                0x00000000c003a004       0xb4 hw/acpi.32
 .rodata.str1.4
                0x00000000c003a0b8       0x82 hw/acpi.32
 *fill*         0x00000000c003a13a        0x2 
 .rodata._ZTV4ACPI
                0x00000000c003a13c       0x2c hw/acpi.32
                0x00000000c003a13c                vtable for ACPI
 .rodata.str1.1
                0x00000000c003a168      0x224 hw/cpu.32
                                        0x228 (size before relaxing)
 .rodata._ZTV3CPU
                0x00000000c003a38c       0x2c hw/cpu.32
                0x00000000c003a38c                vtable for CPU
 .rodata.str1.1
                0x00000000c003a3b8       0x45 registry/registry.32
                                         0x47 (size before relaxing)
 .rodata.str1.1
                0x00000000c003a3fd       0x5f vm86/vm8086.32
 .rodata        0x00000000c003a45c       0x30 vm86/vm8086.32
 .rodata.str1.1
                0x00000000c003a48c       0x53 fs/fat/vfslink.32
                                         0x5d (size before relaxing)
 *fill*         0x00000000c003a4df        0x1 
 .rodata.str1.4
                0x00000000c003a4e0       0x28 fs/fat/vfslink.32
                                         0x25 (size before relaxing)
 .rodata._ZTV3FAT
                0x00000000c003a508       0x64 fs/fat/vfslink.32
                0x00000000c003a508                vtable for FAT
 .rodata.str1.1
                0x00000000c003a56c       0x49 fs/iso9660/vfslink.32
 *fill*         0x00000000c003a5b5        0x3 
 .rodata._ZTV7ISO9660
                0x00000000c003a5b8       0x64 fs/iso9660/vfslink.32
                0x00000000c003a5b8                vtable for ISO9660
 .rodata.str1.1
                0x00000000c003a61c       0x1a hal/sound/sndchannel.32
 *fill*         0x00000000c003a636        0x2 
 .rodata.cst4   0x00000000c003a638        0x4 hal/sound/sndchannel.32
 .rodata._ZTV11SoundDevice
                0x00000000c003a63c       0x38 hal/sound/sndhw.32
                0x00000000c003a63c                vtable for SoundDevice
 .rodata.cst4   0x00000000c003a674       0x10 hal/sound/sndhw.32
 .rodata.str1.1
                0x00000000c003a684       0xa4 hw/bus/pci.32
 .rodata._ZTV3PCI
                0x00000000c003a728       0x2c hw/bus/pci.32
                0x00000000c003a728                vtable for PCI
 .rodata.str1.1
                0x00000000c003a754       0x2b hw/clock/rtc.32
 *fill*         0x00000000c003a77f        0x1 
 .rodata._ZTV3RTC
                0x00000000c003a780       0x3c hw/clock/rtc.32
                0x00000000c003a780                vtable for RTC
 .rodata.str1.1
                0x00000000c003a7bc      0x236 hw/diskctrl/ide.32
 *fill*         0x00000000c003a9f2        0x2 
 .rodata._ZTV3IDE
                0x00000000c003a9f4       0x2c hw/diskctrl/ide.32
                0x00000000c003a9f4                vtable for IDE
 .rodata.str1.1
                0x00000000c003aa20       0x21 hw/diskphys/ata.32
 *fill*         0x00000000c003aa41        0x3 
 .rodata._ZTV3ATA
                0x00000000c003aa44       0x34 hw/diskphys/ata.32
                0x00000000c003aa44                vtable for ATA
 .rodata.str1.1
                0x00000000c003aa78       0x38 hw/diskphys/atapi.32
 .rodata._ZTV5ATAPI
                0x00000000c003aab0       0x34 hw/diskphys/atapi.32
                0x00000000c003aab0                vtable for ATAPI
 .rodata.str1.1
                0x00000000c003aae4        0x8 hw/fpu/avx.32
 .rodata._ZTV3AVX
                0x00000000c003aaec       0x38 hw/fpu/avx.32
                0x00000000c003aaec                vtable for AVX
 .rodata.str1.1
                0x00000000c003ab24        0x8 hw/fpu/mmx.32
 .rodata._ZTV3MMX
                0x00000000c003ab2c       0x38 hw/fpu/mmx.32
                0x00000000c003ab2c                vtable for MMX
 .rodata.str1.1
                0x00000000c003ab64        0x8 hw/fpu/sse.32
 .rodata._ZTV3SSE
                0x00000000c003ab6c       0x38 hw/fpu/sse.32
                0x00000000c003ab6c                vtable for SSE
 .rodata.str1.1
                0x00000000c003aba4        0x8 hw/fpu/x87.32
 .rodata._ZTV3x87
                0x00000000c003abac       0x38 hw/fpu/x87.32
                0x00000000c003abac                vtable for x87
 .rodata        0x00000000c003abe4       0xd8 hw/intctrl/apic.32
 .rodata._ZTV4APIC
                0x00000000c003acbc       0x48 hw/intctrl/apic.32
                0x00000000c003acbc                vtable for APIC
 .rodata._ZTV6IOAPIC
                0x00000000c003ad04       0x2c hw/intctrl/apic.32
                0x00000000c003ad04                vtable for IOAPIC
 .rodata        0x00000000c003ad30       0x22 hw/intctrl/pic.32
 *fill*         0x00000000c003ad52        0x2 
 .rodata._ZTV3PIC
                0x00000000c003ad54       0x48 hw/intctrl/pic.32
                0x00000000c003ad54                vtable for PIC
 .rodata.str1.1
                0x00000000c003ad9c        0xb hw/timer/apictimer.32
 *fill*         0x00000000c003ada7        0x1 
 .rodata._ZTV9APICTimer
                0x00000000c003ada8       0x30 hw/timer/apictimer.32
                0x00000000c003ada8                vtable for APICTimer
 .rodata.str1.1
                0x00000000c003add8       0x1d hw/timer/pit.32
 *fill*         0x00000000c003adf5        0x3 
 .rodata._ZTV3PIT
                0x00000000c003adf8       0x30 hw/timer/pit.32
                0x00000000c003adf8                vtable for PIT
 *(.gnu.linkonce.r*)

.data           0x00000000c003ae28      0x5fd
 *(.data)
 .data          0x00000000c003ae28        0x0 crti.32
 .data          0x00000000c003ae28        0x4 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
                0x00000000c003ae28                __dso_handle
 .data          0x00000000c003ae2c        0x0 acpica/utclib.32
 .data          0x00000000c003ae2c        0x0 core/malloc.32
 .data          0x00000000c003ae2c        0x0 libk/string.32
 .data          0x00000000c003ae2c        0x0 fs/fat/diskio.32
 .data          0x00000000c003ae2c        0x0 fs/fat/ff.32
 .data          0x00000000c003ae2c        0x0 fs/fat/ffsystem.32
 .data          0x00000000c003ae2c        0x0 fs/fat/ffunicode.32
 .data          0x00000000c003ae2c        0x0 hal/libresample/samplerate.32
 .data          0x00000000c003ae2c        0x0 hal/libresample/src_linear.32
 .data          0x00000000c003ae2c        0x0 hal/libresample/src_sinc.32
 .data          0x00000000c003ae2c        0x0 hal/libresample/src_zoh.32
 .data          0x00000000c003ae2c        0x0 core/computer.32
 .data          0x00000000c003ae2c        0x0 core/elf.32
 .data          0x00000000c003ae2c        0x0 core/gdt.32
 .data          0x00000000c003ae2c        0x0 core/idle.32
 .data          0x00000000c003ae2c        0x0 core/idt.32
 .data          0x00000000c003ae2c        0x0 core/kconsole.32
 .data          0x00000000c003ae2c        0x4 core/kheap.32
 .data          0x00000000c003ae30        0x0 core/main.32
 .data          0x00000000c003ae30        0x4 core/physmgr.32
                0x00000000c003ae30                Phys::bitmap
 .data          0x00000000c003ae34        0x0 core/pipe.32
 .data          0x00000000c003ae34        0x4 core/prcssthr.32
                0x00000000c003ae34                nextPID
 .data          0x00000000c003ae38        0x0 core/syscalls.32
 *fill*         0x00000000c003ae38        0x8 
 .data          0x00000000c003ae40       0x60 core/terminal.32
                0x00000000c003ae40                VgaText::hiddenOut
                0x00000000c003ae60                ansiToVGAMappings
 .data          0x00000000c003aea0        0x0 core/tss.32
 .data          0x00000000c003aea0        0x4 core/unixfile.32
                0x00000000c003aea0                UnixFile::nextFd
 .data          0x00000000c003aea4        0x8 core/virtmgr.32
                0x00000000c003aea4                Virt::pageAllocPtr
                0x00000000c003aea8                Virt::bitmap
 .data          0x00000000c003aeac        0x4 coreobjs/c++.32
                0x00000000c003aeac                __stack_chk_guard
 .data          0x00000000c003aeb0        0x0 debugger/debug.32
 .data          0x00000000c003aeb0        0x0 fs/vfs.32
 .data          0x00000000c003aeb0        0x0 hal/bus.32
 .data          0x00000000c003aeb0        0x0 hal/buzzer.32
 .data          0x00000000c003aeb0        0x0 hal/clock.32
 .data          0x00000000c003aeb0        0x0 hal/device.32
 .data          0x00000000c003aeb0        0x0 hal/diskctrl.32
 .data          0x00000000c003aeb0        0x0 hal/diskphys.32
 .data          0x00000000c003aeb0        0x0 hal/fpu.32
 *fill*         0x00000000c003aeb0       0x10 
 .data          0x00000000c003aec0      0x2a0 hal/intctrl.32
                0x00000000c003aec0                exceptionNames
 .data          0x00000000c003b160        0x0 hal/keybrd.32
 .data          0x00000000c003b160        0x0 hal/logidisk.32
 .data          0x00000000c003b160        0x0 hal/mouse.32
 .data          0x00000000c003b160        0x0 hal/partition.32
 .data          0x00000000c003b160        0x0 hal/timer.32
 .data          0x00000000c003b160        0x0 hal/vcache.32
 .data          0x00000000c003b160        0x0 hal/video.32
 .data          0x00000000c003b160       0x10 hw/acpi.32
                0x00000000c003b160                legacyIRQRemaps
 *fill*         0x00000000c003b170       0x10 
 .data          0x00000000c003b180      0x2a4 hw/cpu.32
                0x00000000c003b180                cpuNameList
                0x00000000c003b420                lastCode
 .data          0x00000000c003b424        0x0 hw/ports.32
 .data          0x00000000c003b424        0x0 registry/registry.32
 .data          0x00000000c003b424        0x0 syscalls/sc_exit.32
 .data          0x00000000c003b424        0x0 syscalls/sc_read.32
 .data          0x00000000c003b424        0x0 syscalls/sc_sbrk.32
 .data          0x00000000c003b424        0x0 syscalls/sc_write.32
 .data          0x00000000c003b424        0x0 syscalls/sc_yield.32
 .data          0x00000000c003b424        0x0 vm86/vm8086.32
 .data          0x00000000c003b424        0x0 fs/fat/vfslink.32
 .data          0x00000000c003b424        0x1 fs/iso9660/vfslink.32
                0x00000000c003b424                recentDriveletter
 .data          0x00000000c003b425        0x0 hal/sound/sndchannel.32
 .data          0x00000000c003b425        0x0 hal/sound/sndhw.32
 .data          0x00000000c003b425        0x0 hw/bus/isa.32
 .data          0x00000000c003b425        0x0 hw/bus/pci.32
 .data          0x00000000c003b425        0x0 hw/clock/rtc.32
 .data          0x00000000c003b425        0x0 hw/diskctrl/ide.32
 .data          0x00000000c003b425        0x0 hw/diskphys/ata.32
 .data          0x00000000c003b425        0x0 hw/diskphys/atapi.32
 .data          0x00000000c003b425        0x0 hw/fpu/avx.32
 .data          0x00000000c003b425        0x0 hw/fpu/mmx.32
 .data          0x00000000c003b425        0x0 hw/fpu/sse.32
 .data          0x00000000c003b425        0x0 hw/fpu/x87.32
 .data          0x00000000c003b425        0x0 hw/intctrl/apic.32
 .data          0x00000000c003b425        0x0 hw/intctrl/pic.32
 .data          0x00000000c003b425        0x0 hw/timer/apictimer.32
 .data          0x00000000c003b425        0x0 hw/timer/pit.32
 .data          0x00000000c003b425        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .data          0x00000000c003b425        0x0 crtn.32
 .data          0x00000000c003b425        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .data          0x00000000c003b425        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .data          0x00000000c003b425        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .data          0x00000000c003b425        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .data          0x00000000c003b425        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .data          0x00000000c003b425        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .data          0x00000000c003b425        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.gnu.linkonce.d*)

.got            0x00000000c003b428        0x0
 .got           0x00000000c003b428        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.got.plt        0x00000000c003b428        0x0
 .got.plt       0x00000000c003b428        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.igot.plt       0x00000000c003b428        0x0
 .igot.plt      0x00000000c003b428        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.tm_clone_table
                0x00000000c003b428        0x0
 .tm_clone_table
                0x00000000c003b428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .tm_clone_table
                0x00000000c003b428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o

.eh_frame       0x00000000c003b425      0x1a3
 *(.eh_frame)
 *fill*         0x00000000c003b425        0x3 
 .eh_frame      0x00000000c003b428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .eh_frame      0x00000000c003b428        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
                                          0x4 (size before relaxing)
 .eh_frame      0x00000000c003b428       0x58 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .eh_frame      0x00000000c003b480       0x40 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                         0x58 (size before relaxing)
 .eh_frame      0x00000000c003b4c0       0x6c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                         0x84 (size before relaxing)
 .eh_frame      0x00000000c003b52c       0x84 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                         0x9c (size before relaxing)
 .eh_frame      0x00000000c003b5b0       0x18 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
                                         0x30 (size before relaxing)

.rel.dyn        0x00000000c003b5c8        0x0
 .rel.got       0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.iplt      0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text      0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN8ComputerD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV8Computer
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN10LinkedListI8UnixFileE10addElementEPS0_
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN16DriverlessDeviceD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV16DriverlessDevice
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4ACPID0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4ACPI
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3CPUD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3CPU
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PCID0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PCI
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3IDED0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3IDE
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3ATAD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3ATA
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN5ATAPID0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV5ATAPI
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3AVXD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3AVX
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3MMXD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3MMX
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3SSED0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3SSE
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3x87D0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3x87
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN6IOAPICD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN4APICD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV4APIC
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV6IOAPIC
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PICD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIC
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN9APICTimerD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV9APICTimer
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD2Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.text._ZN3PITD0Ev
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32
 .rel.rodata._ZTV3PIT
                0x00000000c003b5c8        0x0 D:/Users/Alex/Desktop/Banana/kernel/boot.32

.bss            0x00000000c003b5c8     0x1b80
                0x00000000c003b5c8                sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x00000000c003b5c8        0x0 crti.32
 .bss           0x00000000c003b5c8       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtbegin.o
 .bss           0x00000000c003b5e8        0x4 acpica/utclib.32
 *fill*         0x00000000c003b5ec       0x14 
 .bss           0x00000000c003b600      0x378 core/malloc.32
 .bss           0x00000000c003b978        0x0 libk/string.32
 .bss           0x00000000c003b978        0x0 fs/fat/diskio.32
 *fill*         0x00000000c003b978        0x8 
 .bss           0x00000000c003b980       0x88 fs/fat/ff.32
 .bss           0x00000000c003ba08        0x0 fs/fat/ffsystem.32
 .bss           0x00000000c003ba08        0x0 fs/fat/ffunicode.32
 .bss           0x00000000c003ba08        0x0 hal/libresample/samplerate.32
 .bss           0x00000000c003ba08        0x0 hal/libresample/src_linear.32
 .bss           0x00000000c003ba08        0x0 hal/libresample/src_sinc.32
 .bss           0x00000000c003ba08        0x0 hal/libresample/src_zoh.32
 .bss           0x00000000c003ba08        0x6 core/computer.32
                0x00000000c003ba08                computer
                0x00000000c003ba0c                preemptionOn
                0x00000000c003ba0d                schedulingOn
 *fill*         0x00000000c003ba0e       0x12 
 .bss           0x00000000c003ba20      0x184 core/elf.32
                0x00000000c003ba20                kernelSymbols
                0x00000000c003baa0                kernelStringTable
                0x00000000c003bb20                kernelSymbolTable
                0x00000000c003bba0                nextDLLSymbolIndex
 .bss           0x00000000c003bba4        0x6 core/gdt.32
                0x00000000c003bba4                gdtDescr
 .bss           0x00000000c003bbaa        0x0 core/idle.32
 *fill*         0x00000000c003bbaa        0x2 
 .bss           0x00000000c003bbac        0x6 core/idt.32
                0x00000000c003bbac                idtDescr
 .bss           0x00000000c003bbb2        0x1 core/kconsole.32
                0x00000000c003bbb2                kernelInPanic
 .bss           0x00000000c003bbb3        0x0 core/kheap.32
 *fill*         0x00000000c003bbb3        0x1 
 .bss           0x00000000c003bbb4        0x4 core/main.32
                0x00000000c003bbb4                sysBootSettings
 *fill*         0x00000000c003bbb8        0x8 
 .bss           0x00000000c003bbc0       0x50 core/physmgr.32
                0x00000000c003bbc0                Phys::currentPagePointer
                0x00000000c003bbc4                Phys::highestMem
                0x00000000c003bbc8                Phys::oldPercent
                0x00000000c003bbcc                Phys::usedPages
                0x00000000c003bbd0                Phys::usablePages
                0x00000000c003bbe0                Phys::dmaUsage
 .bss           0x00000000c003bc10        0x0 core/pipe.32
 .bss           0x00000000c003bc10       0x68 core/prcssthr.32
                0x00000000c003bc10                cleanerThread
                0x00000000c003bc14                weNeedTheCleanerToNotBlock
                0x00000000c003bc18                xxxx
                0x00000000c003bc1c                retValLockStuff
                0x00000000c003bc20                retValSchedLock
                0x00000000c003bc24                lockStuffLock
                0x00000000c003bc28                schedulerLock
                0x00000000c003bc2c                taskSwitchesPostponedFlag
                0x00000000c003bc30                postponeTaskSwitchesCounter
                0x00000000c003bc34                irqDisableCounter
                0x00000000c003bc38                terminatedTaskList
                0x00000000c003bc44                sleepingTaskList
                0x00000000c003bc50                taskList
                0x00000000c003bc5c                kernelProcess
 *fill*         0x00000000c003bc78        0x8 
 .bss           0x00000000c003bc80      0x200 core/syscalls.32
                0x00000000c003bc80                systemCallHandlers
 .bss           0x00000000c003be80       0x29 core/terminal.32
                0x00000000c003be80                textModeImplementation
                0x00000000c003bea0                terminalCycle
                0x00000000c003bea4                activeTerminal
                0x00000000c003bea8                VgaText::graphicMode
 *fill*         0x00000000c003bea9        0x1 
 .bss           0x00000000c003beaa        0x2 core/tss.32
                0x00000000c003beaa                doubleFaultSelector
 .bss           0x00000000c003beac       0x10 core/unixfile.32
                0x00000000c003beac                initialFilesAdded
                0x00000000c003beb0                unixFileLinkedList
 .bss           0x00000000c003bebc        0x4 core/virtmgr.32
                0x00000000c003bebc                firstVAS
 .bss           0x00000000c003bec0        0x0 coreobjs/c++.32
 .bss           0x00000000c003bec0        0x0 debugger/debug.32
 .bss           0x00000000c003bec0        0x4 fs/vfs.32
                0x00000000c003bec0                installedFilesystems
 .bss           0x00000000c003bec4        0x0 hal/bus.32
 .bss           0x00000000c003bec4        0x4 hal/buzzer.32
                0x00000000c003bec4                systemBuzzer
 .bss           0x00000000c003bec8        0x8 hal/clock.32
                0x00000000c003bec8                dstOn
                0x00000000c003bec9                timezoneHalfHourOffset
                0x00000000c003becc                timezoneHourOffset
 .bss           0x00000000c003bed0        0x0 hal/device.32
 .bss           0x00000000c003bed0        0x0 hal/diskctrl.32
 .bss           0x00000000c003bed0        0x0 hal/diskphys.32
 .bss           0x00000000c003bed0        0x0 hal/fpu.32
 .bss           0x00000000c003bed0       0x1c hal/intctrl.32
                0x00000000c003bed0                pf5
                0x00000000c003bed4                pf4
                0x00000000c003bed8                pf3
                0x00000000c003bedc                pf2
                0x00000000c003bee0                pf1
                0x00000000c003bee4                pf0
                0x00000000c003bee8                gpFaultIntercept
 *fill*         0x00000000c003beec       0x14 
 .bss           0x00000000c003bf00      0x429 hal/keybrd.32
                0x00000000c003bf00                keyboardWaitingTaskList
                0x00000000c003bf04                keyboardSetupYet
                0x00000000c003bf20                keystates
 *fill*         0x00000000c003c329       0x17 
 .bss           0x00000000c003c340       0x88 hal/logidisk.32
                0x00000000c003c340                diskAssignments
                0x00000000c003c360                disks
 .bss           0x00000000c003c3c8        0x4 hal/mouse.32
                0x00000000c003c3c8                guiMouseHandler
 .bss           0x00000000c003c3cc        0x0 hal/partition.32
 *fill*         0x00000000c003c3cc        0x4 
 .bss           0x00000000c003c3d0        0x8 hal/timer.32
                0x00000000c003c3d0                nanoSinceBoot
 .bss           0x00000000c003c3d8        0x0 hal/vcache.32
 .bss           0x00000000c003c3d8        0x4 hal/video.32
                0x00000000c003c3d8                screen
 *fill*         0x00000000c003c3dc        0x4 
 .bss           0x00000000c003c3e0      0x3c0 hw/acpi.32
                0x00000000c003c3e0                systemSleepFunction
                0x00000000c003c3e4                systemResetFunction
                0x00000000c003c3e8                systemShutdownFunction
                0x00000000c003c3ec                nextACPITable
                0x00000000c003c400                acpiTables
                0x00000000c003c600                usingXSDT
                0x00000000c003c604                MADTpointer
                0x00000000c003c608                RSDTpointer
                0x00000000c003c60c                RSDPpointer
                0x00000000c003c610                ioapicDiscoveryNumber
                0x00000000c003c620                ioapicFoundInMADT
                0x00000000c003c640                ioapicAddresses
                0x00000000c003c6c0                ioapicGSIBase
                0x00000000c003c740                processorDiscoveryNumber
                0x00000000c003c760                matchingAPICID
                0x00000000c003c780                processorID
 .bss           0x00000000c003c7a0       0x10 hw/cpu.32
                0x00000000c003c7a0                lastD
                0x00000000c003c7a4                lastC
                0x00000000c003c7a8                lastB
                0x00000000c003c7ac                lastA
 .bss           0x00000000c003c7b0        0x0 hw/ports.32
 .bss           0x00000000c003c7b0        0x0 registry/registry.32
 .bss           0x00000000c003c7b0        0x0 syscalls/sc_exit.32
 .bss           0x00000000c003c7b0        0x0 syscalls/sc_read.32
 .bss           0x00000000c003c7b0        0x0 syscalls/sc_sbrk.32
 .bss           0x00000000c003c7b0        0x0 syscalls/sc_write.32
 .bss           0x00000000c003c7b0        0x0 syscalls/sc_yield.32
 .bss           0x00000000c003c7b0        0x0 vm86/vm8086.32
 *fill*         0x00000000c003c7b0       0x10 
 .bss           0x00000000c003c7c0       0xf0 fs/fat/vfslink.32
                0x00000000c003c7c0                FAT::fats
                0x00000000c003c7e0                FAT::vfsToFatRemaps
                0x00000000c003c860                fatToVFSRemaps
 *fill*         0x00000000c003c8b0       0x10 
 .bss           0x00000000c003c8c0      0x820 fs/iso9660/vfslink.32
                0x00000000c003c8c0                recentSector
                0x00000000c003c8e0                recentBuffer
 .bss           0x00000000c003d0e0        0x0 hal/sound/sndchannel.32
 .bss           0x00000000c003d0e0        0x0 hal/sound/sndhw.32
 .bss           0x00000000c003d0e0        0x0 hw/bus/isa.32
 .bss           0x00000000c003d0e0        0x0 hw/bus/pci.32
 .bss           0x00000000c003d0e0        0x2 hw/clock/rtc.32
 .bss           0x00000000c003d0e2        0x0 hw/diskctrl/ide.32
 *fill*         0x00000000c003d0e2        0x2 
 .bss           0x00000000c003d0e4        0x8 hw/diskphys/ata.32
                0x00000000c003d0e4                ataSectorsWritten
                0x00000000c003d0e8                ataSectorsRead
 .bss           0x00000000c003d0ec        0x0 hw/diskphys/atapi.32
 .bss           0x00000000c003d0ec        0x0 hw/fpu/avx.32
 .bss           0x00000000c003d0ec        0x0 hw/fpu/mmx.32
 .bss           0x00000000c003d0ec        0x0 hw/fpu/sse.32
 .bss           0x00000000c003d0ec        0x0 hw/fpu/x87.32
 *fill*         0x00000000c003d0ec       0x14 
 .bss           0x00000000c003d100       0x41 hw/intctrl/apic.32
                0x00000000c003d100                noOfIOAPICs
                0x00000000c003d120                ioapics
                0x00000000c003d140                IOAPICsSetupYet
 .bss           0x00000000c003d141        0x0 hw/intctrl/pic.32
 .bss           0x00000000c003d141        0x0 hw/timer/apictimer.32
 *fill*         0x00000000c003d141        0x3 
 .bss           0x00000000c003d144        0x4 hw/timer/pit.32
                0x00000000c003d144                pitFreq
 .bss           0x00000000c003d148        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/crtend.o
 .bss           0x00000000c003d148        0x0 crtn.32
 .bss           0x00000000c003d148        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .bss           0x00000000c003d148        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .bss           0x00000000c003d148        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .bss           0x00000000c003d148        0x0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
 .bss           0x00000000c003d148        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_fabs.c.o)
 .bss           0x00000000c003d148        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .bss           0x00000000c003d148        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
 *(.bootstrap_stack)
 *(.gnu.linkonce.b*)
                0x00000000c003d148                ebss = .

/DISCARD/
 *(.comment)
                0x00000000c003ecc8                . = (. + SIZEOF (.bss))
OUTPUT(D:/Users/Alex/Desktop/Banana/kernel/KERNEL32.EXE elf32-i386)

.debug_info     0x0000000000000000     0x351f
 .debug_info    0x0000000000000000      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_info    0x0000000000000d63      0xd63 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_info    0x0000000000001ac6      0xd25 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_info    0x00000000000027eb      0xd34 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_abbrev   0x0000000000000000      0x930
 .debug_abbrev  0x0000000000000000      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x0000000000000255      0x255 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x00000000000004aa      0x23a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x00000000000006e4      0x24c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_loc      0x0000000000000000     0x174d
 .debug_loc     0x0000000000000000      0x3b0 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000003b0      0x48d /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_loc     0x000000000000083d      0x79c /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x0000000000000fd9      0x774 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_aranges  0x0000000000000000       0x80
 .debug_aranges
                0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x0000000000000040       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x0000000000000060       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_ranges   0x0000000000000000       0x98
 .debug_ranges  0x0000000000000000       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000000020       0x20 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000000040       0x28 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x0000000000000068       0x30 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_line     0x0000000000000000      0xbf2
 .debug_line    0x0000000000000000      0x2f9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
 .debug_line    0x00000000000002f9      0x333 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000000062c      0x2c5 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
 .debug_line    0x00000000000008f1      0x301 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000      0xb97
 .debug_str     0x0000000000000000      0xb7a /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_divdi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b7a        0x9 /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_moddi3.o)
                                        0xc28 (size before relaxing)
 .debug_str     0x0000000000000b83        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_udivdi3.o)
                                        0xc29 (size before relaxing)
 .debug_str     0x0000000000000b8d        0xa /cygdrive/d/Users/Alex/Desktop/Toolchain/Output/bin/../lib/gcc/i386-banana/8.1.0/libgcc.a(_umoddi3.o)
                                        0xc29 (size before relaxing)

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrint.S.o)
 .note.GNU-stack
                0x0000000000000000        0x0 D:/Users/Alex/Desktop/Banana/kernel/libk/libm32.a(s_lrintf.S.o)
